(undo-tree-save-format-version . 1)
"0da89b55ed463efbc2d87f856b3b9268a4636d9b"
[nil nil nil nil (26717 27529 476664 875000) 0 nil]
([nil nil ((405 . 450) (t 26715 54450 477497 907000)) nil (26717 27529 476664 264000) 0 nil])
([nil nil ((511 . 556)) nil (26717 27529 476663 723000) 0 nil])
([nil nil ((590 . 636)) nil (26717 27529 476663 393000) 0 nil])
([nil nil ((674 . 719)) nil (26717 27529 476663 122000) 0 nil])
([nil nil ((757 . 802)) nil (26717 27529 476662 902000) 0 nil])
([nil nil ((836 . 881)) nil (26717 27529 476662 671000) 0 nil])
([nil nil ((915 . 960)) nil (26717 27529 476662 501000) 0 nil])
([nil nil ((999 . 1044)) nil (26717 27529 476662 331000) 0 nil])
([nil nil ((1078 . 1123) 1077) nil (26717 27529 476662 70000) 0 nil])
([nil nil ((1045 . 1046) 978) nil (26717 27529 476661 429000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1045 . 1046) (#("
" 0 1 (fontified nil)) . -1129) (1045 . 1130) 962) nil (26717 27529 476660 898000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1130) (undo-tree-id1 . 1)) nil (26717 27529 476660 197000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 1063) (1064 . 1065) 1063) nil (26717 27529 476659 255000) 0 nil])
([nil nil ((nil fontified t 1063 . 1064) (#("2" 0 1 (fontified t)) . 1063) (1064 . 1065) 1063) nil (26717 27529 476658 834000) 0 nil])
([nil nil ((nil fontified t 1063 . 1064) (#("3" 0 1 (fontified t)) . 1063) (1064 . 1065) 1063) nil (26717 27529 476657 802000) 0 nil])
([nil nil ((#("Ж" 0 1 (fontified t)) . 1065)) nil (26717 27529 476657 482000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1065)) nil (26717 27529 476657 321000) 0 nil])
([nil nil ((#("С" 0 1 (fontified t)) . 1065)) nil (26717 27529 476657 41000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1065)) nil (26717 27529 476656 620000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1065)) nil (26717 27529 476656 299000) 0 nil])
([nil nil ((#("Н" 0 1 (fontified t)) . 1065)) nil (26717 27529 476655 979000) 0 nil])
([nil nil ((#("у" 0 1 (fontified t)) . 1065)) nil (26717 27529 476655 638000) 0 nil])
([nil nil ((#("р" 0 1 (fontified t)) . 1065)) nil (26717 27529 476655 308000) 0 nil])
([nil nil ((#("м" 0 1 (fontified t)) . 1065)) nil (26717 27529 476655 17000) 0 nil])
([nil nil ((#("а" 0 1 (fontified t)) . 1065)) nil (26717 27529 476654 777000) 0 nil])
([nil nil ((#("г" 0 1 (fontified t)) . 1065)) nil (26717 27529 476654 546000) 0 nil])
([nil nil ((#("а" 0 1 (fontified t)) . 1065)) nil (26717 27529 476654 316000) 0 nil])
([nil nil ((#("н" 0 1 (fontified t)) . 1065)) nil (26717 27529 476654 55000) 0 nil])
([nil nil ((#("б" 0 1 (fontified t)) . 1065)) nil (26717 27529 476653 785000) 0 nil])
([nil nil ((#("е" 0 1 (fontified t)) . 1065)) nil (26717 27529 476653 534000) 0 nil])
([nil nil ((#("т" 0 1 (fontified t)) . 1065)) nil (26717 27529 476653 244000) 0 nil])
([nil nil ((#("о" 0 1 (fontified t)) . 1065)) nil (26717 27529 476652 973000) 0 nil])
([nil nil ((#("в\\alink{https://orcid.org/0000-0002-0978-5663}," 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t)) . 1065) (undo-tree-id0 . -46)) nil (26717 27529 476652 112000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1074 . 1075) (nil fontified nil 1065 . 1075) (1065 . 1075) 1064) nil (26717 27529 476635 250000) 0 nil])
([nil nil ((1075 . 1120) 1074) nil (26717 27529 476633 858000) 0 nil])
([nil nil ((1120 . 1121)) nil (26717 27529 476630 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 14860 . 14861) (#("
" 0 1 (fontified nil)) . -15035) (14860 . 15036) (t 26717 27529 479114 999000)) nil (26717 27640 289883 567000) 0 nil])
([nil nil ((#("Fig.1 - Change in retail prices for margarine for 2011-2024" 0 59 (fontified t)) . 14962) (undo-tree-id56 . -58) (undo-tree-id57 . -3) 14965) nil (26717 27640 289883 166000) 0 nil])
([nil nil ((#("{\\bfseries Рис.1 - Объекты исследования}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 37 (face (bold) fontified t) 37 39 (face (bold) fontified t) 39 40 (fontified t)) . -14977) (undo-tree-id52 . -14) (undo-tree-id53 . -14) (undo-tree-id54 . -14) (undo-tree-id55 . -14) 15018) nil (26717 27640 289882 134000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14989 . 14990) (nil fontified nil 14962 . 14990) (14962 . 14990)) nil (26717 27640 289880 501000) 0 nil])
([nil nil ((14941 . 14942) (14937 . 14941) (#("pish4" 0 5 (face font-lock-builtin-face fontified t)) . 14937) (undo-tree-id51 . -4)) nil (26717 27640 289879 990000) 0 nil])
([nil nil ((#("4" 0 1 (face font-lock-builtin-face fontified t)) . 14948) (14949 . 14950) 14948) nil (26717 27640 289879 208000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15004 . 15005) (#("
" 0 1 (fontified nil)) . -15147) (15004 . 15148) 15003) nil (26717 27640 289878 918000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15147 . 15148) (#("
" 0 1 (fontified nil)) . -15290) (15147 . 15291) 15135) nil (26717 27640 289878 617000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15290 . 15291) (#("
" 0 1 (fontified nil)) . -15433) (15290 . 15434) 15278) nil (26717 27640 289878 86000) 0 nil])
([nil nil ((#("	\\caption*{Рис.1 - Объекты исследования}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 38 (fontified t) 38 39 (fontified t rear-nonsticky t) 39 41 (fontified t)) . 14951) (undo-tree-id20 . -40) (undo-tree-id21 . -28) (undo-tree-id22 . -28) (undo-tree-id23 . -28) (undo-tree-id24 . -28) (undo-tree-id25 . -28) (undo-tree-id26 . -28) (undo-tree-id27 . -28) (undo-tree-id28 . -28) (undo-tree-id29 . -28) (undo-tree-id30 . -28) (undo-tree-id31 . -28) (undo-tree-id32 . -28) (undo-tree-id33 . -28) (undo-tree-id34 . -28) (undo-tree-id35 . -28) (undo-tree-id36 . -28) (undo-tree-id37 . -28) (undo-tree-id38 . -28) (undo-tree-id39 . -28) (undo-tree-id40 . -28) (undo-tree-id41 . -28) (undo-tree-id42 . -28) (undo-tree-id43 . -28) (undo-tree-id44 . -28) (undo-tree-id45 . -28) (undo-tree-id46 . -28) (undo-tree-id47 . -28) (undo-tree-id48 . -28) (undo-tree-id49 . -28) (undo-tree-id50 . -41) 14979) nil (26717 27640 289877 215000) 0 nil])
([nil nil ((#("	\\caption*{Рис.1 - Объекты исследования}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 38 (fontified t) 38 39 (fontified t rear-nonsticky t) 39 41 (fontified t)) . 15053) (undo-tree-id18 . -40) (undo-tree-id19 . -8) 15061) nil (26717 27640 289850 284000) 0 nil])
([nil nil ((#("	\\caption*{Рис.1 - Объекты исследования}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 38 (fontified t) 38 39 (fontified t rear-nonsticky t) 39 41 (fontified t)) . 15155) (undo-tree-id4 . -40) (undo-tree-id5 . -8) (undo-tree-id6 . -8) (undo-tree-id7 . -8) (undo-tree-id8 . -8) (undo-tree-id9 . -8) (undo-tree-id10 . -8) (undo-tree-id11 . -8) (undo-tree-id12 . -8) (undo-tree-id13 . -8) (undo-tree-id14 . -8) (undo-tree-id15 . -8) (undo-tree-id16 . -8) (undo-tree-id17 . -41) 15163) nil (26717 27640 289989 454000) 0 nil])
([nil nil ((nil fontified t 15050 . 15051) (nil face font-lock-builtin-face 15050 . 15051) (#("3" 0 1 (face font-lock-builtin-face fontified t)) . 15050) (15051 . 15052) 15050) nil (26717 27745 527127 305000) 0 nil] [nil nil ((#("	\\caption*{Рис.1 - Объекты исследования}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 38 (fontified t) 38 39 (fontified t rear-nonsticky t) 39 41 (fontified t)) . 15257) (undo-tree-id2 . -40) (undo-tree-id3 . -8) 15265) ((15257 . 15298)) (26717 27640 289840 656000) 0 nil])
([nil nil ((nil fontified t 15152 . 15153) (nil face font-lock-builtin-face 15152 . 15153) (#("3" 0 1 (face font-lock-builtin-face fontified t)) . 15152) (15153 . 15154) 15152) nil (26717 27745 527126 734000) 0 nil])
nil
([nil nil ((nil fontified t 15152 . 15153) (nil face font-lock-builtin-face 15152 . 15153) (#("4" 0 1 (face font-lock-builtin-face fontified t)) . 15152) (15153 . 15154) 15152) nil (26717 27745 527126 173000) 0 nil])
([nil nil ((nil fontified t 15254 . 15255) (nil face font-lock-builtin-face 15254 . 15255) (#("3" 0 1 (face font-lock-builtin-face fontified t)) . 15254) (15255 . 15256) 15254) nil (26717 27745 527125 793000) 0 nil])
([nil nil ((nil fontified t 15254 . 15255) (nil face font-lock-builtin-face 15254 . 15255) (#("4" 0 1 (face font-lock-builtin-face fontified t)) . 15254) (15255 . 15256) 15254) nil (26717 27745 527125 312000) 0 nil])
([nil nil ((nil fontified t 15254 . 15255) (nil face font-lock-builtin-face 15254 . 15255) (#("5" 0 1 (face font-lock-builtin-face fontified t)) . 15254) (15255 . 15256) 15254) nil (26717 27745 527124 741000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/chem4/image3}
\\end{figure}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/chem4/image4}
\\end{figure}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/chem4/image5}
\\end{figure}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/chem4/image6}
	\\caption*{Рис.1 - Объекты исследования}
\\end{figure}" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 87 (face font-lock-builtin-face fontified t) 87 89 (fontified t) 89 93 (face font-lock-keyword-face fontified t) 93 94 (fontified t latex-env-pair t) 94 100 (face font-lock-function-name-face fontified t latex-env-pair t) 100 101 (fontified t latex-env-pair t) 101 102 (rear-nonsticky t fontified t) 102 108 (face font-lock-keyword-face fontified t) 108 109 (fontified t latex-env-pair t) 109 115 (face font-lock-function-name-face fontified t latex-env-pair t) 115 116 (fontified t latex-env-pair t) 116 121 (fontified t) 121 131 (face font-lock-keyword-face fontified t) 131 132 (fontified t) 132 133 (fontified t) 133 149 (face font-lock-keyword-face fontified t) 149 159 (fontified t) 159 169 (face font-lock-keyword-face fontified t) 169 171 (fontified t) 171 188 (face font-lock-builtin-face fontified t) 188 189 (face font-lock-builtin-face fontified t) 189 191 (fontified t) 191 195 (face font-lock-keyword-face fontified t) 195 196 (fontified t latex-env-pair t) 196 202 (face font-lock-function-name-face fontified t latex-env-pair t) 202 203 (fontified t latex-env-pair t) 203 204 (fontified t rear-nonsticky t) 204 210 (face font-lock-keyword-face fontified t) 210 211 (fontified t latex-env-pair t) 211 217 (face font-lock-function-name-face fontified t latex-env-pair t) 217 218 (fontified t latex-env-pair t) 218 223 (fontified t) 223 233 (face font-lock-keyword-face fontified t) 233 234 (fontified t) 234 235 (fontified t) 235 251 (face font-lock-keyword-face fontified t) 251 261 (fontified t) 261 271 (face font-lock-keyword-face fontified t) 271 273 (fontified t) 273 290 (face font-lock-builtin-face fontified t) 290 291 (face font-lock-builtin-face fontified t) 291 293 (fontified t) 293 297 (face font-lock-keyword-face fontified t) 297 298 (fontified t latex-env-pair t) 298 304 (face font-lock-function-name-face fontified t latex-env-pair t) 304 305 (fontified t latex-env-pair t) 305 306 (fontified t rear-nonsticky t) 306 312 (face font-lock-keyword-face fontified t) 312 313 (fontified t latex-env-pair t) 313 319 (face font-lock-function-name-face fontified t latex-env-pair t) 319 320 (fontified t latex-env-pair t) 320 325 (fontified t) 325 335 (face font-lock-keyword-face fontified t) 335 336 (fontified t) 336 337 (fontified t) 337 353 (face font-lock-keyword-face fontified t) 353 363 (fontified t) 363 373 (face font-lock-keyword-face fontified t) 373 375 (fontified t) 375 392 (face font-lock-builtin-face fontified t) 392 393 (face font-lock-builtin-face fontified t) 393 395 (fontified t) 395 396 (fontified t) 396 405 (face font-lock-keyword-face fontified t) 405 406 (fontified t) 406 433 (fontified t) 433 434 (fontified t rear-nonsticky t) 434 436 (fontified t) 436 440 (face font-lock-keyword-face fontified t) 440 441 (fontified t latex-env-pair t) 441 447 (face font-lock-function-name-face fontified t latex-env-pair t) 447 448 (fontified t latex-env-pair t)) . 14862) (undo-tree-id58 . -79) (undo-tree-id59 . -447) (undo-tree-id60 . 368) (undo-tree-id61 . -447) (undo-tree-id62 . -447) (undo-tree-id63 . -101) (undo-tree-id64 . -447) (undo-tree-id65 . -79)) nil (26717 27745 527124 39000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15478 . 15479) (nil fontified nil 14862 . 15479) (14862 . 15479)) nil (26717 27745 527109 532000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 15367) (t 26717 27745 529710 612000) (15368 . 15369) 15367 (t 26717 27745 529710 612000)) nil (26717 27780 483122 35000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 15234) (15235 . 15236) 15234) nil (26717 27780 483120 953000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 15099) (15100 . 15101) 15099) nil (26717 27780 483119 160000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 14966) (14967 . 14968) 14966) nil (26717 27780 483114 912000) 0 nil])
([nil nil ((#(", keepaspectratio" 0 17 (fontified t)) . 14969) (undo-tree-id70 . -16) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -17) (t 26717 27780 484476 883000)) nil (26717 27796 347248 486000) 0 nil])
([nil nil ((#(", keepaspectratio" 0 17 (fontified t)) . 15085) (undo-tree-id69 . -16)) nil (26717 27796 347236 143000) 0 nil])
([nil nil ((#(", keepaspectratio" 0 17 (fontified t)) . 15203) (undo-tree-id67 . -16) (undo-tree-id68 . -17)) nil (26717 27796 347235 291000) 0 nil])
([nil nil ((#(", keepaspectratio" 0 17 (fontified t)) . 15319) (undo-tree-id66 . -16)) nil (26717 27796 347230 893000) 0 nil])
([nil nil ((15147 . 15148) (#("4" 0 1 (fontified t)) . 15147) (undo-tree-id103 . -1) (t 26717 27796 350370 247000)) nil (26717 27822 235693 285000) 0 nil])
([nil nil ((14913 . 14914) (#("4" 0 1 (fontified t)) . 14913)) nil (26717 27822 235691 933000) 0 nil])
([nil nil ((15029 . 15030) (#("4" 0 1 (fontified t)) . 15029)) nil (26717 27822 235691 492000) 0 nil])
([nil nil ((15029 . 15030) (#("7" 0 1 (fontified t)) . 15029) (15029 . 15030) (#("7" 0 1 (fontified t)) . 15029)) nil (26717 27822 235690 961000) 0 nil])
([nil nil ((15263 . 15264) (#("4" 0 1 (fontified t)) . 15263) (undo-tree-id102 . -1)) nil (26717 27822 235688 326000) 0 nil])
([nil nil ((nil fontified t 15316 . 15317) (t 26717 27822 238195 513000) (#("4" 0 1 (fontified t)) . 15316) (t 26717 27822 238195 513000) (15317 . 15318) 15316 (t 26717 27822 238195 513000)) nil (26717 27847 322939 444000) 0 nil])
([nil nil ((nil fontified t 15200 . 15201) (#("4" 0 1 (fontified t)) . 15200) (15201 . 15202) 15200) nil (26717 27847 322938 533000) 0 nil])
([nil nil ((nil fontified t 15082 . 15083) (#("4" 0 1 (fontified t)) . 15082) (15083 . 15084) 15082) nil (26717 27847 322937 751000) 0 nil])
([nil nil ((nil fontified t 14966 . 14967) (#("4" 0 1 (fontified t)) . 14966) (14967 . 14968) 14966) nil (26717 27847 322932 962000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14991 . 14992) (#("
" 0 1 (fontified nil)) . -15031) (14990 . 15032) 14966 (t 26717 27847 326025 300000)) nil (26717 27888 700964 873000) 0 nil])
([nil nil ((#("	" 0 1 (rear-nonsticky t fontified nil)) . -14999) (undo-tree-id108 . -1) (14991 . 14999) 14992) nil (26717 27888 700964 21000) 0 nil])
([nil nil ((#("Рис.1 - Объекты исследования" 0 28 (fontified t)) . 15009) (undo-tree-id106 . -27) (undo-tree-id107 . -1) 15010) nil (26717 27888 700963 280000) 0 nil])
([nil nil ((15009 . 15013)) nil (26717 27888 700961 497000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15138 . 15139) (#("
" 0 1 (fontified nil)) . -15154) (15130 . 15155) 15095) nil (26717 27888 700961 266000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15280 . 15281) (#("
" 0 1 (fontified nil)) . -15296) (15272 . 15297) 15224) nil (26717 27888 700960 956000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15420 . 15421) (#("
" 0 1 (fontified nil)) . -15436) (15412 . 15437) 15364) nil (26717 27888 700960 365000) 0 nil])
([nil nil ((15151 . 15152) (#("a" 0 1 (fontified t)) . 15151)) nil (26717 27888 700959 874000) 0 nil])
([nil nil ((15293 . 15294) (#("a" 0 1 (fontified t)) . 15293) (undo-tree-id105 . -1)) nil (26717 27888 700959 343000) 0 nil])
([nil nil ((15433 . 15434) (#("a" 0 1 (fontified t)) . 15433) (undo-tree-id104 . -1)) nil (26717 27888 700955 936000) 0 nil])
([nil nil ((16945 . 16947) (t 26717 27888 702742 686000)) nil (26717 27945 571898 506000) 0 nil])
([nil nil ((16756 . 16758)) nil (26717 27945 571898 126000) 0 nil])
([nil nil ((16573 . 16575)) nil (26717 27945 571897 154000) 0 nil])
([nil nil ((16384 . 16386)) nil (26717 27945 571893 587000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 16384) (undo-tree-id183 . -1) (t 26717 27945 574350 613000)) nil (26717 27976 496384 369000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 16384)) nil (26717 27976 496383 547000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 16573) (undo-tree-id181 . -1) (undo-tree-id182 . -1)) nil (26717 27976 496383 167000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 16573) (undo-tree-id179 . -1) (undo-tree-id180 . -1)) nil (26717 27976 496382 395000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 16756)) nil (26717 27976 496381 53000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 16756) (undo-tree-id177 . -1) (undo-tree-id178 . -1)) nil (26717 27976 496380 672000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 16945) (undo-tree-id175 . -1) (undo-tree-id176 . -1)) nil (26717 27976 496379 770000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 16945) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1)) nil (26717 27976 496378 798000) 0 nil])
([nil nil ((16944 . 16947) (#("4cm" 0 3 (fontified t)) . 16944) (undo-tree-id110 . -1) (undo-tree-id111 . -2) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -3) (undo-tree-id171 . -3)) nil (26717 27976 496490 978000) 0 nil])
([nil nil ((16944 . 16949) (#("i" 0 1 (fontified t)) . -16944) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) 16945 (16944 . 16945) (#("i" 0 1 (fontified nil)) . -16944) (undo-tree-id193 . -1) (16944 . 16945) (#("3.7" 0 3 (fontified t)) . 16944) (undo-tree-id194 . -3) (undo-tree-id195 . -2) (undo-tree-id196 . -3) (undo-tree-id197 . -3) (undo-tree-id198 . -3)) nil (26717 27987 832477 683000) 0 nil] [nil nil ((16755 . 16758) (#("4cm" 0 3 (fontified t)) . 16755) (undo-tree-id109 . -2)) ((16755 . 16758) (#("3.7" 0 3 (fontified t)) . 16755)) (26717 27976 496327 903000) 0 nil])
([nil nil ((16755 . 16760) (#("i" 0 1 (fontified nil)) . -16755) 16756 (16755 . 16756) (#("4cm" 0 3 (fontified t)) . 16755) (undo-tree-id189 . -2)) nil (26717 27987 832473 64000) 0 nil])
nil
([nil nil ((16572 . 16577) (#("i" 0 1 (fontified nil)) . -16572) 16573 (16572 . 16573) (#("4cm" 0 3 (fontified t)) . 16572) (undo-tree-id188 . -2)) nil (26717 27987 832471 451000) 0 nil])
([nil nil ((16383 . 16388) (#("i" 0 1 (fontified nil)) . -16383) (undo-tree-id184 . -1) 16384 (16383 . 16384) (#("4cm" 0 3 (fontified t)) . 16383) (undo-tree-id185 . -2) (undo-tree-id186 . -3) (undo-tree-id187 . -3)) nil (26717 27987 832467 694000) 0 nil])
([nil nil ((#("0.2" 0 3 (fontified nil)) . -21214) (21217 . 21221) (#("0.2" 0 3 (fontified t)) . -21192) (21195 . 21199) (#("0.2" 0 3 (fontified nil)) . -21130) (21133 . 21137) (#("0.2" 0 3 (fontified t)) . -21108) (21111 . 21115) (#("0.2" 0 3 (fontified nil)) . -21046) (21049 . 21053) (#("0.2" 0 3 (fontified t)) . -21024) (21027 . 21031) (#("0.2" 0 3 (fontified nil)) . -20962) (20965 . 20969) (#("0.2" 0 3 (fontified t)) . -20940) (20943 . 20947) (#("0.2" 0 3 (fontified nil)) . -20746) (20749 . 20753) (#("0.2" 0 3 (fontified t)) . -20724) (20727 . 20731) (#("0.2" 0 3 (fontified nil)) . -20662) (20665 . 20669) (#("0.2" 0 3 (fontified t)) . -20640) (20643 . 20647) (#("0.2" 0 3 (fontified nil)) . -20578) (20581 . 20585) (#("0.2" 0 3 (fontified t)) . -20556) (20559 . 20563) (#("0.2" 0 3 (fontified nil)) . -20494) (20497 . 20501) (#("0.2" 0 3 (fontified t)) . -20472) (20475 . 20479) (#("0.2" 0 3 (fontified nil)) . -20315) (20318 . 20322) (#("0.2" 0 3 (fontified t)) . -20293) (20296 . 20300) (#("0.2" 0 3 (fontified nil)) . -20231) (20234 . 20238) (#("0.2" 0 3 (fontified t)) . -20209) (20212 . 20216) (#("0.2" 0 3 (fontified nil)) . -20147) (20150 . 20154) (#("0.2" 0 3 (fontified t)) . -20125) (20128 . 20132) (#("0.2" 0 3 (fontified nil)) . -20063) (20066 . 20070) (#("0.2" 0 3 (fontified t)) . -20041) (20044 . 20048) (#("0.2" 0 3 (fontified nil)) . -19846) (19849 . 19853) (#("0.2" 0 3 (fontified t)) . -19824) (19827 . 19831) (#("0.2" 0 3 (fontified nil)) . -19762) (19765 . 19769) (#("0.2" 0 3 (fontified t)) . -19740) (19743 . 19747) (#("0.2" 0 3 (fontified nil)) . -19678) (19681 . 19685) (#("0.2" 0 3 (fontified t)) . -19656) (19659 . 19663) (#("0.2" 0 3 (fontified nil)) . -19594) (19597 . 19601) (#("0.2" 0 3 (fontified t)) . -19572) (19575 . 19579) (#("0.2" 0 3 (fontified nil)) . -19416) (19419 . 19423) (#("0.2" 0 3 (fontified t)) . -19394) (19397 . 19401) (#("0.2" 0 3 (fontified nil)) . -19332) (19335 . 19339) (#("0.2" 0 3 (fontified t)) . -19310) (19313 . 19317) (#("0.2" 0 3 (fontified nil)) . -19248) (19251 . 19255) (#("0.2" 0 3 (fontified t)) . -19226) (19229 . 19233) (#("0.2" 0 3 (fontified nil)) . -19164) (19167 . 19171) (#("0.2" 0 3 (fontified t)) . -19142) (t 26717 27987 835056 510000) (19145 . 19149) (t 26717 27987 835056 510000)) nil (26717 28053 887046 585000) 0 nil])
([nil nil ((nil fontified t 16952 . 16953) (t 26717 28027 767776 497000) (#("7" 0 1 (fontified t)) . 16952) (t 26717 28027 767776 497000) (16953 . 16954) 16952 (t 26717 28027 767776 497000)) nil (26717 28064 303119 312000) 0 nil] [nil nil ((#("7" 0 1 (fontified t)) . 16953) (16954 . 16956) (#("7" 0 1 (fontified t)) . 16761) (16762 . 16764) (#("7" 0 1 (fontified t)) . 16576) (16577 . 16578) (#("7" 0 1 (fontified t)) . 16385) (t 26717 28027 767776 497000) (16386 . 16387) 16952 (t 26717 28027 767776 497000)) ((#("8" 0 1 (fontified nil)) . 16386) (t 26717 28027 767776 497000) (16385 . 16386) (#("9" 0 1 (fontified nil)) . 16577) (16576 . 16577) (#("10" 0 2 (fontified nil)) . 16762) (16761 . 16762) (#("11" 0 2 (fontified nil)) . 16954) (undo-tree-id199 . -2) (16953 . 16954)) (26717 28053 886584 411000) 0 nil])
([nil nil ((nil fontified t 16761 . 16762) (#("7" 0 1 (fontified t)) . 16761) (16762 . 16763) 16761) nil (26717 28064 303118 160000) 0 nil])
nil
([nil nil ((nil fontified t 16576 . 16577) (#("7" 0 1 (fontified t)) . 16576) (16577 . 16578) 16576) nil (26717 28064 303117 529000) 0 nil])
([nil nil ((nil fontified t 16385 . 16386) (#("7" 0 1 (fontified t)) . 16385) (16386 . 16387) 16385) nil (26717 28064 303112 369000) 0 nil])
([nil nil ((16383 . 16384) (#("3.8" 0 2 (fontified t) 2 3 (fontified t)) . 16383) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2) (undo-tree-id223 . -2) (undo-tree-id224 . -2) (undo-tree-id225 . -2) (undo-tree-id226 . -2) 16385 (t 26717 28064 305518 539000)) nil (26717 28082 667461 908000) 0 nil])
([nil nil ((16572 . 16573) (#("3.8" 0 2 (fontified t) 2 3 (fontified t)) . 16572) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -3) (undo-tree-id219 . -3) 16574) nil (26717 28082 667459 634000) 0 nil])
([nil nil ((16755 . 16756) (#("3.8" 0 2 (fontified t) 2 3 (fontified t)) . 16755) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -3) (undo-tree-id213 . -3) 16757) nil (26717 28082 667456 909000) 0 nil])
([nil nil ((16944 . 16945) (#("3.8" 0 2 (fontified t) 2 3 (fontified t)) . 16944) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -3) (undo-tree-id207 . -3) 16946) nil (26717 28124 458487 33000) 0 nil])
([nil nil ((#("Термическая стабильность образованных комплексов включения гидразидов и
их гидразоновых производных с β-ЦД-ном были исследованы методом
термогравиметрического анализа {[}16{]}. Этот метод позволяет учитывать
изменение массы супрамолекулярных комплексов включением субстратов от
температуры и на основе ее пиков точно определять скорость термического
разложения изучаемых образцов. Кривые, представленные на рисунке 5,
отображают результаты термогравиметрического анализа (ТГА) и
производного термогравиметрического анализа (ДТГ) для различных
образцов: циклодекстрина (ЦД), его физических смесей с гидразоном, а
также комплекса включения ЦД:1d. На ТГА-кривых (рисунок 5,а) показано
изменение массы образцов (ТГ, мг) в зависимости от температуры (°С), а
на ДТГ-кривых (рисунок 5, b) -- скорость изменения массы (мг/мин) по
мере нагревания. Анализ включает три кривые (рисунок 5), обозначенные
как (1) - для ЦД, (2) - для физических смесей ЦД с гидразоном и (3) --
для включения комплекса ЦД:1d. Процесс термической деструкции ЦД, а
также физической смесей ЦД с гидразоном и комплексным включением ЦД:1d
протекает в несколько стадий, сопровождающихся потерями массы,
фиксируемыми на кривых ТГ (термогравиметрический анализ) и ДТГ
(дифференциально-термогравиметрический анализ) {[}16,17{]}.

" 0 636 (fontified t) 636 682 (fontified t) 682 788 (fontified t) 788 822 (fontified t) 822 1289 (fontified t)) . 24904) (undo-tree-id258 . -1288) (undo-tree-id259 . -1288) (undo-tree-id260 . -1288) (undo-tree-id261 . -1288) 26192) nil (26717 28131 164601 163000) 0 nil] [nil nil ((#("
В целом, моделирование с помощью инструментов молекулярного докинга
позволило выявить β-ЦД как наиболее эффективный комплексообразующий
агент для исследуемых гидразонов. Все исследуемые гидразоны
продемонстрировали наилучшее значение афинности связывания с β-ЦД-ном.
При этом для молекул (1b{\\bfseries ), (}1c) комплексообразователем
второго выбора может быть рекомендован α-ЦД, а для остальных - γ-ЦД.
" 0 227 (fontified t) 227 268 (fontified t) 268 293 (fontified t) 293 302 (face font-lock-keyword-face fontified t) 302 307 (face (bold) fontified t) 307 404 (fontified t)) . 23772) (undo-tree-id227 . -335) (undo-tree-id228 . -403) (undo-tree-id229 . -335) (undo-tree-id230 . -404) (undo-tree-id231 . -404) (undo-tree-id232 . -268) (undo-tree-id233 . -268) (undo-tree-id234 . -335) (undo-tree-id235 . -335) (undo-tree-id236 . -335) (undo-tree-id237 . -335) (undo-tree-id238 . -335) (undo-tree-id239 . -335) (undo-tree-id240 . -335) (undo-tree-id241 . -335) (undo-tree-id242 . -335) (undo-tree-id243 . -335) (undo-tree-id244 . -335) (undo-tree-id245 . -335) (undo-tree-id246 . -335) (undo-tree-id247 . -335) (undo-tree-id248 . -335) (undo-tree-id249 . -335) (undo-tree-id250 . -335) (undo-tree-id251 . -335) (undo-tree-id252 . -335) (undo-tree-id253 . -335) (undo-tree-id254 . -335) (undo-tree-id255 . -335) (undo-tree-id256 . -335) (undo-tree-id257 . -404) 24107 (t 26717 28082 670388 243000)) ((23772 . 24176) (t 26717 28113 496168 687000)) (26717 28113 493450 592000) 0 nil])
([nil nil ((24175 . 24176) 24107) nil (26717 28131 164591 435000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 24176 . 24177) (#("
" 0 1 (fontified nil)) . -25465) (24176 . 25466)) nil (26717 28131 164587 498000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 25465) (undo-tree-id262 . 1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (t 26717 28131 171042 279000)) nil (26717 28133 661223 710000) 0 nil])
([nil nil ((25625 . 25627) (t 26717 28133 664024 421000)) nil (26717 28159 465778 574000) 0 nil])
([nil nil ((25812 . 25814)) nil (26717 28159 465778 163000) 0 nil])
([nil nil ((25999 . 26001)) nil (26717 28159 465773 996000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 26000) (t 26717 28159 468839 144000) (26001 . 26002) 26000 (t 26717 28159 468839 144000)) nil (26717 28177 479547 398000) 0 nil])
([nil nil ((nil fontified t 26000 . 26001) (#("3" 0 1 (fontified t)) . 26000) (26001 . 26002) 26000) nil (26717 28177 479546 977000) 0 nil])
([nil nil ((nil fontified t 26000 . 26001) (#("4" 0 1 (fontified t)) . 26000) (26001 . 26002) 26000) nil (26717 28177 479546 526000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 25813) (25814 . 25815) 25813) nil (26717 28177 479545 474000) 0 nil])
([nil nil ((nil fontified t 25813 . 25814) (#("3" 0 1 (fontified t)) . 25813) (25814 . 25815) 25813) nil (26717 28177 479544 833000) 0 nil])
([nil nil ((nil fontified t 25813 . 25814) (#("4" 0 1 (fontified t)) . 25813) (25814 . 25815) 25813) nil (26717 28177 479544 332000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 25626) (25627 . 25628) 25626) nil (26717 28177 479543 771000) 0 nil])
([nil nil ((nil fontified t 25626 . 25627) (#("3" 0 1 (fontified t)) . 25626) (25627 . 25628) 25626) nil (26717 28177 479543 160000) 0 nil])
([nil nil ((nil fontified t 25626 . 25627) (#("4" 0 1 (fontified t)) . 25626) (25627 . 25628) 25626) nil (26717 28177 479538 772000) 0 nil])
([nil nil ((#("
\\begin{multicols}{2}
Эти изменения приводят к началу процесса термической деструкции, при
этом ТГ- и ДТГ-кривые показывает, что последовательное разложение
комплекса включение ЦД:1d начинается при более низкой температуре
(ДТГ\\textsubscript{max} = 330°С), чем для физической смеси ЦД с
гидразоном (ДТГ\\textsubscript{max} = 346°С) {[}16-18{]}. Однако
одновременно наблюдается, что комплекс включения ЦД:1d способствует
усилению соединения воды в ЦД, но уменьшает термическую стабильность
самого ЦД (таблица 2).
\\end{multicols}
" 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t latex-env-pair t) 8 17 (face font-lock-function-name-face fontified t latex-env-pair t) 17 18 (fontified t latex-env-pair t) 18 227 (fontified t) 227 241 (face font-lock-keyword-face fontified t) 241 302 (fontified t) 302 316 (face font-lock-keyword-face fontified t) 316 505 (fontified t) 505 511 (fontified t) 511 515 (face font-lock-keyword-face fontified t) 515 516 (fontified t latex-env-pair t) 516 525 (face font-lock-function-name-face fontified t latex-env-pair t) 525 526 (fontified t latex-env-pair t) 526 527 (fontified t)) . 28207) (undo-tree-id266 . -511) (undo-tree-id267 . -526) (undo-tree-id268 . -511) (undo-tree-id269 . -419) (undo-tree-id270 . -419) (undo-tree-id271 . -419) (undo-tree-id272 . -419) (undo-tree-id273 . -419) (undo-tree-id274 . -351) (undo-tree-id275 . -351) (undo-tree-id276 . -351) (undo-tree-id277 . -351) (undo-tree-id278 . -351) (undo-tree-id279 . -287) (undo-tree-id280 . -287) (undo-tree-id281 . -287) (undo-tree-id282 . -287) (undo-tree-id283 . -287) (undo-tree-id284 . -223) (undo-tree-id285 . -223) (undo-tree-id286 . -223) (undo-tree-id287 . -223) (undo-tree-id288 . -223) (undo-tree-id289 . -157) (undo-tree-id290 . -157) (undo-tree-id291 . -157) (undo-tree-id292 . -157) (undo-tree-id293 . -157) (undo-tree-id294 . -91) (undo-tree-id295 . -91) (undo-tree-id296 . -91) (undo-tree-id297 . -91) (undo-tree-id298 . -91) (undo-tree-id299 . -22) (undo-tree-id300 . -22) (undo-tree-id301 . -22) (undo-tree-id302 . -22) (undo-tree-id303 . -22) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -22) (undo-tree-id337 . -22) (undo-tree-id338 . -22) (undo-tree-id339 . -22) (undo-tree-id340 . -22) (undo-tree-id341 . -91) (undo-tree-id342 . -91) (undo-tree-id343 . -91) (undo-tree-id344 . -91) (undo-tree-id345 . -91) (undo-tree-id346 . -157) (undo-tree-id347 . -157) (undo-tree-id348 . -157) (undo-tree-id349 . -157) (undo-tree-id350 . -157) (undo-tree-id351 . -223) (undo-tree-id352 . -223) (undo-tree-id353 . -223) (undo-tree-id354 . -223) (undo-tree-id355 . -223) (undo-tree-id356 . -287) (undo-tree-id357 . -287) (undo-tree-id358 . -287) (undo-tree-id359 . -287) (undo-tree-id360 . -287) (undo-tree-id361 . -351) (undo-tree-id362 . -351) (undo-tree-id363 . -351) (undo-tree-id364 . -351) (undo-tree-id365 . -351) (undo-tree-id366 . -419) (undo-tree-id367 . -419) (undo-tree-id368 . -419) (undo-tree-id369 . -419) (undo-tree-id370 . -419) (undo-tree-id371 . -488) (undo-tree-id372 . -488) (undo-tree-id373 . -488) (undo-tree-id374 . -488) (undo-tree-id375 . -488) (undo-tree-id376 . -488) (undo-tree-id377 . -488) (undo-tree-id378 . -488) (undo-tree-id379 . -488) (undo-tree-id380 . -488) (undo-tree-id381 . -488) (undo-tree-id382 . -488) (undo-tree-id383 . -488) (undo-tree-id384 . -488) (undo-tree-id385 . -488) (undo-tree-id386 . -488) (undo-tree-id387 . -488) (undo-tree-id388 . -488) (undo-tree-id389 . -488) (undo-tree-id390 . -488) (undo-tree-id391 . -511) (undo-tree-id392 . -511) (undo-tree-id393 . -511) (undo-tree-id394 . -511) (undo-tree-id395 . -511) (undo-tree-id396 . -511) (undo-tree-id397 . -511) (undo-tree-id398 . -511) (undo-tree-id399 . -511) (undo-tree-id400 . -511) (undo-tree-id401 . -511) (undo-tree-id402 . -511) (undo-tree-id403 . -511) (undo-tree-id404 . -511) (undo-tree-id405 . -511) (undo-tree-id406 . -511) (undo-tree-id407 . -511) (undo-tree-id408 . -511) (undo-tree-id409 . -511) (undo-tree-id410 . -511) (undo-tree-id411 . -511) (undo-tree-id412 . -511) (undo-tree-id413 . -511) (undo-tree-id414 . -527) 28718 (t 26717 28177 481709 347000)) nil (26717 28218 398085 788000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28653 . 28654) (#("
" 0 1 (fontified nil)) . -29180) (28653 . 29181) 28641 (t 26717 28203 840518 732000)) nil (26717 28220 762075 101000) 0 nil] [nil nil ((nil rear-nonsticky nil 28654 . 28655) (#("
" 0 1 (fontified nil)) . -29181) (28654 . 29182) (t 26717 28203 840518 732000)) ((#("

\\begin{multicols}{2}
Эти изменения приводят к началу процесса термической деструкции, при
этом ТГ- и ДТГ-кривые показывает, что последовательное разложение
комплекса включение ЦД:1d начинается при более низкой температуре
(ДТГ\\textsubscript{max} = 330°С), чем для физической смеси ЦД с
гидразоном (ДТГ\\textsubscript{max} = 346°С) {[}16-18{]}. Однако
одновременно наблюдается, что комплекс включения ЦД:1d способствует
усилению соединения воды в ЦД, но уменьшает термическую стабильность
самого ЦД (таблица 2).
\\end{multicols}
" 0 1 (rear-nonsticky nil fontified nil) 1 2 (fontified nil) 2 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t latex-env-pair t) 9 18 (face font-lock-function-name-face fontified t latex-env-pair t) 18 19 (fontified t latex-env-pair t) 19 228 (fontified t) 228 242 (face font-lock-keyword-face fontified t) 242 303 (fontified t) 303 317 (face font-lock-keyword-face fontified t) 317 506 (fontified t) 506 512 (fontified t) 512 516 (face font-lock-keyword-face fontified nil) 516 517 (fontified nil latex-env-pair t) 517 526 (face font-lock-function-name-face fontified nil latex-env-pair t) 526 527 (fontified nil latex-env-pair t) 527 528 (fontified nil)) . 28654) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -527) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (29181 . 29182) (nil rear-nonsticky t 28654 . 28655)) (26717 28218 397782 240000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 29165) (undo-tree-id423 . -16) (undo-tree-id424 . -15) (undo-tree-id425 . -16) (undo-tree-id426 . -16)) nil (26717 28220 762074 90000) 0 nil])
nil
([nil nil ((#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 21 (fontified t)) . 29166) (undo-tree-id421 . -20) (undo-tree-id422 . -21)) nil (26717 28220 762068 619000) 0 nil])
([nil nil ((28471 . 28472) (t 26717 28220 764435 25000)) nil (26717 28237 906680 250000) 0 nil])
([nil nil ((28368 . 28369)) nil (26717 28237 906679 369000) 0 nil])
([nil nil ((28265 . 28266)) nil (26717 28237 906675 161000) 0 nil])
([nil nil ((#("72" 0 2 (fontified t)) . 28264) (t 26717 28237 916355 146000) (28266 . 28268) 28265 (t 26717 28237 916355 146000)) nil (26717 28249 345106 173000) 0 nil])
([nil nil ((#("72" 0 2 (fontified t)) . 28368) (28370 . 28372) 28369) nil (26717 28249 345105 141000) 0 nil])
([nil nil ((#("72" 0 2 (fontified t)) . 28472) (28474 . 28476) 28473) nil (26717 28249 345100 121000) 0 nil])
([nil nil ((nil fontified t 28472 . 28474) (t 26717 28249 351301 513000) (#("73" 0 2 (fontified t)) . 28472) (t 26717 28249 351301 513000) (28474 . 28476) 28473 (t 26717 28249 351301 513000)) nil (26717 28253 839678 12000) 0 nil])
([nil nil ((nil fontified t 28368 . 28370) (#("73" 0 2 (fontified t)) . 28368) (28370 . 28372) 28369) nil (26717 28253 839677 140000) 0 nil])
([nil nil ((nil fontified t 28264 . 28266) (#("73" 0 2 (fontified t)) . 28264) (28266 . 28268) 28265) nil (26718 38897 683278 997000) 0 nil])
([nil nil ((#("{}" 0 2 (fontified nil)) . 20) (22 . 66)) ((#("{https://doi.org/10.58805/kazutb.v.2.27-930}" 0 17 (fontified nil) 17 43 (fontified nil foreign-selection nil) 43 44 (fontified nil)) . 22) (20 . 22)) (26718 38898 602182 512000) 0 nil])
([nil nil ((37274 . 37286)) ((#("\\hspace{1em}" 0 7 (face font-lock-keyword-face)) . 37274)) (26718 38898 980273 810000) 0 nil])
([nil nil ((35483 . 35495)) ((#("\\hspace{1em}" 0 7 (face font-lock-keyword-face fontified t) 7 12 (fontified t)) . 35483) (t 26718 37450 168003 713000)) (26718 38899 129627 578000) 0 nil])
([nil nil ((1187 . 1188) (#(" " 0 1 (face (bold) fontified t)) . 1187) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (t 26718 37450 168003 713000)) nil (26718 38925 990469 525000) 0 nil])
([nil nil ((6558 . 6559) (#(" " 0 1 (face (bold) fontified t)) . 6558) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (t 26718 38925 992569 839000)) nil (26718 38939 345593 277000) 0 nil])
([nil nil ((786 . 787) (#(" " 0 1 (face (bold) fontified t)) . 786) (t 26718 38939 348484 466000)) nil (26718 38947 670041 702000) 0 nil])
([nil nil ((39218 . 39219) (t 26718 38947 672431 255000)) nil (26718 39029 447432 620000) 0 nil])
([nil nil ((39073 . 39074)) nil (26718 39029 447432 129000) 0 nil])
([nil nil ((38908 . 38909)) nil (26718 39029 447431 878000) 0 nil])
([nil nil ((38729 . 38730)) nil (26718 39029 447431 628000) 0 nil])
([nil nil ((38386 . 38387)) nil (26718 39029 447431 337000) 0 nil])
([nil nil ((38202 . 38203)) nil (26718 39029 447431 87000) 0 nil])
([nil nil ((38054 . 38055)) nil (26718 39029 447430 856000) 0 nil])
([nil nil ((37818 . 37819)) nil (26718 39029 447430 616000) 0 nil])
([nil nil ((37629 . 37630)) nil (26718 39029 447430 335000) 0 nil])
([nil nil ((37284 . 37285)) nil (26718 39029 447430 55000) 0 nil])
([nil nil ((37284 . 37285) (#(";" 0 1 (fontified t)) . 37284)) nil (26718 39029 447429 243000) 0 nil])
([nil nil ((37139 . 37140)) nil (26718 39029 447429 3000) 0 nil])
([nil nil ((36981 . 36982)) nil (26718 39029 447428 422000) 0 nil])
([nil nil ((36811 . 36812)) nil (26718 39029 447428 211000) 0 nil])
([nil nil ((36470 . 36471)) nil (26718 39029 447427 801000) 0 nil])
([nil nil ((36266 . 36267)) nil (26718 39029 447427 640000) 0 nil])
([nil nil ((36105 . 36106)) nil (26718 39029 447427 370000) 0 nil])
([nil nil ((35894 . 35895)) nil (26718 39029 447427 99000) 0 nil])
([nil current ((35725 . 35726)) nil (26718 39029 447423 513000) 0 nil])
nil
