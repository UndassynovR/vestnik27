(undo-tree-save-format-version . 1)
"1d78aeb79873c3148c271779007ecd5caa52907a"
[nil nil nil nil (26699 55038 434905 832000) 0 nil]
([nil nil ((#("\\bfseries " 0 9 (face font-lock-keyword-face fontified t) 9 10 (face (bold) fontified t)) . 25) (undo-tree-id79 . -9) (t 26689 8827 851864 879000)) nil (26699 55038 434904 653000) 0 nil])
([nil nil ((64 . 65) (#("
" 0 1 (fontified t)) . -64) (#("
" 0 1 (fontified t)) . -64) 25) nil (26699 55038 434903 487000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 63)) nil (26699 55038 434902 815000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 64) (undo-tree-id78 . -10)) nil (26699 55038 434902 270000) 0 nil])
([nil nil ((43 . 45) (25 . 43) (#("section" 0 7 (face font-lock-keyword-face fontified t)) . -25) (undo-tree-id74 . -7) (undo-tree-id75 . -7) (undo-tree-id76 . -7) 32 (29 . 32) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -29) (undo-tree-id77 . -1) (24 . 30)) nil (26699 55038 434900 815000) 0 nil])
([nil nil ((#("{\\bfseries \\textsuperscript{1}A.Baiguzhinova}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ekon/image1}
	\\caption*{}
\\end{figure}
{\\bfseries ,
\\textsuperscript{2}A.
Baidalinova}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ekon/image1}
	\\caption*{}
\\end{figure}
{\\bfseries \\textsuperscript{\\envelope },
\\textsuperscript{2} Zh. Baigireeva}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ekon/image1}
	\\caption*{}
\\end{figure}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t) 11 27 (face (font-lock-keyword-face bold) fontified t) 27 44 (face (bold) fontified t) 44 46 (fontified t) 46 52 (face font-lock-keyword-face fontified t) 52 53 (fontified t latex-env-pair t) 53 59 (face font-lock-function-name-face fontified t latex-env-pair t) 59 60 (fontified t latex-env-pair t) 60 65 (fontified t) 65 75 (face font-lock-keyword-face fontified t) 75 77 (fontified t) 77 93 (face font-lock-keyword-face fontified t) 93 103 (fontified t) 103 113 (face font-lock-keyword-face fontified t) 113 115 (fontified t) 115 132 (face font-lock-builtin-face fontified t) 132 135 (fontified t) 135 144 (face font-lock-keyword-face fontified t) 144 147 (fontified t) 147 151 (face font-lock-keyword-face fontified t) 151 152 (fontified t latex-env-pair t) 152 158 (face font-lock-function-name-face fontified t latex-env-pair t) 158 159 (fontified t latex-env-pair t) 159 161 (fontified t) 161 170 (face font-lock-keyword-face fontified t) 170 173 (face (bold) fontified t) 173 189 (face (font-lock-keyword-face bold) fontified t) 189 206 (face (bold) fontified t) 206 208 (fontified t) 208 214 (face font-lock-keyword-face fontified t) 214 215 (fontified t latex-env-pair t) 215 221 (face font-lock-function-name-face fontified t latex-env-pair t) 221 222 (fontified t latex-env-pair t) 222 227 (fontified t) 227 237 (face font-lock-keyword-face fontified t) 237 239 (fontified t) 239 255 (face font-lock-keyword-face fontified t) 255 265 (fontified t) 265 275 (face font-lock-keyword-face fontified t) 275 277 (fontified t) 277 294 (face font-lock-builtin-face fontified t) 294 297 (fontified t) 297 306 (face font-lock-keyword-face fontified t) 306 309 (fontified t) 309 313 (face font-lock-keyword-face fontified t) 313 314 (fontified t latex-env-pair t) 314 320 (face font-lock-function-name-face fontified t latex-env-pair t) 320 321 (fontified t latex-env-pair t) 321 323 (fontified t) 323 332 (face font-lock-keyword-face fontified t) 332 333 (face (bold) fontified t) 333 349 (face (font-lock-keyword-face bold) fontified t) 349 350 (face (bold) fontified t) 350 359 (face (font-lock-keyword-face bold) fontified t) 359 363 (face (bold) fontified t) 363 379 (face (font-lock-keyword-face bold) fontified t) 379 397 (face (bold) fontified t) 397 400 (fontified t) 400 406 (face font-lock-keyword-face fontified t) 406 407 (fontified t latex-env-pair t) 407 413 (face font-lock-function-name-face fontified t latex-env-pair t) 413 414 (fontified t latex-env-pair t) 414 419 (fontified t) 419 429 (face font-lock-keyword-face fontified t) 429 431 (fontified t) 431 447 (face font-lock-keyword-face fontified t) 447 457 (fontified t) 457 467 (face font-lock-keyword-face fontified t) 467 469 (fontified t) 469 486 (face font-lock-builtin-face fontified t) 486 489 (fontified t) 489 498 (face font-lock-keyword-face fontified t) 498 501 (fontified t) 501 505 (face font-lock-keyword-face fontified t) 505 506 (fontified t latex-env-pair t) 506 512 (face font-lock-function-name-face fontified t latex-env-pair t) 512 513 (fontified t latex-env-pair t) 513 514 (fontified t)) . 142) (undo-tree-id54 . -513) (undo-tree-id55 . -501) (undo-tree-id56 . -20) (undo-tree-id57 . -501) (undo-tree-id58 . -20) (undo-tree-id59 . -46) (undo-tree-id60 . -147) (undo-tree-id61 . -173) (undo-tree-id62 . -208) (undo-tree-id63 . -309) (undo-tree-id64 . -363) (undo-tree-id65 . -501) (undo-tree-id66 . -501) (undo-tree-id67 . -501) (undo-tree-id68 . -501) (undo-tree-id69 . -501) (undo-tree-id70 . -501) (undo-tree-id71 . -501) (undo-tree-id72 . -501) (undo-tree-id73 . -514) 643) nil (26699 55038 434897 586000) 0 nil])
([nil nil ((208 . 209) (#("
" 0 1 (fontified t)) . -208) (undo-tree-id53 . -1) 144) nil (26699 55038 434886 207000) 0 nil])
([nil nil ((356 . 357) (#("
" 0 1 (fontified t)) . -356) 355) nil (26699 55038 434885 80000) 0 nil])
([nil nil ((334 . 335) (#("}" 0 1 (fontified t)) . 334)) nil (26699 55038 434884 472000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 295) (undo-tree-id52 . -10)) nil (26699 55038 434884 5000) 0 nil])
([nil nil ((303 . 308) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -303) (undo-tree-id51 . -1) (295 . 304)) nil (26699 55038 434883 0) 0 nil])
([nil nil ((144 . 164) (384 . 402) 144) nil (26699 55038 434881 925000) 0 nil])
([nil nil ((2040 . 2062) (2289 . 2309)) nil (26699 55038 434881 300000) 0 nil])
([nil nil ((2332 . 2352) (2512 . 2530)) nil (26699 55038 434880 447000) 0 nil])
([nil nil ((2421 . 2422) (#("
" 0 1 (fontified t)) . -2421) 2352) nil (26699 55038 434879 478000) 0 nil])
([nil nil ((2232 . 2233) (#("
" 0 1 (face (bold) fontified t)) . -2232) 2229) nil (26699 55038 434878 530000) 0 nil])
([nil nil ((2170 . 2171) (#(" " 0 1 (face (bold) fontified t)) . 2170)) nil (26699 55038 434877 865000) 0 nil])
([nil nil ((#(" " 0 1 (face (bold) fontified t)) . 2192)) nil (26699 55038 434877 111000) 0 nil])
([nil nil ((2207 . 2208) (#(" " 0 1 (fontified t)) . 2207)) nil (26699 55038 434876 297000) 0 nil])
([nil nil ((2272 . 2273) (#(" " 0 1 (fontified t)) . 2272)) nil (26699 55038 434875 511000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2294)) nil (26699 55038 434874 787000) 0 nil])
([nil nil ((2307 . 2308)) nil (26699 55038 434874 260000) 0 nil])
([nil nil ((4069 . 4219) (#("{\\bfseries \\textsuperscript{1}А.Ж.Байгужинова, \\textsuperscript{2}А.С.
Байдалинова\\textsuperscript{\\envelope }, \\textsuperscript{2}Ж. З. Байгиреева}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t) 11 27 (face (font-lock-keyword-face bold) fontified t) 27 47 (face (bold) fontified t) 47 63 (face (font-lock-keyword-face bold) fontified t) 63 82 (face (bold) fontified t) 82 98 (face (font-lock-keyword-face bold) fontified t) 98 99 (face (bold) fontified t) 99 108 (face (font-lock-keyword-face bold) fontified t) 108 112 (face (bold) fontified t) 112 128 (face (font-lock-keyword-face bold) fontified t) 128 147 (face (bold) fontified t) 147 149 (fontified t)) . 4069) (undo-tree-id47 . -148) (undo-tree-id48 . -149) (undo-tree-id49 . -71) (undo-tree-id50 . -71) 4218) nil (26699 55038 434873 557000) 0 nil])
([nil nil ((3965 . 3987) (4219 . 4239)) nil (26699 55038 434870 620000) 0 nil])
([nil nil ((4324 . 4325) (#("
" 0 1 (fontified t)) . -4324) 4262) nil (26699 55038 434870 8000) 0 nil])
([nil nil ((4262 . 4282) (4457 . 4475)) nil (26699 55038 434869 196000) 0 nil])
([nil nil ((5928 . 5949) (11460 . 11476)) nil (26699 55038 434868 560000) 0 nil])
([nil nil ((11668 . 11689) (13195 . 13211)) nil (26699 55038 434868 186000) 0 nil])
([nil nil ((13379 . 13400) (14752 . 14768)) nil (26699 55038 434867 805000) 0 nil])
([nil nil ((14980 . 14981) (#("
" 0 1 (face (bold) fontified t)) . -14980) 14907) nil (26699 55038 434867 264000) 0 nil])
([nil nil ((#("{\\bfseries Fig.3 - Major global milk producers in 2015-2023, million tons {[}6{]}}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 48 (face (bold) fontified t) 48 73 (fontified t face (bold)) 73 74 (fontified t face (bold)) 74 81 (fontified t face (bold)) 81 82 (fontified t)) . -14907) (undo-tree-id42 . -72) (undo-tree-id43 . -73) (undo-tree-id44 . -73) (undo-tree-id45 . -73) (undo-tree-id46 . -73) 14990) nil (26699 55038 434866 385000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14959 . 14960) (nil fontified nil 14890 . 14960) (14890 . 14960)) nil (26699 55038 434863 700000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14976) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1)) nil (26699 55038 434862 879000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14976)) nil (26699 55038 434858 295000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14976) (undo-tree-id33 . 1)) nil (26699 55038 434857 695000) 0 nil])
([nil nil ((14976 . 14997) (18216 . 18232)) nil (26699 55038 434856 604000) 0 nil])
([nil nil ((18327 . 18328) (#("
" 0 1 (face (bold) fontified t)) . -18327) 18254) nil (26699 55038 434855 993000) 0 nil])
([nil nil ((22411 . 22432) (29562 . 29578)) nil (26699 55038 434855 495000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 24793) (undo-tree-id31 . -1) (undo-tree-id32 . -1)) nil (26699 55038 434854 616000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 28038) (28039 . 28040) (#("1" 0 1 (fontified t)) . 27520) (27521 . 27522) (#("1" 0 1 (fontified t)) . 26994) (26995 . 26996) (#("1" 0 1 (fontified t)) . 26496) (26497 . 26498) (#("1" 0 1 (fontified t)) . 25950) (25951 . 25952) (#("1" 0 1 (fontified t)) . 25469) (25470 . 25471) 28038) nil (26699 55038 434852 234000) 0 nil])
([nil nil ((29599 . 29614) (29622 . 29635)) nil (26699 55038 434850 383000) 0 nil])
([nil nil ((29651 . 29670) (32409 . 32426)) nil (26699 55038 434849 661000) 0 nil])
([nil nil ((32446 . 32465) (33601 . 33618)) nil (26699 55038 434848 703000) 0 nil])
([nil nil ((33619 . 33620) (#("\\" 0 1 (face font-lock-warning-face fontified t)) . -33619) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 33620) nil (26699 55038 434845 96000) 0 nil])
([nil nil ((nil rear-nonsticky nil 92 . 93) (nil fontified nil 44 . 93) (44 . 93) 43 (t 26706 24326 792277 410000)) nil (26706 24585 970342 280000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -91) (#("
" 0 1 (fontified t)) . -91) (undo-tree-id0 . -1) 24) nil (26706 24585 970522 701000) 0 nil])
([nil nil ((nil rear-nonsticky nil 337 . 338) (nil fontified nil 189 . 338) (189 . 338)) nil (26706 24587 949824 967000) 0 nil] [nil nil ((nil rear-nonsticky nil 336 . 337) (nil fontified nil 188 . 337) (188 . 337)) ((#("{\\bfseries
\\textsuperscript{1}А.Ж. Байгужинова,
\\textsuperscript{2}А.С. Байдалинова\\textsuperscript{\\envelope},
\\textsuperscript{2}Ж.З. Байгиреева
}
" 0 1 (fontified nil) 1 10 (face font-lock-keyword-face fontified nil) 10 11 (face (bold) fontified nil) 11 27 (face (font-lock-keyword-face bold) fontified nil) 27 48 (face (bold) fontified nil) 48 64 (face (font-lock-keyword-face bold) fontified nil) 64 83 (face (bold) fontified nil) 83 99 (face (font-lock-keyword-face bold) fontified nil) 99 100 (face (bold) fontified nil) 100 109 (face (font-lock-keyword-face bold) fontified nil) 109 112 (face (bold) fontified nil) 112 128 (face (font-lock-keyword-face bold) fontified nil) 128 147 (face (bold) fontified nil) 147 148 (fontified nil) 148 149 (rear-nonsticky nil fontified nil)) . 188) (undo-tree-id1 . -147) (undo-tree-id2 . -148) (undo-tree-id3 . -147) (undo-tree-id4 . -147) (undo-tree-id5 . -147) (nil fontified t 316 . 335) (nil fontified t 300 . 316) (nil fontified t 297 . 300) (nil fontified t 288 . 297) (nil fontified t 287 . 288) (nil fontified t 271 . 287) (nil fontified t 252 . 271) (nil fontified t 236 . 252) (nil fontified t 215 . 236) (nil fontified t 199 . 215) (nil fontified t 198 . 199) (nil fontified t 189 . 198) (nil fontified t 188 . 189) (nil rear-nonsticky t 336 . 337)) (26706 24585 970309 306000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 338) (undo-tree-id6 . -1)) nil (26706 24587 949821 342000) 0 nil])
nil
([nil nil ((24 . 46) (338 . 358) 24 (t 26706 24587 953315 435000)) nil (26706 24616 157520 357000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 593) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (t 26706 24616 162629 95000)) nil (26706 24624 11979 662000) 0 nil])
([nil nil ((#("А.Ж. Байгужинова" 0 16 (face (bold) fontified t)) . 241) (undo-tree-id2 . -15) (t 26707 60558 682110 567000)) nil (26717 35784 60724 469000) 0 nil])
([nil nil ((#("А.С. Байдалинова" 0 16 (fontified t)) . 262) (undo-tree-id1 . -15)) nil (26717 35784 60723 728000) 0 nil])
([nil nil ((#("Ж.З. Байгиреева" 0 15 (fontified t)) . 310) (undo-tree-id0 . -14)) nil (26717 35784 60722 555000) 0 nil])
([nil nil ((nil rear-nonsticky nil 254 . 255) (nil fontified nil 241 . 255) (241 . 255) 240) nil (26717 35784 60704 71000) 0 nil])
([nil nil ((nil rear-nonsticky nil 289 . 290) (nil fontified nil 276 . 290) (276 . 290) 275) nil (26717 35784 60703 209000) 0 nil])
([nil nil ((nil rear-nonsticky nil 351 . 352) (nil fontified nil 338 . 352) (338 . 352) 337) nil (26717 35784 60702 318000) 0 nil])
([nil nil ((243 . 244)) nil (26717 35784 60698 821000) 0 nil])
([nil nil ((256 . 301) (t 26717 35784 62432 313000)) nil (26717 35800 613528 50000) 0 nil])
([nil nil ((336 . 381) 335) nil (26717 35800 613527 459000) 0 nil])
([nil nil ((443 . 488) 442) nil (26717 35800 613523 803000) 0 nil])
([nil nil ((11938 . 11939) (#("
" 0 1 (face (bold) fontified t)) . -11938) 11865 (t 26717 35800 615340 955000)) nil (26717 35875 100021 399000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11864 . 11865) (#("
" 0 1 (fontified nil)) . -12039) (11864 . 12040)) nil (26717 35875 100021 78000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11865)) nil (26717 35875 100020 757000) 0 nil])
([nil nil ((11940 . 11944) (#("pish4" 0 5 (face font-lock-builtin-face fontified t)) . 11940) (undo-tree-id20 . -4)) nil (26717 35875 100020 367000) 0 nil])
([nil nil ((#("4" 0 1 (face font-lock-builtin-face fontified t)) . 11950) (11951 . 11952) 11950) nil (26717 35875 100019 635000) 0 nil])
([nil nil ((nil fontified t 11950 . 11951) (nil face font-lock-builtin-face 11950 . 11951) (#("3" 0 1 (face font-lock-builtin-face fontified t)) . 11950) (11951 . 11952) 11950) nil (26717 35875 100019 174000) 0 nil])
([nil nil ((nil fontified t 11950 . 11951) (nil face font-lock-builtin-face 11950 . 11951) (#("2" 0 1 (face font-lock-builtin-face fontified t)) . 11950) (11951 . 11952) 11950) nil (26717 35875 100018 593000) 0 nil])
([nil nil ((#("Fig.1 - Change in retail prices for margarine for 2011-2024" 0 59 (fontified t)) . 11964) (undo-tree-id18 . -58) (undo-tree-id19 . -44) 12008) nil (26717 35875 100018 213000) 0 nil])
([nil nil ((#("{\\bfseries Fig.1 - Dynamics of consumption of milk and dairy products per capita in 2020-2023, kg}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 73 (face (bold) fontified t) 73 74 (face (bold) fontified t) 74 97 (face (bold) fontified t) 97 98 (fontified t)) . -11979) (undo-tree-id15 . -11) (undo-tree-id16 . -11) (undo-tree-id17 . -11) 12078) nil (26717 35875 100016 279000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12049 . 12050) (nil fontified nil 11964 . 12050) (11964 . 12050)) nil (26717 35875 100015 197000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12052 . 12053) (#("
" 0 1 (fontified nil)) . -12150) (12051 . 12151) 12049) nil (26717 35875 100014 766000) 0 nil])
([nil nil ((#("Fig.1 - Dynamics of consumption of milk and dairy products per capita in 2020-2023, kg" 0 85 (fontified t) 85 86 (fontified t rear-nonsticky t)) . 12063) (undo-tree-id13 . -85) (undo-tree-id14 . -3) 12066) nil (26717 35875 100014 305000) 0 nil])
([nil nil ((#("\\emph{Note -- compiled by the authors on the basis of past research}" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 67 (face (italic) fontified t) 67 68 (fontified t)) . 12080) (undo-tree-id12 . -67)) nil (26717 35875 100013 203000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12130 . 12131) (nil fontified nil 12063 . 12131) (12063 . 12131)) nil (26717 35875 100012 422000) 0 nil])
([nil nil ((12068 . 12074) (#("l" 0 1 (face font-lock-keyword-face fontified t)) . -12068) (undo-tree-id8 . -1) 12069 (12068 . 12069) (#("a" 0 1 (face font-lock-keyword-face fontified t)) . -12068) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 12069 (12064 . 12069) (12063 . 12064)) nil (26717 35875 100011 680000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12157) (undo-tree-id7 . -1)) nil (26717 35875 100009 466000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12157) (undo-tree-id5 . 1) (undo-tree-id6 . -1)) nil (26717 35875 100008 334000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12157) (undo-tree-id3 . 1) (undo-tree-id4 . -1)) nil (26717 35875 100003 936000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13722 . 13723) (#("
" 0 1 (fontified nil)) . -13836) (13722 . 13837) (t 26717 35875 101926 994000)) nil (26717 35893 154541 861000) 0 nil])
([nil nil ((nil fontified t 13808 . 13809) (nil face font-lock-builtin-face 13808 . 13809) (#("1" 0 1 (face font-lock-builtin-face fontified t)) . 13808) (13809 . 13810) 13808) nil (26717 35893 154541 229000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13824 . 13825) (#("
" 0 1 (fontified nil)) . -13836) (13823 . 13837) 13822) nil (26717 35893 154540 268000) 0 nil])
([nil nil ((13836 . 13846) (#("normal" 0 6 (face font-lock-keyword-face fontified t)) . -13836) (undo-tree-id35 . -6) (undo-tree-id36 . -6) (undo-tree-id37 . -6) 13842 (13835 . 13842)) nil (26717 35893 154539 626000) 0 nil])
([nil nil ((#("\\emph{Note -- compiled by the authors on the basis of past research}" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 67 (face (italic) fontified t) 67 68 (fontified t)) . 13937) (undo-tree-id34 . -67)) nil (26717 35893 154538 234000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13913 . 13914) (nil fontified nil 13846 . 13914) (13846 . 13914)) nil (26717 35893 154537 653000) 0 nil])
([nil nil ((#("{\\bfseries Fig.2 -Dynamics of global production of raw milk, million tons}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 73 (face (bold) fontified t) 73 74 (fontified t)) . -13929) (undo-tree-id25 . -73) (undo-tree-id26 . -73) (undo-tree-id27 . -73) (undo-tree-id28 . -73) (undo-tree-id29 . -73) (undo-tree-id30 . -73) (undo-tree-id31 . -73) (undo-tree-id32 . -73) (undo-tree-id33 . -73) 14004) nil (26717 35893 154537 102000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13883 . 13884) (nil fontified nil 13822 . 13884) (13822 . 13884)) nil (26717 35893 154527 273000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13991) (undo-tree-id24 . -1)) nil (26717 35893 154526 652000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13991) (undo-tree-id22 . 1) (undo-tree-id23 . -1)) nil (26717 35893 154525 670000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13991) (undo-tree-id21 . 1)) nil (26717 35893 154521 202000) 0 nil])
([nil nil ((13802 . 13803) (t 26717 35893 156826 5000)) nil (26717 35903 362631 4000) 0 nil])
([nil nil ((11944 . 11945)) nil (26717 35903 362626 796000) 0 nil])
([nil nil ((#("
In Kazakhstan, according to the results of 2022, the average per capita
consumption of milk and dairy products reached 226 kg. It should be
noted that for the last 5 years, the highest level of consumption of
milk and dairy products in the country was recorded in 2020 and amounted
to 259.4 kg per capita. In 2023, the per capita consumption of milk and
dairy products was - 227.2 kg/year. Including an average consumption of
13 liters of kefir, 4.2 kilograms of cottage cheese, and 3.8 kilograms
of sour cream. For comparison, in New Zealand, the consumption of milk
and dairy products is 366 kg per capita, and in some European countries,
the figures are even higher: in Austria - 401 kg, Germany - 428 kg,
Finland - 434 kg {[}3{]}.
" 0 39 (fontified t) 39 73 (fontified t) 73 736 (fontified t)) . 11112) (undo-tree-id39 . -710) (undo-tree-id40 . -735) (undo-tree-id41 . -710) (undo-tree-id42 . -710) 11822 (t 26717 35903 364768 801000)) nil (26717 35923 937534 782000) 0 nil])
([nil nil ((11443 . 11444) 11423) nil (26717 35923 937531 867000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11443 . 11444) (#("
" 0 1 (fontified nil)) . -12179) (11443 . 12180) 11423) nil (26717 35923 937531 115000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11444) (undo-tree-id38 . -1)) nil (26717 35923 937527 298000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 11185) (t 26717 35923 939653 279000) (11186 . 11187) 11185 (t 26717 35923 939653 279000)) nil (26717 35932 962677 688000) 0 nil])
([nil nil ((#("
{\\bfseries Results and Discussion.} According to the recommendations of the
World Health Organization, the optimal norm of consumption of milk and
dairy products is 330-340 kg per year. At the same time, according to
the scientifically based physiological norms of food consumption,
approved by the order of the Minister of National Economy of the
Republic of Kazakhstan in 2016, the average per capita consumption rate
of milk and dairy products in the country is - 301 kg/year {[}2{]}.

However, in most countries, the actual level of consumption does not
reach 300 kg per year. For example, in 2022 this indicator amounted to
258 kg in Armenia and Azerbaijan, 295 kg in the USA, 213 kg in
Kyrgyzstan, and 241 kg in Russia.
" 0 2 (fontified t) 2 11 (face font-lock-keyword-face fontified t) 11 35 (face (bold) fontified t) 35 727 (fontified t)) . 10385) (undo-tree-id43 . -693) (undo-tree-id44 . -726) (undo-tree-id45 . -693) (undo-tree-id46 . -693) 11078 (t 26717 35932 964602 512000)) nil (26717 35950 788507 420000) 0 nil])
([nil nil ((10716 . 10717) 10696) nil (26717 35950 788498 473000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10716 . 10717) (#("
" 0 1 (fontified nil)) . -11443) (10716 . 11444) 10696) nil (26717 35950 788497 832000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 10717)) nil (26717 35950 788497 140000) 0 nil])
([nil current ((nil fontified t 10458 . 10459) (#("7" 0 1 (fontified t)) . 10458) (10459 . 10460) 10458) nil (26717 35950 788492 973000) 0 nil])
nil
