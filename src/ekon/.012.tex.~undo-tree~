(undo-tree-save-format-version . 1)
"5f08b3efb5f185441952284a3c09c15969197908"
[nil nil nil nil (26716 5684 272839 487000) 0 nil]
([nil nil ((3188 . 3189) (#(" " 0 1 (face (bold) fontified t)) . 3188) (t 26714 40259 754831 174000)) nil (26716 5684 272838 876000) 0 nil])
([nil nil ((3227 . 3228) (#(" " 0 1 (face (bold) fontified t)) . 3227)) nil (26716 5684 272838 575000) 0 nil])
([nil nil ((3251 . 3252) (#("
" 0 1 (fontified t)) . -3251) 3228) nil (26716 5684 272838 275000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3288)) nil (26716 5684 272838 44000) 0 nil])
([nil nil ((3289 . 3290) (#(" " 0 1 (fontified t)) . 3289)) nil (26716 5684 272837 834000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 3362)) nil (26716 5684 272837 564000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3363)) nil (26716 5684 272837 293000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 3363) (undo-tree-id43 . -10)) nil (26716 5684 272836 902000) 0 nil])
([nil nil ((3395 . 3396)) nil (26716 5684 272836 341000) 0 nil])
([nil nil ((3114 . 3136) (3398 . 3418) 3114) nil (26716 5684 272836 141000) 0 nil])
([nil nil ((3510 . 3511) (#("
" 0 1 (fontified t)) . -3510) (undo-tree-id42 . -1) 3441) nil (26716 5684 272835 680000) 0 nil])
([nil nil ((3668 . 3669) (#("
" 0 1 (fontified t)) . -3668) (undo-tree-id41 . -1) 3667) nil (26716 5684 272834 698000) 0 nil])
([nil nil ((3772 . 3773) (#("
" 0 1 (fontified t)) . -3772) 3769) nil (26716 5684 272833 346000) 0 nil])
([nil nil ((3800 . 3801) (#("
" 0 1 (fontified t)) . -3800) 3799) nil (26716 5684 272832 534000) 0 nil])
([nil nil ((#("\\href{mailto:" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 13 (face tex-verbatim fontified t)) . 3801) (undo-tree-id40 . -12)) nil (26716 5684 272832 63000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 3828)) nil (26716 5684 272831 392000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 3827)) nil (26716 5684 272830 631000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 3826)) nil (26716 5684 272830 59000) 0 nil])
([nil nil ((3441 . 3461) (3827 . 3845) 3441) nil (26716 5684 272829 699000) 0 nil])
([nil nil ((79 . 299) (#("{\\bfseries \\textsuperscript{1}А.Б.Мухамедханова}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ekon2/image1}
	\\caption*{}
\\end{figure}
{\\bfseries ,\\textsuperscript{2}Н.Н.Жанакова}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ekon2/image1}
	\\caption*{}
\\end{figure}
{\\bfseries \\textsuperscript{\\envelope },\\textsuperscript{3}М.Р.Сергазиева}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ekon2/image1}
	\\caption*{}
\\end{figure}
{\\bfseries ,\\textsuperscript{4}Е.К.Молдакенова}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ekon2/image1}
	\\caption*{}
\\end{figure}
{\\bfseries ,
\\textsuperscript{4}Г.К.Амренов}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ekon2/image1}
	\\caption*{}
\\end{figure}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t) 11 27 (face (font-lock-keyword-face bold) fontified t) 27 47 (face (bold) fontified t) 47 49 (fontified t) 49 55 (face font-lock-keyword-face fontified t) 55 56 (latex-env-pair t fontified t) 56 62 (face font-lock-function-name-face latex-env-pair t fontified t) 62 63 (latex-env-pair t fontified t) 63 68 (fontified t) 68 78 (face font-lock-keyword-face fontified t) 78 80 (fontified t) 80 96 (face font-lock-keyword-face fontified t) 96 106 (fontified t) 106 116 (face font-lock-keyword-face fontified t) 116 118 (fontified t) 118 136 (face font-lock-builtin-face fontified t) 136 139 (fontified t) 139 148 (face font-lock-keyword-face fontified t) 148 151 (fontified t) 151 155 (face font-lock-keyword-face fontified t) 155 156 (latex-env-pair t fontified t) 156 162 (face font-lock-function-name-face latex-env-pair t fontified t) 162 163 (latex-env-pair t fontified t) 163 165 (fontified t) 165 174 (face font-lock-keyword-face fontified t) 174 176 (face (bold) fontified t) 176 192 (face (font-lock-keyword-face bold) fontified t) 192 207 (face (bold) fontified t) 207 209 (fontified t) 209 215 (face font-lock-keyword-face fontified t) 215 216 (latex-env-pair t fontified t) 216 222 (face font-lock-function-name-face latex-env-pair t fontified t) 222 223 (latex-env-pair t fontified t) 223 228 (fontified t) 228 238 (face font-lock-keyword-face fontified t) 238 240 (fontified t) 240 256 (face font-lock-keyword-face fontified t) 256 266 (fontified t) 266 276 (face font-lock-keyword-face fontified t) 276 278 (fontified t) 278 296 (face font-lock-builtin-face fontified t) 296 299 (fontified t) 299 308 (face font-lock-keyword-face fontified t) 308 311 (fontified t) 311 315 (face font-lock-keyword-face fontified t) 315 316 (latex-env-pair t fontified t) 316 322 (face font-lock-function-name-face latex-env-pair t fontified t) 322 323 (latex-env-pair t fontified t) 323 325 (fontified t) 325 334 (face font-lock-keyword-face fontified t) 334 335 (face (bold) fontified t) 335 351 (face (font-lock-keyword-face bold) fontified t) 351 352 (face (bold) fontified t) 352 361 (face (font-lock-keyword-face bold) fontified t) 361 364 (face (bold) fontified t) 364 380 (face (font-lock-keyword-face bold) fontified t) 380 397 (face (bold) fontified t) 397 399 (fontified t) 399 405 (face font-lock-keyword-face fontified t) 405 406 (latex-env-pair t fontified t) 406 412 (face font-lock-function-name-face latex-env-pair t fontified t) 412 413 (latex-env-pair t fontified t) 413 418 (fontified t) 418 428 (face font-lock-keyword-face fontified t) 428 430 (fontified t) 430 446 (face font-lock-keyword-face fontified t) 446 456 (fontified t) 456 466 (face font-lock-keyword-face fontified t) 466 468 (fontified t) 468 486 (face font-lock-builtin-face fontified t) 486 489 (fontified t) 489 498 (face font-lock-keyword-face fontified t) 498 501 (fontified t) 501 505 (face font-lock-keyword-face fontified t) 505 506 (latex-env-pair t fontified t) 506 512 (face font-lock-function-name-face latex-env-pair t fontified t) 512 513 (latex-env-pair t fontified t) 513 515 (fontified t) 515 524 (face font-lock-keyword-face fontified t) 524 526 (face (bold) fontified t) 526 542 (face (font-lock-keyword-face bold) fontified t) 542 560 (face (bold) fontified t) 560 562 (fontified t) 562 568 (face font-lock-keyword-face fontified t) 568 569 (latex-env-pair t fontified t) 569 575 (face font-lock-function-name-face latex-env-pair t fontified t) 575 576 (latex-env-pair t fontified t) 576 581 (fontified t) 581 591 (face font-lock-keyword-face fontified t) 591 593 (fontified t) 593 609 (face font-lock-keyword-face fontified t) 609 619 (fontified t) 619 629 (face font-lock-keyword-face fontified t) 629 631 (fontified t) 631 649 (face font-lock-builtin-face fontified t) 649 652 (fontified t) 652 661 (face font-lock-keyword-face fontified t) 661 664 (fontified t) 664 668 (face font-lock-keyword-face fontified t) 668 669 (latex-env-pair t fontified t) 669 675 (face font-lock-function-name-face latex-env-pair t fontified t) 675 676 (latex-env-pair t fontified t) 676 678 (fontified t) 678 687 (face font-lock-keyword-face fontified t) 687 690 (face (bold) fontified t) 690 706 (face (font-lock-keyword-face bold) fontified t) 706 720 (face (bold) fontified t) 720 723 (fontified t) 723 729 (face font-lock-keyword-face fontified t) 729 730 (latex-env-pair t fontified t) 730 736 (face font-lock-function-name-face latex-env-pair t fontified t) 736 737 (latex-env-pair t fontified t) 737 742 (fontified t) 742 752 (face font-lock-keyword-face fontified t) 752 754 (fontified t) 754 770 (face font-lock-keyword-face fontified t) 770 780 (fontified t) 780 790 (face font-lock-keyword-face fontified t) 790 792 (fontified t) 792 810 (face font-lock-builtin-face fontified t) 810 813 (fontified t) 813 822 (face font-lock-keyword-face fontified t) 822 825 (fontified t) 825 829 (face font-lock-keyword-face fontified t) 829 830 (latex-env-pair t fontified t) 830 836 (face font-lock-function-name-face latex-env-pair t fontified t) 836 837 (latex-env-pair t fontified t) 837 838 (fontified t)) . 79) (undo-tree-id19 . -838) (undo-tree-id20 . -67) (undo-tree-id21 . -151) (undo-tree-id22 . -209) (undo-tree-id23 . -311) (undo-tree-id24 . -399) (undo-tree-id25 . -501) (undo-tree-id26 . -562) (undo-tree-id27 . -664) (undo-tree-id28 . -690) (undo-tree-id29 . -825) (undo-tree-id30 . -837) (undo-tree-id31 . -825) (undo-tree-id32 . -49) (undo-tree-id33 . -151) (undo-tree-id34 . -209) (undo-tree-id35 . -311) (undo-tree-id36 . -399) (undo-tree-id37 . -501) (undo-tree-id38 . -562) (undo-tree-id39 . -825) 917) nil (26716 5684 272828 877000) 0 nil])
([nil nil ((24 . 46) (299 . 319) 24) nil (26716 5684 272780 266000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 342)) nil (26716 5684 272779 565000) 0 nil])
([nil nil ((342 . 362) (800 . 818)) nil (26716 5684 272778 984000) 0 nil])
([nil nil ((777 . 778) (#("
" 0 1 (fontified t)) . -777) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 715) nil (26716 5684 272778 573000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 715) (undo-tree-id14 . -10)) nil (26716 5684 272776 950000) 0 nil])
([nil nil ((723 . 728) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -723) (undo-tree-id8 . -1) (720 . 724) (#("g" 0 1 (face font-lock-keyword-face fontified t)) . -720) (undo-tree-id9 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -721) (undo-tree-id10 . -1) (#("d" 0 1 (face font-lock-keyword-face fontified t)) . -722) (undo-tree-id11 . -1) (#("r" 0 1 (face font-lock-keyword-face fontified t)) . -723) (undo-tree-id12 . -1) 724 (719 . 724) (#("d" 0 1 (face font-lock-keyword-face fontified t)) . -719) (undo-tree-id13 . -1) 720 (715 . 720)) nil (26716 5684 272775 748000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 755)) nil (26716 5684 272773 183000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 769) (undo-tree-id6 . -1) (undo-tree-id7 . -1)) nil (26716 5684 272772 782000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 770)) nil (26716 5684 272770 688000) 0 nil])
([nil nil ((#("\\href{mailto:" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 13 (face tex-verbatim fontified t)) . 777) (undo-tree-id4 . -12) (undo-tree-id5 . -13)) nil (26716 5684 272770 268000) 0 nil])
([nil nil ((#("}{}" 0 3 (fontified t)) . 802) (undo-tree-id1 . -2) (undo-tree-id2 . -3) (undo-tree-id3 . -3)) nil (26716 5684 272943 351000) 0 nil])
([nil nil ((685 . 686) (#("
" 0 1 (fontified t)) . -685) (undo-tree-id46 . -1) 621) nil (26716 5688 255865 931000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . -620) (undo-tree-id0 . -1)) ((620 . 621)) (26716 5684 272765 218000) 0 nil])
([nil nil ((587 . 588) (#("
" 0 1 (fontified t)) . -587) 586) nil (26716 5688 255864 458000) 0 nil])
nil
([nil nil ((512 . 513) (#("
" 0 1 (fontified t)) . -512) (undo-tree-id45 . -1) 511) nil (26716 5688 255863 376000) 0 nil])
([nil nil ((427 . 428) (#("
" 0 1 (fontified t)) . -427) (undo-tree-id44 . -1) 425) nil (26716 5746 60892 736000) 0 nil])
([nil nil ((38627 . 38628) 21) nil (26716 5748 225518 44000) 0 nil] [nil nil ((#("а" 0 1 (face (bold) fontified t)) . 317) (undo-tree-id48 . -1)) ((317 . 318)) (26716 5744 644057 594000) 0 nil] [nil nil ((38627 . 38628) 317) (("
" . 38627) (t 26716 5688 258993 312000)) (26716 5688 255850 763000) 0 nil])
([nil nil ((5019 . 5020) (#("
" 0 1 (face (bold) fontified t)) . -5019) 4959 (t 26716 5748 227659 625000)) nil (26716 5887 666058 259000) 0 nil])
([nil nil ((38626 . 38627) 316) (("
" . 38626) (t 26716 5717 344832 345000)) (26716 5743 422101 293000) 0 nil])
nil
([nil nil ((4959 . 4981) (5217 . 5237)) nil (26716 5887 666057 968000) 0 nil])
([nil nil ((#("а" 0 1 (face (bold) fontified t)) . 2859) (t 26716 5717 344832 345000)) ((2859 . 2860)) (26716 5743 421870 621000) 0 nil])
([nil nil ((#("\\bfseries " 0 9 (face font-lock-keyword-face fontified t) 9 10 (face (bold) fontified t)) . 47) (undo-tree-id84 . -9)) nil (26716 5887 666057 698000) 0 nil])
nil
([nil nil (47) nil (26716 5887 666057 187000) 0 nil])
([nil nil ((65 . 67) (47 . 65) (#("section" 0 7 (face font-lock-keyword-face fontified t)) . -47) (undo-tree-id80 . -7) (undo-tree-id81 . -7) (undo-tree-id82 . -7) 54 (51 . 54) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -51) (undo-tree-id83 . -1) (46 . 52)) nil (26716 5887 666056 846000) 0 nil])
([nil nil ((nil rear-nonsticky nil 111 . 112) (#("
" 0 1 (fontified nil)) . -318) (111 . 319)) nil (26716 5887 666055 253000) 0 nil])
([nil nil ((#("\\textsuperscript{4}" 0 16 (face font-lock-keyword-face fontified t) 16 19 (fontified t)) . 210) (undo-tree-id76 . -18) (undo-tree-id77 . -18) (undo-tree-id78 . -18) (undo-tree-id79 . -18) (#("\\textsuperscript{4}" 0 16 (face font-lock-keyword-face fontified t) 16 19 (fontified t)) . 192) (#("\\textsuperscript{3}" 0 16 (face font-lock-keyword-face fontified t) 16 19 (fontified t)) . 175) (#("\\textsuperscript{2}" 0 16 (face font-lock-keyword-face fontified t) 16 19 (fontified t)) . 132) (#("\\textsuperscript{1}" 0 16 (face font-lock-keyword-face fontified t) 16 19 (fontified t)) . 112) 304) nil (26716 5887 666054 161000) 0 nil])
([nil nil ((#("\\textsuperscript{\\envelope }" 0 16 (face font-lock-keyword-face fontified t) 16 17 (fontified t) 17 26 (face font-lock-keyword-face fontified t) 26 28 (fontified t)) . 145) (undo-tree-id75 . -27)) nil (26716 5887 666052 708000) 0 nil])
([nil nil ((181 . 182) (#("
" 0 1 (fontified t)) . -181) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (163 . 164) (#("
" 0 1 (fontified t)) . -163) (146 . 147) (#("
" 0 1 (fontified t)) . -146) (131 . 132) (#("
" 0 1 (fontified t)) . -131) 125) nil (26716 5887 666051 706000) 0 nil])
([nil nil ((#("А.Б. Мухамедханова, Н.Н. Жанакова, М.Р. Сергазиева, Е.К. Молдакенова, Г.К. Амренова" 0 19 (fontified t) 19 20 (fontified t) 20 24 (fontified t) 24 25 (fontified t) 25 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 51 (fontified t) 51 52 (fontified t) 52 69 (fontified t) 69 70 (fontified t) 70 82 (fontified t) 82 83 (fontified t)) . 112) (undo-tree-id67 . -69) (undo-tree-id68 . -82) (undo-tree-id69 . 13) (undo-tree-id70 . -69) (undo-tree-id71 . -69)) nil (26716 5887 666050 224000) 0 nil])
([nil nil ((nil rear-nonsticky nil 148 . 149) (nil fontified nil 66 . 149) (66 . 149) 65) nil (26716 5887 666048 701000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 194) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1)) nil (26716 5887 666048 250000) 0 nil])
([nil nil ((5153 . 5154) (#(" " 0 1 (face (bold) fontified t)) . 5153)) nil (26716 5887 666045 94000) 0 nil])
([nil nil ((5194 . 5195) (#(" " 0 1 (face (bold) fontified t)) . 5194)) nil (26716 5887 666044 874000) 0 nil])
([nil nil ((5218 . 5219) (#("
" 0 1 (fontified t)) . -5218) 5195) nil (26716 5887 666044 633000) 0 nil])
([nil nil ((5257 . 5258) (#(" " 0 1 (fontified t)) . 5257)) nil (26716 5887 666044 292000) 0 nil])
([nil nil ((5331 . 5332)) nil (26716 5887 666044 2000) 0 nil])
([nil nil ((#("{\\bfseries \\textsuperscript{4}G.K. Amrenova}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t) 11 27 (face (font-lock-keyword-face bold) fontified t) 27 43 (face (bold) fontified t) 43 45 (fontified t)) . 5355) (undo-tree-id61 . -44)) nil (26716 5887 666043 812000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5331 . 5332) (#("
" 0 1 (fontified nil)) . -5376) (5331 . 5377) 5295) nil (26716 5887 666043 341000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 5332) (undo-tree-id60 . -10)) nil (26716 5887 666042 980000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 5364)) nil (26716 5887 666042 399000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5388)) nil (26716 5887 666042 68000) 0 nil])
([nil nil ((5455 . 5456) (#("
" 0 1 (fontified t)) . -5455) 5388) nil (26716 5887 666041 868000) 0 nil])
([nil nil ((5595 . 5596) (#("
" 0 1 (fontified t)) . -5595) (undo-tree-id59 . -1) 5594) nil (26716 5887 666041 427000) 0 nil])
([nil nil ((5721 . 5722) (#("
" 0 1 (fontified t)) . -5721) 5708) nil (26716 5887 666040 816000) 0 nil])
([nil nil ((5742 . 5743) (#("
" 0 1 (fontified t)) . -5742) 5741) nil (26716 5887 666040 566000) 0 nil])
([nil nil ((#("\\href{mailto:" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 13 (face tex-verbatim fontified t)) . 5743) (undo-tree-id58 . -12)) nil (26716 5887 666040 235000) 0 nil])
([nil nil ((#("}{}" 0 3 (fontified t)) . 5768) (undo-tree-id57 . -2)) nil (26716 5887 666039 674000) 0 nil])
([nil nil ((5388 . 5408) (5769 . 5787) 5388) nil (26716 5887 666039 63000) 0 nil])
([nil nil ((7372 . 7373) (#("~" 0 1 (fontified t)) . 7372)) nil (26716 5887 666038 381000) 0 nil])
([nil nil ((7489 . 7510) (14014 . 14030)) nil (26716 5887 666038 91000) 0 nil])
([nil nil ((14126 . 14127) (#("
" 0 1 (face (bold) fontified t)) . -14126) 14052) nil (26716 5887 666037 700000) 0 nil])
([nil nil ((#("-" 0 1 (face (bold) fontified t)) . 14070)) nil (26716 5887 666037 199000) 0 nil])
([nil nil ((#("-" 0 1 (face (italic) fontified t)) . 14202)) nil (26716 5887 666036 879000) 0 nil])
([nil nil ((14142 . 14143) (#("
" 0 1 (fontified t)) . -14142) (#("
" 0 1 (fontified t)) . -14142) 14070) nil (26716 5887 666036 388000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 14141)) nil (26716 5887 666035 917000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (face (bold) fontified t) 1 10 (face (font-lock-keyword-face bold) fontified t) 10 11 (face (bold) fontified t)) . 14142) (undo-tree-id56 . -10)) nil (26716 5887 666035 556000) 0 nil])
([nil nil ((14225 . 14246) (14586 . 14602) 14225) nil (26716 5887 666034 594000) 0 nil])
([nil nil ((14698 . 14699) (#("
" 0 1 (face (bold) fontified t)) . -14698) 14624) nil (26716 5887 666033 993000) 0 nil])
([nil nil ((#("-" 0 1 (face (italic) fontified t)) . 14762)) nil (26716 5887 666033 592000) 0 nil])
([nil nil ((14798 . 14819) (19537 . 19553)) nil (26716 5887 666033 342000) 0 nil])
([nil nil ((#("-" 0 1 (face (bold) fontified t)) . 19593)) nil (26716 5887 666033 51000) 0 nil])
([nil nil ((#("-" 0 1 (face (italic) fontified t)) . 19732)) nil (26716 5887 666032 721000) 0 nil])
([nil nil ((19646 . 19647) (#("
" 0 1 (face (bold) fontified t)) . -19646) 19593) nil (26716 5887 666032 360000) 0 nil])
([nil nil ((19768 . 19789) (21845 . 21861)) nil (26716 5887 666031 879000) 0 nil])
([nil nil ((#("\\def\\labelenumi{\\arabic{enumi})}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 15 (face font-lock-function-name-face fontified t) 15 16 (fontified t) 16 23 (face font-lock-keyword-face fontified t) 23 33 (fontified t)) . 21883) (undo-tree-id54 . -32) (undo-tree-id55 . -33)) nil (26716 5887 666031 539000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21883)) nil (26716 5887 666029 795000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 22065) (22066 . 22067) 22065) nil (26716 5887 666029 435000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 22178) (22179 . 22180) 22178) nil (26716 5887 666028 924000) 0 nil])
([nil nil ((nil fontified t 22178 . 22179) (#("2" 0 1 (fontified t)) . 22178) (22179 . 22180) 22178) nil (26716 5887 666028 443000) 0 nil])
([nil nil ((22249 . 22250) 22178) nil (26716 5887 666028 142000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 21866) (undo-tree-id52 . -15) (undo-tree-id53 . 16)) nil (26716 5887 666027 852000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23145 . 23146) (#("
" 0 1 (fontified nil)) . -23161) (23145 . 23162) 23093) nil (26716 5887 666026 589000) 0 nil])
([nil nil ((23294 . 23295) (#("
" 0 1 (face (bold) fontified t)) . -23294) (23234 . 23235) (#("
" 0 1 (face (bold) fontified t)) . -23234) 23163) nil (26716 5887 666026 229000) 0 nil])
([nil nil ((23392 . 23413) (26084 . 26100)) nil (26716 5887 666025 728000) 0 nil])
([nil nil ((26186 . 26187) (#("
" 0 1 (face (bold) fontified t)) . -26186) 26122) nil (26716 5887 666025 337000) 0 nil])
([nil nil ((26286 . 26307) (30970 . 30986)) nil (26716 5887 666216 184000) 0 nil])
([nil nil ((31008 . 31023) (31031 . 31044)) nil (26716 5926 844131 189000) 0 nil] [nil nil ((31008 . 31010) (31008 . 31009) (#("{\\bfseries Литература}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 21 (face (bold) fontified t) 21 23 (fontified t)) . 31008) (undo-tree-id49 . -22) (undo-tree-id50 . -23) (undo-tree-id51 . -23)) ((31008 . 31031) (#("
" 0 1 (fontified nil)) . 31008) (undo-tree-id85 . 1) (#("ct" 0 2 (fontified t)) . 31008) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1)) (26716 5887 666021 971000) 0 nil])
([nil nil ((31060 . 31081) (34184 . 34200)) nil (26716 5926 844130 768000) 0 nil])
nil
([nil nil ((#("{\\bfseries References}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 21 (face (bold) fontified t) 21 22 (fontified t)) . 34233) (undo-tree-id96 . -21)) nil (26716 5926 844130 327000) 0 nil])
([nil nil ((nil rear-nonsticky nil 34255 . 34256) (nil fontified nil 34234 . 34256) (34234 . 34256)) nil (26716 5926 844129 195000) 0 nil])
([nil nil ((34233 . 34234) 34232) nil (26716 5926 844128 253000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (latex-env-pair t fontified t) 5 14 (face font-lock-function-name-face latex-env-pair t fontified t) 14 15 (latex-env-pair t fontified t) 15 16 (fontified t)) . 34205) (undo-tree-id94 . -15) (undo-tree-id95 . 16)) nil (26716 5926 844127 702000) 0 nil])
([nil nil ((nil rear-nonsticky nil 34217 . 34218) (#("
" 0 1 (fontified nil)) . -34233) (34217 . 34234) 34205) nil (26716 5926 844125 949000) 0 nil])
([nil nil ((34235 . 34250) (34258 . 34271)) nil (26716 5926 844125 498000) 0 nil])
([nil nil ((34285 . 34286) 34273) nil (26716 5926 844125 148000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 34139)) nil (26716 5926 844124 687000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . 34139)) nil (26716 5926 844124 266000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 34139)) nil (26716 5926 844123 785000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 34139)) nil (26716 5926 844123 294000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 34139)) nil (26716 5926 844122 823000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 34183)) nil (26716 5926 844122 132000) 0 nil])
([nil nil ((34181 . 34182)) nil (26716 5926 844121 621000) 0 nil])
([nil nil ((34139 . 34211) (#("https://adilet.zan.kz/rus/docs/U2200001005" 0 42 (fontified t)) . 34139) (undo-tree-id92 . -42) (undo-tree-id93 . -41)) nil (26716 5926 844118 505000) 0 nil])
([nil nil ((35350 . 35358) (t 26716 5926 846618 595000)) nil (26716 6014 179592 652000) 0 nil])
([nil nil ((35350 . 35480) (#("https://worldbank.org/curated/en/099748506072325934/pdf/IDU09d7e7fa50fbff046e00a8a80e07ac5341e5b.pdf" 0 100 (fontified t)) . -35350) (undo-tree-id108 . 92) (undo-tree-id109 . -99) (undo-tree-id110 . -5) (undo-tree-id111 . -5) (undo-tree-id112 . -99) 35450) nil (26716 6014 179592 141000) 0 nil])
([nil nil ((35480 . 35481)) nil (26716 6014 179590 518000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 35349) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1)) nil (26716 6014 179590 177000) 0 nil])
([nil nil ((32119 . 32127)) nil (26716 6014 179587 442000) 0 nil])
([nil nil ((32119 . 32249) (#("https://worldbank.org/curated/en/099748506072325934/pdf/IDU09d7e7fa50fbff046e00a8a80e07ac5341e5b.pdf" 0 100 (fontified t)) . -32119) (undo-tree-id98 . 92) (undo-tree-id99 . -99) (undo-tree-id100 . -5) (undo-tree-id101 . -5) (undo-tree-id102 . -99) 32219) nil (26716 6014 179586 971000) 0 nil])
([nil nil ((32249 . 32250)) nil (26716 6014 179584 556000) 0 nil])
([nil nil ((#("h" 0 1 (face tex-verbatim fontified t)) . 32125)) nil (26716 6014 179584 396000) 0 nil])
([nil nil ((#("t" 0 1 (face tex-verbatim fontified t)) . 32125)) nil (26716 6014 179584 96000) 0 nil])
([nil nil ((#("t" 0 1 (face tex-verbatim fontified t)) . 32125)) nil (26716 6014 179583 144000) 0 nil])
([nil nil ((#("p" 0 1 (face tex-verbatim fontified t)) . 32125)) nil (26716 6014 179582 863000) 0 nil])
([nil nil ((#("s" 0 1 (face tex-verbatim fontified t)) . 32125)) nil (26716 6014 179582 703000) 0 nil])
([nil nil ((#(":" 0 1 (face tex-verbatim fontified t)) . 32125)) nil (26716 6014 179582 533000) 0 nil])
([nil nil ((#("/" 0 1 (face tex-verbatim fontified t)) . 32125)) nil (26716 6014 179582 242000) 0 nil])
([nil nil ((#("/" 0 1 (face tex-verbatim fontified t)) . 32125)) nil (26716 6014 179581 871000) 0 nil])
([nil nil ((#("https://documents1." 0 19 (fontified t)) . 32098) (undo-tree-id97 . -18)) nil (26716 6014 179581 250000) 0 nil])
([nil nil ((nil rear-nonsticky nil 32124 . 32125) (nil fontified nil 32106 . 32125) (32106 . 32125) 32105) nil (26716 6014 179570 570000) 0 nil])
([nil nil ((#("chrome-extension:// efaidnbmnnnibpcajpcglclefindmkaj/
" 0 54 (fontified t)) . 32045) (undo-tree-id120 . -53) (undo-tree-id121 . -54) (undo-tree-id122 . -54) (undo-tree-id123 . -54) (undo-tree-id124 . -54) (undo-tree-id125 . -54) (undo-tree-id126 . -54) (undo-tree-id127 . -54) (undo-tree-id128 . -54) (undo-tree-id129 . -54) (undo-tree-id130 . -54) (undo-tree-id131 . -54) (undo-tree-id132 . -54) (undo-tree-id133 . -54) (undo-tree-id134 . -54) (undo-tree-id135 . -54) (undo-tree-id136 . -54) (undo-tree-id137 . -6) (undo-tree-id138 . -6) (undo-tree-id139 . -6) (undo-tree-id140 . -6) (undo-tree-id141 . -6) (undo-tree-id142 . -6) (undo-tree-id143 . -6) (undo-tree-id144 . -6) (undo-tree-id145 . -6) (undo-tree-id146 . -6) (undo-tree-id147 . -6) (undo-tree-id148 . -6) (undo-tree-id149 . -6) (undo-tree-id150 . -6) (undo-tree-id151 . -6) (undo-tree-id152 . -6) (undo-tree-id153 . -6) (undo-tree-id154 . -6) (undo-tree-id155 . -6) (undo-tree-id156 . -6) (undo-tree-id157 . -6) (undo-tree-id158 . -6) (undo-tree-id159 . -6) (undo-tree-id160 . -6) (undo-tree-id161 . -6) (undo-tree-id162 . -6) (undo-tree-id163 . -6) (undo-tree-id164 . -6) (undo-tree-id165 . -6) (undo-tree-id166 . -6) (undo-tree-id167 . -6) (undo-tree-id168 . -6) (undo-tree-id169 . -6) (undo-tree-id170 . -6) (undo-tree-id171 . -6) (undo-tree-id172 . -6) (undo-tree-id173 . -6) (undo-tree-id174 . -6) (undo-tree-id175 . -6) (undo-tree-id176 . -54) 32051 (t 26716 6014 183075 519000)) nil (26716 6059 962415 509000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 32045) (undo-tree-id119 . -1)) nil (26716 6059 962357 891000) 0 nil])
([nil nil ((#("https://documents1." 0 19 (fontified t)) . 35305) (undo-tree-id118 . -18)) nil (26716 6059 962357 210000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35330 . 35331) (nil fontified nil 35312 . 35331) (35312 . 35331) 35311) nil (26716 6059 962356 519000) 0 nil])
([nil nil ((#("chrome-extension:// efaidnbmnnnibpcajpcglclefindmkaj/
" 0 54 (fontified t)) . 35252) (undo-tree-id113 . -53) (undo-tree-id114 . -54) (undo-tree-id115 . -54) (undo-tree-id116 . -22) (undo-tree-id117 . -54) 35274) nil (26716 6059 962353 864000) 0 nil])
([nil nil ((37359 . 37431) (#("https://adilet.zan.kz/rus/docs/U2200001005" 0 42 (fontified t)) . -37359) (undo-tree-id177 . -41) (undo-tree-id178 . -41) 37401 (t 26716 6059 964788 925000)) nil (26716 6069 141992 545000) 0 nil])
([nil nil ((37431 . 37432)) nil (26716 6069 141980 161000) 0 nil])
([nil nil ((37110 . 37111) (#("
" 0 1 (fontified t)) . -37110) (#("
" 0 1 (fontified t)) . -37110) (undo-tree-id195 . -1) (undo-tree-id196 . -1) 37109 (t 26716 6069 150731 261000)) nil (26716 6095 375198 930000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 37110)) nil (26716 6095 375197 668000) 0 nil])
([nil nil ((37079 . 37080)) nil (26716 6095 375197 257000) 0 nil])
([nil nil ((37080 . 37165) (#("https://www.nationalbank.kz/ru/news/vneshniy-dolg" 0 31 (fontified t) 31 49 (fontified t)) . -37080) (undo-tree-id187 . -31) (undo-tree-id188 . -31) (undo-tree-id189 . 49) (undo-tree-id190 . -48) (undo-tree-id191 . -31) (undo-tree-id192 . -31) (undo-tree-id193 . -30) (undo-tree-id194 . -48) 37129) nil (26716 6095 375196 586000) 0 nil])
([nil nil ((37165 . 37166)) nil (26716 6095 375191 286000) 0 nil])
([nil nil ((#("K" 0 1 (fontified t)) . 37078)) nil (26716 6095 375190 765000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 37078) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1)) nil (26716 6095 375187 228000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -37164) (37163 . 37164) 37078 (t 26716 6095 377566 339000)) nil (26716 6112 17382 642000) 0 nil])
([nil nil ((#("К" 0 1 (fontified t)) . 33862)) nil (26716 6112 17381 671000) 0 nil])
([nil nil ((33862 . 33947) (#("https://www.nationalbank.kz/ru/news/vneshniy-dolg" 0 49 (fontified t)) . -33862) (undo-tree-id197 . -48) (undo-tree-id198 . -48) 33911) nil (26716 6112 17380 999000) 0 nil])
([nil nil ((33947 . 33948)) nil (26716 6112 17368 696000) 0 nil])
([nil nil ((33947 . 33948) (#(" " 0 1 (fontified t)) . 33947) (t 26716 6112 19461 474000)) nil (26716 6124 78980 203000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -34083) (34082 . 34083) (#(" " 0 1 (fontified nil)) . -34016) (34015 . 34016) (34114 . 34115) (#("
" 0 1 (fontified t)) . 34114) (34042 . 34043) (#("
" 0 1 (fontified t)) . 34042) (33965 . 33966) (#("
" 0 1 (fontified t)) . 33965) 34115) nil (26716 6124 78975 975000) 0 nil])
([nil nil ((37553 . 37572) (39126 . 39143) 37553 (t 26716 6124 81385 363000)) nil (26716 6166 524283 517000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 37713) (undo-tree-id218 . -1) (undo-tree-id219 . -1)) nil (26716 6166 524283 46000) 0 nil])
([nil nil ((#("\\href{mailto:" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 13 (face tex-verbatim fontified t)) . 37850) (undo-tree-id217 . -12)) nil (26716 6166 524282 215000) 0 nil])
([nil nil ((#("}{}" 0 3 (fontified t)) . 37875) (undo-tree-id216 . -2)) nil (26716 6166 524281 774000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 38011) (undo-tree-id214 . -1) (undo-tree-id215 . -1)) nil (26716 6166 524281 243000) 0 nil])
([nil nil ((#("\\href{mailto:" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 13 (face tex-verbatim fontified t)) . 38119) (undo-tree-id213 . -12)) nil (26716 6166 524280 412000) 0 nil])
([nil nil ((#("}{}" 0 3 (fontified t)) . 38140) (undo-tree-id212 . -2)) nil (26716 6166 524279 600000) 0 nil])
([nil nil ((38123 . 38124)) nil (26716 6166 524279 79000) 0 nil])
([nil nil ((38130 . 38131)) nil (26716 6166 524278 839000) 0 nil])
([nil nil ((#("\\href{mailto:" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 13 (face tex-verbatim fontified t)) . 38288) (undo-tree-id211 . -12)) nil (26716 6166 524278 448000) 0 nil])
([nil nil ((#("}{}" 0 3 (fontified t)) . 38308) (undo-tree-id210 . -2)) nil (26716 6166 524277 296000) 0 nil])
([nil nil ((38308 . 38309) (#("," 0 1 (fontified t)) . 38308)) nil (26716 6166 524276 825000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . 38308)) nil (26716 6166 524276 584000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 38466) (undo-tree-id209 . -1)) nil (26716 6166 524276 384000) 0 nil])
([nil nil ((#("\\href{mailto:" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 13 (face tex-verbatim fontified t)) . 38592) (undo-tree-id208 . -12)) nil (26716 6166 524275 833000) 0 nil])
([nil nil ((#("}{}" 0 3 (fontified t)) . 38617) (undo-tree-id207 . -2)) nil (26716 6166 524275 272000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 38771) (undo-tree-id206 . -1)) nil (26716 6166 524274 631000) 0 nil])
([nil nil ((#("\\href{mailto:" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 13 (face tex-verbatim fontified t)) . 38869) (undo-tree-id205 . -12)) nil (26716 6166 524274 10000) 0 nil])
([nil nil ((#("}{}" 0 3 (fontified t)) . 38890) (undo-tree-id204 . -2)) nil (26716 6166 524273 318000) 0 nil])
([nil nil ((38873 . 38874)) nil (26716 6166 524272 467000) 0 nil])
([nil nil ((38880 . 38881)) nil (26716 6166 524271 455000) 0 nil])
([nil nil ((#("\\href{mailto:" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 13 (face tex-verbatim fontified t)) . 39026) (undo-tree-id202 . -12) (undo-tree-id203 . -13)) nil (26716 6166 524270 633000) 0 nil])
([nil nil ((#("}{}\\" 0 4 (fontified t)) . 39046) (undo-tree-id199 . -3) (undo-tree-id200 . -4) (undo-tree-id201 . -4)) nil (26716 6169 674380 615000) 0 nil])
([nil nil ((38868 . 38869) (#("
" 0 1 (fontified t)) . -38868) (undo-tree-id226 . -1) (undo-tree-id227 . -1) 38860 (t 26716 6166 527116 838000)) nil (26716 6192 525869 293000) 0 nil] [nil nil ((39025 . 39026) (#("
" 0 1 (fontified t)) . -39025) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) 38987 (t 26716 6166 527116 838000)) ((39025 . 39026) (#(" " 0 1 (fontified t)) . 39025)) (26716 6169 674098 537000) 0 nil])
([nil nil ((38770 . 38771)) nil (26716 6192 525859 876000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 38789 . 38790) (nil fontified nil 38771 . 38790) (38771 . 38790) 38770) nil (26716 6215 938153 961000) 0 nil])
([nil nil ((nil rear-nonsticky nil 38029 . 38030) (nil fontified nil 38010 . 38030) (38010 . 38030) 38009 (t 26716 6192 528951 811000)) nil (26716 6224 498656 88000) 0 nil] [nil nil ((#(" vipforever@mail.ru;" 0 1 (fontified t) 1 19 (fontified t) 19 20 (rear-nonsticky t fontified t)) . 38770) (undo-tree-id228 . -1) (undo-tree-id229 . -19) (undo-tree-id230 . -1) (undo-tree-id231 . -19) (undo-tree-id232 . -19) (undo-tree-id233 . -19) (undo-tree-id234 . -19) (undo-tree-id235 . -19) (undo-tree-id236 . -19) (undo-tree-id237 . -19) (undo-tree-id238 . -19) (undo-tree-id239 . -19) (undo-tree-id240 . -19) (undo-tree-id241 . -19) (undo-tree-id242 . -19) (undo-tree-id243 . -19) (undo-tree-id244 . -19) (undo-tree-id245 . -19) (undo-tree-id246 . -18) (undo-tree-id247 . -18) (undo-tree-id248 . -18) (undo-tree-id249 . -18) (undo-tree-id250 . -18) (undo-tree-id251 . -18) (undo-tree-id252 . -18) (undo-tree-id253 . -18) (undo-tree-id254 . -18) (undo-tree-id255 . -18) (undo-tree-id256 . -17) (undo-tree-id257 . -17) (undo-tree-id258 . -17) (undo-tree-id259 . -17) (undo-tree-id260 . -17) (undo-tree-id261 . -16) (undo-tree-id262 . -16) (undo-tree-id263 . -16) (undo-tree-id264 . -16) (undo-tree-id265 . -16) (undo-tree-id266 . -15) (undo-tree-id267 . -15) (undo-tree-id268 . -15) (undo-tree-id269 . -15) (undo-tree-id270 . -15) (undo-tree-id271 . -14) (undo-tree-id272 . -14) (undo-tree-id273 . -14) (undo-tree-id274 . -14) (undo-tree-id275 . -14) (undo-tree-id276 . -13) (undo-tree-id277 . -13) (undo-tree-id278 . -13) (undo-tree-id279 . -13) (undo-tree-id280 . -13) (undo-tree-id281 . -12) (undo-tree-id282 . -12) (undo-tree-id283 . -12) (undo-tree-id284 . -12) (undo-tree-id285 . -12) (undo-tree-id286 . -11) (undo-tree-id287 . -11) (undo-tree-id288 . -11) (undo-tree-id289 . -11) (undo-tree-id290 . -11) (undo-tree-id291 . -10) (undo-tree-id292 . -10) (undo-tree-id293 . -10) (undo-tree-id294 . -10) (undo-tree-id295 . -10) (undo-tree-id296 . -9) (undo-tree-id297 . -9) (undo-tree-id298 . -9) (undo-tree-id299 . -9) (undo-tree-id300 . -9) (undo-tree-id301 . -8) (undo-tree-id302 . -8) (undo-tree-id303 . -8) (undo-tree-id304 . -8) (undo-tree-id305 . -8) (undo-tree-id306 . -7) (undo-tree-id307 . -7) (undo-tree-id308 . -7) (undo-tree-id309 . -7) (undo-tree-id310 . -7) (undo-tree-id311 . -6) (undo-tree-id312 . -6) (undo-tree-id313 . -6) (undo-tree-id314 . -6) (undo-tree-id315 . -6) (undo-tree-id316 . -5) (undo-tree-id317 . -5) (undo-tree-id318 . -5) (undo-tree-id319 . -5) (undo-tree-id320 . -5) (undo-tree-id321 . -4) (undo-tree-id322 . -4) (undo-tree-id323 . -4) (undo-tree-id324 . -4) (undo-tree-id325 . -4) (undo-tree-id326 . -3) (undo-tree-id327 . -3) (undo-tree-id328 . -3) (undo-tree-id329 . -3) (undo-tree-id330 . -3) (undo-tree-id331 . -2) (undo-tree-id332 . -2) (undo-tree-id333 . -2) (undo-tree-id334 . -2) (undo-tree-id335 . -2) (undo-tree-id336 . -2) (undo-tree-id337 . -2) (undo-tree-id338 . -2) (undo-tree-id339 . -2) (undo-tree-id340 . -2) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -20) (undo-tree-id357 . -20) (t 26716 6192 528951 811000)) ((38770 . 38790)) (26716 6215 937878 856000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -38011) (38010 . 38011) 38029) nil (26716 6224 498652 91000) 0 nil])
nil
([nil nil ((37712 . 37713) (t 26716 6224 501748 344000)) nil (26716 6237 543300 833000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37729 . 37730) (nil fontified nil 37713 . 37730) (37713 . 37730) 37712) nil (26716 6237 543300 453000) 0 nil])
([nil nil ((38503 . 38504)) nil (26716 6237 543299 841000) 0 nil])
([nil nil ((nil rear-nonsticky nil 38520 . 38521) (nil fontified nil 38504 . 38521) (38504 . 38521) 38503) nil (26716 6237 543296 676000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 34255) (undo-tree-id364 . -15) (t 26716 6237 545665 167000)) nil (26716 17518 378755 715000) 0 nil])
([nil nil ((#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 21 (fontified t)) . 31060) (undo-tree-id358 . -20) (undo-tree-id359 . -21) (undo-tree-id360 . -21) (undo-tree-id361 . -21) (undo-tree-id362 . -21) (undo-tree-id363 . -21)) nil (26716 17518 378754 843000) 0 nil])
([nil nil ((31060 . 31079) (34234 . 34251)) nil (26716 17518 378743 933000) 0 nil])
([nil nil ((34323 . 34342) (37551 . 37568)) nil (26716 17518 378740 777000) 0 nil])
([nil nil ((243 . 288) (t 26716 51261 434280 712000)) nil (26718 12611 332922 591000) 0 nil])
([nil nil ((322 . 367) 321) nil (26718 12611 332922 270000) 0 nil])
([nil nil ((431 . 476)) nil (26718 12611 332922 40000) 0 nil])
([nil nil ((513 . 558)) nil (26718 12611 332921 699000) 0 nil])
([nil nil ((592 . 637) 591) nil (26718 12611 332917 291000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14276 . 14277) (#("
" 0 1 (fontified nil)) . -14547) (14276 . 14548) (t 26718 12611 336137 421000)) nil (26718 12734 972759 527000) 0 nil])
([nil nil ((nil fontified t 14528 . 14529) (nil face (italic) 14528 . 14529) (#("8" 0 1 (face (italic) fontified t)) . 14528) (14529 . 14530) 14528) nil (26718 12734 972759 136000) 0 nil])
([nil nil ((nil fontified t 14529 . 14530) (nil face (italic) 14529 . 14530) (#("9" 0 1 (face (italic) fontified t)) . 14528) (14529 . 14531) 14528) nil (26718 12734 972758 515000) 0 nil])
([nil nil ((#("Рис.2 - Мировая доля рынка вертикального фермерство, млрд долларов США" 0 69 (fontified t) 69 70 (fontified t rear-nonsticky t)) . 14378) (undo-tree-id87 . -69) (undo-tree-id88 . -67) 14445) nil (26718 12734 972758 144000) 0 nil])
([nil nil ((#("{\\bfseries Рис.1 - Внешний долг РК, включая межфирменную задолженность, в 2014-2023 годы, млрд долл. США / \\% от ВВП}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 107 (face (bold) fontified t) 107 109 (face (font-lock-keyword-face bold) fontified t) 109 116 (face (bold) fontified t) 116 117 (fontified t)) . -14479) (undo-tree-id6 . -14) (undo-tree-id7 . -14) (undo-tree-id8 . -14) (undo-tree-id9 . -14) (undo-tree-id10 . -14) (undo-tree-id11 . -14) (undo-tree-id12 . -14) (undo-tree-id13 . -14) (undo-tree-id14 . -14) (undo-tree-id15 . -14) (undo-tree-id16 . -14) (undo-tree-id17 . -14) (undo-tree-id18 . -14) (undo-tree-id19 . -14) (undo-tree-id20 . -14) (undo-tree-id21 . -14) (undo-tree-id22 . -14) (undo-tree-id23 . -14) (undo-tree-id24 . -14) (undo-tree-id25 . -14) (undo-tree-id26 . -14) (undo-tree-id27 . -14) (undo-tree-id28 . -14) (undo-tree-id29 . -14) (undo-tree-id30 . -14) (undo-tree-id31 . -14) (undo-tree-id32 . -14) (undo-tree-id33 . -14) (undo-tree-id34 . -14) (undo-tree-id35 . -14) (undo-tree-id36 . -14) (undo-tree-id37 . -14) (undo-tree-id38 . -14) (undo-tree-id39 . -14) (undo-tree-id40 . -14) (undo-tree-id41 . -14) (undo-tree-id42 . -14) (undo-tree-id43 . -14) (undo-tree-id44 . -14) (undo-tree-id45 . -14) (undo-tree-id46 . -14) (undo-tree-id47 . -14) (undo-tree-id48 . -14) (undo-tree-id49 . -14) (undo-tree-id50 . -14) (undo-tree-id51 . -14) (undo-tree-id52 . -14) (undo-tree-id53 . -14) (undo-tree-id54 . -14) (undo-tree-id55 . -14) (undo-tree-id56 . -14) (undo-tree-id57 . -14) (undo-tree-id58 . -14) (undo-tree-id59 . -14) (undo-tree-id60 . -14) (undo-tree-id61 . -14) (undo-tree-id62 . -14) (undo-tree-id63 . -14) (undo-tree-id64 . -14) (undo-tree-id65 . -14) (undo-tree-id66 . -14) (undo-tree-id67 . -14) (undo-tree-id68 . -14) (undo-tree-id69 . -14) (undo-tree-id70 . -14) (undo-tree-id71 . -14) (undo-tree-id72 . -14) (undo-tree-id73 . -14) (undo-tree-id74 . -14) (undo-tree-id75 . -14) (undo-tree-id76 . -14) (undo-tree-id77 . -14) (undo-tree-id78 . -14) (undo-tree-id79 . -14) (undo-tree-id80 . -14) (undo-tree-id81 . -14) (undo-tree-id82 . -14) (undo-tree-id83 . -14) (undo-tree-id84 . -14) (undo-tree-id85 . -14) (undo-tree-id86 . -14) 14597) nil (26718 12734 972756 281000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14482 . 14483) (nil fontified nil 14378 . 14483) (14378 . 14483)) nil (26718 12734 972663 876000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14584) (undo-tree-id4 . -1) (undo-tree-id5 . -1)) nil (26718 12734 972663 25000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14584) (undo-tree-id2 . 1) (undo-tree-id3 . -1)) nil (26718 12734 972661 943000) 0 nil])
([nil nil ((#("\\emph{Примечание - Составлено по источнику {[}10{]}}
" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 26 (face (italic) fontified t) 26 51 (face (italic) fontified t) 51 52 (fontified t) 52 53 (fontified t)) . 14584) (undo-tree-id0 . -52) (undo-tree-id1 . 53)) nil (26718 12734 972660 891000) 0 nil])
([nil nil ((nil fontified t 14363 . 14365) (nil face font-lock-builtin-face 14363 . 14365) (#("11" 0 2 (face font-lock-builtin-face fontified t)) . 14363) (14365 . 14367) 14364) nil (26718 12734 972641 424000) 0 nil])
([nil nil ((nil fontified t 14333 . 14334) (#("5" 0 1 (fontified t)) . 14333) (14334 . 14335) 14333) nil (26718 12734 972640 843000) 0 nil])
([nil nil ((nil fontified t 14333 . 14334) (#("6" 0 1 (fontified t)) . 14333) (14334 . 14335) 14333) nil (26718 12734 972640 232000) 0 nil])
([nil nil ((nil fontified t 14333 . 14334) (#("7" 0 1 (fontified t)) . 14333) (14334 . 14335) 14333) nil (26718 12734 972636 314000) 0 nil])
([nil nil ((#("
Внешний долг РК, включая межфирменную задолженность, за период 2014-2023
годы в абсолютном выражении вырос со 157,1 млрд тенге в 2014 году до
163,6 млрд тенге в 2023 году (рост 4,1\\%). В то время как его доля в ВВП
уменьшилась с 71,0\\% в 2014 году до 62,7\\% в 2023 году (рисунок 1). Хотя
это не критичный уровень по международным стандартам, рост внешнего
долга в номинальном выражении вызывает опасения для структуры экономики
с сырьевой направленностью, зависящей от волатильности цен на сырье.
" 0 181 (fontified t) 181 183 (face font-lock-keyword-face fontified t) 183 234 (fontified t) 234 236 (face font-lock-keyword-face fontified t) 236 256 (fontified t) 256 258 (face font-lock-keyword-face fontified t) 258 498 (fontified t)) . 13762) (undo-tree-id90 . -429) (undo-tree-id91 . -498) (undo-tree-id92 . -498) (undo-tree-id93 . -497) (undo-tree-id94 . -429) (undo-tree-id95 . -289) (undo-tree-id96 . -289) (undo-tree-id97 . -289) (undo-tree-id98 . -289) (undo-tree-id99 . -289) (undo-tree-id100 . -289) (undo-tree-id101 . -289) (undo-tree-id102 . -289) (undo-tree-id103 . -289) (undo-tree-id104 . -289) (undo-tree-id105 . -289) (undo-tree-id106 . -289) (undo-tree-id107 . -289) (undo-tree-id108 . -289) (undo-tree-id109 . -289) (undo-tree-id110 . -289) (undo-tree-id111 . -289) (undo-tree-id112 . -289) (undo-tree-id113 . -289) (undo-tree-id114 . -289) (undo-tree-id115 . -357) (undo-tree-id116 . -357) (undo-tree-id117 . -357) (undo-tree-id118 . -357) (undo-tree-id119 . -357) (undo-tree-id120 . -357) (undo-tree-id121 . -357) (undo-tree-id122 . -357) (undo-tree-id123 . -357) (undo-tree-id124 . -357) (undo-tree-id125 . -357) (undo-tree-id126 . -357) (undo-tree-id127 . -357) (undo-tree-id128 . -357) (undo-tree-id129 . -357) (undo-tree-id130 . -357) (undo-tree-id131 . -357) (undo-tree-id132 . -357) (undo-tree-id133 . -357) (undo-tree-id134 . -357) (undo-tree-id135 . -429) (undo-tree-id136 . -429) (undo-tree-id137 . -429) (undo-tree-id138 . -429) (undo-tree-id139 . -429) (undo-tree-id140 . -429) (undo-tree-id141 . -429) (undo-tree-id142 . -429) (undo-tree-id143 . -429) (undo-tree-id144 . -429) (undo-tree-id145 . -429) (undo-tree-id146 . -429) (undo-tree-id147 . -429) (undo-tree-id148 . -429) (undo-tree-id149 . -429) (undo-tree-id150 . -429) (undo-tree-id151 . -429) (undo-tree-id152 . -429) (undo-tree-id153 . -429) (undo-tree-id154 . -429) (undo-tree-id155 . -429) (undo-tree-id156 . -429) (undo-tree-id157 . -429) (undo-tree-id158 . -498) 14191 (t 26718 12734 976223 340000)) nil (26718 12758 558420 106000) 0 nil])
([nil nil ((14107 . 14108) 14087) nil (26718 12758 558353 550000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14107 . 14108) (#("
" 0 1 (fontified nil)) . -14605) (14107 . 14606) 14087) nil (26718 12758 558353 29000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14108) (undo-tree-id89 . -1)) nil (26718 12758 558349 412000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14983 . 14984) (#("
" 0 1 (fontified nil)) . -15290) (14983 . 15291) (t 26718 12758 562423 510000)) nil (26718 12784 48711 431000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15410) (undo-tree-id214 . -1)) nil (26718 12870 963239 206000) 0 nil])
([nil nil ((14984 . 15292) (#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ekon4/image12}
	\\caption*{Рис.1 - Внешний долг РК, включая межфирменную задолженность, в 2014-2023 годы, млрд долл. США / \\% от ВВП}
	\\caption*{\\normalfont\\emph{Примечание -- составлено авторами на основании {[}10{]}}}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 10 (face font-lock-function-name-face fontified t latex-env-pair t) 10 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 56 (fontified t) 56 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 88 (face font-lock-builtin-face fontified t) 88 90 (fontified t) 90 91 (fontified t) 91 100 (face font-lock-keyword-face fontified t) 100 101 (fontified t) 101 197 (fontified t) 197 199 (face font-lock-keyword-face fontified t) 199 205 (fontified t) 205 206 (fontified t rear-nonsticky t) 206 207 (fontified t) 207 208 (fontified t) 208 209 (fontified t rear-nonsticky t) 209 218 (face font-lock-keyword-face fontified t) 218 219 (fontified t) 219 230 (face font-lock-keyword-face fontified t) 230 235 (face font-lock-keyword-face fontified t) 235 236 (fontified t) 236 286 (face (italic) fontified t) 286 288 (face (italic) fontified t) 288 291 (face (italic) fontified t) 291 292 (fontified t rear-nonsticky t) 292 293 (fontified t) 293 294 (fontified t) 294 298 (face font-lock-keyword-face fontified t) 298 299 (fontified t latex-env-pair t) 299 305 (face font-lock-function-name-face fontified t latex-env-pair t) 305 306 (fontified t latex-env-pair t) 306 307 (fontified t)) . 14984) (undo-tree-id600 . -307) (undo-tree-id601 . -306) (undo-tree-id602 . -294) (undo-tree-id603 . -294) (undo-tree-id604 . -294) (undo-tree-id605 . -294) (undo-tree-id606 . -307) (undo-tree-id607 . -307) (undo-tree-id608 . -206) (undo-tree-id609 . -206) (undo-tree-id610 . -307)) nil (26718 12887 727014 371000) 0 nil] [nil nil ((#("\\emph{Примечание - Составлено по источнику {[}10{]}}
" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 51 (face (italic) fontified t) 51 52 (fontified t) 52 53 (fontified t)) . 15410) (undo-tree-id213 . -52)) ((15410 . 15463)) (26718 12870 193203 87000) 0 nil])
([nil nil ((#("{\\bfseries Рис.2 - Внешний долг РК, исключая межфирменную задолженность, в 2014-2023 годы, млрд долл. США / \\% от ВВП}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 108 (face (bold) fontified t) 108 110 (face (font-lock-keyword-face bold) fontified t) 110 117 (face (bold) fontified t) 117 118 (fontified t) 118 119 (fontified t)) . 15292) (undo-tree-id596 . -118) (undo-tree-id597 . 119) (undo-tree-id598 . -119) (undo-tree-id599 . -22) 15314) nil (26718 12887 727011 345000) 0 nil])
([nil nil ((#("{\\bfseries Рис.2 - Внешний долг РК, исключая межфирменную задолженность, в 2014-2023 годы, млрд долл. США / \\% от ВВП}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 108 (face (bold) fontified t) 108 110 (face (font-lock-keyword-face bold) fontified t) 110 117 (face (bold) fontified t) 117 118 (fontified t)) . -15291) 15410) ((15291 . 15409)) (26718 12869 550165 722000) 0 nil])
([nil nil ((#("Примечание -- составлено авторами на основании {[}10{]}" 0 50 (face (italic) fontified t) 50 52 (face (italic) fontified t) 52 55 (face (italic) fontified t)) . 15221) (undo-tree-id594 . -54) (undo-tree-id595 . -5) 15226) nil (26718 12887 727009 462000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15190 . 15191) (nil fontified nil 15085 . 15191) (15085 . 15191) (#("Рис.1 - Внешний долг РК, включая межфирменную задолженность, в 2014-2023 годы, млрд долл. США / \\% от ВВП" 0 96 (fontified t) 96 98 (face font-lock-keyword-face fontified t) 98 104 (fontified t) 104 105 (fontified t rear-nonsticky t)) . 15085) (undo-tree-id159 . -105) (undo-tree-id160 . -104) (undo-tree-id161 . -104) (undo-tree-id163 . -4) (undo-tree-id165 . -4) (undo-tree-id167 . -4) (undo-tree-id169 . -4) (undo-tree-id171 . -4) (undo-tree-id173 . -4) (undo-tree-id175 . -4) (undo-tree-id177 . -4) (undo-tree-id179 . -4) (undo-tree-id181 . -4) (undo-tree-id183 . -4) (undo-tree-id185 . -4) (undo-tree-id187 . -104) (undo-tree-id189 . -104) (undo-tree-id191 . -104) (undo-tree-id193 . -104) (undo-tree-id195 . -104) (undo-tree-id197 . -104) (undo-tree-id199 . -104) (undo-tree-id201 . -104) (undo-tree-id203 . -104) (undo-tree-id205 . -104) (undo-tree-id207 . -104) (undo-tree-id208 . -104) (undo-tree-id210 . -104) (undo-tree-id212 . -105) 15190) ((15085 . 15190) (#("Рис.2 - Внешний долг РК, исключая межфирменную задолженность, в 2014-2023 годы, млрд долл. США / \\% от ВВП" 0 97 (fontified nil) 97 99 (face font-lock-keyword-face fontified nil) 99 105 (fontified nil) 105 106 (rear-nonsticky nil fontified nil)) . 15085) (undo-tree-id314 . -85) (undo-tree-id315 . -85) (undo-tree-id316 . -85) (undo-tree-id317 . -85) (undo-tree-id318 . -85) (undo-tree-id319 . -85) (nil rear-nonsticky t 15190 . 15191)) (26718 12869 248584 942000) 0 nil])
([nil nil ((#("Примечание - Составлено по источнику {[}10{]}" 0 45 (face (italic) fontified t)) . 15243) (undo-tree-id494 . -44) (undo-tree-id495 . -25) (undo-tree-id496 . -25) (undo-tree-id497 . -25) (undo-tree-id498 . -25) (undo-tree-id499 . -25) (undo-tree-id500 . -25) (undo-tree-id501 . -25) (undo-tree-id502 . -25) (undo-tree-id503 . -25) (undo-tree-id504 . -25) (undo-tree-id505 . -25) (undo-tree-id506 . -25) (undo-tree-id507 . -25) (undo-tree-id508 . -25) (undo-tree-id509 . -25) (undo-tree-id510 . -25) (undo-tree-id511 . -25) (undo-tree-id512 . -25) (undo-tree-id513 . -25) (undo-tree-id514 . -25) (undo-tree-id515 . -25) (undo-tree-id516 . -25) (undo-tree-id517 . -25) (undo-tree-id518 . -25) (undo-tree-id519 . -25) (undo-tree-id520 . -25) (undo-tree-id521 . -25) (undo-tree-id522 . -25) (undo-tree-id523 . -25) (undo-tree-id524 . -25) (undo-tree-id525 . -25) (undo-tree-id526 . -25) (undo-tree-id527 . -25) (undo-tree-id528 . -25) (undo-tree-id529 . -25) (undo-tree-id530 . -25) (undo-tree-id531 . -25) (undo-tree-id532 . -25) (undo-tree-id533 . -25) (undo-tree-id534 . -25) (undo-tree-id535 . -25) (undo-tree-id536 . -25) (undo-tree-id537 . -25) (undo-tree-id538 . -25) (undo-tree-id539 . -25) (undo-tree-id540 . -25) (undo-tree-id541 . -25) (undo-tree-id542 . -25) (undo-tree-id543 . -25) (undo-tree-id544 . -25) (undo-tree-id545 . -25) (undo-tree-id546 . -25) (undo-tree-id547 . -25) (undo-tree-id548 . -25) (undo-tree-id549 . -25) (undo-tree-id550 . -25) (undo-tree-id551 . -25) (undo-tree-id552 . -25) (undo-tree-id553 . -25) (undo-tree-id554 . -25) (undo-tree-id555 . -25) (undo-tree-id556 . -25) (undo-tree-id557 . -25) (undo-tree-id558 . -25) (undo-tree-id559 . -25) (undo-tree-id560 . -25) (undo-tree-id561 . -25) (undo-tree-id562 . -25) (undo-tree-id563 . -25) (undo-tree-id564 . -25) (undo-tree-id565 . -25) (undo-tree-id566 . -25) (undo-tree-id567 . -25) (undo-tree-id568 . -25) (undo-tree-id569 . -25) (undo-tree-id570 . -25) (undo-tree-id571 . -25) (undo-tree-id572 . -25) (undo-tree-id573 . -25) (undo-tree-id574 . -25) (undo-tree-id575 . -25) (undo-tree-id576 . -25) (undo-tree-id577 . -25) (undo-tree-id578 . -25) (undo-tree-id579 . -25) (undo-tree-id580 . -25) (undo-tree-id581 . -25) (undo-tree-id582 . -25) (undo-tree-id583 . -25) (undo-tree-id584 . -25) (undo-tree-id585 . -25) (undo-tree-id586 . -25) (undo-tree-id587 . -25) (undo-tree-id588 . -25) (undo-tree-id589 . -25) (undo-tree-id590 . -25) (undo-tree-id591 . -25) (undo-tree-id592 . -25) (undo-tree-id593 . -45) 15268) nil (26718 12887 727007 468000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15292)) ((15292 . 15293) (t 26718 12787 384665 385000)) (26718 12867 215831 309000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15265 . 15266) (nil fontified nil 15221 . 15266) (15221 . 15266)) nil (26718 12887 726981 830000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20069 . 20070) (#("
" 0 1 (fontified nil)) . -20377) (20069 . 20378) (t 26718 12787 384665 385000)) ((#("
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ekon4/image12}
	\\caption*{Рис.2 - Внешний долг РК, исключая межфирменную задолженность, в 2014-2023 годы, млрд долл. США / \\% от ВВП}
	\\caption*{\\normalfont\\emph{Примечание -- составлено авторами на основании {[}10{]}}}
\\end{figure}
" 0 1 (rear-nonsticky nil fontified nil) 1 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil latex-env-pair t) 8 11 (face font-lock-function-name-face fontified nil latex-env-pair t) 11 14 (face font-lock-function-name-face fontified nil latex-env-pair t) 14 15 (fontified nil latex-env-pair t) 15 18 (fontified nil) 18 19 (fontified nil) 19 20 (fontified t) 20 30 (face font-lock-keyword-face fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 48 (face font-lock-keyword-face fontified t) 48 57 (fontified t) 57 58 (fontified t) 58 68 (face font-lock-keyword-face fontified t) 68 70 (fontified t) 70 87 (face font-lock-builtin-face fontified t) 87 89 (face font-lock-builtin-face fontified t) 89 91 (fontified t) 91 92 (fontified t) 92 101 (face font-lock-keyword-face fontified t) 101 102 (fontified t) 102 199 (fontified t) 199 201 (face font-lock-keyword-face fontified t) 201 207 (fontified t) 207 208 (fontified t rear-nonsticky t) 208 209 (fontified t) 209 210 (fontified t) 210 211 (fontified t rear-nonsticky t) 211 220 (face font-lock-keyword-face fontified t) 220 221 (fontified t) 221 232 (face font-lock-keyword-face fontified t) 232 237 (face font-lock-keyword-face fontified t) 237 238 (fontified t) 238 288 (face (italic) fontified t) 288 290 (face (italic) fontified t) 290 293 (face (italic) fontified t) 293 294 (fontified t rear-nonsticky t) 294 295 (fontified t) 295 296 (fontified t) 296 300 (face font-lock-keyword-face fontified nil) 300 301 (fontified nil latex-env-pair t) 301 307 (face font-lock-function-name-face fontified nil latex-env-pair t) 307 308 (fontified nil latex-env-pair t) 308 309 (fontified nil)) . 20069) (undo-tree-id258 . -187) (undo-tree-id259 . -187) (undo-tree-id260 . -187) (undo-tree-id261 . -187) (undo-tree-id262 . -187) (undo-tree-id263 . -187) (undo-tree-id264 . -187) (undo-tree-id265 . -187) (undo-tree-id266 . -187) (undo-tree-id267 . -187) (undo-tree-id268 . -187) (undo-tree-id269 . -187) (undo-tree-id270 . -187) (undo-tree-id271 . -187) (undo-tree-id272 . -187) (undo-tree-id273 . -187) (undo-tree-id274 . -187) (undo-tree-id275 . -187) (undo-tree-id276 . -187) (undo-tree-id277 . -187) (undo-tree-id278 . -187) (undo-tree-id279 . -187) (undo-tree-id280 . -187) (undo-tree-id281 . -187) (undo-tree-id282 . -187) (undo-tree-id283 . -187) (undo-tree-id284 . -187) (undo-tree-id285 . -187) (undo-tree-id286 . -187) (undo-tree-id287 . -187) (undo-tree-id288 . -187) (undo-tree-id289 . -187) (undo-tree-id290 . -187) (undo-tree-id291 . -187) (undo-tree-id292 . -187) (undo-tree-id293 . -187) (undo-tree-id294 . -187) (undo-tree-id295 . -187) (undo-tree-id296 . -91) (undo-tree-id297 . -187) (undo-tree-id298 . -187) (undo-tree-id299 . -187) (undo-tree-id300 . -187) (undo-tree-id301 . -187) (undo-tree-id302 . -187) (undo-tree-id303 . -187) (undo-tree-id304 . -187) (undo-tree-id305 . -187) (undo-tree-id306 . -187) (undo-tree-id307 . -187) (undo-tree-id308 . -187) (undo-tree-id309 . -187) (undo-tree-id310 . -187) (undo-tree-id311 . -187) (undo-tree-id312 . -187) (undo-tree-id313 . -187) (20377 . 20378) (nil rear-nonsticky t 20069 . 20070)) (26718 12864 367028 638000) 0 nil])
([nil nil ((#("\\emph{}
" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 15282) (undo-tree-id320 . -7) (undo-tree-id321 . 8) (undo-tree-id322 . -6) (undo-tree-id323 . -6) (undo-tree-id324 . -6) (undo-tree-id325 . -6) (undo-tree-id326 . -6) (undo-tree-id327 . -6) (undo-tree-id328 . -6) (undo-tree-id329 . -6) (undo-tree-id330 . -6) (undo-tree-id331 . -6) (undo-tree-id332 . -6) (undo-tree-id333 . -6) (undo-tree-id334 . -6) (undo-tree-id335 . -6) (undo-tree-id336 . -6) (undo-tree-id337 . -6) (undo-tree-id338 . -6) (undo-tree-id339 . -6) (undo-tree-id340 . -6) (undo-tree-id341 . -6) (undo-tree-id342 . -6) (undo-tree-id343 . -6) (undo-tree-id344 . -6) (undo-tree-id345 . -6) (undo-tree-id346 . -6) (undo-tree-id347 . -6) (undo-tree-id348 . -6) (undo-tree-id349 . -6) (undo-tree-id350 . -6) (undo-tree-id351 . -6) (undo-tree-id352 . -6) (undo-tree-id353 . -6) (undo-tree-id354 . -6) (undo-tree-id355 . -6) (undo-tree-id356 . -6) (undo-tree-id357 . -6) (undo-tree-id358 . -6) (undo-tree-id359 . -6) (undo-tree-id360 . -6) (undo-tree-id361 . -6) (undo-tree-id362 . -6) (undo-tree-id363 . -6) (undo-tree-id364 . -6) (undo-tree-id365 . -6) (undo-tree-id366 . -6) (undo-tree-id367 . -6) (undo-tree-id368 . -6) (undo-tree-id369 . -6) (undo-tree-id370 . -6) (undo-tree-id371 . -6) (undo-tree-id372 . -6) (undo-tree-id373 . -6) (undo-tree-id374 . -6) (undo-tree-id375 . -6) (undo-tree-id376 . -6) (undo-tree-id377 . -6) (undo-tree-id378 . -6) (undo-tree-id379 . -6) (undo-tree-id380 . -6) (undo-tree-id381 . -6) (undo-tree-id382 . -6) (undo-tree-id383 . -6) (undo-tree-id384 . -6) (undo-tree-id385 . -6) (undo-tree-id386 . -8) (undo-tree-id387 . -8) (undo-tree-id388 . -8) (undo-tree-id389 . -8) (undo-tree-id390 . -8) (undo-tree-id391 . -8) (undo-tree-id392 . -8) (undo-tree-id393 . -8) (undo-tree-id394 . -8) (undo-tree-id395 . -8) (undo-tree-id396 . -8) (undo-tree-id397 . -8) (undo-tree-id398 . -8) (undo-tree-id399 . -8) (undo-tree-id400 . -8) (undo-tree-id401 . -8) (undo-tree-id402 . -8) (undo-tree-id403 . -6) (undo-tree-id404 . -6) (undo-tree-id405 . -6) (undo-tree-id406 . -6) (undo-tree-id407 . -6) (undo-tree-id408 . -6) (undo-tree-id409 . -6) (undo-tree-id410 . -6) (undo-tree-id411 . -6) (undo-tree-id412 . -6) (undo-tree-id413 . -6) (undo-tree-id414 . -6) (undo-tree-id415 . -6) (undo-tree-id416 . -6) (undo-tree-id417 . -6) (undo-tree-id418 . -6) (undo-tree-id419 . -6) (undo-tree-id420 . -6) (undo-tree-id421 . -6) (undo-tree-id422 . -6) (undo-tree-id423 . -6) (undo-tree-id424 . -6) (undo-tree-id425 . -6) (undo-tree-id426 . -6) (undo-tree-id427 . -6) (undo-tree-id428 . -6) (undo-tree-id429 . -6) (undo-tree-id430 . -6) (undo-tree-id431 . -6) (undo-tree-id432 . -6) (undo-tree-id433 . -6) (undo-tree-id434 . -6) (undo-tree-id435 . -6) (undo-tree-id436 . -6) (undo-tree-id437 . -6) (undo-tree-id438 . -6) (undo-tree-id439 . -6) (undo-tree-id440 . -6) (undo-tree-id441 . -6) (undo-tree-id442 . -6) (undo-tree-id443 . -6) (undo-tree-id444 . -6) (undo-tree-id445 . -6) (undo-tree-id446 . -6) (undo-tree-id447 . -6) (undo-tree-id448 . -6) (undo-tree-id449 . -6) (undo-tree-id450 . -6) (undo-tree-id451 . -6) (undo-tree-id452 . -6) (undo-tree-id453 . -6) (undo-tree-id454 . -6) (undo-tree-id455 . -6) (undo-tree-id456 . -6) (undo-tree-id457 . -6) (undo-tree-id458 . -6) (undo-tree-id459 . -6) (undo-tree-id460 . -6) (undo-tree-id461 . -6) (undo-tree-id462 . -6) (undo-tree-id463 . -6) (undo-tree-id464 . -6) (undo-tree-id465 . -6) (undo-tree-id466 . -6) (undo-tree-id467 . -6) (undo-tree-id468 . -6) (undo-tree-id469 . -6) (undo-tree-id470 . -6) (undo-tree-id471 . -6) (undo-tree-id472 . -6) (undo-tree-id473 . -6) (undo-tree-id474 . -6) (undo-tree-id475 . -6) (undo-tree-id476 . -6) (undo-tree-id477 . -6) (undo-tree-id478 . -6) (undo-tree-id479 . -6) (undo-tree-id480 . -6) (undo-tree-id481 . -6) (undo-tree-id482 . -6) (undo-tree-id483 . -6) (undo-tree-id484 . -6) (undo-tree-id485 . -6) (undo-tree-id486 . -6) (undo-tree-id487 . -6) (undo-tree-id488 . -6) (undo-tree-id489 . -6) (undo-tree-id490 . -6) (undo-tree-id491 . -6) (undo-tree-id492 . -6) (undo-tree-id493 . -8) 15288) nil (26718 12887 726976 971000) 0 nil])
([nil nil ((#("Рис.2 - Внешний долг РК, исключая межфирменную задолженность, в 2014-2023 годы, млрд долл. США / \\% от ВВП" 0 97 (fontified t) 97 99 (face font-lock-keyword-face fontified t) 99 105 (fontified t) 105 106 (fontified t rear-nonsticky t)) . 20171) (undo-tree-id217 . -105) (undo-tree-id218 . -85) (undo-tree-id219 . -85) (undo-tree-id220 . -85) (undo-tree-id221 . -85) (undo-tree-id222 . -85) (undo-tree-id223 . -85) (undo-tree-id224 . -85) (undo-tree-id225 . -85) (undo-tree-id226 . -85) (undo-tree-id227 . -85) (undo-tree-id228 . -85) (undo-tree-id229 . -85) (undo-tree-id230 . -85) (undo-tree-id231 . -85) (undo-tree-id232 . -85) (undo-tree-id233 . -85) (undo-tree-id234 . -85) (undo-tree-id235 . -85) (undo-tree-id236 . -85) (undo-tree-id237 . -85) (undo-tree-id238 . -85) (undo-tree-id239 . -85) (undo-tree-id240 . -85) (undo-tree-id241 . -85) (undo-tree-id242 . -85) (undo-tree-id243 . -85) (undo-tree-id244 . -85) (undo-tree-id245 . -85) (undo-tree-id246 . -85) (undo-tree-id247 . -85) (undo-tree-id248 . -85) (undo-tree-id249 . -85) (undo-tree-id250 . -85) (undo-tree-id251 . -85) (undo-tree-id252 . -85) (undo-tree-id253 . -85) (undo-tree-id254 . -85) (undo-tree-id255 . -85) (undo-tree-id256 . -85) (undo-tree-id257 . -106) 20256) ((20171 . 20277)) (26718 12861 283131 23000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20059 . 20060) (#("
" 0 1 (fontified nil)) . -20357) (20059 . 20358) (t 26718 12887 729486 412000)) nil (26718 12914 51624 354000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20410) (undo-tree-id216 . -1)) ((20410 . 20411)) (26718 12861 282991 640000) 0 nil])
([nil nil ((#("Рис.2 - Внешний долг РК, исключая межфирменную задолженность, в 2014-2023 годы, млрд долл. США / \\% от ВВП" 0 97 (fontified t) 97 99 (face font-lock-keyword-face fontified t) 99 105 (fontified t) 105 106 (fontified t rear-nonsticky t)) . 20161) (undo-tree-id623 . -105) (undo-tree-id624 . -4) 20165) nil (26718 12914 51623 923000) 0 nil])
nil
([nil nil ((#("{\\bfseries Рис.3 - Государственный внешний долг и внешний долг банков и организаций, контролируемых государством, млрд долл. / \\% от ВВП}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 127 (face (bold) fontified t) 127 129 (face (font-lock-keyword-face bold) fontified t) 129 136 (face (bold) fontified t) 136 137 (fontified t)) . -20252) (undo-tree-id619 . -14) (undo-tree-id620 . -14) (undo-tree-id621 . -14) (undo-tree-id622 . -14) 20390) nil (26718 12914 51622 501000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20285 . 20286) (nil fontified nil 20161 . 20286) (20161 . 20286)) nil (26718 12914 51620 16000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20378) (undo-tree-id617 . 1) (undo-tree-id618 . -1)) nil (26718 12914 51619 435000) 0 nil])
([nil nil ((#("\\emph{Примечание - Составлено по источнику {[}10{]}}
" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 51 (face (italic) fontified t) 51 52 (fontified t) 52 53 (fontified t)) . 20378) (undo-tree-id613 . -52) (undo-tree-id614 . 53) (undo-tree-id615 . -52) (undo-tree-id616 . -53)) nil (26718 12914 51617 972000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20378) (undo-tree-id611 . 1) (undo-tree-id612 . -1)) nil (26718 12914 51612 822000) 0 nil])
([nil nil ((#("
Внешний долг банков и организаций, контролируемых государством, имея
значительно большую долю в общей структуре, тем не менее, согласно
рисунку 3, в абсолютном выражении снизился с 28,0 млрд долл. в 2014 году
до 15,6 млрд долл. в 2023 году (снижение в 1,8 раза). Их доля ВВП так же
снизилась (в 2 раза) с 12,6\\% в 2014 году до 6,0\\% в 2023 году (рисунок
3). Внешний долг банков и организаций, контролируемых государством,
охватывает долговые обязательства государственных предприятий и
финансовых институтов, находящихся под контролем государства. Такие
организации могут привлекать внешнее финансирование на льготных
условиях, однако высокий уровень их задолженности несет потенциальные
бюджетные риски в случае необходимости поддержки со стороны государства.
К числу таких организаций относятся квазигосударственные компании,
национальные управляющие холдинги, такие как АО «Банк Развития
Казахстана, АО «НУХ «Байтерек», «АО Самрук-Казына» и др.
" 0 310 (fontified t) 310 312 (face font-lock-keyword-face fontified t) 312 331 (fontified t) 331 333 (face font-lock-keyword-face fontified t) 333 774 (fontified t) 774 829 (fontified t) 829 877 (fontified t) 877 878 (face font-lock-keyword-face fontified t) 878 921 (face font-lock-string-face fontified t) 921 922 (face font-lock-keyword-face fontified t) 922 924 (fontified t) 924 925 (face font-lock-keyword-face fontified t) 925 941 (face font-lock-string-face fontified t) 941 942 (face font-lock-keyword-face fontified t) 942 949 (fontified t)) . 19094) (undo-tree-id626 . -892) (undo-tree-id627 . -948) (undo-tree-id628 . -892) (undo-tree-id629 . -949) (undo-tree-id630 . -949) (undo-tree-id631 . -949) (undo-tree-id632 . -949) (undo-tree-id633 . -892) 19986 (t 26718 12914 54696 907000)) nil (26718 12948 167116 142000) 0 nil])
([nil nil ((19449 . 19450) 19429) nil (26718 12948 167112 325000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19449 . 19450) (#("
" 0 1 (fontified nil)) . -20398) (19449 . 20399) 19429) nil (26718 12948 167111 724000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 19450) (undo-tree-id625 . -1)) nil (26718 12948 167108 157000) 0 nil])
([nil nil ((nil fontified t 19197 . 19199) (t 26718 12948 169966 977000) (nil face font-lock-builtin-face 19197 . 19199) (t 26718 12948 169966 977000) (#("12" 0 2 (face font-lock-builtin-face fontified t)) . 19197) (t 26718 12948 169966 977000) (19199 . 19201) 19198 (t 26718 12948 169966 977000)) nil (26718 12953 540430 781000) 0 nil])
([nil nil ((nil fontified t 19197 . 19199) (t 26718 12953 544009 252000) (nil face font-lock-builtin-face 19197 . 19199) (t 26718 12953 544009 252000) (#("13" 0 2 (face font-lock-builtin-face fontified t)) . 19197) (t 26718 12953 544009 252000) (19199 . 19201) 19198 (t 26718 12953 544009 252000)) nil (26718 12970 564926 187000) 0 nil])
([nil nil ((nil fontified t 15070 . 15072) (nil face font-lock-builtin-face 15070 . 15072) (#("12" 0 2 (face font-lock-builtin-face fontified t)) . 15070) (15072 . 15074) 15071) nil (26718 12970 564920 326000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23772 . 23773) (#("
" 0 1 (fontified nil)) . -24089) (23772 . 24090) (t 26718 12970 569142 710000)) nil (26718 13036 451084 64000) 0 nil])
([nil nil ((#("Рис.3 - Государственный внешний долг и внешний долг банков и организаций, контролируемых государством, млрд долл. / \\% от ВВП" 0 116 (fontified t) 116 118 (face font-lock-keyword-face fontified t) 118 124 (fontified t) 124 125 (fontified t rear-nonsticky t)) . 23874) (undo-tree-id726 . -124) (undo-tree-id727 . -2) 23876) nil (26718 13036 451083 543000) 0 nil])
([nil nil ((#("{\\bfseries Рис.4 - Государственный внешний долг и внешний долг банков и организаций, контролируемых государством к валютным активам Национального Фонда РК, млрд долл. / \\%}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 169 (face (bold) fontified t) 169 171 (face (font-lock-keyword-face bold) fontified t) 171 172 (fontified t)) . -23965) (undo-tree-id642 . -14) (undo-tree-id643 . -14) (undo-tree-id644 . -14) (undo-tree-id645 . -14) (undo-tree-id646 . -14) (undo-tree-id647 . -14) (undo-tree-id648 . -14) (undo-tree-id649 . -14) (undo-tree-id650 . -14) (undo-tree-id651 . -14) (undo-tree-id652 . -14) (undo-tree-id653 . -14) (undo-tree-id654 . -14) (undo-tree-id655 . -14) (undo-tree-id656 . -14) (undo-tree-id657 . -14) (undo-tree-id658 . -14) (undo-tree-id659 . -14) (undo-tree-id660 . -14) (undo-tree-id661 . -14) (undo-tree-id662 . -14) (undo-tree-id663 . -14) (undo-tree-id664 . -14) (undo-tree-id665 . -14) (undo-tree-id666 . -14) (undo-tree-id667 . -14) (undo-tree-id668 . -14) (undo-tree-id669 . -14) (undo-tree-id670 . -14) (undo-tree-id671 . -14) (undo-tree-id672 . -14) (undo-tree-id673 . -14) (undo-tree-id674 . -14) (undo-tree-id675 . -14) (undo-tree-id676 . -14) (undo-tree-id677 . -14) (undo-tree-id678 . -14) (undo-tree-id679 . -14) (undo-tree-id680 . -14) (undo-tree-id681 . -14) (undo-tree-id682 . -14) (undo-tree-id683 . -14) (undo-tree-id684 . -14) (undo-tree-id685 . -14) (undo-tree-id686 . -14) (undo-tree-id687 . -14) (undo-tree-id688 . -14) (undo-tree-id689 . -14) (undo-tree-id690 . -14) (undo-tree-id691 . -14) (undo-tree-id692 . -14) (undo-tree-id693 . -14) (undo-tree-id694 . -14) (undo-tree-id695 . -14) (undo-tree-id696 . -14) (undo-tree-id697 . -14) (undo-tree-id698 . -14) (undo-tree-id699 . -14) (undo-tree-id700 . -14) (undo-tree-id701 . -14) (undo-tree-id702 . -14) (undo-tree-id703 . -14) (undo-tree-id704 . -14) (undo-tree-id705 . -14) (undo-tree-id706 . -14) (undo-tree-id707 . -14) (undo-tree-id708 . -14) (undo-tree-id709 . -14) (undo-tree-id710 . -14) (undo-tree-id711 . -14) (undo-tree-id712 . -14) (undo-tree-id713 . -14) (undo-tree-id714 . -14) (undo-tree-id715 . -14) (undo-tree-id716 . -14) (undo-tree-id717 . -14) (undo-tree-id718 . -14) (undo-tree-id719 . -14) (undo-tree-id720 . -14) (undo-tree-id721 . -14) (undo-tree-id722 . -14) (undo-tree-id723 . -14) (undo-tree-id724 . -14) (undo-tree-id725 . -14) 24138) nil (26718 13036 451081 388000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24033 . 24034) (nil fontified nil 23874 . 24034) (23874 . 24034)) nil (26718 13036 451043 718000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 24125) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1)) nil (26718 13036 451043 56000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 24125) (undo-tree-id638 . 1)) nil (26718 13036 451036 744000) 0 nil])
([nil nil ((#("\\emph{Примечание - Составлено по источнику {[}10{]}.}
" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 52 (face (italic) fontified t) 52 53 (fontified t) 53 54 (fontified t)) . 24125) (undo-tree-id634 . -53) (undo-tree-id635 . 54) (undo-tree-id636 . -53) (undo-tree-id637 . -54)) nil (26718 13036 451032 747000) 0 nil])
([nil nil ((nil fontified t 23859 . 23861) (t 26718 13036 454652 936000) (nil face font-lock-builtin-face 23859 . 23861) (t 26718 13036 454652 936000) (#("14" 0 2 (face font-lock-builtin-face fontified t)) . 23859) (t 26718 13036 454652 936000) (23861 . 23863) 23860 (t 26718 13036 454652 936000)) nil (26718 13039 466295 249000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26855 . 26856) (#("
" 0 1 (fontified nil)) . -27207) (26855 . 27208) (t 26718 13039 468676 50000)) nil (26718 13075 774422 956000) 0 nil])
([nil nil ((#("Рис.4 - Государственный внешний долг и внешний долг банков и организаций, контролируемых государством к валютным активам Национального Фонда РК, млрд долл. / \\%" 0 158 (fontified t) 158 159 (face font-lock-keyword-face fontified t) 159 160 (face font-lock-keyword-face fontified t rear-nonsticky t)) . 26957) (undo-tree-id883 . -159) (undo-tree-id884 . -85) 27042) nil (26718 13075 774422 174000) 0 nil])
([nil nil ((#("{\\bfseries Рис.5 - Внешний долг РК в классификации по финансовым инструментам за 2014-2023 годы, млрд долл.}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 35 (face (bold) fontified t) 35 107 (face (bold) fontified t) 107 108 (fontified t)) . -27048) (undo-tree-id809 . -14) (undo-tree-id810 . -14) (undo-tree-id811 . -14) (undo-tree-id812 . -14) (undo-tree-id813 . -14) (undo-tree-id814 . -14) (undo-tree-id815 . -14) (undo-tree-id816 . -14) (undo-tree-id817 . -14) (undo-tree-id818 . -14) (undo-tree-id819 . -14) (undo-tree-id820 . -14) (undo-tree-id821 . -14) (undo-tree-id822 . -14) (undo-tree-id823 . -14) (undo-tree-id824 . -14) (undo-tree-id825 . -14) (undo-tree-id826 . -14) (undo-tree-id827 . -14) (undo-tree-id828 . -14) (undo-tree-id829 . -14) (undo-tree-id830 . -14) (undo-tree-id831 . -14) (undo-tree-id832 . -14) (undo-tree-id833 . -14) (undo-tree-id834 . -14) (undo-tree-id835 . -14) (undo-tree-id836 . -14) (undo-tree-id837 . -14) (undo-tree-id838 . -14) (undo-tree-id839 . -14) (undo-tree-id840 . -14) (undo-tree-id841 . -14) (undo-tree-id842 . -14) (undo-tree-id843 . -14) (undo-tree-id844 . -14) (undo-tree-id845 . -14) (undo-tree-id846 . -14) (undo-tree-id847 . -14) (undo-tree-id848 . -14) (undo-tree-id849 . -14) (undo-tree-id850 . -14) (undo-tree-id851 . -14) (undo-tree-id852 . -14) (undo-tree-id853 . -14) (undo-tree-id854 . -14) (undo-tree-id855 . -14) (undo-tree-id856 . -14) (undo-tree-id857 . -14) (undo-tree-id858 . -14) (undo-tree-id859 . -14) (undo-tree-id860 . -14) (undo-tree-id861 . -14) (undo-tree-id862 . -14) (undo-tree-id863 . -14) (undo-tree-id864 . -14) (undo-tree-id865 . -14) (undo-tree-id866 . -14) (undo-tree-id867 . -14) (undo-tree-id868 . -14) (undo-tree-id869 . -14) (undo-tree-id870 . -14) (undo-tree-id871 . -14) (undo-tree-id872 . -14) (undo-tree-id873 . -14) (undo-tree-id874 . -14) (undo-tree-id875 . -14) (undo-tree-id876 . -14) (undo-tree-id877 . -14) (undo-tree-id878 . -14) (undo-tree-id879 . -14) (undo-tree-id880 . -14) (undo-tree-id881 . -14) (undo-tree-id882 . -14) 27157) nil (26718 13075 774420 481000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27052 . 27053) (nil fontified nil 26957 . 27053) (26957 . 27053)) nil (26718 13075 774400 32000) 0 nil])
([nil nil ((#("\\emph{Примечание - Составлено по источнику {[}10{]}}
" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 51 (face (italic) fontified t) 51 53 (fontified t)) . 27146) (undo-tree-id768 . -52) (undo-tree-id769 . -10) (undo-tree-id770 . -10) (undo-tree-id771 . -10) (undo-tree-id772 . -10) (undo-tree-id773 . -10) (undo-tree-id774 . -10) (undo-tree-id775 . -10) (undo-tree-id776 . -10) (undo-tree-id777 . -10) (undo-tree-id778 . -10) (undo-tree-id779 . -10) (undo-tree-id780 . -10) (undo-tree-id781 . -10) (undo-tree-id782 . -10) (undo-tree-id783 . -10) (undo-tree-id784 . -10) (undo-tree-id785 . -10) (undo-tree-id786 . -10) (undo-tree-id787 . -10) (undo-tree-id788 . -10) (undo-tree-id789 . -10) (undo-tree-id790 . -10) (undo-tree-id791 . -10) (undo-tree-id792 . -10) (undo-tree-id793 . -10) (undo-tree-id794 . -10) (undo-tree-id795 . -10) (undo-tree-id796 . -10) (undo-tree-id797 . -10) (undo-tree-id798 . -10) (undo-tree-id799 . -10) (undo-tree-id800 . -10) (undo-tree-id801 . -10) (undo-tree-id802 . -10) (undo-tree-id803 . -10) (undo-tree-id804 . -10) (undo-tree-id805 . -10) (undo-tree-id806 . -10) (undo-tree-id807 . -10) (undo-tree-id808 . -53) 27156) nil (26718 13075 774399 171000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 27145) (undo-tree-id730 . 1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1)) nil (26718 13075 774386 707000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 27145) (undo-tree-id728 . 1) (undo-tree-id729 . -1)) nil (26718 13075 774369 705000) 0 nil])
([nil nil ((nil fontified t 26942 . 26944) (t 26718 13075 777953 47000) (nil face font-lock-builtin-face 26942 . 26944) (t 26718 13075 777953 47000) (#("15" 0 2 (face font-lock-builtin-face fontified t)) . 26942) (t 26718 13075 777953 47000) (26944 . 26946) 26943 (t 26718 13075 777953 47000)) nil (26718 13086 676334 388000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -32039) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (32037 . 32040) (t 26718 13086 680035 709000)) nil (26718 13138 503624 512000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-warning-face fontified nil)) . -32169) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (32167 . 32170) (t 26718 13138 507425 719000)) nil (26718 13150 754232 337000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-warning-face fontified nil)) . -34013) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (34011 . 34014) (t 26718 13150 757517 202000)) nil (26718 13169 892569 465000) 0 nil])
([nil nil ((34244 . 34245) (t 26718 13169 895659 625000)) nil (26718 13187 116682 991000) 0 nil])
([nil nil ((34242 . 34243)) nil (26718 13187 116678 482000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -34484) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (34482 . 34485) (t 26718 13187 119787 303000)) nil (26718 13219 121361 892000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -35312) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (35310 . 35313) (t 26718 13219 125023 334000)) nil (26718 13238 16229 221000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-warning-face fontified nil)) . -35442) (undo-tree-id915 . -1) (35440 . 35443) (t 26718 13238 20161 964000)) nil (26718 13248 62049 523000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-warning-face fontified nil)) . -37294) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (37294 . 37295) (#("i" 0 1 (fontified t)) . -37294) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (#("i" 0 1 (fontified t)) . -37295) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) 37296 (37295 . 37296) (#("i" 0 1 (fontified nil)) . -37295) (undo-tree-id946 . -1) (37294 . 37296) (#("i" 0 1 (face font-lock-warning-face fontified nil)) . -37294) (undo-tree-id947 . -1) (37292 . 37295) (t 26718 13248 65235 459000)) nil (26718 13269 364491 722000) 0 nil])
([nil nil ((#("i" 0 1 (fontified nil)) . -37526) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (37525 . 37527) (t 26718 13269 368390 883000)) nil (26718 13287 765420 929000) 0 nil])
([nil nil ((37523 . 37524)) nil (26718 13309 971143 230000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -37765) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (37763 . 37766) (t 26718 13287 768524 642000)) nil (26718 13312 116461 203000) 0 nil] [nil nil ((37763 . 37764) (t 26718 13287 768524 642000)) ((#(" " 0 1 (fontified t)) . 37763)) (26718 13309 970909 850000) 0 nil])
([nil nil ((38111 . 38113) (t 26718 13312 119700 976000)) nil (26718 13325 675314 820000) 0 nil])
nil
([nil nil ((#("i" 0 1 (face font-lock-warning-face fontified nil)) . -38631) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (38629 . 38632) (t 26718 13325 678798 849000)) nil (26718 13343 946908 829000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-warning-face fontified nil)) . -39076) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (39074 . 39077)) nil (26718 13343 946902 808000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -40010) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (40008 . 40011) (t 26718 13343 949930 391000)) nil (26718 13351 736717 551000) 0 nil])
([nil current ((#("i" 0 1 (face font-lock-warning-face fontified nil)) . -39426) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (39424 . 39427) (t 26718 13351 739986 358000)) nil (26718 13365 157563 216000) 0 nil])
nil
