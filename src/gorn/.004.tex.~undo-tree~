(undo-tree-save-format-version . 1)
"dfa9f1e04484e507d35cbc437ef1097aba333d7b"
[nil nil nil nil (26711 57087 582207 835000) 0 nil]
([nil nil ((#("\\end{quote}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (latex-env-pair t fontified t) 5 10 (face font-lock-function-name-face latex-env-pair t fontified t) 10 11 (latex-env-pair t fontified t) 11 12 (fontified t)) . 978) (undo-tree-id0 . -1) (undo-tree-id1 . -11) 979 (t 26711 44846 159913 762000)) nil (26711 57087 582206 863000) 0 nil])
([nil nil ((31201 . 31202) 1) nil (26711 57087 582185 102000) 0 nil])
([nil nil ((#("{\\bfseries \\textsuperscript{1}A.D.
Shontayev}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/gorn2/image1}
	\\caption*{}
\\end{figure}
{\\bfseries ,
\\textsuperscript{2}T.V
Demina}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/gorn2/image1}
	\\caption*{}
\\end{figure}
{\\bfseries ,
\\textsuperscript{1}D.S.
Shontaev}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/gorn2/image1}
	\\caption*{}
\\end{figure}
{\\bfseries ,
\\textsuperscript{3}V.F.
Demin}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/gorn2/image1}
	\\caption*{}
\\end{figure}
{\\bfseries ,
\\textsuperscript{3}D.D.
Меirаm}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/gorn2/image1}
	\\caption*{}
\\end{figure}
{\\bfseries \\textsuperscript{\\envelope }}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t) 11 27 (face (font-lock-keyword-face bold) fontified t) 27 44 (face (bold) fontified t) 44 46 (fontified t) 46 52 (face font-lock-keyword-face fontified t) 52 53 (latex-env-pair t fontified t) 53 59 (face font-lock-function-name-face latex-env-pair t fontified t) 59 60 (latex-env-pair t fontified t) 60 65 (fontified t) 65 75 (face font-lock-keyword-face fontified t) 75 77 (fontified t) 77 93 (face font-lock-keyword-face fontified t) 93 103 (fontified t) 103 113 (face font-lock-keyword-face fontified t) 113 115 (fontified t) 115 133 (face font-lock-builtin-face fontified t) 133 136 (fontified t) 136 145 (face font-lock-keyword-face fontified t) 145 148 (fontified t) 148 152 (face font-lock-keyword-face fontified t) 152 153 (latex-env-pair t fontified t) 153 159 (face font-lock-function-name-face latex-env-pair t fontified t) 159 160 (latex-env-pair t fontified t) 160 162 (fontified t) 162 171 (face font-lock-keyword-face fontified t) 171 174 (face (bold) fontified t) 174 190 (face (font-lock-keyword-face bold) fontified t) 190 203 (face (bold) fontified t) 203 205 (fontified t) 205 211 (face font-lock-keyword-face fontified t) 211 212 (latex-env-pair t fontified t) 212 218 (face font-lock-function-name-face latex-env-pair t fontified t) 218 219 (latex-env-pair t fontified t) 219 224 (fontified t) 224 234 (face font-lock-keyword-face fontified t) 234 236 (fontified t) 236 252 (face font-lock-keyword-face fontified t) 252 262 (fontified t) 262 272 (face font-lock-keyword-face fontified t) 272 274 (fontified t) 274 292 (face font-lock-builtin-face fontified t) 292 295 (fontified t) 295 304 (face font-lock-keyword-face fontified t) 304 307 (fontified t) 307 311 (face font-lock-keyword-face fontified t) 311 312 (latex-env-pair t fontified t) 312 318 (face font-lock-function-name-face latex-env-pair t fontified t) 318 319 (latex-env-pair t fontified t) 319 321 (fontified t) 321 330 (face font-lock-keyword-face fontified t) 330 333 (face (bold) fontified t) 333 349 (face (font-lock-keyword-face bold) fontified t) 349 365 (face (bold) fontified t) 365 367 (fontified t) 367 373 (face font-lock-keyword-face fontified t) 373 374 (latex-env-pair t fontified t) 374 380 (face font-lock-function-name-face latex-env-pair t fontified t) 380 381 (latex-env-pair t fontified t) 381 386 (fontified t) 386 396 (face font-lock-keyword-face fontified t) 396 398 (fontified t) 398 414 (face font-lock-keyword-face fontified t) 414 424 (fontified t) 424 434 (face font-lock-keyword-face fontified t) 434 436 (fontified t) 436 454 (face font-lock-builtin-face fontified t) 454 457 (fontified t) 457 466 (face font-lock-keyword-face fontified t) 466 469 (fontified t) 469 473 (face font-lock-keyword-face fontified t) 473 474 (latex-env-pair t fontified t) 474 480 (face font-lock-function-name-face latex-env-pair t fontified t) 480 481 (latex-env-pair t fontified t) 481 483 (fontified t) 483 492 (face font-lock-keyword-face fontified t) 492 495 (face (bold) fontified t) 495 511 (face (font-lock-keyword-face bold) fontified t) 511 524 (face (bold) fontified t) 524 526 (fontified t) 526 532 (face font-lock-keyword-face fontified t) 532 533 (latex-env-pair t fontified t) 533 539 (face font-lock-function-name-face latex-env-pair t fontified t) 539 540 (latex-env-pair t fontified t) 540 545 (fontified t) 545 555 (face font-lock-keyword-face fontified t) 555 557 (fontified t) 557 573 (face font-lock-keyword-face fontified t) 573 583 (fontified t) 583 593 (face font-lock-keyword-face fontified t) 593 595 (fontified t) 595 613 (face font-lock-builtin-face fontified t) 613 616 (fontified t) 616 625 (face font-lock-keyword-face fontified t) 625 628 (fontified t) 628 632 (face font-lock-keyword-face fontified t) 632 633 (latex-env-pair t fontified t) 633 639 (face font-lock-function-name-face latex-env-pair t fontified t) 639 640 (latex-env-pair t fontified t) 640 642 (fontified t) 642 651 (face font-lock-keyword-face fontified t) 651 654 (face (bold) fontified t) 654 670 (face (font-lock-keyword-face bold) fontified t) 670 684 (face (bold) fontified t) 684 686 (fontified t) 686 692 (face font-lock-keyword-face fontified t) 692 693 (latex-env-pair t fontified t) 693 699 (face font-lock-function-name-face latex-env-pair t fontified t) 699 700 (latex-env-pair t fontified t) 700 705 (fontified t) 705 715 (face font-lock-keyword-face fontified t) 715 717 (fontified t) 717 733 (face font-lock-keyword-face fontified t) 733 743 (fontified t) 743 753 (face font-lock-keyword-face fontified t) 753 755 (fontified t) 755 773 (face font-lock-builtin-face fontified t) 773 776 (fontified t) 776 785 (face font-lock-keyword-face fontified t) 785 788 (fontified t) 788 792 (face font-lock-keyword-face fontified t) 792 793 (latex-env-pair t fontified t) 793 799 (face font-lock-function-name-face latex-env-pair t fontified t) 799 800 (latex-env-pair t fontified t) 800 802 (fontified t) 802 811 (face font-lock-keyword-face fontified t) 811 812 (face (bold) fontified t) 812 828 (face (font-lock-keyword-face bold) fontified t) 828 829 (face (bold) fontified t) 829 838 (face (font-lock-keyword-face bold) fontified t) 838 840 (face (bold) fontified t) 840 842 (fontified t)) . 136) (undo-tree-id20 . -801) (undo-tree-id21 . -841) (undo-tree-id22 . -842) (undo-tree-id23 . -788) (undo-tree-id24 . -788) (undo-tree-id25 . -686) (undo-tree-id26 . -686) (undo-tree-id27 . -654) (undo-tree-id28 . -654) (undo-tree-id29 . -628) (undo-tree-id30 . -628) (undo-tree-id31 . -526) (undo-tree-id32 . -526) (undo-tree-id33 . -495) (undo-tree-id34 . -495) (undo-tree-id35 . -469) (undo-tree-id36 . -469) (undo-tree-id37 . -367) (undo-tree-id38 . -367) (undo-tree-id39 . -333) (undo-tree-id40 . -333) (undo-tree-id41 . -307) (undo-tree-id42 . -307) (undo-tree-id43 . -205) (undo-tree-id44 . -205) (undo-tree-id45 . -174) (undo-tree-id46 . -174) (undo-tree-id47 . -148) (undo-tree-id48 . -148) (undo-tree-id49 . -46) (undo-tree-id50 . -46) (undo-tree-id51 . -801) (undo-tree-id52 . -801) (undo-tree-id53 . -788) (undo-tree-id54 . -686) (undo-tree-id55 . -654) (undo-tree-id56 . -628) (undo-tree-id57 . -367) (undo-tree-id58 . -35) (undo-tree-id59 . -35) (undo-tree-id60 . -35) (undo-tree-id61 . -35) (undo-tree-id62 . -35) (undo-tree-id63 . -46) (undo-tree-id64 . -46) (undo-tree-id65 . -46) (undo-tree-id66 . -46) (undo-tree-id67 . -46) (undo-tree-id68 . -64) (undo-tree-id69 . -64) (undo-tree-id70 . -64) (undo-tree-id71 . -64) (undo-tree-id72 . -64) (undo-tree-id73 . -64) (undo-tree-id74 . -64) (undo-tree-id75 . -64) (undo-tree-id76 . -64) (undo-tree-id77 . -64) (undo-tree-id78 . -64) (undo-tree-id79 . -64) (undo-tree-id80 . -64) (undo-tree-id81 . -64) (undo-tree-id82 . -64) (undo-tree-id83 . -46) (undo-tree-id84 . -46) (undo-tree-id85 . -46) (undo-tree-id86 . -46) (undo-tree-id87 . -46) (undo-tree-id88 . -46) (undo-tree-id89 . -46) (undo-tree-id90 . -46) (undo-tree-id91 . -46) (undo-tree-id92 . -46) (undo-tree-id93 . -46) (undo-tree-id94 . -46) (undo-tree-id95 . -46) (undo-tree-id96 . -46) (undo-tree-id97 . -46) (undo-tree-id98 . -46) (undo-tree-id99 . -46) (undo-tree-id100 . -46) (undo-tree-id101 . -46) (undo-tree-id102 . -46) (undo-tree-id103 . -35) (undo-tree-id104 . -35) (undo-tree-id105 . -35) (undo-tree-id106 . -35) (undo-tree-id107 . -35) (undo-tree-id108 . -35) (undo-tree-id109 . -35) (undo-tree-id110 . -35) (undo-tree-id111 . -35) (undo-tree-id112 . -35) (undo-tree-id113 . -35) (undo-tree-id114 . -35) (undo-tree-id115 . -35) (undo-tree-id116 . -35) (undo-tree-id117 . -35) (undo-tree-id118 . -775) (undo-tree-id119 . -842) (t 26711 57087 583918 187000)) nil (26711 57123 949429 951000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 136) (undo-tree-id18 . 1) (undo-tree-id19 . -1)) nil (26711 57123 949353 578000) 0 nil])
([nil nil ((201 . 202) (#("
" 0 1 (fontified t)) . -201) (undo-tree-id17 . -1) 136) nil (26711 57123 949352 576000) 0 nil])
([nil nil ((303 . 304) (#("
" 0 1 (fontified t)) . -303) 298) nil (26711 57123 949351 484000) 0 nil])
([nil nil ((451 . 452) (#("
" 0 1 (fontified t)) . -451) 450) nil (26711 57123 949351 113000) 0 nil])
([nil nil ((136 . 156) (504 . 522) 136) nil (26711 57123 949350 803000) 0 nil])
([nil nil ((24 . 46) (135 . 155) 24) nil (26711 57123 949350 362000) 0 nil])
([nil nil ((108 . 109) (#("
" 0 1 (fontified t)) . -108) (#("
" 0 1 (fontified t)) . -108) (undo-tree-id15 . -1) (undo-tree-id16 . -1) 91) nil (26711 57123 949349 901000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 107) (undo-tree-id13 . -1) (undo-tree-id14 . -1)) nil (26711 57123 949348 929000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (face (bold) fontified t) 1 10 (face (font-lock-keyword-face bold) fontified t) 10 11 (face (bold) fontified t)) . 108) (undo-tree-id12 . -10)) nil (26711 57123 949348 47000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 47)) nil (26711 57123 949347 346000) 0 nil])
([nil nil ((#("bfseries " 0 8 (fontified t) 8 9 (fontified t)) . 47) (undo-tree-id9 . -8) (undo-tree-id10 . 9) (undo-tree-id11 . -9)) nil (26711 57123 949346 885000) 0 nil])
([nil nil (47) nil (26711 57123 949345 302000) 0 nil])
([nil nil ((65 . 67) (#("[" 0 1 (fontified t)) . -65) (undo-tree-id2 . -1) (#("{" 0 1 (fontified t)) . -66) (undo-tree-id3 . -1) (#("}" 0 1 (fontified t)) . -67) (undo-tree-id4 . -1) 68 (65 . 68) (47 . 65) (#("sectionw" 0 8 (face font-lock-keyword-face fontified t)) . -47) (undo-tree-id5 . -8) (undo-tree-id6 . -8) (undo-tree-id7 . -8) 55 (51 . 55) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -51) (undo-tree-id8 . -1) (46 . 52)) nil (26711 57126 391446 55000) 0 nil])
([nil nil ((1206 . 1207) (#("
" 0 1 (face (bold) fontified t)) . -1206) (undo-tree-id153 . -1) 1136 (t 26711 57123 950722 133000)) nil (26711 57162 639436 512000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . -1225) (undo-tree-id121 . -1) 1207 (t 26711 57123 950722 133000)) ((1225 . 1226)) (26711 57126 391226 304000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . -1135) (undo-tree-id120 . -1) (t 26711 57123 950722 133000)) ((1135 . 1136)) (26711 57125 576530 491000) 0 nil])
([nil nil ((1237 . 1238) (#(" " 0 1 (face (bold) fontified t)) . 1237)) nil (26711 57162 639435 821000) 0 nil])
nil
nil
([nil nil ((1270 . 1271) (#(" " 0 1 (face (bold) fontified t)) . 1270)) nil (26711 57162 639435 520000) 0 nil])
([nil nil ((1335 . 1336) (#(" " 0 1 (fontified t)) . 1335)) nil (26711 57162 639435 220000) 0 nil])
([nil nil ((1425 . 1426)) nil (26711 57162 639434 939000) 0 nil])
([nil nil ((1136 . 1158) (1428 . 1448) 1136) nil (26711 57162 639434 669000) 0 nil])
([nil nil ((1537 . 1538) (#("
" 0 1 (fontified t)) . -1537) (undo-tree-id152 . -1) 1471) nil (26711 57162 639434 248000) 0 nil])
([nil nil ((1643 . 1644) (#("
" 0 1 (fontified t)) . -1643) (undo-tree-id151 . -1) 1638) nil (26711 57162 639433 587000) 0 nil])
([nil nil ((1734 . 1735) (#("
" 0 1 (fontified t)) . -1734) 1733) nil (26711 57162 639432 675000) 0 nil])
([nil nil ((1471 . 1491) (1818 . 1836) 1471) nil (26711 57162 639432 204000) 0 nil])
([nil nil ((2459 . 2460) (#("
" 0 1 (fontified t)) . -2459) (#("
" 0 1 (fontified t)) . -2459) 2450) nil (26711 57162 639431 533000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 2458)) nil (26711 57162 639431 92000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (face (bold) fontified t) 1 10 (face (font-lock-keyword-face bold) fontified t) 10 11 (face (bold) fontified t)) . 2459) (undo-tree-id150 . -10)) nil (26711 57162 639430 731000) 0 nil])
([nil nil ((2491 . 2492) (#(" " 0 1 (face (bold) fontified t)) . 2491)) nil (26711 57162 639430 110000) 0 nil])
([nil nil ((2491 . 2492) (#("-" 0 1 (face (bold) fontified t)) . 2491)) nil (26711 57162 639429 730000) 0 nil])
([nil nil ((2524 . 2525) (#(" " 0 1 (face (bold) fontified t)) . 2524)) nil (26711 57162 639429 439000) 0 nil])
([nil nil ((2589 . 2590) (#(" " 0 1 (fontified t)) . 2589)) nil (26711 57162 639429 118000) 0 nil])
([nil nil ((2679 . 2680)) nil (26711 57162 639428 778000) 0 nil])
([nil nil ((2395 . 2417) (2682 . 2702) 2395) nil (26711 57162 639428 517000) 0 nil])
([nil nil ((2798 . 2799) (#("
" 0 1 (fontified t)) . -2798) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) 2725) nil (26711 57162 639550 485000) 0 nil])
([nil nil ((2902 . 2903) (#("
" 0 1 (fontified t)) . -2902) (undo-tree-id183 . -1) (undo-tree-id184 . -1) 2886) nil (26711 57175 687878 225000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . -2951) (undo-tree-id122 . -1) 2950) ((2951 . 2952)) (26711 57162 639414 471000) 0 nil])
([nil nil ((3028 . 3029) (#("
" 0 1 (fontified t)) . -3028) 3016) nil (26711 57175 687877 93000) 0 nil])
nil
([nil nil ((2725 . 2745) (3124 . 3142) 2725) nil (26711 57175 687876 742000) 0 nil])
([nil nil ((#("{\\" 0 1 (fontified t) 1 2 (face font-lock-keyword-face fontified t)) . 2745) (undo-tree-id182 . -1)) nil (26711 57175 687876 422000) 0 nil])
([nil nil ((#("{\\" 0 1 (fontified t) 1 2 (face font-lock-keyword-face fontified t)) . 2857) (undo-tree-id180 . -1) (undo-tree-id181 . -2)) nil (26711 57175 687875 951000) 0 nil])
([nil nil ((#("bfseries " 0 8 (fontified t) 8 9 (fontified t)) . 2745) (undo-tree-id178 . -8) (undo-tree-id179 . -9)) nil (26711 57175 687875 79000) 0 nil])
([nil nil ((#("bfseries " 0 8 (fontified t) 8 9 (fontified t)) . 2848) (undo-tree-id177 . -8)) nil (26711 57175 687873 957000) 0 nil])
([nil nil ((#("{\\" 0 1 (fontified t) 1 2 (face font-lock-keyword-face fontified t)) . 2951) (undo-tree-id175 . -1) (undo-tree-id176 . -2)) nil (26711 57175 687873 406000) 0 nil])
([nil nil ((#("bfseries " 0 8 (fontified t) 8 9 (fontified t)) . 2951) (undo-tree-id173 . -8) (undo-tree-id174 . -9)) nil (26711 57175 687871 262000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 2970) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1)) nil (26711 57175 687870 70000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 2867)) nil (26711 57175 687863 97000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 2764) (undo-tree-id154 . -1) (undo-tree-id155 . -1)) nil (26711 57175 687859 901000) 0 nil])
([nil nil ((154 . 155) (t 26711 57175 689443 207000) 46) nil (26711 57283 269421 513000) 0 nil])
([nil nil ((nil rear-nonsticky nil 367 . 368) (nil fontified nil 155 . 368) (155 . 368)) nil (26711 57283 269421 143000) 0 nil])
([nil nil ((154 . 155) 103) nil (26711 57283 269420 772000) 0 nil])
([nil nil ((#("\\" 0 1 (face (font-lock-warning-face bold) fontified t)) . 203)) nil (26711 57283 269420 361000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 202)) nil (26711 57283 269420 30000) 0 nil])
([nil nil ((#(" " 0 1 (face (bold) fontified t)) . 201)) nil (26711 57283 269419 209000) 0 nil])
([nil nil ((#("\\" 0 1 (face (font-lock-warning-face bold) fontified t)) . 235) (undo-tree-id319 . -1) (undo-tree-id320 . -1)) nil (26711 57283 269418 888000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 234) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1)) nil (26711 57283 269385 155000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 233) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1)) nil (26711 57283 269378 893000) 0 nil])
([nil nil ((#("\\" 0 1 (face (font-lock-warning-face bold) fontified t)) . 269) (undo-tree-id267 . -1) (undo-tree-id268 . -1)) nil (26711 57283 269370 147000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 268) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1)) nil (26711 57283 269368 845000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 267) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1)) nil (26711 57283 269360 118000) 0 nil])
([nil nil ((#("\\" 0 1 (face (font-lock-warning-face bold) fontified t)) . 300) (undo-tree-id209 . -1) (undo-tree-id210 . -1)) nil (26711 57283 269352 825000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 299) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1)) nil (26711 57283 269351 653000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 298) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1)) nil (26711 57283 269349 679000) 0 nil])
([nil nil ((356 . 357)) nil (26711 57283 269347 885000) 0 nil])
([nil nil ((166 . 167) (#(" " 0 1 (face (bold) fontified t)) . 166) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1)) nil (26711 57283 269345 271000) 0 nil])
([nil nil ((156 . 161) (155 . 156) (t 26711 57283 270863 242000) 155) nil (26711 57320 820781 88000) 0 nil])
([nil nil ((212 . 227) (200 . 211) (185 . 199) (172 . 184) (156 . 171)) nil (26711 57320 820780 637000) 0 nil])
([nil nil ((211 . 212) (#("
" 0 1 (fontified t)) . -211) (199 . 200) (#("
" 0 1 (fontified t)) . -199) (184 . 185) (#("
" 0 1 (fontified t)) . -184) (171 . 172) (#("
" 0 1 (fontified t)) . -171) 156) nil (26711 57320 820779 545000) 0 nil])
([nil nil ((#("\\tex" 0 4 (face font-lock-keyword-face fontified t)) . 223) (undo-tree-id323 . -3)) nil (26711 57320 820778 924000) 0 nil])
([nil nil ((#("A.D. Shontayev, T.V. Demina, D.S. Shontaev, V.F. Demin, D.D. Meiram" 0 15 (fontified t) 15 16 (fontified t) 16 28 (fontified t) 28 29 (fontified t) 29 43 (fontified t) 43 44 (fontified t) 44 55 (fontified t) 55 56 (fontified t) 56 67 (fontified t)) . 156) (undo-tree-id322 . -66)) nil (26711 57320 820778 162000) 0 nil])
([nil nil ((nil rear-nonsticky nil 132 . 133) (nil fontified nil 66 . 133) (66 . 133) 65) nil (26711 57320 820777 80000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 222) (undo-tree-id321 . -1)) nil (26711 57320 820776 369000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 222)) nil (26711 57320 820765 519000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 721) (undo-tree-id325 . -10) (t 26711 57320 822660 794000)) nil (26711 57339 239531 677000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 749)) nil (26711 57339 239529 673000) 0 nil])
([nil nil ((729 . 734) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -729) (undo-tree-id324 . -1) (721 . 730)) nil (26711 57339 239526 838000) 0 nil])
([nil nil ((3984 . 4005) (4805 . 4821) (t 26711 57339 241561 492000)) nil (26711 57354 813465 438000) 0 nil])
([nil nil ((4912 . 4913) (#("
" 0 1 (face (bold) fontified t)) . -4912) (undo-tree-id326 . -1) 4843) nil (26711 57354 813462 783000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6023 . 6024) (nil fontified nil 4927 . 6024) (4927 . 6024) (#("
%% \\begin{longtable}[]{@{}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 6\\tabcolsep) * \\real{0.1368}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 6\\tabcolsep) * \\real{0.2479}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 6\\tabcolsep) * \\real{0.4217}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 6\\tabcolsep) * \\real{0.1937}}@{}}
%% \\toprule\\noalign{}
%% \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Year}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Country}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Mine}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Fatalities}
%% \\end{minipage} \\\\
%% \\midrule\\noalign{}
%% \\endhead
%% \\bottomrule\\noalign{}
%% \\endlastfoot
%% 1962 & Germany & Luisenthal & 299 \\\\
%% 1969 & Mexico & Barroteran & 300 \\\\
%% 1972 & Rhodesia & Wankie & 400 \\\\
%% 1975 & India & Dhanbad & 431 \\\\
%% 1979 & Kazakhstan & Sokurskaya & 72 \\\\
%% 1987 & Ukraine & Chaykino & 36 \\\\
%% 1990 & Yugoslavia & Dobrinja & 180 \\\\
%% 1992 & Ukraine & Sukhodolska-Vostochnaya & 63 \\\\
%% 1997 & Russia & Zyryanovskaya & 67 \\\\
%% 1997 & Turkey & Armutcuk & 217 \\\\
%% 2006 & Kazakhstan & Lenin Mine (Shakhtinsk) & 41 \\\\
%% 2007 & Ukraine & AF Zasyadko Mine & 106 \\\\
%% 2010 & New Zealand & Pike River & 29 \\\\
%% 2010 & Russia & Raspadskaya & 91 \\\\
%% 2013 & China & Binxian & 28 \\\\
%% 2014 & Turkey & Soma & 301 \\\\
%% 2015 & Pakistan & Orakzai & 45 \\\\
%% 2016 & China & Chifeng & 32 \\\\
%% 2020 & China & Chongqing & 23 \\\\
%% 2021 & Kazakhstan & Abayskaya (Abay) & 6 \\\\
%% 2022 & Russia & Listvyazhnaya & 51 \\\\
%% 2023 & Kazakhstan & Kostyanko (Karaganda) & 46 \\\\
%% \\end{longtable}" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 10 (face font-lock-comment-face fontified t) 10 21 (face font-lock-comment-face fontified t latex-env-pair t) 21 28 (face font-lock-comment-face fontified t) 28 33 (face font-lock-comment-delimiter-face fontified t) 33 107 (face font-lock-comment-face fontified t) 107 112 (face font-lock-comment-delimiter-face fontified t) 112 186 (face font-lock-comment-face fontified t) 186 191 (face font-lock-comment-delimiter-face fontified t) 191 265 (face font-lock-comment-face fontified t) 265 270 (face font-lock-comment-delimiter-face fontified t) 270 348 (face font-lock-comment-face fontified t) 348 351 (face font-lock-comment-delimiter-face fontified t) 351 370 (face font-lock-comment-face fontified t) 370 373 (face font-lock-comment-delimiter-face fontified t) 373 379 (face font-lock-comment-face fontified t) 379 389 (face font-lock-comment-face fontified t latex-env-pair t) 389 415 (face font-lock-comment-face fontified t) 415 418 (face font-lock-comment-delimiter-face fontified t) 418 435 (face font-lock-comment-face fontified t) 435 438 (face font-lock-comment-delimiter-face fontified t) 438 442 (face font-lock-comment-face fontified t) 442 452 (face font-lock-comment-face fontified t latex-env-pair t) 452 461 (face font-lock-comment-face fontified t) 461 471 (face font-lock-comment-face fontified t latex-env-pair t) 471 472 (face font-lock-comment-face fontified t) 472 497 (face font-lock-comment-face fontified t) 497 500 (face font-lock-comment-delimiter-face fontified t) 500 520 (face font-lock-comment-face fontified t) 520 523 (face font-lock-comment-delimiter-face fontified t) 523 527 (face font-lock-comment-face fontified t) 527 537 (face font-lock-comment-face fontified t latex-env-pair t) 537 546 (face font-lock-comment-face fontified t) 546 556 (face font-lock-comment-face fontified t latex-env-pair t) 556 582 (face font-lock-comment-face fontified t) 582 585 (face font-lock-comment-delimiter-face fontified t) 585 602 (face font-lock-comment-face fontified t) 602 605 (face font-lock-comment-delimiter-face fontified t) 605 609 (face font-lock-comment-face fontified t) 609 619 (face font-lock-comment-face fontified t latex-env-pair t) 619 628 (face font-lock-comment-face fontified t) 628 638 (face font-lock-comment-face fontified t latex-env-pair t) 638 650 (face font-lock-comment-face fontified t) 650 664 (fontified t face font-lock-comment-face) 664 667 (face font-lock-comment-delimiter-face fontified t) 667 690 (face font-lock-comment-face fontified t) 690 693 (face font-lock-comment-delimiter-face fontified t) 693 697 (face font-lock-comment-face fontified t) 697 707 (face font-lock-comment-face fontified t latex-env-pair t) 707 711 (face font-lock-comment-face fontified t) 711 714 (face font-lock-comment-delimiter-face fontified t) 714 733 (face font-lock-comment-face fontified t) 733 736 (face font-lock-comment-delimiter-face fontified t) 736 745 (face font-lock-comment-face fontified t) 745 748 (face font-lock-comment-delimiter-face fontified t) 748 770 (face font-lock-comment-face fontified t) 770 773 (face font-lock-comment-delimiter-face fontified t) 773 786 (face font-lock-comment-face fontified t) 786 789 (face font-lock-comment-delimiter-face fontified t) 789 826 (face font-lock-comment-face fontified t) 826 829 (face font-lock-comment-delimiter-face fontified t) 829 865 (face font-lock-comment-face fontified t) 865 868 (face font-lock-comment-delimiter-face fontified t) 868 902 (face font-lock-comment-face fontified t) 902 905 (face font-lock-comment-delimiter-face fontified t) 905 937 (face font-lock-comment-face fontified t) 937 940 (face font-lock-comment-delimiter-face fontified t) 940 979 (face font-lock-comment-face fontified t) 979 982 (face font-lock-comment-delimiter-face fontified t) 982 1016 (face font-lock-comment-face fontified t) 1016 1019 (face font-lock-comment-delimiter-face fontified t) 1019 1057 (face font-lock-comment-face fontified t) 1057 1060 (face font-lock-comment-delimiter-face fontified t) 1060 1109 (face font-lock-comment-face fontified t) 1109 1112 (face font-lock-comment-delimiter-face fontified t) 1112 1150 (face font-lock-comment-face fontified t) 1150 1153 (face font-lock-comment-delimiter-face fontified t) 1153 1187 (face font-lock-comment-face fontified t) 1187 1190 (face font-lock-comment-delimiter-face fontified t) 1190 1242 (face font-lock-comment-face fontified t) 1242 1245 (face font-lock-comment-delimiter-face fontified t) 1245 1288 (face font-lock-comment-face fontified t) 1288 1291 (face font-lock-comment-delimiter-face fontified t) 1291 1331 (face font-lock-comment-face fontified t) 1331 1334 (face font-lock-comment-delimiter-face fontified t) 1334 1370 (face font-lock-comment-face fontified t) 1370 1373 (face font-lock-comment-delimiter-face fontified t) 1373 1404 (face font-lock-comment-face fontified t) 1404 1407 (face font-lock-comment-delimiter-face fontified t) 1407 1437 (face font-lock-comment-face fontified t) 1437 1440 (face font-lock-comment-delimiter-face fontified t) 1440 1474 (face font-lock-comment-face fontified t) 1474 1477 (face font-lock-comment-delimiter-face fontified t) 1477 1508 (face font-lock-comment-face fontified t) 1508 1511 (face font-lock-comment-delimiter-face fontified t) 1511 1544 (face font-lock-comment-face fontified t) 1544 1547 (face font-lock-comment-delimiter-face fontified t) 1547 1591 (face font-lock-comment-face fontified t) 1591 1594 (face font-lock-comment-delimiter-face fontified t) 1594 1632 (face font-lock-comment-face fontified t) 1632 1635 (face font-lock-comment-delimiter-face fontified t) 1635 1685 (face font-lock-comment-face fontified t) 1685 1688 (face font-lock-comment-delimiter-face fontified t) 1688 1692 (face font-lock-comment-face fontified t) 1692 1703 (face font-lock-comment-face fontified t latex-env-pair t)) . 4927) (undo-tree-id334 . -1702) (undo-tree-id335 . -1685) (undo-tree-id336 . -520) (undo-tree-id337 . -1685) 6631 (t 26711 57354 815477 537000)) nil (26711 57391 824850 591000) 0 nil])
([nil nil ((#("% \\usepackage{tabularray}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 26 (face font-lock-comment-face fontified t)) . 4927) (undo-tree-id333 . -25)) nil (26711 57391 824848 668000) 0 nil])
([nil nil ((#("{\\bfseries Table 1 - Methane Explosions with Fatalities in Coal Mines (1962--2023)}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 69 (face (bold) fontified t) 69 70 (face (bold) fontified t) 70 82 (face (bold) fontified t) 82 84 (fontified t)) . -4843) (undo-tree-id327 . -84) (undo-tree-id328 . -84) (undo-tree-id329 . -84) (undo-tree-id330 . -84) (undo-tree-id331 . -69) (undo-tree-id332 . -84) 4927) nil (26711 57391 824847 816000) 0 nil])
([nil nil ((4860 . 4861) 4843) nil (26711 57391 824837 697000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4956 . 4957) (nil fontified nil 4861 . 4957) (4861 . 4957)) nil (26711 57391 824834 50000) 0 nil])
([nil nil ((#("  width = \\linewidth,
" 0 10 (fontified t) 10 20 (face font-lock-keyword-face fontified t) 20 22 (fontified t)) . 4993) (undo-tree-id355 . -21) (undo-tree-id356 . -20) (undo-tree-id357 . -20) (undo-tree-id358 . -20) (undo-tree-id359 . -20) (undo-tree-id360 . -20) (undo-tree-id361 . -20) (undo-tree-id362 . -20) (undo-tree-id363 . -20) (undo-tree-id364 . -20) (undo-tree-id365 . -20) (undo-tree-id366 . -20) (undo-tree-id367 . -20) (undo-tree-id368 . -20) (undo-tree-id369 . -20) (undo-tree-id370 . -20) (undo-tree-id371 . -20) (undo-tree-id372 . -20) (undo-tree-id373 . -20) (undo-tree-id374 . -20) (undo-tree-id375 . -20) (undo-tree-id376 . -20) (undo-tree-id377 . -20) (undo-tree-id378 . -20) (undo-tree-id379 . -20) (undo-tree-id380 . -22) 5013 (t 26711 57391 826278 6000)) nil (26711 57400 639152 378000) 0 nil])
([nil nil ((#("  colspec = {Q[94]Q[223]Q[429]Q[181]},
" 0 38 (fontified t) 38 39 (fontified t)) . 4993) (undo-tree-id338 . -38) (undo-tree-id339 . -38) (undo-tree-id340 . -20) (undo-tree-id341 . -20) (undo-tree-id342 . -20) (undo-tree-id343 . -20) (undo-tree-id344 . -20) (undo-tree-id345 . -20) (undo-tree-id346 . -20) (undo-tree-id347 . -20) (undo-tree-id348 . -20) (undo-tree-id349 . -20) (undo-tree-id350 . -20) (undo-tree-id351 . -20) (undo-tree-id352 . -20) (undo-tree-id353 . -20) (undo-tree-id354 . -39) 5013) nil (26711 57400 639141 26000) 0 nil])
([nil nil ((5952 . 5973) (20692 . 20708) (t 26711 57400 640230 488000)) nil (26711 57431 45459 417000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20729) (undo-tree-id381 . -1)) nil (26711 57431 45456 422000) 0 nil])
([nil nil ((#("{\\bfseries Fig.1- Dependence of Gas Content on Depth in Karaganda Basin}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 71 (face (bold) fontified t) 71 72 (fontified t)) . -20848) 20921 (t 26711 57431 48066 566000)) nil (26711 57450 519509 322000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20890 . 20891) (nil fontified nil 20831 . 20891) (20831 . 20891)) nil (26711 57450 519508 942000) 0 nil])
([nil nil ((20836 . 20837)) nil (26711 57450 519508 661000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20907) (undo-tree-id401 . -1)) nil (26711 57450 519508 291000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20907) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1)) nil (26711 57450 519507 369000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20907)) nil (26711 57450 519502 900000) 0 nil])
([nil nil ((#("{\\bfseries Fig.2- Outburst Gas Release per Mine in Karaganda Basin}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 66 (face (bold) fontified t) 66 67 (fontified t)) . -21201) 21269) nil (26711 57450 519502 600000) 0 nil])
([nil nil ((nil rear-nonsticky nil 21238 . 21239) (nil fontified nil 21184 . 21239) (21184 . 21239)) nil (26711 57450 519502 229000) 0 nil])
([nil nil ((21189 . 21190)) nil (26711 57450 519501 858000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21082) (undo-tree-id392 . -1)) nil (26711 57450 519501 468000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21254) (undo-tree-id391 . -1)) nil (26711 57450 519500 726000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21254) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1)) nil (26711 57450 519499 945000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21254)) nil (26711 57450 519496 158000) 0 nil])
([nil nil ((21645 . 21646) (#("
" 0 1 (face (bold) fontified t)) . -21645) (undo-tree-id382 . -1) 21571) nil (26711 57450 519493 343000) 0 nil])
([nil nil ((15810 . 15811) (t 26711 57450 521961 578000) 15810) nil (26711 57510 58314 770000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15887 . 15888) (nil fontified nil 15811 . 15888) (15811 . 15888)) nil (26711 57510 58310 732000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 15828) (t 26711 57510 60640 608000)) nil (26711 57546 172668 769000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 15828)) nil (26711 57546 172668 548000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 15828)) nil (26711 57546 172668 198000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 15828)) nil (26711 57546 172667 256000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 15828)) nil (26711 57546 172666 775000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 15828)) nil (26711 57546 172666 595000) 0 nil])
([nil nil ((15828 . 15829) (#("р" 0 1 (fontified t)) . 15828)) nil (26711 57546 172666 384000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 15829)) nil (26711 57546 172666 144000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15829)) nil (26711 57546 172665 974000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 15829)) nil (26711 57546 172665 793000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 15829)) nil (26711 57546 172665 633000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 15829)) nil (26711 57546 172665 473000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 15829)) nil (26711 57546 172665 222000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 15829)) nil (26711 57546 172664 922000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15829)) nil (26711 57546 172664 561000) 0 nil])
([nil nil ((15829 . 15830)) nil (26711 57546 172664 220000) 0 nil])
([nil nil ((15831 . 15833)) nil (26711 57546 172661 104000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15877) (undo-tree-id413 . -1) (t 26711 57546 174445 920000)) nil (26711 57578 307424 261000) 0 nil])
([nil nil ((#("\\emph{р*\\textsubscript{s} -- p\\textsubscript{2}} ≥
" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 8 (face (italic) fontified t) 8 22 (face (font-lock-keyword-face italic) fontified t) 22 30 (face (italic) fontified t) 30 44 (face (font-lock-keyword-face italic) fontified t) 44 47 (face (italic) fontified t) 47 50 (fontified t) 50 51 (fontified t)) . 15877) (undo-tree-id410 . -50) (undo-tree-id411 . -50) (undo-tree-id412 . -51)) nil (26711 57578 307423 500000) 0 nil])
([nil nil ((#("\\emph{ασ\\textsubscript{k} ,} (1)
" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 8 (face (italic) fontified t) 8 22 (face (font-lock-keyword-face italic) fontified t) 22 27 (face (italic) fontified t) 27 32 (fontified t) 32 33 (fontified t)) . 15877) (undo-tree-id409 . -32)) nil (26711 57578 307422 67000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 15884)) nil (26711 57578 307421 145000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 15884)) nil (26711 57578 307420 905000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 15884)) nil (26711 57578 307420 584000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 15884)) nil (26711 57578 307420 324000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 15884)) nil (26711 57578 307420 133000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 15884)) nil (26711 57578 307419 873000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 15884)) nil (26711 57578 307419 562000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 15884)) nil (26711 57578 307419 272000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 15884)) nil (26711 57578 307418 891000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 15884)) nil (26711 57578 307418 610000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 15884)) nil (26711 57578 307418 340000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 15884)) nil (26711 57578 307418 59000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 15884)) nil (26711 57578 307417 749000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 15884)) nil (26711 57578 307417 468000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . 15884)) nil (26711 57578 307416 597000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 15884)) nil (26711 57578 307416 316000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 15884)) nil (26711 57578 307416 26000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 15884)) nil (26711 57578 307415 785000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 15884)) nil (26711 57578 307415 515000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 15884)) nil (26711 57578 307415 234000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 15884)) nil (26711 57578 307414 974000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 15884)) nil (26711 57578 307414 733000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 15884)) nil (26711 57578 307414 382000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 15884)) nil (26711 57578 307414 72000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 15884)) nil (26711 57578 307413 882000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 15884)) nil (26711 57578 307413 631000) 0 nil])
([nil nil ((15884 . 15886)) nil (26711 57578 307413 471000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15889 . 15890) (nil fontified nil 15885 . 15890) (15885 . 15890) 15884) nil (26711 57578 307413 220000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 15979)) nil (26711 57578 307412 800000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 15979)) nil (26711 57578 307412 539000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 15979)) nil (26711 57578 307412 238000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 15979)) nil (26711 57578 307412 38000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 15979)) nil (26711 57578 307411 707000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 15979)) nil (26711 57578 307411 357000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 15979)) nil (26711 57578 307411 197000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 15979)) nil (26711 57578 307410 956000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 15979)) nil (26711 57578 307410 796000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 15979)) nil (26711 57578 307410 545000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 15979)) nil (26711 57578 307410 225000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 15979)) nil (26711 57578 307409 994000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 15979)) nil (26711 57578 307409 694000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . 15979)) nil (26711 57578 307409 283000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 15979)) nil (26711 57578 307409 113000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 15979)) nil (26711 57578 307408 942000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 15979)) nil (26711 57578 307408 772000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 15979)) nil (26711 57578 307408 441000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 15979)) nil (26711 57578 307408 271000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 15979)) nil (26711 57578 307407 900000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 15979)) nil (26711 57578 307407 630000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 15979) (undo-tree-id408 . -1)) nil (26711 57578 307407 329000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 15979) (undo-tree-id406 . -1) (undo-tree-id407 . -1)) nil (26711 57578 307406 277000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 15979) (undo-tree-id404 . -1) (undo-tree-id405 . -1)) nil (26711 57578 307404 945000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 15979) (undo-tree-id402 . -1) (undo-tree-id403 . -1)) nil (26711 57578 307403 262000) 0 nil])
([nil nil ((15979 . 15984)) nil (26711 57578 307391 420000) 0 nil])
([nil nil ((15981 . 15982) (#("?" 0 1 (face tex-math fontified t)) . 15981) (undo-tree-id414 . -1) (15981 . 15982) (#("_" 0 1 (face tex-math fontified t)) . 15981) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (t 26711 57578 309272 672000)) nil (26711 57581 163440 755000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 16040) (t 26711 57581 165257 275000)) nil (26711 57593 286189 292000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 16040)) nil (26711 57593 286189 52000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 16040)) nil (26711 57593 286188 881000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 16040)) nil (26711 57593 286188 651000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 16040)) nil (26711 57593 286188 490000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 16040)) nil (26711 57593 286188 300000) 0 nil])
([nil nil ((#("σ" 0 1 (fontified t)) . 16040)) nil (26711 57593 286187 980000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 16040)) nil (26711 57593 286187 729000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 16040)) nil (26711 57593 286187 449000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 16040)) nil (26711 57593 286186 597000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 16040)) nil (26711 57593 286186 346000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 16040)) nil (26711 57593 286186 76000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 16040)) nil (26711 57593 286185 886000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . 16040)) nil (26711 57593 286185 655000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 16040)) nil (26711 57593 286185 415000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 16040)) nil (26711 57593 286185 94000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 16040)) nil (26711 57593 286184 653000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 16040)) nil (26711 57593 286184 233000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 16040)) nil (26711 57593 286183 982000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 16040)) nil (26711 57593 286183 621000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 16040)) nil (26711 57593 286183 201000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 16040)) nil (26711 57593 286182 980000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . 16040)) nil (26711 57593 286182 609000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 16040)) nil (26711 57593 286182 329000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 16040)) nil (26711 57593 286182 18000) 0 nil])
([nil nil ((16043 . 16050) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -16043) (undo-tree-id427 . -1) (16040 . 16044)) nil (26711 57593 286181 558000) 0 nil])
([nil nil ((15858 . 15859) (#(" " 0 1 (fontified t)) . 15858) (undo-tree-id426 . -1)) nil (26711 57593 286177 620000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092) (t 26711 57593 288191 914000)) nil (26711 57611 347684 70000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347683 740000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347683 489000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347683 229000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347682 968000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347682 618000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347682 447000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347682 147000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347681 916000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347681 576000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347681 325000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347681 55000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347680 684000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347680 424000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347680 173000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347679 913000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347679 552000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347678 670000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347678 400000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347678 39000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347677 789000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347677 538000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347677 218000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347676 807000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347676 637000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347676 366000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347676 146000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347675 885000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347675 725000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347675 384000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347675 134000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347674 873000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347674 593000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347674 332000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347674 152000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347673 821000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347673 511000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347673 190000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347673 20000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347672 699000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347672 369000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347672 18000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347671 156000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347670 916000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347670 685000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347670 385000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16092)) nil (26711 57611 347670 205000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16092)) nil (26711 57611 347669 964000) 0 nil])
([nil nil ((#("(2)
" 0 4 (fontified t)) . 16205) (undo-tree-id428 . -3) (undo-tree-id429 . -4) (undo-tree-id430 . -4) (undo-tree-id431 . -2) 16207) nil (26711 57611 347669 523000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 16090)) nil (26711 57611 347660 967000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 16090)) nil (26711 57611 347660 607000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-keyword-face fontified t)) . 16201)) nil (26711 57611 347660 376000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16200)) nil (26711 57611 347660 56000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16199)) nil (26711 57611 347659 725000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16198)) nil (26711 57611 347659 174000) 0 nil])
([nil nil ((16090 . 16107) (16199 . 16214)) nil (26711 57611 347655 307000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17269 . 17270) (nil fontified nil 17170 . 17270) (17170 . 17270) (#("(3)
" 0 4 (fontified t)) . 17170) (undo-tree-id432 . -4) (undo-tree-id433 . -3) (undo-tree-id434 . -2) (undo-tree-id435 . -2) (undo-tree-id436 . -4) (undo-tree-id437 . -4) (undo-tree-id438 . -2) (undo-tree-id439 . -2) (undo-tree-id440 . -2) (undo-tree-id441 . -2) (undo-tree-id442 . -2) (undo-tree-id443 . -2) (undo-tree-id444 . -2) (undo-tree-id445 . -2) (undo-tree-id446 . -2) (undo-tree-id447 . -2) (undo-tree-id448 . -2) (undo-tree-id449 . -2) (undo-tree-id450 . -2) (undo-tree-id451 . -2) (undo-tree-id452 . -2) (undo-tree-id453 . -2) (undo-tree-id454 . -2) (undo-tree-id455 . -2) (undo-tree-id456 . -2) (undo-tree-id457 . -2) (undo-tree-id458 . -2) (undo-tree-id459 . -2) (undo-tree-id460 . -2) (undo-tree-id461 . -2) (undo-tree-id462 . -2) (undo-tree-id463 . -2) (undo-tree-id464 . -2) (undo-tree-id465 . -2) (undo-tree-id466 . -2) (undo-tree-id467 . -2) (undo-tree-id468 . -2) (undo-tree-id469 . -2) (undo-tree-id470 . -2) (undo-tree-id471 . -2) (undo-tree-id472 . -2) (undo-tree-id473 . -2) (undo-tree-id474 . -2) (undo-tree-id475 . -2) (undo-tree-id476 . -2) (undo-tree-id477 . -2) (undo-tree-id478 . -2) (undo-tree-id479 . -2) (undo-tree-id480 . -2) (undo-tree-id481 . -2) (undo-tree-id482 . -4) (undo-tree-id483 . -4) 17174 (t 26711 57611 349094 563000)) nil (26711 57661 61945 511000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 16238) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (t 26711 57661 64826 525000)) nil (26711 57669 32495 588000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 16238) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1)) nil (26711 57669 32491 59000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 16238) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1)) nil (26711 57669 32488 795000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 16238) (undo-tree-id526 . -1) (undo-tree-id527 . -1)) nil (26711 57669 32487 473000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 16238) (undo-tree-id524 . -1) (undo-tree-id525 . -1)) nil (26711 57669 32486 611000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 16238) (undo-tree-id522 . -1) (undo-tree-id523 . -1)) nil (26711 57669 32484 146000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 16238) (undo-tree-id520 . -1) (undo-tree-id521 . -1)) nil (26711 57669 32481 561000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 16238) (undo-tree-id518 . -1) (undo-tree-id519 . -1)) nil (26711 57669 32478 546000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 16238) (undo-tree-id516 . -1) (undo-tree-id517 . -1)) nil (26711 57669 32472 615000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 16238) (undo-tree-id514 . -1) (undo-tree-id515 . -1)) nil (26711 57669 32471 422000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 16238) (undo-tree-id512 . -1) (undo-tree-id513 . -1)) nil (26711 57669 32469 649000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 16238) (undo-tree-id510 . -1) (undo-tree-id511 . -1)) nil (26711 57669 32467 836000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 16238) (undo-tree-id508 . -1) (undo-tree-id509 . -1)) nil (26711 57669 32466 884000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . 16238) (undo-tree-id506 . -1) (undo-tree-id507 . -1)) nil (26711 57669 32465 962000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 16238) (undo-tree-id504 . -1) (undo-tree-id505 . -1)) nil (26711 57669 32465 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 16238) (undo-tree-id502 . -1) (undo-tree-id503 . -1)) nil (26711 57669 32464 89000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 16238) (undo-tree-id500 . -1) (undo-tree-id501 . -1)) nil (26711 57669 32463 77000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 16238) (undo-tree-id498 . -1) (undo-tree-id499 . -1)) nil (26711 57669 32461 965000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 16238) (undo-tree-id496 . -1) (undo-tree-id497 . -1)) nil (26711 57669 32460 21000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 16238) (undo-tree-id494 . -1) (undo-tree-id495 . -1)) nil (26711 57669 32458 809000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 16238) (undo-tree-id492 . -1) (undo-tree-id493 . -1)) nil (26711 57669 32457 647000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 16238) (undo-tree-id490 . -1) (undo-tree-id491 . -1)) nil (26711 57669 32456 334000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 16238) (undo-tree-id488 . -1) (undo-tree-id489 . -1)) nil (26711 57669 32455 42000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 16238) (undo-tree-id486 . -1) (undo-tree-id487 . -1)) nil (26711 57669 32452 908000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 16238) (undo-tree-id484 . -1) (undo-tree-id485 . -1)) nil (26711 57669 32451 375000) 0 nil])
([nil nil ((16238 . 16243)) nil (26711 57669 32439 102000) 0 nil])
([nil nil ((16688 . 16689) (t 26711 57669 34783 553000)) nil (26711 57681 724458 14000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 16689) (undo-tree-id613 . 1)) nil (26711 57681 724457 763000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 16689) (undo-tree-id612 . 1)) nil (26711 57681 724457 232000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 16689) (undo-tree-id611 . 1)) nil (26711 57681 724456 591000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 16689) (undo-tree-id610 . 1)) nil (26711 57681 724456 80000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 16689) (undo-tree-id609 . 1)) nil (26711 57681 724455 579000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 16689) (undo-tree-id608 . 1)) nil (26711 57681 724455 38000) 0 nil])
([nil nil ((#("σ" 0 1 (fontified t)) . 16689) (undo-tree-id607 . 1)) nil (26711 57681 724454 517000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 16689) (undo-tree-id606 . 1)) nil (26711 57681 724453 856000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 16689) (undo-tree-id605 . 1)) nil (26711 57681 724453 415000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 16689) (undo-tree-id604 . 1)) nil (26711 57681 724452 143000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 16689) (undo-tree-id603 . 1)) nil (26711 57681 724451 321000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 16689) (undo-tree-id602 . 1)) nil (26711 57681 724449 849000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 16689) (undo-tree-id601 . 1)) nil (26711 57681 724449 398000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . 16689) (undo-tree-id600 . 1)) nil (26711 57681 724448 827000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 16689) (undo-tree-id599 . 1)) nil (26711 57681 724448 226000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 16689) (undo-tree-id598 . 1)) nil (26711 57681 724447 554000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 16689) (undo-tree-id597 . 1)) nil (26711 57681 724446 973000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 16689) (undo-tree-id596 . 1)) nil (26711 57681 724446 372000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 16689) (undo-tree-id595 . 1)) nil (26711 57681 724445 781000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 16689) (undo-tree-id594 . 1)) nil (26711 57681 724444 829000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 16689) (undo-tree-id593 . 1)) nil (26711 57681 724444 248000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 16689) (undo-tree-id592 . 1)) nil (26711 57681 724443 657000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . 16689) (undo-tree-id591 . 1)) nil (26711 57681 724443 16000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 16689) (undo-tree-id590 . 1)) nil (26711 57681 724442 395000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 16689) (undo-tree-id589 . 1)) nil (26711 57683 744962 354000) 0 nil])
([nil nil ((16692 . 16699) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . 16692) (16689 . 16693)) ((#("$\\si" 0 1 (face tex-math fontified nil) 1 3 (face tex-math fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 16689) (undo-tree-id614 . -3) (undo-tree-id615 . -3) (16692 . 16693) (#("igma_k$" 0 4 (face tex-math fontified t) 4 5 (face tex-math fontified t) 5 6 (face (tex-math subscript) display (raise -0.2) fontified t) 6 7 (face tex-math fontified t)) . 16692) (undo-tree-id616 . -6) (undo-tree-id617 . -6)) (26711 57684 457056 396000) 0 nil])
([nil nil ((17503 . 17504) (#("
" 0 1 (fontified t)) . -17503) (undo-tree-id618 . -1) 17502 (t 26711 57684 800698 565000)) nil (26711 57712 980131 427000) 0 nil] [nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 16912) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1)) ((16912 . 16913)) (26711 57683 242509 775000) 0 nil])
([nil nil ((17501 . 17510)) nil (26711 57712 980119 274000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 16912) (undo-tree-id569 . -1) (undo-tree-id570 . -1)) ((16912 . 16913)) (26711 57683 2912 316000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17804 . 17805) (nil fontified nil 17237 . 17805) (17237 . 17805) (#("where \\emph{U\\textsubscript{0}\\textsuperscript{'\\,'}}\\(U_{0}^{\"}\\) --
initial activation energy of destruction;

\\emph{k} -- the Boltzmann constant.

\\emph{T} -- absolute temperature of the test material.

\\emph{τ} -- time to destruction of a solid (durability);

$\\tau_0$ -- oscillation period of an atom in the crystal lattice.

\\emph{γ} = \\emph{q\\textsubscript{str} V\\textsubscript{a}} -- coefficient
of the solid body structure;

\\emph{q\\textsubscript{str}} -- coefficient that takes into account the
overvoltage of elementary bonds due-to the presence of structural
defects in a solid (microcracks, pores, dislocations, etc.).

\\emph{V\\textsubscript{а}} -- activation volume.
" 0 6 (fontified t) 6 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 13 (face (italic) fontified t) 13 22 (face (font-lock-keyword-face italic) fontified t) 22 27 (face (font-lock-keyword-face italic) fontified t) 27 30 (face (italic) fontified t) 30 38 (face (font-lock-keyword-face italic) fontified t) 38 46 (face (font-lock-keyword-face italic) fontified t) 46 48 (face (italic) fontified t) 48 50 (face (font-lock-keyword-face italic) fontified t) 50 52 (face (italic) fontified t) 52 53 (fontified t) 53 55 (face font-lock-keyword-face fontified t) 55 57 (fontified t) 57 60 (face (subscript) fontified t display (raise -0.2)) 60 61 (fontified t) 61 64 (face (superscript) fontified t display (raise 0.2)) 64 66 (face font-lock-keyword-face fontified t) 66 70 (fontified t) 70 88 (fontified t) 88 112 (fontified t) 112 113 (fontified t) 113 118 (face font-lock-keyword-face fontified t) 118 119 (fontified t) 119 120 (face (italic) fontified t) 120 121 (fontified t) 121 123 (fontified t) 123 149 (fontified t) 149 150 (fontified t) 150 155 (face font-lock-keyword-face fontified t) 155 156 (fontified t) 156 157 (face (italic) fontified t) 157 161 (fontified t) 161 191 (fontified t) 191 205 (fontified t) 205 206 (fontified t) 206 211 (face font-lock-keyword-face fontified t) 211 212 (fontified t) 212 213 (face (italic) fontified t) 213 244 (fontified t) 244 263 (fontified t) 263 264 (fontified t) 264 265 (face tex-math fontified t) 265 269 (face tex-math fontified t) 269 270 (face tex-math fontified t) 270 271 (face (tex-math subscript) display (raise -0.2) fontified t) 271 272 (face tex-math fontified t) 272 273 (fontified t) 273 274 (display nil fontified t) 274 275 (fontified t) 275 276 (fontified t) 276 277 (fontified t) 277 321 (fontified t) 321 330 (fontified t) 330 331 (fontified t) 331 334 (face font-lock-keyword-face fontified t) 334 336 (face font-lock-keyword-face fontified t) 336 337 (fontified t) 337 338 (face (italic) fontified t) 338 342 (fontified t) 342 347 (face font-lock-keyword-face fontified t) 347 348 (fontified t) 348 349 (face (italic) fontified t) 349 363 (face (font-lock-keyword-face italic) fontified t) 363 370 (face (italic) fontified t) 370 384 (face (font-lock-keyword-face italic) fontified t) 384 387 (face (italic) fontified t) 387 397 (fontified t) 397 399 (fontified t) 399 404 (fontified t) 404 405 (fontified t) 405 433 (fontified t) 433 434 (fontified t) 434 435 (face font-lock-keyword-face fontified t) 435 439 (face font-lock-keyword-face fontified t) 439 440 (fontified t) 440 441 (face (italic) fontified t) 441 455 (face (font-lock-keyword-face italic) fontified t) 455 460 (face (italic) fontified t) 460 493 (fontified t) 493 505 (fontified t) 505 522 (fontified t) 522 561 (fontified t) 561 571 (fontified t) 571 633 (fontified t) 633 638 (face font-lock-keyword-face fontified t) 638 639 (fontified t) 639 640 (face (italic) fontified t) 640 654 (face (font-lock-keyword-face italic) fontified t) 654 657 (face (italic) fontified t) 657 681 (fontified t)) . 17237) (undo-tree-id619 . -681) (undo-tree-id620 . -680) (undo-tree-id621 . -7) (undo-tree-id622 . -640) (undo-tree-id623 . 408) (undo-tree-id624 . -271) (undo-tree-id625 . -681) (undo-tree-id626 . -434) (undo-tree-id627 . -331) (undo-tree-id628 . -263) (undo-tree-id629 . -640) (undo-tree-id630 . -7) (undo-tree-id631 . -272) (undo-tree-id632 . -640) 17918 (t 26711 57712 982546 649000)) nil (26711 57852 735409 692000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 16912) (undo-tree-id567 . -1) (undo-tree-id568 . -1)) ((16912 . 16913)) (26711 57682 694612 615000) 0 nil])
([nil nil ((17776 . 17777) 17775) nil (26711 57852 735396 627000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 16912) (undo-tree-id565 . -1) (undo-tree-id566 . -1)) ((16912 . 16913)) (26711 57682 501930 389000) 0 nil])
([nil nil ((17585 . 17586) 17508) nil (26711 57852 735396 317000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 16912) (undo-tree-id563 . -1) (undo-tree-id564 . -1)) ((16912 . 16913)) (26711 57682 308938 305000) 0 nil])
([nil nil ((17507 . 17508) 17440) nil (26711 57852 735395 996000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 16912) (undo-tree-id561 . -1) (undo-tree-id562 . -1)) ((16912 . 16913)) (26711 57682 4190 899000) 0 nil])
([nil nil ((17439 . 17440) 17383) nil (26711 57852 735395 295000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . 16912) (undo-tree-id559 . -1) (undo-tree-id560 . -1)) ((16912 . 16913)) (26711 57681 953729 121000) 0 nil])
([nil nil ((17382 . 17383) 17331) nil (26711 57852 735394 904000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 16912) (undo-tree-id557 . -1) (undo-tree-id558 . -1)) ((16912 . 16913)) (26711 57681 904164 322000) 0 nil])
([nil nil ((17330 . 17331) 17298) nil (26711 57852 735394 313000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 16912) (undo-tree-id555 . -1) (undo-tree-id556 . -1)) ((16912 . 16913)) (26711 57681 856822 410000) 0 nil])
([nil nil ((17297 . 17298) 17237) nil (26711 57852 735390 696000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 16912) (undo-tree-id553 . -1) (undo-tree-id554 . -1)) ((16912 . 16913)) (26711 57681 724545 287000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18738 . 18739) (nil fontified nil 17813 . 18739) (17813 . 18739) (#("Let us consider the strength of coal in relation to particles of size
10\\textsuperscript{-3} cm, which corresponds more to the mesoscopic
level with a linear size of dislocation substructures \\emph{l}≈0.01-10
microns and characterized by collective movement of dislocation
structures. For gas-saturated coal, it is necessary to take into account
the phenomenon of adsorption decrease in strength (Rebinder effect). It
is caused by proppant pressure caused by sorption forces, i.e. forces of
interaction between methane molecules and the coal surface. This
circumstance can be taken into account by introducing \\emph{γ} an
additional coefficient into the formula for finding the structure
coefficient \\emph{q\\textsubscript{g}}, which takes into account the
overvoltage of elementary bonds due to the proppant action of gas
molecules. At the same time, the natural disturbance of fossil coals is
the main factor in the softening effect of gas on coal.
" 0 70 (fontified t) 70 72 (fontified t) 72 88 (face font-lock-keyword-face fontified t) 88 138 (fontified t) 138 192 (fontified t) 192 197 (face font-lock-keyword-face fontified t) 197 198 (fontified t) 198 199 (face (italic) fontified t) 199 209 (fontified t) 209 252 (fontified t) 252 273 (fontified t) 273 274 (fontified t) 274 326 (fontified t) 326 346 (fontified t) 346 418 (fontified t) 418 469 (fontified t) 469 491 (fontified t) 491 610 (fontified t) 610 615 (face font-lock-keyword-face fontified t) 615 616 (fontified t) 616 617 (face (italic) fontified t) 617 700 (fontified t) 700 705 (face font-lock-keyword-face fontified t) 705 706 (fontified t) 706 707 (face (italic) fontified t) 707 721 (face (font-lock-keyword-face italic) fontified t) 721 724 (face (italic) fontified t) 724 726 (fontified t) 726 756 (fontified t) 756 827 (fontified t) 827 894 (fontified t) 894 950 (fontified t)) . 17813) (undo-tree-id633 . -950) (undo-tree-id634 . -949) (undo-tree-id635 . -894) (undo-tree-id636 . -950) (undo-tree-id637 . -894) 18763 (t 26711 57852 738793 221000)) nil (26711 57895 969332 729000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 16912) (undo-tree-id551 . -1) (undo-tree-id552 . -1)) ((16912 . 16913)) (26711 57681 724395 357000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -18692) (18691 . 18692) (#(" " 0 1 (fontified nil)) . -18625) (18624 . 18625) (#(" " 0 1 (fontified nil)) . -18557) (18556 . 18557) (#(" " 0 1 (fontified nil)) . -18487) (18486 . 18487) (#(" " 0 1 (fontified nil)) . -18422) (18421 . 18422) (#(" " 0 1 (fontified nil)) . -18351) (18350 . 18351) (#(" " 0 1 (fontified nil)) . -18284) (18283 . 18284) (#(" " 0 1 (fontified nil)) . -18214) (18213 . 18214) (#(" " 0 1 (fontified nil)) . -18146) (18145 . 18146) (#(" " 0 1 (fontified nil)) . -18081) (18080 . 18081) (#(" " 0 1 (fontified nil)) . -18022) (18021 . 18022) (#(" " 0 1 (fontified nil)) . -17951) (17950 . 17951) (#(" " 0 1 (fontified nil)) . -17883) (17882 . 17883) 18737) nil (26711 57895 969316 969000) 0 nil])
nil
([nil nil ((#("{\\bfseries Results and discussion.} It was found {[}6{]} that during
degassing of disturbed coals, their strength increases by‑30-45\\%,
therefore, the numerical value of \\emph{q\\textsubscript{g}} can be
assumed to be 1.30‑1.45, so given \\emph{σ} = \\emph{σ\\textsubscript{k}},
equality (3) can be represented as
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 34 (face (bold) fontified t) 34 35 (fontified t) 35 69 (fontified t) 69 132 (fontified t) 132 134 (face font-lock-keyword-face fontified t) 134 140 (fontified t) 140 170 (fontified t) 170 175 (face font-lock-keyword-face fontified t) 175 176 (fontified t) 176 177 (face (italic) fontified t) 177 191 (face (font-lock-keyword-face italic) fontified t) 191 194 (face (italic) fontified t) 194 197 (fontified t) 197 203 (fontified t) 203 237 (fontified t) 237 242 (face font-lock-keyword-face fontified t) 242 243 (fontified t) 243 244 (face (italic) fontified t) 244 248 (fontified t) 248 253 (face font-lock-keyword-face fontified t) 253 254 (fontified t) 254 255 (face (italic) fontified t) 255 269 (face (font-lock-keyword-face italic) fontified t) 269 272 (face (italic) fontified t) 272 310 (fontified t)) . 18740) (undo-tree-id638 . -275) (undo-tree-id639 . -309) (undo-tree-id640 . -275) (undo-tree-id641 . -275) 19015 (t 26711 57895 972560 142000)) nil (26711 57935 730485 140000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19014 . 19015) (nil fontified nil 18740 . 19015) (18740 . 19015)) nil (26711 57935 730476 123000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -19000) (18999 . 19000) (#(" " 0 1 (fontified nil)) . -18934) (18933 . 18934) (#(" " 0 1 (fontified nil)) . -18873) (18872 . 18873) (#(" " 0 1 (fontified nil)) . -18805) (18804 . 18805) 18740) nil (26711 57935 730472 85000) 0 nil])
([nil nil ((#("$" 0 1 (face tex-math fontified t)) . 18939) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (t 26711 57935 733345 795000)) nil (26711 57966 354368 684000) 0 nil])
([nil nil ((#("-" 0 1 (face tex-math fontified t)) . 18939) (undo-tree-id644 . -1) (undo-tree-id645 . -1)) nil (26711 57966 354367 181000) 0 nil])
([nil nil ((#("$" 0 1 (face tex-math fontified t)) . 18940) (undo-tree-id642 . -1) (undo-tree-id643 . -1)) nil (26711 57966 354360 819000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 18869) (t 26711 57966 357180 697000)) nil (26711 57976 658328 881000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 18865) (undo-tree-id648 . -1) (undo-tree-id649 . -1)) nil (26711 57976 658327 348000) 0 nil])
([nil nil ((18863 . 18864)) nil (26711 57976 658310 526000) 0 nil])
([nil nil ((18870 . 18871)) nil (26711 57976 658309 925000) 0 nil])
([nil nil ((18869 . 18870)) nil (26711 57976 658306 469000) 0 nil])
([nil nil ((#("\\({\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ p}_{s}^{*} - p_{2}\\  \\geq \\ \\frac{U_{0} - \\ kT\\ln\\frac{\\tau}{\\tau_{0}}}{q_{str}\\ q_{g}\\ V_{a}} = \\ \\ A,\\)
" 0 2 (face font-lock-keyword-face fontified t) 2 40 (fontified t) 40 43 (face (subscript) fontified t display (raise -0.2)) 43 44 (fontified t) 44 47 (face (superscript) fontified t display (raise 0.2)) 47 52 (fontified t) 52 55 (face (subscript) fontified t display (raise -0.2)) 55 58 (fontified t) 58 62 (face font-lock-keyword-face fontified t) 62 65 (fontified t) 65 70 (face font-lock-keyword-face fontified t) 70 73 (fontified t) 73 76 (face (subscript) fontified t display (raise -0.2)) 76 83 (fontified t) 83 86 (face font-lock-keyword-face fontified t) 86 91 (face font-lock-keyword-face fontified t) 91 92 (fontified t) 92 96 (face font-lock-keyword-face fontified t) 96 98 (fontified t) 98 102 (face font-lock-keyword-face fontified t) 102 103 (fontified t) 103 106 (face (subscript) fontified t display (raise -0.2)) 106 111 (fontified t) 111 116 (face (subscript) fontified t display (raise -0.2)) 116 120 (fontified t) 120 123 (face (subscript) fontified t display (raise -0.2)) 123 127 (fontified t) 127 130 (face (subscript) fontified t display (raise -0.2)) 130 140 (fontified t) 140 142 (face font-lock-keyword-face fontified t) 142 143 (fontified t)) . 19014) (undo-tree-id788 . -142) (undo-tree-id789 . -66) 19080 (t 26711 57976 661125 149000)) nil (26711 58018 592203 324000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19131 . 19132) (nil fontified nil 19014 . 19132) (19014 . 19132) (#("(4)
" 0 3 (fontified t) 3 4 (fontified t)) . 19014) (undo-tree-id650 . -4) (undo-tree-id651 . -3) (undo-tree-id652 . -2) (undo-tree-id653 . -2) (undo-tree-id654 . -4) (undo-tree-id655 . -4) (undo-tree-id656 . -3) (undo-tree-id657 . -2) (undo-tree-id658 . -2) (undo-tree-id659 . -2) (undo-tree-id660 . -2) (undo-tree-id661 . -2) (undo-tree-id662 . -2) (undo-tree-id663 . -2) (undo-tree-id664 . -2) (undo-tree-id665 . -2) (undo-tree-id666 . -2) (undo-tree-id667 . -2) (undo-tree-id668 . -2) (undo-tree-id669 . -2) (undo-tree-id670 . -2) (undo-tree-id671 . -2) (undo-tree-id672 . -2) (undo-tree-id673 . -2) (undo-tree-id674 . -2) (undo-tree-id675 . -2) (undo-tree-id676 . -2) (undo-tree-id677 . -2) (undo-tree-id678 . -2) (undo-tree-id679 . -2) (undo-tree-id680 . -2) (undo-tree-id681 . -2) (undo-tree-id682 . -2) (undo-tree-id683 . -2) (undo-tree-id684 . -2) (undo-tree-id685 . -2) (undo-tree-id686 . -2) (undo-tree-id687 . -2) (undo-tree-id688 . -2) (undo-tree-id689 . -2) (undo-tree-id690 . -2) (undo-tree-id691 . -2) (undo-tree-id692 . -2) (undo-tree-id693 . -2) (undo-tree-id694 . -2) (undo-tree-id695 . -2) (undo-tree-id696 . -2) (undo-tree-id697 . -2) (undo-tree-id698 . -2) (undo-tree-id699 . -2) (undo-tree-id700 . -2) (undo-tree-id701 . -2) (undo-tree-id702 . -2) (undo-tree-id703 . -2) (undo-tree-id704 . -2) (undo-tree-id705 . -2) (undo-tree-id706 . -2) (undo-tree-id707 . -2) (undo-tree-id708 . -2) (undo-tree-id709 . -2) (undo-tree-id710 . -2) (undo-tree-id711 . -2) (undo-tree-id712 . -2) (undo-tree-id713 . -2) (undo-tree-id714 . -2) (undo-tree-id715 . -2) (undo-tree-id716 . -2) (undo-tree-id717 . -2) (undo-tree-id718 . -2) (undo-tree-id719 . -2) (undo-tree-id720 . -2) (undo-tree-id721 . -2) (undo-tree-id722 . -2) (undo-tree-id723 . -2) (undo-tree-id724 . -2) (undo-tree-id725 . -2) (undo-tree-id726 . -2) (undo-tree-id727 . -2) (undo-tree-id728 . -2) (undo-tree-id729 . -2) (undo-tree-id730 . -2) (undo-tree-id731 . -2) (undo-tree-id732 . -2) (undo-tree-id733 . -2) (undo-tree-id734 . -2) (undo-tree-id735 . -2) (undo-tree-id736 . -2) (undo-tree-id737 . -2) (undo-tree-id738 . -2) (undo-tree-id739 . -2) (undo-tree-id740 . -2) (undo-tree-id741 . -2) (undo-tree-id742 . -2) (undo-tree-id743 . -2) (undo-tree-id744 . -2) (undo-tree-id745 . -2) (undo-tree-id746 . -2) (undo-tree-id747 . -2) (undo-tree-id748 . -2) (undo-tree-id749 . -2) (undo-tree-id750 . -2) (undo-tree-id751 . -2) (undo-tree-id752 . -2) (undo-tree-id753 . -2) (undo-tree-id754 . -2) (undo-tree-id755 . -2) (undo-tree-id756 . -2) (undo-tree-id757 . -2) (undo-tree-id758 . -2) (undo-tree-id759 . -2) (undo-tree-id760 . -2) (undo-tree-id761 . -2) (undo-tree-id762 . -2) (undo-tree-id763 . -2) (undo-tree-id764 . -2) (undo-tree-id765 . -2) (undo-tree-id766 . -2) (undo-tree-id767 . -2) (undo-tree-id768 . -2) (undo-tree-id769 . -2) (undo-tree-id770 . -2) (undo-tree-id771 . -2) (undo-tree-id772 . -2) (undo-tree-id773 . -2) (undo-tree-id774 . -2) (undo-tree-id775 . -2) (undo-tree-id776 . -2) (undo-tree-id777 . -2) (undo-tree-id778 . -2) (undo-tree-id779 . -2) (undo-tree-id780 . -2) (undo-tree-id781 . -2) (undo-tree-id782 . -2) (undo-tree-id783 . -2) (undo-tree-id784 . -2) (undo-tree-id785 . -2) (undo-tree-id786 . -4) (undo-tree-id787 . -4) 19018) nil (26711 58018 592197 443000) 0 nil])
([nil nil ((19116 . 19117) (t 26711 58018 595899 79000)) nil (26711 58026 460012 359000) 0 nil])
([nil nil ((#("Determine the value of \\emph{A} by taking \\emph{U\\textsubscript{0}=}
0.64 10\\textsuperscript{5} J / mol, \\emph{γ}= 0.0727
(J/mol)/(kg/mm\\textsuperscript{2}) {[}8{]}, \\emph{q\\textsubscript{g}} =
1.35, ln\\emph{τ=} ‑5 (according to experiments on the durability of hard
coal {[}9{]}); ln \\emph{τ\\textsubscript{0 }}= 29.9. The calculation
results show that at T=293\\textsuperscript{о}, the value of \\emph{A} is
30.5 MPa.
" 0 23 (fontified t) 23 28 (face font-lock-keyword-face fontified t) 28 29 (fontified t) 29 30 (face (italic) fontified t) 30 42 (fontified t) 42 47 (face font-lock-keyword-face fontified t) 47 48 (fontified t) 48 49 (face (italic) fontified t) 49 63 (face (font-lock-keyword-face italic) fontified t) 63 67 (face (italic) fontified t) 67 76 (fontified t) 76 90 (face font-lock-keyword-face fontified t) 90 92 (face font-lock-keyword-face fontified t) 92 105 (fontified t) 105 110 (face font-lock-keyword-face fontified t) 110 111 (fontified t) 111 112 (face (italic) fontified t) 112 122 (fontified t) 122 136 (fontified t) 136 152 (face font-lock-keyword-face fontified t) 152 166 (fontified t) 166 171 (face font-lock-keyword-face fontified t) 171 172 (fontified t) 172 173 (face (italic) fontified t) 173 187 (face (font-lock-keyword-face italic) fontified t) 187 190 (face (italic) fontified t) 190 202 (fontified t) 202 207 (face font-lock-keyword-face fontified t) 207 208 (fontified t) 208 210 (face (italic) fontified t) 210 285 (fontified t) 285 290 (face font-lock-keyword-face fontified t) 290 291 (fontified t) 291 292 (face (italic) fontified t) 292 299 (face (font-lock-keyword-face italic) fontified t) 299 306 (face (font-lock-keyword-face italic) fontified t) 306 310 (face (italic) fontified t) 310 335 (fontified t) 335 361 (fontified t) 361 377 (face font-lock-keyword-face fontified t) 377 395 (fontified t) 395 400 (face font-lock-keyword-face fontified t) 400 401 (fontified t) 401 402 (face (italic) fontified t) 402 417 (fontified t)) . 19134) (undo-tree-id790 . -416) (undo-tree-id791 . -416) (undo-tree-id792 . -67) (undo-tree-id793 . -416) (undo-tree-id794 . -417) (undo-tree-id795 . -416) 19550 (t 26711 58026 463856 657000)) nil (26711 58091 150211 864000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19433 . 19434) (nil fontified nil 19133 . 19434) (19133 . 19434)) nil (26711 58091 150200 723000) 0 nil])
([nil nil ((19132 . 19133) 19131) nil (26711 58091 150199 741000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -19410) (19409 . 19410) (#(" " 0 1 (face tex-math fontified nil)) . -19343) (nil face nil 19342 . 19343) (nil fontified nil 19342 . 19343) (nil face (tex-math subscript) 19342 . 19343) (19342 . 19343) (#(" " 0 1 (fontified nil)) . -19272) (19271 . 19272) (#(" " 0 1 (fontified nil)) . -19203) (19202 . 19203) 19134) nil (26711 58091 150195 93000) 0 nil])
([nil nil ((#("$" 0 1 (face tex-math fontified t)) . 19219) (t 26711 58091 152507 924000)) nil (26711 58150 428439 595000) 0 nil])
([nil nil ((#(" " 0 1 (face tex-math fontified t)) . 19219)) nil (26711 58150 428439 285000) 0 nil])
([nil nil ((#("$" 0 1 (face tex-math fontified t)) . 19233)) nil (26711 58150 428438 964000) 0 nil])
([nil nil ((#("$" 0 1 (face tex-math fontified t)) . 19235)) nil (26711 58150 428438 684000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19236 . 19237) (nil fontified nil 19236 . 19237) (19236 . 19237) 19235) nil (26711 58150 428438 253000) 0 nil])
([nil nil ((#("$" 0 1 (face tex-math rear-nonsticky t fontified t)) . 19236) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1)) nil (26711 58150 428437 401000) 0 nil])
([nil nil ((#("$" 0 1 (face tex-math fontified t)) . 19238) (undo-tree-id799 . -1) (undo-tree-id800 . -1)) nil (26711 58150 428429 226000) 0 nil])
([nil nil ((19237 . 19243) (#(" " 0 1 (face tex-math fontified t)) . -19237) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) 19238) nil (26711 58150 428424 707000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20267 . 20268) (nil fontified nil 19437 . 20268) (19437 . 20268) (#("The value of rock pressure is defined as \\emph{γ\\textsubscript{r} Н}
(\\emph{γ\\textsubscript{r} is} the average volume weight of overlying
rocks, \\emph{H is} the depth from the surface). However, a reference
pressure zone appears near the mine workings, in which the value of the
rock pressure is 2-3 times greater than \\emph{γ\\textsubscript{r} Н.}
Taking the value of \\emph{p\\textsubscript{2}}, approximately equal to
atmospheric, we obtain that the possibility of coal dispersion as a
result of the explosion of methane bubbles during seam unloading can
occur from a depth of \\emph{H} = 500 m (in calculations \\emph{γ
\\textsubscript{r}} = 2.0 t/m\\textsuperscript{3}). With an increase in
the disturbance of coals, the structure coefficient increases, so
inequality (4) can be performed at lower depths. Figure 1 highlights the
correlation between gas content and depth in the Karaganda Basin, as
well as its impact on methane saturation." 0 41 (fontified t) 41 46 (face font-lock-keyword-face fontified t) 46 47 (fontified t) 47 48 (face (italic) fontified t) 48 62 (face (font-lock-keyword-face italic) fontified t) 62 67 (face (italic) fontified t) 67 70 (fontified t) 70 75 (face font-lock-keyword-face fontified t) 75 76 (fontified t) 76 77 (face (italic) fontified t) 77 90 (face (font-lock-keyword-face italic) fontified t) 90 91 (face (font-lock-keyword-face italic) fontified t) 91 97 (face (italic) fontified t) 97 138 (fontified t) 138 145 (fontified t) 145 150 (face font-lock-keyword-face fontified t) 150 151 (fontified t) 151 155 (face (italic) fontified t) 155 319 (fontified t) 319 324 (face font-lock-keyword-face fontified t) 324 325 (fontified t) 325 326 (face (italic) fontified t) 326 340 (face (font-lock-keyword-face italic) fontified t) 340 346 (face (italic) fontified t) 346 368 (fontified t) 368 373 (face font-lock-keyword-face fontified t) 373 374 (fontified t) 374 375 (face (italic) fontified t) 375 389 (face (font-lock-keyword-face italic) fontified t) 389 392 (face (italic) fontified t) 392 575 (fontified t) 575 577 (fontified t) 577 582 (face font-lock-keyword-face fontified t) 582 583 (fontified t) 583 584 (face (italic) fontified t) 584 611 (fontified t) 611 616 (face font-lock-keyword-face fontified t) 616 617 (fontified t) 617 619 (face (italic) fontified t) 619 623 (face (font-lock-keyword-face italic) fontified t) 623 633 (face (font-lock-keyword-face italic) fontified t) 633 636 (face (italic) fontified t) 636 647 (fontified t) 647 663 (face font-lock-keyword-face fontified t) 663 689 (fontified t) 689 692 (fontified t) 692 755 (fontified t) 755 794 (fontified t) 794 807 (fontified t) 807 826 (fontified t) 826 828 (fontified t) 828 918 (fontified t) 918 933 (fontified t) 933 934 (fontified t) 934 938 (fontified t)) . 19437) (undo-tree-id818 . -937) (undo-tree-id819 . -38) (undo-tree-id820 . -935) (undo-tree-id821 . -619) (undo-tree-id822 . -619) (undo-tree-id823 . -38) (undo-tree-id824 . -935) (undo-tree-id825 . -866) (undo-tree-id826 . -866) (undo-tree-id827 . -866) (undo-tree-id828 . -866) (undo-tree-id829 . -866) (undo-tree-id830 . -866) (undo-tree-id831 . -866) (undo-tree-id832 . -866) (undo-tree-id833 . -866) (undo-tree-id834 . -866) (undo-tree-id835 . -866) (undo-tree-id836 . -866) (undo-tree-id837 . -866) (undo-tree-id838 . -866) (undo-tree-id839 . -866) (undo-tree-id840 . -866) (undo-tree-id841 . -866) (undo-tree-id842 . -866) (undo-tree-id843 . -866) (undo-tree-id844 . -866) (undo-tree-id845 . -897) (undo-tree-id846 . -935) (undo-tree-id847 . -935) (undo-tree-id848 . -935) (undo-tree-id849 . -935) (undo-tree-id850 . -935) (undo-tree-id851 . -935) (undo-tree-id852 . -935) (undo-tree-id853 . -935) (undo-tree-id854 . -935) (undo-tree-id855 . -935) (undo-tree-id856 . -935) (undo-tree-id857 . -935) (undo-tree-id858 . -935) (undo-tree-id859 . -935) (undo-tree-id860 . -935) (undo-tree-id861 . -935) (undo-tree-id862 . -938) 20376 (t 26711 58150 431188 348000)) nil (26711 58197 637467 479000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -20257) (20256 . 20257) (#(" " 0 1 (fontified nil)) . -20194) (20193 . 20194) (#(" " 0 1 (fontified nil)) . -20126) (20125 . 20126) (#(" " 0 1 (fontified nil)) . -20059) (20058 . 20059) (#(" " 0 1 (fontified nil)) . -19989) (19988 . 19989) (#(" " 0 1 (fontified nil)) . -19921) (19920 . 19921) (#(" " 0 1 (fontified nil)) . -19852) (19851 . 19852) (#(" " 0 1 (fontified nil)) . -19784) (19783 . 19784) (#(" " 0 1 (fontified nil)) . -19716) (19715 . 19716) (#(" " 0 1 (fontified nil)) . -19645) (19644 . 19645) (#(" " 0 1 (fontified nil)) . -19574) (19573 . 19574) (#(" " 0 1 (fontified nil)) . -19506) (19505 . 19506) 20267) nil (26711 58197 637435 589000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 20342) (t 26711 58197 640933 851000) (20343 . 20344) 20342 (t 26711 58197 640933 851000)) nil (26711 58243 266175 409000) 0 nil])
([nil nil ((nil fontified t 20342 . 20343) (#("7" 0 1 (fontified t)) . 20342) (20343 . 20344) 20342) nil (26711 58243 266174 257000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 20694) (20695 . 20696) 20694) nil (26711 58243 266173 395000) 0 nil])
([nil nil ((nil fontified t 20694 . 20695) (#("7" 0 1 (fontified t)) . 20694) (20695 . 20696) 20694) nil (26711 58243 266168 716000) 0 nil])
([nil nil ((nil rear-nonsticky nil 21620 . 21621) (nil fontified nil 21270 . 21621) (21270 . 21621) (#("
%% \\begin{longtable}[]{@{}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.1967}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.1557}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.1747}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.1601}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.1615}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.1512}}@{}}
%% \\toprule\\noalign{}
%% \\begin{minipage}[b]{\\linewidth}\\centering
%% Coal temperature,
%% 
%% \\emph{t} \\textsuperscript{о}С
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% 20
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% 15
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% 10
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% 5
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% 0
%% \\end{minipage} \\\\
%% \\midrule\\noalign{}
%% \\endhead
%% \\bottomrule\\noalign{}
%% \\endlastfoot
%% \\emph{σ\\textsubscript{k}}, МPа & 30,5 & 41,0 & 51,50 & 62,1 & 72,6 \\\\
%% \\end{longtable}" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 10 (face font-lock-comment-face fontified t) 10 21 (face font-lock-comment-face fontified t latex-env-pair t) 21 28 (face font-lock-comment-face fontified t) 28 33 (face font-lock-comment-delimiter-face fontified t) 33 108 (face font-lock-comment-face fontified t) 108 113 (face font-lock-comment-delimiter-face fontified t) 113 188 (face font-lock-comment-face fontified t) 188 193 (face font-lock-comment-delimiter-face fontified t) 193 268 (face font-lock-comment-face fontified t) 268 273 (face font-lock-comment-delimiter-face fontified t) 273 348 (face font-lock-comment-face fontified t) 348 353 (face font-lock-comment-delimiter-face fontified t) 353 388 (face font-lock-comment-face fontified t) 388 428 (face font-lock-comment-face fontified t) 428 433 (face font-lock-comment-delimiter-face fontified t) 433 469 (face font-lock-comment-face fontified t) 469 487 (face font-lock-comment-face fontified t) 487 499 (face font-lock-comment-face fontified t) 499 512 (face font-lock-comment-face fontified t) 512 515 (face font-lock-comment-delimiter-face fontified t) 515 534 (face font-lock-comment-face fontified t) 534 537 (face font-lock-comment-delimiter-face fontified t) 537 543 (face font-lock-comment-face fontified t) 543 546 (face font-lock-comment-face fontified t latex-env-pair t) 546 553 (face font-lock-comment-face fontified t latex-env-pair t) 553 579 (face font-lock-comment-face fontified t) 579 582 (face font-lock-comment-delimiter-face fontified t) 582 600 (face font-lock-comment-face fontified t) 600 603 (face font-lock-comment-delimiter-face fontified t) 603 604 (face font-lock-comment-face fontified t) 604 606 (face font-lock-comment-delimiter-face fontified t) 606 607 (fontified t face font-lock-comment-delimiter-face) 607 637 (fontified t face font-lock-comment-face) 637 640 (face font-lock-comment-delimiter-face fontified t) 640 644 (face font-lock-comment-face fontified t) 644 654 (face font-lock-comment-face fontified t latex-env-pair t) 654 662 (face font-lock-comment-face fontified t) 662 663 (face font-lock-comment-face fontified t) 663 673 (face font-lock-comment-face fontified t latex-env-pair t) 673 677 (face font-lock-comment-face fontified t) 677 699 (face font-lock-comment-face fontified t) 699 702 (face font-lock-comment-delimiter-face fontified t) 702 705 (face font-lock-comment-face fontified t) 705 708 (face font-lock-comment-delimiter-face fontified t) 708 712 (face font-lock-comment-face fontified t) 712 722 (face font-lock-comment-face fontified t latex-env-pair t) 722 731 (face font-lock-comment-face fontified t) 731 741 (face font-lock-comment-face fontified t latex-env-pair t) 741 767 (face font-lock-comment-face fontified t) 767 770 (face font-lock-comment-delimiter-face fontified t) 770 773 (face font-lock-comment-face fontified t) 773 776 (face font-lock-comment-delimiter-face fontified t) 776 780 (face font-lock-comment-face fontified t) 780 790 (face font-lock-comment-face fontified t latex-env-pair t) 790 799 (face font-lock-comment-face fontified t) 799 809 (face font-lock-comment-face fontified t latex-env-pair t) 809 835 (face font-lock-comment-face fontified t) 835 838 (face font-lock-comment-delimiter-face fontified t) 838 841 (face font-lock-comment-face fontified t) 841 844 (face font-lock-comment-delimiter-face fontified t) 844 848 (face font-lock-comment-face fontified t) 848 858 (face font-lock-comment-face fontified t latex-env-pair t) 858 867 (face font-lock-comment-face fontified t) 867 877 (face font-lock-comment-face fontified t latex-env-pair t) 877 898 (face font-lock-comment-face fontified t) 898 903 (face font-lock-comment-face fontified t) 903 906 (face font-lock-comment-delimiter-face fontified t) 906 908 (face font-lock-comment-face fontified t) 908 911 (face font-lock-comment-delimiter-face fontified t) 911 915 (face font-lock-comment-face fontified t) 915 925 (face font-lock-comment-face fontified t latex-env-pair t) 925 934 (face font-lock-comment-face fontified t) 934 944 (face font-lock-comment-face fontified t latex-env-pair t) 944 955 (face font-lock-comment-face fontified t) 955 970 (face font-lock-comment-face fontified t) 970 973 (face font-lock-comment-delimiter-face fontified t) 973 975 (face font-lock-comment-face fontified t) 975 978 (face font-lock-comment-delimiter-face fontified t) 978 982 (face font-lock-comment-face fontified t) 982 992 (face font-lock-comment-face fontified t latex-env-pair t) 992 996 (face font-lock-comment-face fontified t) 996 999 (face font-lock-comment-delimiter-face fontified t) 999 1018 (face font-lock-comment-face fontified t) 1018 1021 (face font-lock-comment-delimiter-face fontified t) 1021 1030 (face font-lock-comment-face fontified t) 1030 1033 (face font-lock-comment-delimiter-face fontified t) 1033 1038 (face font-lock-comment-face fontified t) 1038 1039 (face font-lock-comment-face fontified t) 1039 1055 (face font-lock-comment-face fontified t) 1055 1058 (face font-lock-comment-delimiter-face fontified t) 1058 1071 (face font-lock-comment-face fontified t) 1071 1074 (face font-lock-comment-delimiter-face fontified t) 1074 1144 (face font-lock-comment-face fontified t) 1144 1147 (face font-lock-comment-delimiter-face fontified t) 1147 1151 (face font-lock-comment-face fontified t) 1151 1162 (face font-lock-comment-face fontified t latex-env-pair t)) . 21270) (undo-tree-id963 . -1161) (undo-tree-id964 . -1144) (undo-tree-id965 . -182) (undo-tree-id966 . -1144) 22433 (t 26711 58243 268687 868000)) nil (26711 58304 515733 154000) 0 nil])
([nil nil ((#("% \\usepackage{tabularray}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 26 (face font-lock-comment-face fontified t)) . 21270) (undo-tree-id958 . -26) (undo-tree-id959 . -25) (undo-tree-id960 . -26) (undo-tree-id961 . -26) (undo-tree-id962 . -26)) nil (26711 58304 515731 511000) 0 nil])
([nil nil ((#("{\\bfseries Table 2 - Influence of coal temperature on the threshold stress (σₖ) for dispersion and gas release in the outburst-hazardous zone}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 74 (face (bold) fontified t) 74 75 (face (bold) fontified t) 75 141 (face (bold) fontified t) 141 143 (fontified t)) . -21127) (undo-tree-id931 . -143) (undo-tree-id932 . -143) (undo-tree-id933 . -143) (undo-tree-id934 . -143) (undo-tree-id935 . -143) (undo-tree-id936 . -143) (undo-tree-id937 . -143) (undo-tree-id938 . -143) (undo-tree-id939 . -143) (undo-tree-id940 . -143) (undo-tree-id941 . -143) (undo-tree-id942 . -143) (undo-tree-id943 . -143) (undo-tree-id944 . -143) (undo-tree-id945 . -143) (undo-tree-id946 . -143) (undo-tree-id947 . -143) (undo-tree-id948 . -143) (undo-tree-id949 . -143) (undo-tree-id950 . -143) (undo-tree-id951 . -143) (undo-tree-id952 . -143) (undo-tree-id953 . -143) (undo-tree-id954 . -143) (undo-tree-id955 . -143) (undo-tree-id956 . -143) (undo-tree-id957 . -143) 21270) nil (26711 58304 515729 246000) 0 nil])
([nil nil ((21144 . 21145) 21127) nil (26711 58304 515720 740000) 0 nil])
([nil nil ((nil rear-nonsticky nil 21299 . 21300) (nil fontified nil 21145 . 21300) (21145 . 21300)) nil (26711 58304 515720 169000) 0 nil])
([nil nil ((#("  width = \\linewidth,
" 0 10 (fontified t) 10 20 (face font-lock-keyword-face fontified t) 20 22 (fontified t)) . 21336) (undo-tree-id895 . -21) (undo-tree-id896 . -20) (undo-tree-id897 . -20) (undo-tree-id898 . -20) (undo-tree-id899 . -20) (undo-tree-id900 . -20) (undo-tree-id901 . -20) (undo-tree-id902 . -20) (undo-tree-id903 . -20) (undo-tree-id904 . -20) (undo-tree-id905 . -20) (undo-tree-id906 . -20) (undo-tree-id907 . -20) (undo-tree-id908 . -20) (undo-tree-id909 . -20) (undo-tree-id910 . -20) (undo-tree-id911 . -20) (undo-tree-id912 . -20) (undo-tree-id913 . -20) (undo-tree-id914 . -20) (undo-tree-id915 . -20) (undo-tree-id916 . -20) (undo-tree-id917 . -20) (undo-tree-id918 . -20) (undo-tree-id919 . -20) (undo-tree-id920 . -20) (undo-tree-id921 . -20) (undo-tree-id922 . -20) (undo-tree-id923 . -20) (undo-tree-id924 . -20) (undo-tree-id925 . -20) (undo-tree-id926 . -20) (undo-tree-id927 . -20) (undo-tree-id928 . -20) (undo-tree-id929 . -20) (undo-tree-id930 . -22) 21356) nil (26711 58304 515718 787000) 0 nil])
([nil nil ((#("  colspec = {Q[369]Q[104]Q[104]Q[127]Q[104]Q[104]},
" 0 51 (fontified t) 51 52 (fontified t)) . 21336) (undo-tree-id863 . -51) (undo-tree-id864 . -50) (undo-tree-id865 . -50) (undo-tree-id866 . -50) (undo-tree-id867 . -50) (undo-tree-id868 . -50) (undo-tree-id869 . -50) (undo-tree-id870 . -50) (undo-tree-id871 . -50) (undo-tree-id872 . -50) (undo-tree-id873 . -50) (undo-tree-id874 . -50) (undo-tree-id875 . -50) (undo-tree-id876 . -50) (undo-tree-id877 . -50) (undo-tree-id878 . -50) (undo-tree-id879 . -50) (undo-tree-id880 . -50) (undo-tree-id881 . -50) (undo-tree-id882 . -50) (undo-tree-id883 . -50) (undo-tree-id884 . -51) (undo-tree-id885 . -20) (undo-tree-id886 . -20) (undo-tree-id887 . -20) (undo-tree-id888 . -20) (undo-tree-id889 . -20) (undo-tree-id890 . -20) (undo-tree-id891 . -20) (undo-tree-id892 . -20) (undo-tree-id893 . -20) (undo-tree-id894 . -52) 21356) nil (26711 58304 515703 809000) 0 nil])
([nil nil ((21236 . 21243) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -21236) (undo-tree-id967 . -1) (21233 . 21237) (#("σ" 0 1 (face (bold) fontified t)) . -21233) (undo-tree-id968 . -1) (#("ₖ" 0 1 (face (bold) fontified t)) . -21234) (undo-tree-id969 . -1) 21235 (t 26711 58304 518357 700000)) nil (26711 58320 142527 7000) 0 nil])
([nil nil ((#("			
" 0 4 (fontified t)) . 21405) (undo-tree-id1002 . -3) (undo-tree-id1003 . -2) 21407 (t 26711 58320 147273 438000)) nil (26711 58361 343594 392000) 0 nil])
([nil nil ((21403 . 21404) (#(" 			" 0 1 (fontified nil) 1 4 (fontified nil)) . 21403) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (#("
" 0 1 (fontified t)) . -21404) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) 21385) nil (26711 58361 343535 872000) 0 nil])
([nil nil ((#("			" 0 3 (fontified nil)) . -21391) (21383 . 21391) 21403) nil (26711 58361 343532 967000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -21387) (21383 . 21387) 21412) nil (26711 58361 343532 616000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -21383) 21412) nil (26711 58361 343532 165000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 21401)) nil (26711 58361 343531 905000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 21401)) nil (26711 58361 343531 514000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 21401)) nil (26711 58361 343531 314000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 21401)) nil (26711 58361 343531 113000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 21401)) nil (26711 58361 343530 312000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 21401)) nil (26711 58361 343529 781000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 21401)) nil (26711 58361 343529 69000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 21401)) nil (26711 58361 343528 268000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 21401)) nil (26711 58361 343527 927000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 21401) (undo-tree-id993 . -1)) nil (26711 58361 343527 557000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . 21402) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1)) nil (26711 58361 343526 735000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . 21402) (undo-tree-id974 . -1) (undo-tree-id975 . -1)) nil (26711 58361 343518 59000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . 21402) (undo-tree-id972 . -1) (undo-tree-id973 . -1)) nil (26711 58361 343516 175000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 21402) (undo-tree-id970 . -1) (undo-tree-id971 . -1)) nil (26711 58361 343511 967000) 0 nil])
([nil nil ((21292 . 21293) (t 26711 58361 346051 346000)) nil (26711 58420 297818 310000) 0 nil])
([nil nil ((21291 . 21292)) nil (26711 58420 297814 643000) 0 nil])
([nil nil ((nil rear-nonsticky nil 21461 . 21462) (nil fontified nil 21452 . 21462) (21452 . 21462) 21451 (t 26711 58420 306733 452000)) nil (26711 58445 33217 174000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 21462) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1)) nil (26711 58445 33216 383000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 21462) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1)) nil (26711 58445 33215 341000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 21462) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1)) nil (26711 58445 33214 189000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 21462) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1)) nil (26711 58445 33213 247000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 21462) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1)) nil (26711 58445 33211 915000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 21462) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1)) nil (26711 58445 33210 51000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 21462) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1)) nil (26711 58445 33209 210000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . 21462) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1)) nil (26711 58445 33208 168000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 21462) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1)) nil (26711 58445 33206 795000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 21462) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1)) nil (26711 58445 33205 793000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . 21462) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1)) nil (26711 58445 33204 401000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . 21462) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1)) nil (26711 58445 33203 349000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . 21462) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1)) nil (26711 58445 33306 662000) 0 nil])
([nil nil ((21463 . 21464) (#("," 0 1 (fontified t)) . -21463) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) 21464 (21462 . 21464)) nil (26711 58447 437155 763000) 0 nil] [nil nil ((#("М" 0 1 (fontified t)) . 21462) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1)) ((21462 . 21463)) (26711 58445 33198 109000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 21451) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (t 26711 58447 440587 166000)) nil (26711 58464 365265 714000) 0 nil])
nil
([nil nil ((21519 . 21540) (22778 . 22794) (t 26711 58464 368495 899000)) nil (26711 58499 99235 152000) 0 nil])
([nil nil ((22816 . 22831) (22839 . 22852)) nil (26711 58499 99234 721000) 0 nil])
([nil nil ((22868 . 22887) (26985 . 27002)) nil (26711 58499 99234 350000) 0 nil])
([nil nil ((#("\\end{quote}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 10 (face font-lock-function-name-face fontified t latex-env-pair t) 10 11 (fontified t latex-env-pair t) 11 12 (fontified t)) . 26992) (undo-tree-id1069 . -11)) nil (26711 58499 99233 829000) 0 nil])
([nil nil ((#("\\begin{quote}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 12 (face font-lock-function-name-face fontified t latex-env-pair t) 12 13 (fontified t latex-env-pair t) 13 14 (fontified t)) . 25893) (undo-tree-id1064 . -13) (undo-tree-id1065 . -14) (undo-tree-id1066 . -14) (undo-tree-id1067 . -14) (undo-tree-id1068 . -14)) nil (26711 58499 99232 938000) 0 nil])
([nil nil ((#("\\end{quote}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 10 (face font-lock-function-name-face fontified t latex-env-pair t) 10 11 (fontified t latex-env-pair t) 11 12 (fontified t)) . 25052) (undo-tree-id1063 . -11)) nil (26711 58499 99230 313000) 0 nil])
([nil nil ((#("\\begin{quote}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 12 (face font-lock-function-name-face fontified t latex-env-pair t) 12 13 (fontified t latex-env-pair t) 13 14 (fontified t)) . 24443) (undo-tree-id1062 . -13)) nil (26711 58499 99226 546000) 0 nil])
([nil nil ((26970 . 26989) (28876 . 28893) 26970 (t 26711 58499 102308 649000)) nil (26711 58506 21173 968000) 0 nil])
([nil nil ((23788 . 23790) (t 26711 58506 24271 332000)) nil (26711 58536 501276 488000) 0 nil])
([nil nil ((23887 . 23889) (t 26711 58524 228173 188000)) nil (26711 58537 231279 11000) 0 nil] [nil nil ((23886 . 23888) (t 26711 58524 228173 188000)) ((#("\\\\" 0 1 (face font-lock-warning-face fontified t) 1 2 (face font-lock-warning-face fontified t)) . 23886) (undo-tree-id1074 . -1) (undo-tree-id1075 . 1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1)) (26711 58536 122883 944000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 24332) (t 26711 58537 234103 68000)) nil (26711 58552 541528 623000) 0 nil])
([nil nil ((23887 . 23889)) ((#("\\\\" 0 1 (face font-lock-warning-face fontified t) 1 2 (face font-lock-warning-face fontified t)) . 23887) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1)) (26711 58536 122783 587000) 0 nil])
([nil nil ((24331 . 24332) (#("
" 0 1 (fontified t)) . -24331) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) 24294) nil (26711 58552 541527 702000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . 24331)) nil (26711 58552 541526 129000) 0 nil])
([nil nil ((24307 . 24308)) nil (26711 58552 541525 738000) 0 nil])
([nil nil ((24308 . 24426) (#("https://cyberleninka.ru/article/n/k-probleme-vnezapnyh-vybrosov-uglya-i-gaza-v-shahtah" 0 24 (fontified t) 24 51 (fontified t) 51 81 (fontified t) 81 86 (fontified t)) . -24308) (undo-tree-id1097 . -24) (undo-tree-id1098 . -24) (undo-tree-id1099 . -85) (undo-tree-id1100 . 86) (undo-tree-id1101 . -24) (undo-tree-id1102 . -85) (undo-tree-id1103 . -85) (undo-tree-id1104 . -85) (undo-tree-id1105 . -85) (undo-tree-id1106 . -85) (undo-tree-id1107 . -85) (undo-tree-id1108 . -85) (undo-tree-id1109 . -85) (undo-tree-id1110 . -85) (undo-tree-id1111 . -85) (undo-tree-id1112 . -85) (undo-tree-id1113 . -85) (undo-tree-id1114 . -86) 24394) nil (26711 58552 541524 826000) 0 nil])
([nil nil ((24426 . 24427)) nil (26711 58552 541506 231000) 0 nil])
([nil nil ((24434 . 24435) (t 26711 58552 545020 529000) 24426) nil (26711 58554 400525 993000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 24435) (undo-tree-id1118 . 1) (undo-tree-id1119 . -1)) nil (26711 58554 400523 107000) 0 nil])
([nil nil ((24449 . 24451) (t 26711 58554 404010 508000)) nil (26711 58572 559760 269000) 0 nil])
([nil nil ((25875 . 25877)) nil (26711 58574 368681 684000) 0 nil] [nil nil ((25874 . 25876) (t 26711 58562 2969 542000)) ((#("\\\\" 0 2 (face font-lock-warning-face fontified t)) . 25874) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (t 26711 58572 142914 874000)) (26711 58572 139184 234000) 0 nil])
([nil nil ((26844 . 26846) (t 26711 58574 371902 857000)) nil (26711 58584 150420 559000) 0 nil])
nil
([nil nil ((27199 . 27200) (#("
" 0 1 (fontified t)) . -27199) 27172 (t 26711 58584 153850 121000)) nil (26711 58608 711587 367000) 0 nil])
([nil nil ((27411 . 27412)) nil (26711 58608 711587 17000) 0 nil])
([nil nil ((27610 . 27611)) nil (26711 58608 711586 766000) 0 nil])
([nil nil ((27779 . 27780)) nil (26711 58608 711586 526000) 0 nil])
([nil nil ((27942 . 27943) (#("
" 0 1 (fontified t)) . -27942) 27917) nil (26711 58608 711586 275000) 0 nil])
([nil nil ((28161 . 28162)) nil (26711 58608 711585 955000) 0 nil])
([nil nil ((28354 . 28355) (#("
" 0 1 (fontified t)) . -28354) (undo-tree-id1163 . -1) 28302) nil (26711 58608 711585 374000) 0 nil])
([nil nil ((28517 . 28518)) nil (26711 58608 711577 349000) 0 nil])
([nil nil ((28690 . 28691)) nil (26711 58608 711576 868000) 0 nil])
([nil nil ((28872 . 28873)) nil (26711 58608 711573 501000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 27933) (t 26711 58608 714717 711000)) nil (26711 58632 744085 486000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 27933)) nil (26711 58632 744084 865000) 0 nil])
([nil nil ((27941 . 27943)) nil (26711 58632 744084 494000) 0 nil])
([nil nil ((28518 . 28520)) nil (26711 58632 744081 138000) 0 nil])
([nil nil ((28162 . 28164) (t 26711 58632 747588 144000)) nil (26711 58648 180513 489000) 0 nil])
([nil nil ((#(", ," 0 3 (fontified t)) . -28859) (28862 . 28864) (#(", ," 0 3 (fontified t)) . -28678) (28681 . 28683) (#(", ," 0 3 (fontified t)) . -28504) (28507 . 28509) (#(", ," 0 3 (fontified t)) . -28342) (28345 . 28347) (#(", ," 0 3 (fontified t)) . -27766) (27769 . 27771) (#(", ," 0 3 (fontified t)) . -27598) (27601 . 27603) (#(", ," 0 3 (fontified t)) . -27400) (t 26711 58648 183504 927000) (27403 . 27405) (t 26711 58648 183504 927000)) nil (26711 58678 153616 81000) 0 nil])
([nil current ((27777 . 27779) (t 26711 58678 157343 331000)) nil (26711 58690 543982 756000) 0 nil])
nil
