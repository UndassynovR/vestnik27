(undo-tree-save-format-version . 1)
"976122ca8b1e1547c488b040010bfa51124653e8"
[nil nil nil nil (26711 43680 676703 655000) 0 nil]
([nil nil ((7037 . 7038) (#(" " 0 1 (fontified nil)) . 7036) (undo-tree-id0 . -1) (7037 . 7038) (t 26707 60558 683110 580000)) nil (26711 43680 676702 944000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7802 . 7803) (nil fontified nil 7037 . 7803) (7037 . 7803)) nil (26711 43680 676686 924000) 0 nil])
([nil nil ((7803 . 7804) 7802) nil (26711 43680 676686 563000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified nil)) . -7745) (nil face nil 7744 . 7745) (7744 . 7745) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -7680) (nil face nil 7679 . 7680) (7679 . 7680) (#(" " 0 1 (fontified nil)) . -7613) (7612 . 7613) (#(" " 0 1 (fontified nil)) . -7546) (7545 . 7546) (#(" " 0 1 (fontified nil)) . -7488) (7487 . 7488) (#(" " 0 1 (fontified nil)) . -7417) (7416 . 7417) (#(" " 0 1 (fontified nil)) . -7353) (7352 . 7353) (#(" " 0 1 (fontified nil)) . -7299) (7298 . 7299) (#(" " 0 1 (fontified nil)) . -7238) (7237 . 7238) (#(" " 0 1 (fontified nil)) . -7168) (7167 . 7168) (#(" " 0 1 (fontified nil)) . -7102) (7101 . 7102) (7249 . 7250) (#("
" 0 1 (fontified t)) . 7249) 7590) nil (26711 43680 676685 641000) 0 nil])
([nil nil ((7640 . 7641)) nil (26711 43680 676684 469000) 0 nil])
([nil nil ((7757 . 7758)) nil (26711 43680 676684 289000) 0 nil])
([nil nil ((7803 . 7804)) nil (26711 43680 676683 938000) 0 nil])
([nil nil ((7738 . 7739)) nil (26711 43680 676680 371000) 0 nil])
([nil nil ((7036 . 7037) (#("
" 0 1 (fontified t)) . -7036) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 7035 (t 26711 43680 678197 37000)) nil (26711 43686 851206 362000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -7793) (7792 . 7793) (#(" " 0 1 (fontified nil)) . -7725) (7724 . 7725) (#(" " 0 1 (fontified nil)) . -7663) (7662 . 7663) (#(" " 0 1 (fontified nil)) . -7596) (7595 . 7596) (#(" " 0 1 (fontified nil)) . -7533) (7532 . 7533) (#(" " 0 1 (fontified nil)) . -7474) (7473 . 7474) (#(" " 0 1 (fontified nil)) . -7405) (7404 . 7405) (#(" " 0 1 (fontified nil)) . -7341) (7340 . 7341) (#(" " 0 1 (fontified nil)) . -7277) (7276 . 7277) (#(" " 0 1 (fontified nil)) . -7207) (7206 . 7207) (#(" " 0 1 (fontified nil)) . -7144) (7143 . 7144) (#(" " 0 1 (fontified nil)) . -7080) (7079 . 7080) (7746 . 7747) (#("
" 0 1 (fontified t)) . 7746) (7680 . 7681) (#("
" 0 1 (fontified t)) . 7680) (7612 . 7613) (#("
" 0 1 (fontified t)) . 7612) (7545 . 7546) (#("
" 0 1 (fontified t)) . 7545) (7487 . 7488) (#("
" 0 1 (fontified t)) . 7487) (7416 . 7417) (#("
" 0 1 (fontified t)) . 7416) (7352 . 7353) (#("
" 0 1 (fontified t)) . 7352) (7298 . 7299) (#("
" 0 1 (fontified t)) . 7298) (7237 . 7238) (#("
" 0 1 (fontified t)) . 7237) (7167 . 7168) (#("
" 0 1 (fontified t)) . 7167) (7101 . 7102) (#("
" 0 1 (fontified t)) . 7101) 7768) nil (26711 43686 851193 478000) 0 nil])
([nil nil (("\\bullet" . -12817) (12824 . 12829) ("\\bullet" . -12700) (12707 . 12712) (#("\\bullet" 0 7 (fontified nil)) . -12633) (12640 . 12645) (#("\\bullet" 0 7 (fontified nil)) . -12618) (12625 . 12630) (#("\\bullet" 0 7 (fontified nil)) . -12607) (12614 . 12619) ("\\bullet" . -12595) (12602 . 12607) (#("\\bullet" 0 7 (fontified nil)) . -12563) (12570 . 12575) (#("\\bullet" 0 7 (fontified nil)) . -12549) (12556 . 12561) (#("\\bullet" 0 7 (fontified nil)) . -12541) (12548 . 12553) ("\\bullet" . -12530) (t 26711 43686 852163 755000) (12537 . 12542) (t 26711 43686 852163 755000)) nil (26711 45140 476356 132000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12513) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (t 26711 45140 477327 50000)) nil (26711 45183 938614 399000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12513)) nil (26711 45183 938603 138000) 0 nil])
([nil nil ((9029 . 9030) 8967) nil (26711 45183 938600 32000) 0 nil])
([nil nil ((#("Г\\textsubscript{эф}  R\\textsubscript{опт} (1)
" 0 1 (fontified t) 1 15 (face font-lock-keyword-face fontified t) 15 22 (fontified t) 22 36 (face font-lock-keyword-face fontified t) 36 46 (fontified t)) . 11313) (undo-tree-id10 . -45) (undo-tree-id11 . -46) (undo-tree-id12 . -46) (t 26711 45183 940092 738000)) nil (26711 45268 952462 411000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11393 . 11394) (nil fontified nil 11313 . 11394) (11313 . 11394)) nil (26711 45271 426369 850000) 0 nil] [nil nil ((nil rear-nonsticky nil 11392 . 11393) (nil fontified nil 11312 . 11393) (11312 . 11393)) ((#("\\begin{equation}
\\text{Г}_{\\text{эф}}\\, \\text{R}_{\\text{опт}} (1)
\\end{equation}
" 0 6 (face font-lock-keyword-face fontified nil) 6 7 (latex-env-pair t fontified nil) 7 15 (face font-lock-function-name-face latex-env-pair t fontified nil) 15 16 (latex-env-pair t fontified nil) 16 17 (fontified nil) 17 22 (face font-lock-keyword-face fontified nil) 22 26 (fontified nil) 26 27 (face (subscript) display (raise -0.2) fontified nil) 27 32 (display (raise -0.2) face (font-lock-keyword-face subscript) fontified nil) 32 37 (face (subscript) display (raise -0.2) fontified nil) 37 39 (face font-lock-keyword-face fontified nil) 39 40 (fontified nil) 40 45 (face font-lock-keyword-face fontified nil) 45 49 (fontified nil) 49 50 (face (subscript) display (raise -0.2) fontified nil) 50 55 (display (raise -0.2) face (font-lock-keyword-face subscript) fontified nil) 55 61 (face (subscript) display (raise -0.2) fontified nil) 61 66 (fontified nil) 66 70 (face font-lock-keyword-face fontified nil) 70 71 (latex-env-pair t fontified nil) 71 79 (face font-lock-function-name-face latex-env-pair t fontified nil) 79 80 (latex-env-pair t fontified nil) 80 81 (rear-nonsticky nil fontified nil)) . 11312) (undo-tree-id13 . -66) (undo-tree-id14 . -80) (undo-tree-id15 . -66) (undo-tree-id16 . -66) (undo-tree-id17 . -66) (undo-tree-id18 . -66) (nil fontified t 11373 . 11378) (nil fontified t 11367 . 11373) (nil fontified t 11362 . 11367) (nil fontified t 11361 . 11362) (nil fontified t 11357 . 11361) (nil fontified t 11352 . 11357) (nil fontified t 11351 . 11352) (nil fontified t 11349 . 11351) (nil fontified t 11344 . 11349) (nil fontified t 11339 . 11344) (nil fontified t 11338 . 11339) (nil fontified t 11334 . 11338) (nil fontified t 11329 . 11334) (nil fontified t 11328 . 11329) (nil fontified t 11327 . 11328) (nil fontified t 11319 . 11327) (nil fontified t 11318 . 11319) (nil fontified t 11312 . 11318) (nil rear-nonsticky t 11392 . 11393)) (26711 45268 952189 831000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 11377) (undo-tree-id103 . -1) (undo-tree-id104 . -1)) nil (26711 45271 426369 460000) 0 nil])
nil
([nil nil ((#("1" 0 1 (fontified t)) . 11376) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1)) nil (26711 45271 426368 388000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 11375) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1)) nil (26711 45271 426361 835000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 11374) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1)) nil (26711 45271 426351 276000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 11350) (t 26711 45271 428621 48000)) nil (26711 45297 288780 808000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 11350) (undo-tree-id109 . -1)) nil (26711 45297 288780 217000) 0 nil])
([nil nil ((11350 . 11353) (#(">" 0 1 (fontified t)) . -11350) (undo-tree-id105 . -1) (#("=" 0 1 (fontified t)) . -11351) (undo-tree-id106 . -1) 11352 (11350 . 11352) (#("=" 0 1 (fontified t)) . -11350) (undo-tree-id107 . -1) (#(">" 0 1 (fontified t)) . -11351) (undo-tree-id108 . -1) 11352 (11350 . 11352)) nil (26711 45297 288776 510000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 12547) (t 26711 45297 290481 618000)) nil (26711 45385 334729 722000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 12547)) nil (26711 45385 334729 241000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-keyword-face fontified t)) . 12606)) nil (26711 45385 334728 780000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 12605)) nil (26711 45385 334728 29000) 0 nil])
([nil nil ((12547 . 12564) (12606 . 12621)) nil (26711 45385 334723 951000) 0 nil])
([nil nil ((12529 . 12530) (t 26711 45385 337006 965000) 12528) nil (26711 45401 765225 574000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12659 . 12660) (nil fontified nil 12530 . 12660) (12530 . 12660)) nil (26711 45401 765225 233000) 0 nil])
([nil nil ((12529 . 12530) 12528) nil (26711 45401 765224 783000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -12600) (12599 . 12600) 12531) nil (26711 45401 765221 627000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 12662) (undo-tree-id110 . -15) (undo-tree-id111 . 16) (undo-tree-id112 . -16) (undo-tree-id113 . -16) (undo-tree-id114 . -16) (undo-tree-id115 . -16) (undo-tree-id116 . -16) (undo-tree-id117 . -16) (t 26711 45401 767918 386000)) nil (26711 45432 828398 844000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12753 . 12754) (#("
" 0 1 (fontified nil)) . -12769) (12753 . 12770) 12739) nil (26711 45432 828386 882000) 0 nil])
([nil nil ((12753 . 12754) 12739) nil (26711 45432 828386 471000) 0 nil])
([nil nil ((12754 . 12755) 12754) nil (26711 45432 828385 900000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13039 . 13040) (nil fontified nil 12755 . 13040) (12755 . 13040)) nil (26711 45432 955295 946000) 0 nil])
([nil nil ((12759 . 12760) 12755) nil (26711 45435 603807 641000) 0 nil] [nil nil ((12760 . 12762)) ((#("- " 0 2 (fontified t)) . 12760)) (26711 45432 828480 817000) 0 nil])
([nil nil ((12788 . 12789) 12761) nil (26711 45435 603807 360000) 0 nil])
([nil nil ((12790 . 12792)) ((#("- " 0 2 (fontified t)) . 12790) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1)) (26711 45432 828382 12000) 0 nil])
([nil nil ((12817 . 12818) 12790) nil (26711 45435 603806 649000) 0 nil])
nil
([nil nil ((12858 . 12859) 12819) nil (26711 45435 603805 948000) 0 nil])
([nil nil ((12892 . 12893) 12860) nil (26711 45435 603801 730000) 0 nil])
([nil nil ((12933 . 12934) (t 26711 45435 605735 953000) 12894) nil (26711 45437 580393 19000) 0 nil])
([nil nil ((12930 . 12931) (t 26711 45437 582725 294000)) nil (26711 45439 784595 170000) 0 nil])
([nil nil ((#("" 0 1 (fontified t)) . 12894) (t 26711 45439 786713 412000)) nil (26711 45450 71408 815000) 0 nil])
([nil nil ((12894 . 12900)) nil (26711 45450 71405 238000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 13053) (undo-tree-id122 . -15) (undo-tree-id123 . -16) (undo-tree-id124 . -16) (undo-tree-id125 . -16) (undo-tree-id126 . -16) (undo-tree-id127 . -16) (undo-tree-id128 . -5) (undo-tree-id129 . -5) (undo-tree-id130 . -5) (undo-tree-id131 . -5) (undo-tree-id132 . -5) (undo-tree-id133 . -5) (undo-tree-id134 . -5) (undo-tree-id135 . -5) (undo-tree-id136 . -5) (undo-tree-id137 . -5) (undo-tree-id138 . -5) (undo-tree-id139 . -5) (undo-tree-id140 . -5) (undo-tree-id141 . -5) (undo-tree-id142 . -5) (undo-tree-id143 . -5) (undo-tree-id144 . -5) (undo-tree-id145 . -5) (undo-tree-id146 . -5) (undo-tree-id147 . -5) (undo-tree-id148 . -5) (undo-tree-id149 . -5) (undo-tree-id150 . -5) (undo-tree-id151 . -5) (undo-tree-id152 . -5) (undo-tree-id153 . -5) (undo-tree-id154 . -5) (undo-tree-id155 . -5) (undo-tree-id156 . -5) (undo-tree-id157 . -16) 13058 (t 26711 45450 73657 952000)) nil (26711 45470 754674 909000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13141 . 13142) (#("
" 0 1 (fontified nil)) . -13157) (13141 . 13158) 13054) nil (26711 45470 754650 824000) 0 nil])
([nil nil ((13141 . 13142) (t 26711 45470 756546 446000) 13054) nil (26711 45485 362108 343000) 0 nil])
([nil nil ((13142 . 13143) 13142) nil (26711 45485 362107 692000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13286 . 13287) (nil fontified nil 13143 . 13287) (13143 . 13287)) nil (26711 45485 362106 750000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -13280) (13279 . 13280) 13209) nil (26711 45485 362102 352000) 0 nil])
([nil nil ((13136 . 13146) (#("кВт" 0 3 (fontified t)) . -13136) (undo-tree-id158 . -2) (undo-tree-id159 . -3) (undo-tree-id160 . -3) (undo-tree-id161 . -3) (undo-tree-id162 . -3) (undo-tree-id163 . -3) (undo-tree-id164 . -3) (undo-tree-id165 . -3) (undo-tree-id166 . -3) (undo-tree-id167 . -3) (undo-tree-id168 . -3) (undo-tree-id169 . -2) (undo-tree-id170 . -2) (undo-tree-id171 . -2) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2) (undo-tree-id223 . -2) (undo-tree-id224 . -2) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -3) 13139 (t 26711 45485 363467 705000)) nil (26711 45497 959197 590000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 13295) (undo-tree-id231 . -15) (undo-tree-id232 . -14) 13309 (t 26711 45497 961399 782000)) nil (26711 45513 533769 864000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13417 . 13418) (#("
" 0 1 (fontified nil)) . -13433) (13417 . 13434) 13296) nil (26711 45513 533761 959000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 13296)) nil (26711 45513 533761 318000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 13296)) nil (26711 45513 533760 567000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-keyword-face fontified t)) . 13414)) nil (26711 45513 533760 176000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 13413)) nil (26711 45513 533759 575000) 0 nil])
([nil nil ((13296 . 13313) (13414 . 13429)) nil (26711 45513 533756 419000) 0 nil])
([nil nil ((13445 . 13446) (t 26711 45513 535315 826000) 13444) nil (26711 45544 594252 20000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13618 . 13619) (nil fontified nil 13446 . 13619) (13446 . 13619)) nil (26711 45552 773603 103000) 0 nil] [nil nil ((nil rear-nonsticky nil 13618 . 13619) (nil fontified nil 13446 . 13619) (13446 . 13619)) ((#("где:
Q - дебит при забойном давлении Pз;
Qmax ​ - максимальный дебит;
Pr​ - пластовое давление;
Pwf - забойное давление.
При Pп = 3.8 МПа, Qmax = 50 м³/сут и Pwf ​= 1.8 Мпа:" 0 121 (fontified nil) 121 172 (fontified nil) 172 173 (rear-nonsticky nil fontified nil)) . 13446) (undo-tree-id233 . -172) (undo-tree-id234 . -172) (undo-tree-id235 . -121) (undo-tree-id236 . -172) (undo-tree-id237 . -172) (undo-tree-id238 . -172) (nil fontified t 13446 . 13567) (nil rear-nonsticky t 13618 . 13619)) (26711 45544 594101 178000) 0 nil])
([nil nil ((13445 . 13446) 13444) nil (26711 45552 773602 763000) 0 nil])
nil
([nil nil ((13451 . 13452) 13447) nil (26711 45552 773602 392000) 0 nil])
([nil nil ((13488 . 13489) 13453) nil (26711 45552 773602 132000) 0 nil])
([nil nil ((13518 . 13519) 13490) nil (26711 45552 773601 791000) 0 nil])
([nil nil ((13545 . 13546) 13520) nil (26711 45552 773601 270000) 0 nil])
([nil nil ((13571 . 13572) 13547) nil (26711 45552 773597 433000) 0 nil])
([nil nil ((#("​" 0 1 (fontified t)) . 13495) (undo-tree-id258 . -1) (t 26711 45552 775104 267000)) nil (26711 45558 606263 504000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 13495) (undo-tree-id256 . -1) (undo-tree-id257 . -1)) nil (26711 45558 606354 725000) 0 nil])
([nil nil ((13491 . 13493) (t 26711 45560 837060 803000)) nil (26711 45587 359662 839000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . 13521) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1)) ((13521 . 13522)) (26711 45558 606259 226000) 0 nil])
([nil nil ((13496 . 13497)) nil (26711 45587 359662 599000) 0 nil])
nil
([nil nil ((13497 . 13498)) nil (26711 45587 359662 438000) 0 nil])
([nil nil ((13490 . 13491)) nil (26711 45587 359662 208000) 0 nil])
([nil nil ((13523 . 13524)) nil (26711 45587 359661 967000) 0 nil])
([nil nil ((13526 . 13527)) nil (26711 45587 359661 797000) 0 nil])
([nil nil ((13555 . 13556)) nil (26711 45587 359661 537000) 0 nil])
([nil nil ((13552 . 13553)) nil (26711 45587 359661 326000) 0 nil])
([nil nil ((13525 . 13526)) nil (26711 45587 359661 96000) 0 nil])
([nil nil ((13555 . 13556)) nil (26711 45587 359660 885000) 0 nil])
([nil nil ((13556 . 13557)) nil (26711 45587 359660 485000) 0 nil])
([nil nil ((13559 . 13560)) nil (26711 45587 359656 978000) 0 nil])
([nil nil ((13453 . 13454) (t 26711 45587 361917 806000)) nil (26711 45606 796572 321000) 0 nil])
([nil nil ((13455 . 13456)) nil (26711 45606 796572 0) 0 nil])
([nil nil ((12861 . 12862)) nil (26711 45606 796571 820000) 0 nil])
([nil nil ((12860 . 12861)) nil (26711 45606 796571 659000) 0 nil])
([nil nil ((12819 . 12820)) nil (26711 45606 796571 499000) 0 nil])
([nil nil ((12820 . 12821)) nil (26711 45606 796571 339000) 0 nil])
([nil nil ((12791 . 12792)) nil (26711 45606 796571 169000) 0 nil])
([nil nil ((12790 . 12791)) nil (26711 45606 796570 948000) 0 nil])
([nil nil ((12761 . 12762)) nil (26711 45606 796653 332000) 0 nil])
([nil nil ((12763 . 12764)) nil (26711 45612 100878 873000) 0 nil] [nil nil ((12762 . 12763)) ((#("$" 0 1 (fontified t)) . 12762)) (26711 45606 796567 742000) 0 nil])
([nil nil ((12793 . 12797) (#("ρ" 0 1 (face tex-math fontified t)) . -12793) (undo-tree-id259 . -1) 12794) nil (26711 45612 100876 308000) 0 nil])
nil
([nil nil ((12870 . 12871) (#("h" 0 1 (face tex-math fontified t)) . 12870) (12870 . 12871) (#("H" 0 1 (fontified t)) . 12870) (t 26711 45612 102784 422000)) nil (26711 45616 593720 385000) 0 nil])
([nil nil ((#("$" 0 1 (face tex-math fontified t)) . 12827) (t 26711 45616 595760 200000)) nil (26711 45620 717242 814000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12828 . 12829) (nil fontified nil 12828 . 12829) (12828 . 12829) 12827) nil (26711 45621 682020 37000) 0 nil] [nil nil ((nil rear-nonsticky nil 12829 . 12830) (nil fontified nil 12829 . 12830) (12829 . 12830) 12828) ((#("$" 0 1 (face tex-math rear-nonsticky nil fontified nil)) . 12829) (nil rear-nonsticky t 12829 . 12830)) (26711 45620 175656 527000) 0 nil])
([nil nil ((13615 . 13616) (t 26711 45621 684732 763000)) nil (26711 45684 844285 262000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12829 . 12830) (nil fontified nil 12829 . 12830) (12829 . 12830) 12828) ((#("$" 0 1 (face tex-math rear-nonsticky nil fontified nil)) . 12829) (nil rear-nonsticky t 12829 . 12830)) (26711 45620 175557 41000) 0 nil])
([nil nil ((13620 . 13621)) nil (26711 45684 844285 32000) 0 nil])
nil
([nil nil ((13636 . 13637)) nil (26711 45684 844284 892000) 0 nil])
([nil nil ((13640 . 13641)) nil (26711 45684 844284 661000) 0 nil])
([nil nil ((13617 . 13619)) nil (26711 45684 844284 290000) 0 nil])
([nil nil ((13622 . 13623) (#("p" 0 1 (fontified t)) . -13622) (undo-tree-id260 . -1) 13623 (13622 . 13623)) nil (26711 45684 844283 699000) 0 nil])
([nil nil ((13643 . 13644) (#("p" 0 1 (face tex-math fontified nil)) . -13643) 13644 (13643 . 13644)) nil (26711 45684 844275 614000) 0 nil])
([nil nil ((13641 . 13643)) nil (26711 45729 911739 525000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 13660) (undo-tree-id279 . -15) (undo-tree-id280 . -14) 13674 (t 26711 45730 697145 66000)) nil (26711 45748 490286 731000) 0 nil] [nil nil ((#("$" 0 1 (face tex-math fontified t)) . 13623) (t 26711 45684 846392 247000)) ((13623 . 13624)) (26711 45729 141698 70000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13766 . 13767) (#("
" 0 1 (fontified nil)) . -13782) (13766 . 13783) 13661) nil (26711 45748 490275 530000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13635 . 13636) (nil fontified nil 13635 . 13636) (13635 . 13636) 13634) ((#("$" 0 1 (face tex-math rear-nonsticky nil fontified nil)) . 13635) (undo-tree-id278 . 1) (nil rear-nonsticky t 13635 . 13636)) (26711 45728 902783 686000) 0 nil])
([nil nil ((13766 . 13767) (t 26711 45748 492049 143000) 13661) nil (26711 45770 208430 56000) 0 nil])
([nil nil ((13629 . 13637) (#("м" 0 1 (face tex-math fontified t)) . -13629) 13630) ((13629 . 13630) (#("\\text{м}" 0 8 (face tex-math fontified t)) . 13629) (undo-tree-id277 . -8)) (26711 45728 685726 656000) 0 nil] [nil nil ((13626 . 13637) (#("50 м" 0 4 (face tex-math fontified t)) . -13626) (undo-tree-id261 . -3) (undo-tree-id262 . -3) 13630) ((13626 . 13630) (#("\\text{50 м}" 0 11 (face tex-math fontified t)) . 13626) (undo-tree-id263 . -11) (undo-tree-id264 . -10) (undo-tree-id265 . -10) (undo-tree-id266 . -11) (undo-tree-id267 . -11) (undo-tree-id268 . -11)) (26711 45705 372506 279000) 0 nil])
([nil nil ((13767 . 13768) 13767) nil (26711 45770 208429 745000) 0 nil])
([nil nil ((13639 . 13649) (#("сут" 0 3 (face tex-math fontified t)) . -13639) (undo-tree-id270 . -3) (undo-tree-id271 . -3) (undo-tree-id272 . -2) (undo-tree-id273 . -2) 13642) ((13639 . 13642) (#("\\text{сут}" 0 10 (face tex-math fontified t)) . 13639) (undo-tree-id275 . -9) (undo-tree-id276 . -9)) (26711 45728 354726 129000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 13917 . 13918) (nil fontified nil 13768 . 13918) (13768 . 13918)) nil (26711 45770 208429 355000) 0 nil])
([nil nil ((13637 . 13639) (#("³" 0 1 (face tex-math fontified t)) . -13637) (undo-tree-id269 . -1) 13638) ((13637 . 13638) (#("^3" 0 1 (face tex-math fontified t) 1 2 (display (raise 0.2) face (tex-math superscript) fontified t)) . 13637) (undo-tree-id274 . -2) (t 26711 45720 720198 853000)) (26711 45720 717863 76000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -13883) (13882 . 13883) 13838) nil (26711 45770 208428 663000) 0 nil])
nil
([nil nil ((13794 . 13795)) nil (26711 45770 208514 13000) 0 nil])
([nil nil ((13796 . 13797)) nil (26711 45924 438642 784000) 0 nil] [nil nil ((13795 . 13796)) ((#("$" 0 1 (fontified t)) . 13795)) (26711 45770 208424 425000) 0 nil])
([nil nil ((#("Автоматизированный метод насосной добычи нефти обычно реализуется через
три основных способа:

- установками плунжерных штанговых насосов (УПШН);

- установками электроцентробежных насосов (УЭЦН);

- установками винтовых штанговых насосов (УВШН).

" 0 248 (fontified t)) . 14074) (undo-tree-id281 . -247) (undo-tree-id282 . -247) (undo-tree-id283 . -29) (undo-tree-id284 . -247) (undo-tree-id285 . -247) 14321 (t 26711 45924 832098 434000)) nil (26711 45975 145834 709000) 0 nil] [nil nil ((#("8" 0 1 (fontified t)) . 13994) (t 26711 45770 895928 359000) (13995 . 13996) 13994 (t 26711 45770 895928 359000)) ((#("7" 0 1 (fontified nil)) . 13995) (13994 . 13995)) (26711 45924 37649 521000) 0 nil])
nil
([nil nil ((13920 . 13921) 13885) nil (26711 45987 274933 745000) 0 nil])
([nil nil ((nil fontified t 13994 . 13995) (#("7" 0 1 (fontified t)) . 13994) (13995 . 13996) 13994) ((#("6" 0 1 (fontified nil)) . 13995) (13994 . 13995)) (26711 45923 96721 200000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13921 . 13922) (#("
" 0 1 (fontified nil)) . 14169) (13921 . 14170)) ((#("
Автоматизированный метод насосной добычи нефти обычно реализуется через
три основных способа:

- установками плунжерных штанговых насосов (УПШН);

- установками электроцентробежных насосов (УЭЦН);

- установками винтовых штанговых насосов (УВШН).

" 0 1 (rear-nonsticky nil fontified nil) 1 73 (fontified nil) 73 248 (fontified t) 248 249 (fontified nil)) . 13921) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -248) (undo-tree-id290 . -1) (undo-tree-id292 . -1) (undo-tree-id294 . -1) (undo-tree-id296 . -1) (undo-tree-id298 . -1) (undo-tree-id300 . -1) (undo-tree-id302 . -1) (undo-tree-id304 . -1) (undo-tree-id306 . -1) (undo-tree-id308 . -1) (undo-tree-id310 . -1) (undo-tree-id312 . -1) (undo-tree-id314 . -1) (undo-tree-id316 . -1) (undo-tree-id318 . -1) (undo-tree-id320 . -1) (undo-tree-id322 . -1) (undo-tree-id324 . -1) (undo-tree-id326 . -1) (undo-tree-id328 . -1) (undo-tree-id330 . -1) (undo-tree-id332 . -1) (undo-tree-id334 . -1) (undo-tree-id336 . -1) (undo-tree-id338 . -1) (undo-tree-id340 . -1) (undo-tree-id342 . -1) (undo-tree-id344 . -1) (undo-tree-id346 . -1) (undo-tree-id348 . -1) (undo-tree-id350 . -1) (undo-tree-id352 . -1) (undo-tree-id354 . -1) (undo-tree-id356 . -1) (undo-tree-id358 . -1) (undo-tree-id360 . -1) (undo-tree-id362 . -1) (undo-tree-id364 . -1) (undo-tree-id366 . -1) (undo-tree-id368 . -1) (undo-tree-id370 . -1) (undo-tree-id372 . -1) (undo-tree-id374 . -1) (undo-tree-id376 . -1) (undo-tree-id378 . -1) (undo-tree-id380 . -1) (undo-tree-id382 . -1) (undo-tree-id384 . -1) (undo-tree-id386 . -1) (undo-tree-id388 . -1) (undo-tree-id390 . -1) (undo-tree-id392 . -1) (undo-tree-id394 . -1) (undo-tree-id396 . -1) (undo-tree-id398 . -1) (undo-tree-id400 . -1) (undo-tree-id402 . -1) (undo-tree-id404 . -1) (undo-tree-id406 . -1) (undo-tree-id408 . -1) (undo-tree-id410 . -1) (undo-tree-id412 . -1) (undo-tree-id414 . -1) (undo-tree-id416 . -1) (undo-tree-id418 . -1) (undo-tree-id420 . -1) (undo-tree-id422 . -1) (undo-tree-id424 . -1) (undo-tree-id426 . -1) (undo-tree-id428 . -1) (undo-tree-id430 . -1) (undo-tree-id432 . -1) (undo-tree-id434 . -1) (undo-tree-id436 . -1) (undo-tree-id438 . -1) (undo-tree-id440 . -1) (undo-tree-id442 . -1) (undo-tree-id444 . -1) (undo-tree-id446 . -1) (undo-tree-id448 . -1) (undo-tree-id450 . -1) (undo-tree-id452 . -1) (undo-tree-id454 . -1) (undo-tree-id456 . -1) (undo-tree-id458 . -1) (undo-tree-id460 . -1) (undo-tree-id462 . -1) (undo-tree-id464 . -1) (undo-tree-id466 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (14169 . 14170) (nil rear-nonsticky t 13921 . 13922) (t 26711 45975 147827 173000)) (26711 45989 329897 813000) 0 nil])
([nil nil ((nil fontified t 13994 . 13995) (t 26711 45900 323230 573000) (#("6" 0 1 (fontified t)) . 13994) (t 26711 45900 323230 573000) (13995 . 13996) 13994 (t 26711 45900 323230 573000)) ((#("5" 0 1 (fontified nil)) . 13995) (13994 . 13995)) (26711 45922 3368 976000) 0 nil])
([nil nil ((#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 21 (fontified t)) . 14302) (undo-tree-id480 . -20) (undo-tree-id481 . -21) (undo-tree-id482 . -21) (undo-tree-id483 . -21) (undo-tree-id484 . -21) (t 26711 45975 147827 173000)) nil (26711 45999 156385 288000) 0 nil])
([nil nil ((nil fontified t 13994 . 13995) (t 26711 45909 295182 204000) (#("5" 0 1 (fontified t)) . 13994) (t 26711 45909 295182 204000) (13995 . 13996) 13994 (t 26711 45909 295182 204000)) ((#("4" 0 1 (fontified nil)) . 13995) (13994 . 13995) (t 26711 45915 934146 410000)) (26711 45915 932758 599000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 14752) (undo-tree-id479 . -15)) nil (26711 45999 156382 843000) 0 nil])
nil
([nil nil ((#("
Использование плунжерных штанговых насосов (УПШН) является эффективным
способом эксплуатации скважин, обеспечивая добычу в диапазоне от 2 до 80
м\\textsuperscript{3}/сут и возможность подъема добычи из глубин свыше
2000 метров. Штанговые установка пользуются широким спросом благодаря
своей простоте конструкции, хорошо изученности и удобству использования,
что обеспечивает их рекомендацию для эксплуатации низко- и
среднедебитных скважин {[}4-5{]}.
" 0 1 (fontified t) 1 71 (fontified t) 71 72 (fontified t) 72 137 (fontified t) 137 145 (fontified t) 145 146 (fontified t) 146 162 (face font-lock-keyword-face fontified t) 162 168 (fontified t) 168 211 (fontified t) 211 215 (fontified t) 215 247 (fontified t) 247 285 (fontified t) 285 339 (fontified t) 339 358 (fontified t) 358 451 (fontified t)) . 14301) (undo-tree-id475 . -417) (undo-tree-id476 . -450) (undo-tree-id477 . -417) (undo-tree-id478 . -1)) nil (26711 45999 156382 12000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14169 . 14170) (#("
" 0 1 (fontified nil)) . -14620) (14169 . 14621)) nil (26711 45999 156379 627000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14170) (undo-tree-id474 . -1)) nil (26711 45999 156377 183000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t rear-nonsticky t)) . 13919) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (t 26711 45999 158697 724000)) nil (26711 46012 783536 469000) 0 nil])
([nil nil ((13919 . 13920) (t 26711 46012 785624 255000)) nil (26711 46015 669488 229000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15765 . 15766) (nil fontified nil 14752 . 15766) (14752 . 15766) (#("
%% \\begin{longtable}[]{@{}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.2200}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.2081}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.0977}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.1313}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.1924}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.1505}}@{}}
%% \\toprule\\noalign{}
%% \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Насос}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Производительность (м³/сут)}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Глубина (м)}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Тип нефти и условий работы}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Преимущества}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Ограничения}
%% \\end{minipage} \\\\
%% \\midrule\\noalign{}
%% \\endhead
%% \\bottomrule\\noalign{}
%% \\endlastfoot
%% УПШН (Плунжерные штанговые насосы) & 2-80 & До 2000 & Низкая и средняя
%% дебитность & Простота, хорошая известность, удобство эксплуатации &
%% Меньше эффективны на больших глубинах \\\\
%% УЭЦН (Электроцентробежные насосы) & 60-1500 & 1000-3000 & Высокие
%% дебиты, высокая температура, вода и газ & Высокая производительность на
%% высокодебитных скважинах & Потери эффективности при высоких температурах
%% и газе \\\\
%% УВШН (Винтовые штанговые насосы) & 1-750 & Более 2000 & Трудоемкая,
%% вязкая нефть & Эффективны при вязкой нефти, перекачка твердых частиц &
%% Высокая стоимость установки и обслуживания \\\\
%% \\end{longtable}" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 10 (face font-lock-comment-face fontified t) 10 21 (face font-lock-comment-face fontified t latex-env-pair t) 21 28 (face font-lock-comment-face fontified t) 28 33 (face font-lock-comment-delimiter-face fontified t) 33 88 (face font-lock-comment-face fontified t) 88 90 (face font-lock-comment-face fontified t) 90 108 (face font-lock-comment-face fontified t) 108 113 (face font-lock-comment-delimiter-face fontified t) 113 127 (face font-lock-comment-face fontified t) 127 159 (face font-lock-comment-face fontified t) 159 161 (face font-lock-comment-face fontified t) 161 188 (face font-lock-comment-face fontified t) 188 193 (face font-lock-comment-delimiter-face fontified t) 193 200 (face font-lock-comment-face fontified t) 200 201 (face font-lock-comment-face fontified t) 201 220 (face font-lock-comment-face fontified t) 220 221 (face font-lock-comment-face fontified t) 221 222 (face font-lock-comment-face fontified t) 222 237 (face font-lock-comment-face fontified t) 237 255 (face font-lock-comment-face fontified t) 255 256 (face font-lock-comment-face fontified t) 256 266 (face font-lock-comment-face fontified t) 266 268 (face font-lock-comment-face fontified t) 268 273 (face font-lock-comment-delimiter-face fontified t) 273 297 (face font-lock-comment-face fontified t) 297 298 (face font-lock-comment-face fontified t) 298 313 (face font-lock-comment-face fontified t) 313 329 (face font-lock-comment-face fontified t) 329 348 (face font-lock-comment-face fontified t) 348 351 (face font-lock-comment-delimiter-face fontified t) 351 353 (face font-lock-comment-delimiter-face fontified t) 353 392 (face font-lock-comment-face fontified t) 392 394 (face font-lock-comment-face fontified t) 394 402 (face font-lock-comment-face fontified t) 402 416 (face font-lock-comment-face fontified t) 416 418 (face font-lock-comment-face fontified t) 418 428 (face font-lock-comment-face fontified t) 428 433 (face font-lock-comment-delimiter-face fontified t) 433 440 (face font-lock-comment-face fontified t) 440 445 (face font-lock-comment-face fontified t) 445 446 (face font-lock-comment-face fontified t) 446 471 (face font-lock-comment-face fontified t) 471 472 (face font-lock-comment-face fontified t) 472 509 (face font-lock-comment-face fontified t) 509 512 (face font-lock-comment-face fontified t) 512 515 (face font-lock-comment-delimiter-face fontified t) 515 524 (face font-lock-comment-face fontified t) 524 525 (face font-lock-comment-face fontified t) 525 534 (face font-lock-comment-face fontified t) 534 537 (face font-lock-comment-delimiter-face fontified t) 537 541 (face font-lock-comment-face fontified t) 541 542 (face font-lock-comment-face fontified t) 542 543 (face font-lock-comment-face fontified t) 543 553 (face font-lock-comment-face fontified t latex-env-pair t) 553 579 (face font-lock-comment-face fontified t) 579 582 (face font-lock-comment-delimiter-face fontified t) 582 596 (face font-lock-comment-face fontified t) 596 600 (face font-lock-comment-face fontified t) 600 603 (face font-lock-comment-delimiter-face fontified t) 603 607 (face font-lock-comment-face fontified t) 607 617 (face font-lock-comment-face fontified t latex-env-pair t) 617 626 (face font-lock-comment-face fontified t) 626 632 (face font-lock-comment-face fontified t latex-env-pair t) 632 636 (face font-lock-comment-face fontified t latex-env-pair t) 636 647 (face font-lock-comment-face fontified t) 647 648 (face font-lock-comment-face fontified t) 648 662 (face font-lock-comment-face fontified t) 662 665 (face font-lock-comment-delimiter-face fontified t) 665 669 (face font-lock-comment-face fontified t) 669 679 (fontified t face font-lock-comment-face) 679 705 (fontified t face font-lock-comment-face) 705 708 (face font-lock-comment-delimiter-face fontified t) 708 712 (face font-lock-comment-face fontified t) 712 722 (face font-lock-comment-face fontified t latex-env-pair t) 722 731 (face font-lock-comment-face fontified t) 731 737 (face font-lock-comment-face fontified t latex-env-pair t) 737 741 (face font-lock-comment-face fontified t latex-env-pair t) 741 767 (face font-lock-comment-face fontified t) 767 770 (face font-lock-comment-delimiter-face fontified t) 770 794 (face font-lock-comment-face fontified t) 794 797 (face font-lock-comment-delimiter-face fontified t) 797 801 (face font-lock-comment-face fontified t) 801 811 (face font-lock-comment-face fontified t latex-env-pair t) 811 820 (face font-lock-comment-face fontified t) 820 830 (face font-lock-comment-face fontified t latex-env-pair t) 830 856 (face font-lock-comment-face fontified t) 856 859 (face font-lock-comment-delimiter-face fontified t) 859 880 (face font-lock-comment-face fontified t) 880 898 (face font-lock-comment-face fontified t) 898 901 (face font-lock-comment-delimiter-face fontified t) 901 905 (face font-lock-comment-face fontified t) 905 915 (face font-lock-comment-face fontified t latex-env-pair t) 915 924 (face font-lock-comment-face fontified t) 924 934 (face font-lock-comment-face fontified t latex-env-pair t) 934 960 (face font-lock-comment-face fontified t) 960 963 (face font-lock-comment-delimiter-face fontified t) 963 988 (face font-lock-comment-face fontified t) 988 989 (face font-lock-comment-delimiter-face fontified t) 989 991 (face font-lock-comment-delimiter-face fontified t) 991 995 (face font-lock-comment-face fontified t) 995 1005 (face font-lock-comment-face fontified t latex-env-pair t) 1005 1014 (face font-lock-comment-face fontified t) 1014 1024 (face font-lock-comment-face fontified t latex-env-pair t) 1024 1050 (face font-lock-comment-face fontified t) 1050 1053 (face font-lock-comment-delimiter-face fontified t) 1053 1077 (face font-lock-comment-face fontified t) 1077 1080 (face font-lock-comment-delimiter-face fontified t) 1080 1084 (face font-lock-comment-face fontified t) 1084 1094 (face font-lock-comment-face fontified t latex-env-pair t) 1094 1098 (face font-lock-comment-face fontified t) 1098 1101 (face font-lock-comment-delimiter-face fontified t) 1101 1103 (face font-lock-comment-face fontified t) 1103 1104 (face font-lock-comment-face fontified t) 1104 1120 (face font-lock-comment-face fontified t) 1120 1123 (face font-lock-comment-delimiter-face fontified t) 1123 1132 (face font-lock-comment-face fontified t) 1132 1135 (face font-lock-comment-delimiter-face fontified t) 1135 1157 (face font-lock-comment-face fontified t) 1157 1160 (face font-lock-comment-delimiter-face fontified t) 1160 1173 (face font-lock-comment-face fontified t) 1173 1176 (face font-lock-comment-delimiter-face fontified t) 1176 1247 (face font-lock-comment-face fontified t) 1247 1250 (face font-lock-comment-delimiter-face fontified t) 1250 1318 (face font-lock-comment-face fontified t) 1318 1321 (face font-lock-comment-delimiter-face fontified t) 1321 1362 (face font-lock-comment-face fontified t) 1362 1365 (face font-lock-comment-delimiter-face fontified t) 1365 1368 (face font-lock-comment-face fontified t) 1368 1431 (face font-lock-comment-face fontified t) 1431 1434 (face font-lock-comment-delimiter-face fontified t) 1434 1499 (face font-lock-comment-face fontified t) 1499 1506 (face font-lock-comment-face fontified t) 1506 1509 (face font-lock-comment-delimiter-face fontified t) 1509 1582 (face font-lock-comment-face fontified t) 1582 1585 (face font-lock-comment-delimiter-face fontified t) 1585 1595 (face font-lock-comment-face fontified t) 1595 1598 (face font-lock-comment-delimiter-face fontified t) 1598 1666 (face font-lock-comment-face fontified t) 1666 1669 (face font-lock-comment-delimiter-face fontified t) 1669 1740 (face font-lock-comment-face fontified t) 1740 1743 (face font-lock-comment-delimiter-face fontified t) 1743 1789 (face font-lock-comment-face fontified t) 1789 1792 (face font-lock-comment-delimiter-face fontified t) 1792 1796 (face font-lock-comment-face fontified t) 1796 1807 (face font-lock-comment-face fontified t latex-env-pair t)) . 14752) (undo-tree-id487 . -1806) (undo-tree-id488 . -1789) (undo-tree-id489 . -108) (undo-tree-id490 . -1789) (undo-tree-id491 . -1789) (undo-tree-id492 . -1789) (undo-tree-id493 . -1789) (undo-tree-id494 . -1789) (undo-tree-id495 . -1789) (undo-tree-id496 . -1789) (undo-tree-id497 . -1789) (undo-tree-id498 . -1789) (undo-tree-id499 . -1789) (undo-tree-id500 . -1789) (undo-tree-id501 . -1789) (undo-tree-id502 . -1807) 16560 (t 26711 46015 671608 696000)) nil (26711 46070 68427 207000) 0 nil])
([nil nil ((#("% \\usepackage{tabularray}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 26 (face font-lock-comment-face fontified t)) . 14752) (undo-tree-id503 . -25) (undo-tree-id504 . -26) (undo-tree-id505 . -26) (undo-tree-id506 . -26) (undo-tree-id507 . -26) (undo-tree-id508 . -26) (undo-tree-id509 . -26) (undo-tree-id510 . -26) (undo-tree-id511 . -26) (undo-tree-id512 . -26) (undo-tree-id513 . -26) (undo-tree-id514 . -26) (undo-tree-id515 . -26) (undo-tree-id516 . -26) (undo-tree-id517 . -26) (undo-tree-id518 . -26) (undo-tree-id519 . -26) (undo-tree-id520 . -26) (undo-tree-id521 . -26) (undo-tree-id522 . -26) (undo-tree-id523 . -26) (undo-tree-id524 . -26) (undo-tree-id525 . -26) (undo-tree-id526 . -26) (undo-tree-id527 . -26) (undo-tree-id528 . -26) (undo-tree-id529 . -26) (undo-tree-id530 . -26) (t 26711 46070 72315 413000)) nil (26711 46072 254994 978000) 0 nil])
([nil nil ((14776 . 14783) (#("i" 0 1 (fontified nil)) . -14776) (undo-tree-id537 . -1) (14770 . 14777) (14769 . 14770) (t 26711 46072 257303 633000) 14752) nil (26711 46092 985446 639000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14831 . 14832) (nil fontified nil 14783 . 14832) (14783 . 14832) 14782) nil (26711 46092 985445 657000) 0 nil])
([nil nil ((14832 . 14834)) nil (26711 46092 985445 156000) 0 nil])
([nil nil ((14789 . 14793) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -14789) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (14783 . 14790)) nil (26711 46092 985442 672000) 0 nil])
([nil nil ((14802 . 14803) (t 26711 46092 987191 873000)) nil (26711 46179 685372 362000) 0 nil])
([nil nil ((nil fontified t 15001 . 15002) (nil fontified t 14994 . 15001) (nil face font-lock-keyword-face 14994 . 15001) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . -14991) (14999 . 15010)) nil (26711 46179 685371 841000) 0 nil])
([nil nil ((nil fontified nil 15166 . 15167) (nil fontified nil 15159 . 15166) (nil face font-lock-keyword-face 15159 . 15166) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil)) . -15156) (15164 . 15175) (nil fontified nil 15139 . 15140) (nil fontified nil 15132 . 15139) (nil face font-lock-keyword-face 15132 . 15139) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil)) . -15129) (15137 . 15148) (nil fontified nil 15096 . 15097) (nil fontified nil 15089 . 15096) (nil face font-lock-keyword-face 15089 . 15096) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil)) . -15086) (15094 . 15105) (nil fontified nil 15070 . 15071) (nil fontified nil 15063 . 15070) (nil face font-lock-keyword-face 15063 . 15070) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil)) . -15060) (15068 . 15079) (nil fontified t 15022 . 15023) (nil fontified t 15015 . 15022) (nil face font-lock-keyword-face 15015 . 15022) (#("\\textbf{" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . -15012) (15020 . 15031)) nil (26711 46179 685370 539000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 15011)) nil (26711 46179 685369 347000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 15052)) nil (26711 46179 685369 6000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 15052)) nil (26711 46179 685368 715000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 15052)) nil (26711 46179 685368 415000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 15052)) nil (26711 46179 685367 583000) 0 nil])
([nil nil ((#("		" 0 2 (face (bold) fontified t)) . 15096) (undo-tree-id539 . -1)) nil (26711 46179 685367 213000) 0 nil])
([nil nil ((#("	" 0 1 (face (bold) fontified t)) . 15095)) nil (26711 46179 685366 30000) 0 nil])
([nil nil ((15095 . 15096)) nil (26711 46179 685365 690000) 0 nil])
([nil nil ((#("			" 0 3 (face (bold) fontified t)) . 15040) (undo-tree-id538 . -2)) nil (26711 46179 685365 59000) 0 nil])
([nil nil ((15040 . 15041)) nil (26711 46179 685354 759000) 0 nil])
([nil nil ((15032 . 15033) (#("s" 0 1 (face (font-lock-keyword-face bold) fontified t)) . -15032) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) 15033 (15031 . 15033) (t 26711 46179 688724 463000)) nil (26711 46191 521757 739000) 0 nil])
([nil nil ((14751 . 14764) (t 26711 46191 524660 653000)) nil (26711 46218 859279 419000) 0 nil])
([nil nil ((14761 . 14762) (t 26711 46218 861513 272000)) nil (26711 46233 870556 292000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 14760) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (t 26711 46233 872432 349000)) nil (26711 46241 492915 63000) 0 nil])
([nil nil ((14760 . 14761) (#("0" 0 1 (fontified t)) . 14760) (undo-tree-id543 . -1) (undo-tree-id544 . -1)) nil (26711 46241 492833 812000) 0 nil])
([nil nil ((19957 . 19958) (t 26711 46241 495391 251000) 19935) nil (26711 46271 213413 837000) 0 nil])
([nil nil ((26095 . 26097) (t 26711 46271 215231 41000)) nil (26711 46294 701847 207000) 0 nil])
([nil nil ((25046 . 25047) (#("1" 0 1 (fontified t)) . 25046) (t 26711 46294 704104 411000)) nil (26711 46319 797464 704000) 0 nil])
([nil nil ((25206 . 25207) (#("1" 0 1 (fontified t)) . 25206)) nil (26711 46319 797464 354000) 0 nil])
([nil nil ((25366 . 25367) (#("6" 0 1 (fontified t)) . 25366) (25366 . 25367) (#("1" 0 1 (fontified t)) . 25366)) nil (26711 46319 797463 913000) 0 nil])
([nil nil ((25527 . 25528) (#("3" 0 1 (fontified t)) . 25527) (25527 . 25528) (#("1" 0 1 (fontified t)) . 25527)) nil (26711 46319 797463 492000) 0 nil])
([nil nil ((25757 . 25758) (#("1" 0 1 (fontified t)) . 25757)) nil (26711 46319 797463 101000) 0 nil])
([nil nil ((25757 . 25758) (#("8" 0 1 (fontified t)) . 25757)) nil (26711 46319 797462 781000) 0 nil])
([nil nil ((25872 . 25873) (#("1" 0 1 (fontified t)) . 25872)) nil (26711 46319 797462 591000) 0 nil])
([nil nil ((26005 . 26006) (#("1" 0 1 (fontified t)) . 26005)) nil (26711 46319 797462 300000) 0 nil])
([nil nil ((26267 . 26268) (#("0" 0 1 (fontified t)) . 26267) (26267 . 26268) (#("1" 0 1 (fontified t)) . 26267)) nil (26711 46319 797461 829000) 0 nil])
([nil nil ((26544 . 26545)) nil (26711 46319 797461 478000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -26653) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (#("t" 0 1 (fontified t)) . -26654) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) 26655 (26653 . 26655) (#("Y" 0 1 (fontified t)) . -26653) (undo-tree-id668 . -1) 26654 (26652 . 26654)) nil (26711 46319 797460 436000) 0 nil])
([nil nil ((26948 . 26949)) nil (26711 46319 797439 457000) 0 nil])
([nil nil ((27863 . 27958) (#("https://kase.kz/files/presentations/ru/KASE\\_OilGas\\_industry\\_2019.pdf" 0 43 (fontified t) 43 45 (face font-lock-keyword-face fontified t) 45 51 (fontified t) 51 53 (face font-lock-keyword-face fontified t) 53 61 (fontified t) 61 63 (face font-lock-keyword-face fontified t) 63 71 (fontified t)) . -27863) (undo-tree-id693 . -70) (undo-tree-id694 . -70) 27934 (t 26711 46319 800969 109000)) nil (26711 46370 49901 350000) 0 nil])
([nil nil ((#("\\" 0 1 (face tex-verbatim fontified t)) . 27930)) nil (26711 46370 49900 148000) 0 nil])
([nil nil ((#("\\" 0 1 (face tex-verbatim fontified t)) . 27920) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1)) nil (26711 46370 49899 447000) 0 nil])
([nil nil ((#("\\" 0 1 (face tex-verbatim fontified t)) . 27912) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1)) nil (26711 46370 49890 430000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25538 . 25539) (nil fontified nil 25524 . 25539) (25524 . 25539) 25523 (t 26711 46370 52698 178000)) nil (26711 46391 862509 141000) 0 nil])
([nil nil ((26523 . 26586) (#("https://hrcak.srce.hr/file/407990" 0 33 (fontified t)) . -26523) (undo-tree-id695 . -32) (undo-tree-id696 . -33) (undo-tree-id697 . -33) (undo-tree-id698 . -33) (undo-tree-id699 . -33) (undo-tree-id700 . -33) (undo-tree-id701 . -33) (undo-tree-id702 . -33) (undo-tree-id703 . -33) (undo-tree-id704 . -33) (undo-tree-id705 . -33) (undo-tree-id706 . -33) (undo-tree-id707 . -33) (undo-tree-id708 . -33) (undo-tree-id709 . -33) (undo-tree-id710 . -33) (undo-tree-id711 . -33) (undo-tree-id712 . -33) (undo-tree-id713 . -33) (undo-tree-id714 . -33) (undo-tree-id715 . -33) (undo-tree-id716 . -32) (undo-tree-id717 . -32) (undo-tree-id718 . -32) (undo-tree-id719 . -32) (undo-tree-id720 . -32) (undo-tree-id721 . -32) (undo-tree-id722 . -32) (undo-tree-id723 . -32) (undo-tree-id724 . -32) (undo-tree-id725 . -32) (undo-tree-id726 . -32) (undo-tree-id727 . -32) (undo-tree-id728 . -32) (undo-tree-id729 . -32) (undo-tree-id730 . -32) (undo-tree-id731 . -32) (undo-tree-id732 . -32) (undo-tree-id733 . -32) (undo-tree-id734 . -32) (undo-tree-id735 . -32) (undo-tree-id736 . -32) (undo-tree-id737 . -32) (undo-tree-id738 . -32) (undo-tree-id739 . -32) (undo-tree-id740 . -32) (undo-tree-id741 . -32) (undo-tree-id742 . -32) (undo-tree-id743 . -32) (undo-tree-id744 . -32) (undo-tree-id745 . -32) (undo-tree-id746 . -32) (undo-tree-id747 . -32) (undo-tree-id748 . -32) (undo-tree-id749 . -32) (undo-tree-id750 . -32) (undo-tree-id751 . -32) (undo-tree-id752 . -33) 26556 (t 26711 46391 865580 585000)) nil (26711 46406 413505 877000) 0 nil])
([nil nil ((27150 . 27210) (#("https://doi.org/10.1155/2020/8890174" 0 36 (fontified t)) . 27150) (undo-tree-id760 . -36) (undo-tree-id761 . -35) (t 26711 46406 416502 139000)) nil (26711 46444 553221 921000) 0 nil])
([nil nil ((29738 . 29798) (#("https://doi.org/10.1155/2020/8890174" 0 36 (fontified t)) . 29738) (undo-tree-id758 . -36) (undo-tree-id759 . -35)) nil (26711 46444 553220 799000) 0 nil])
([nil nil ((#("https://doi.org" 0 15 (fontified t)) . 29782) (undo-tree-id755 . -14) (undo-tree-id756 . -15) (undo-tree-id757 . -1) 29783) nil (26711 46444 553219 517000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29801 . 29802) (nil fontified nil 29782 . 29802) (29782 . 29802)) nil (26711 46444 553217 433000) 0 nil])
([nil nil ((29782 . 29786)) nil (26711 46444 553217 62000) 0 nil])
([nil nil ((#("https://doi.org" 0 15 (fontified t)) . 27194) (undo-tree-id753 . -14) (undo-tree-id754 . -5) 27199) nil (26711 46444 553216 511000) 0 nil])
([nil nil ((27194 . 27197)) nil (26711 46444 553208 596000) 0 nil])
([nil nil ((27197 . 27198)) nil (26711 46444 553208 195000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27217 . 27218) (nil fontified nil 27198 . 27218) (27198 . 27218) 27197) nil (26711 46473 706861 291000) 0 nil])
([nil nil ((28033 . 28035) (t 26711 46444 555296 525000)) nil (26711 46483 290442 516000) 0 nil] [nil nil ((#("{[}in Russian{]}" 0 16 (fontified t)) . 28034) (undo-tree-id770 . -15) (undo-tree-id771 . -16) (undo-tree-id772 . -16) (t 26711 46444 555296 525000)) ((28034 . 28050)) (26711 46473 706637 643000) 0 nil] [nil nil ((#("{[}in Russian{]}
" 0 17 (fontified t)) . 28034) (undo-tree-id762 . -17) (undo-tree-id763 . -16) (undo-tree-id764 . -17) (undo-tree-id765 . -17) (undo-tree-id766 . -17) (undo-tree-id767 . -17) (undo-tree-id768 . -17) (undo-tree-id769 . -17) (t 26711 46444 555296 525000)) ((28034 . 28051)) (26711 46472 888522 914000) 0 nil])
([nil nil ((28686 . 28688) (t 26711 46483 293087 675000)) nil (26711 46489 716370 69000) 0 nil])
nil
nil
([nil nil ((nil rear-nonsticky nil 366 . 367) (nil fontified nil 353 . 367) (353 . 367) (352 . 353) (t 26711 46489 719053 29000) 347) nil (26714 40393 762489 928000) 0 nil])
([nil nil ((352 . 353)) nil (26714 40393 762488 986000) 0 nil])
([nil nil ((#("А.М. Алиева,
" 0 12 (fontified t) 12 13 (fontified t)) . 341) (undo-tree-id0 . -13) (undo-tree-id1 . -6) (undo-tree-id2 . -13) (undo-tree-id3 . 1) (undo-tree-id4 . -11) (undo-tree-id5 . -13) (undo-tree-id6 . -12) 352) nil (26714 40393 762486 321000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 511) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (t 26714 40393 765217 414000)) nil (26714 40402 26881 652000) 0 nil])
([nil nil ((#("A.M. Alieva" 0 11 (face (bold) fontified t)) . 2669) (undo-tree-id25 . -10) (t 26714 40402 30183 619000)) nil (26714 40429 491411 694000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2683 . 2684) (nil fontified nil 2669 . 2684) (2669 . 2684)) nil (26714 40429 491410 562000) 0 nil])
([nil nil ((#("А.М. Алиева" 0 11 (face (bold) fontified t)) . 4990) (undo-tree-id24 . -10)) nil (26714 40429 491409 540000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5004 . 5005) (nil fontified nil 4990 . 5005) (4990 . 5005)) nil (26714 40429 491401 435000) 0 nil])
([nil nil ((#(" " 0 1 (rear-nonsticky t fontified t)) . 5004)) nil (26714 40429 491397 548000) 0 nil])
([nil nil ((#("\\href{https://orcid.org/0009-0008-0146-5287}{}
" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 43 (face tex-verbatim fontified t) 43 47 (fontified t)) . 31805) (undo-tree-id61 . -46) (t 26714 40429 494070 226000)) nil (26714 40471 306272 561000) 0 nil])
([nil nil ((#("\\href{https://orcid.org/0000-0001-8742-6378}{};
" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 43 (face tex-verbatim fontified t) 43 48 (fontified t)) . 31240) (undo-tree-id60 . -47)) nil (26714 40471 306271 960000) 0 nil])
([nil nil ((#("\\url{https://orcid.org/0009-0008-0146-5287}.
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 42 (face tex-verbatim fontified t) 42 45 (fontified t)) . 30824) (undo-tree-id37 . -44) (undo-tree-id38 . -45) (undo-tree-id39 . -45) (undo-tree-id40 . -45) (undo-tree-id41 . -45) (undo-tree-id42 . -45) (undo-tree-id43 . -45) (undo-tree-id44 . -45) (undo-tree-id45 . -45) (undo-tree-id46 . -45) (undo-tree-id47 . -45) (undo-tree-id48 . -45) (undo-tree-id49 . -45) (undo-tree-id50 . -45) (undo-tree-id51 . -45) (undo-tree-id52 . -45) (undo-tree-id53 . -45) (undo-tree-id54 . -45) (undo-tree-id55 . -45) (undo-tree-id56 . -45) (undo-tree-id57 . -45) (undo-tree-id58 . -45) (undo-tree-id59 . -45)) nil (26714 40471 306271 18000) 0 nil])
([nil nil ((#("https://orcid.org/0000-0003-1156-8809;
" 0 39 (fontified t)) . 30612) (undo-tree-id36 . -38)) nil (26714 40471 306223 209000) 0 nil])
([nil nil ((#("https://orcid.org/ 0000-0003-1156-8809 
" 0 40 (fontified t)) . 30433) (undo-tree-id28 . -39) (undo-tree-id29 . -40) (undo-tree-id30 . -40) (undo-tree-id31 . -40) (undo-tree-id32 . -40) (undo-tree-id33 . -40) (undo-tree-id34 . -40) (undo-tree-id35 . -40)) nil (26714 40471 306222 658000) 0 nil])
([nil nil ((#("\\url{https://orcid.org/0000-0001-8742-6378};
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 42 (face tex-verbatim fontified t) 42 45 (fontified t)) . 30229) (undo-tree-id27 . -44)) nil (26714 40471 306219 432000) 0 nil])
([nil nil ((#("https://orcid.org/0000-0001-8539-1802;
" 0 39 (fontified t)) . 30042) (undo-tree-id26 . -38)) nil (26714 40471 306218 299000) 0 nil])
([nil nil ((31528 . 31529) (#("
" 0 1 (fontified t)) . -31528) 31510) nil (26714 40471 306210 705000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31221 . 31222) (nil fontified nil 31204 . 31222) (31204 . 31222) (31203 . 31204)) nil (26714 40471 306210 194000) 0 nil])
([nil nil ((31210 . 31211)) nil (26714 40471 306205 636000) 0 nil])
([nil nil ((nil rear-nonsticky nil 30869 . 30870) (nil fontified nil 30851 . 30870) (30851 . 30870) 30850 (t 26714 40471 308894 428000)) nil (26714 40484 210135 523000) 0 nil])
([nil nil ((30856 . 30857)) nil (26714 40484 210134 481000) 0 nil])
([nil nil ((30851 . 30852)) nil (26714 40489 427320 572000) 0 nil])
([nil nil ((30021 . 30022) (#("
" 0 1 (fontified t)) . -30021) 29986 (t 26714 40484 212839 449000)) nil (26714 40494 13913 947000) 0 nil] [nil nil ((29979 . 29980) (#("
" 0 1 (fontified t)) . -29979) (undo-tree-id62 . -1) 29914 (t 26714 40484 212839 449000)) ((29979 . 29980) (#(" " 0 1 (fontified t)) . 29979)) (26714 40489 427090 81000) 0 nil])
([nil nil ((30471 . 30472) (#("
" 0 1 (fontified t)) . -30471) 30459) nil (26714 40494 13909 699000) 0 nil])
nil
([nil nil ((#("Nauryzova K.Sh. - Associate Professor, Candidate of Technical Sciences,
Aktobe Regional University named after. K. Zhubanov, Aktobe, Republic of
Kazakhstan, email: nauryzova61@mail.ru
" 0 136 (fontified t) 136 145 (fontified t) 145 163 (fontified t) 163 164 (fontified t) 164 178 (fontified t) 178 184 (fontified t)) . 31406) (undo-tree-id64 . -145) (undo-tree-id65 . -183) (undo-tree-id66 . -145) (undo-tree-id67 . -145) 31551 (t 26714 40494 15797 475000)) nil (26714 40527 197635 246000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31589 . 31590) (nil fontified nil 31406 . 31590) (31406 . 31590) (31405 . 31406) 31405) nil (26714 40527 197632 511000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -31548) (31547 . 31548) (#(" " 0 1 (fontified nil)) . -31477) (31476 . 31477) (#(" " 0 1 (rear-nonsticky t fontified t)) . 31589) (undo-tree-id63 . -1) 31419) nil (26714 40527 197629 886000) 0 nil])
([nil nil ((#("Наурызова К.Ш. -- ассоциированный професссор, кандидат технических наук,
Актюбинский Региональный университет им. К.Жубанова, Актобе. Казахстан,
email: nauryzova61@mail.ru
" 0 172 (fontified t)) . 30489) (undo-tree-id68 . -145) (undo-tree-id69 . -171) (undo-tree-id70 . -145) (undo-tree-id71 . -145) (undo-tree-id72 . -145) 30634 (t 26714 40527 200654 60000)) nil (26714 40544 611948 21000) 0 nil])
([nil nil ((nil rear-nonsticky nil 30672 . 30673) (nil fontified nil 30489 . 30673) (30489 . 30673)) nil (26714 40544 611929 676000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -30623) (30622 . 30623) (#(" " 0 1 (fontified nil)) . -30559) (30558 . 30559) (#(" " 0 1 (rear-nonsticky t fontified t)) . 30672)) nil (26714 40544 611928 364000) 0 nil])
([nil nil ((30672 . 30673) 30623) nil (26714 40544 611927 582000) 0 nil])
([nil nil ((30547 . 30548) (#(" " 0 1 (fontified t)) . 30547)) nil (26714 40544 611922 272000) 0 nil])
([nil nil ((31433 . 31434) (t 26714 40544 614578 44000)) nil (26714 40548 510790 782000) 0 nil])
([nil nil ((31087 . 31088) (t 26714 40548 513560 943000)) nil (26714 40566 240949 722000) 0 nil])
([nil nil ((30903 . 30904)) nil (26714 40566 240949 161000) 0 nil])
([nil nil ((30902 . 30903)) nil (26714 40566 240948 821000) 0 nil])
([nil nil ((30503 . 30504)) nil (26714 40566 240948 470000) 0 nil])
([nil nil ((30366 . 30367)) nil (26714 40566 240947 869000) 0 nil])
([nil nil ((30365 . 30366)) nil (26714 40566 240947 248000) 0 nil])
([nil nil ((30211 . 30213) (#("," 0 1 (fontified t)) . -30211) (undo-tree-id73 . -1) 30212) nil (26714 40566 240946 546000) 0 nil])
([nil nil ((30060 . 30061)) nil (26714 40566 240938 972000) 0 nil])
([nil nil ((30059 . 30060)) nil (26714 40566 240938 431000) 0 nil])
([nil nil ((29923 . 29924)) nil (26714 40566 240938 30000) 0 nil])
([nil current ((29922 . 29923)) nil (26714 40566 240933 422000) 0 nil])
nil
