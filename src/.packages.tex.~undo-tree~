(undo-tree-save-format-version . 1)
"1ddf4b46fe706a8e1ceb617ab60a702d8c809d06"
[nil nil nil nil (26686 42381 764224 3000) 0 nil]
([nil nil ((nil rear-nonsticky nil 677 . 678) (nil fontified nil 656 . 678) (656 . 678) (655 . 656) (t 26676 20011 168533 926000) 634) nil (26686 42381 764218 540000) 0 nil])
([nil nil ((apply -3 7334 7357 undo--wrap-and-run-primitive-undo 7334 7357 ((7334 . 7337) 7349 (t 26686 42381 772866 560000)))) nil (26686 42415 31282 976000) 0 nil])
([nil nil ((apply -3 7357 7382 undo--wrap-and-run-primitive-undo 7357 7382 ((7357 . 7360) 7372))) nil (26686 42415 31279 319000) 0 nil])
([nil nil ((nil rear-nonsticky nil 443 . 444) (nil fontified nil 107 . 444) (107 . 444) (#("\\usepackage{polyglossia}              % Multilingual support
\\setmainlanguage{russian}
\\setotherlanguages{english}
\\defaultfontfeatures{Ligatures=TeX}
\\setmainfont{FreeSerif}
\\setsansfont{FreeSans}
\\setmonofont{FreeMono}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 23 (face font-lock-builtin-face fontified t) 23 38 (fontified t) 38 61 (face font-lock-comment-face fontified t) 61 77 (face font-lock-keyword-face fontified t) 77 87 (fontified t) 87 105 (face font-lock-keyword-face fontified t) 105 115 (fontified t) 115 135 (face font-lock-keyword-face fontified t) 135 151 (fontified t) 151 163 (face font-lock-keyword-face fontified t) 163 175 (fontified t) 175 187 (face font-lock-keyword-face fontified t) 187 198 (fontified t) 198 210 (face font-lock-keyword-face fontified t) 210 221 (fontified t)) . 107) (undo-tree-id0 . -221) (undo-tree-id1 . -198) (undo-tree-id2 . -220) (undo-tree-id3 . -198) (undo-tree-id4 . -198) 328 (t 26686 42415 32067 917000)) nil (26686 42577 707163 610000) 0 nil])
([nil nil ((nil rear-nonsticky nil 167 . 168) (nil fontified nil 146 . 168) (146 . 168) (#(" " 0 1 (fontified t)) . -146) (undo-tree-id13 . -1) 147 (145 . 147) (131 . 145) (t 26686 42577 714079 102000)) nil (26686 42602 771941 790000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 145) (undo-tree-id11 . -1) (undo-tree-id12 . -1)) nil (26686 42602 771939 973000) 0 nil])
([nil nil ((293 . 314) (#("                 " 0 17 (fontified t)) . 293) (undo-tree-id7 . -17) 310 (293 . 310) (#("             " 0 13 (fontified t)) . 293) (undo-tree-id8 . -13) 306 (293 . 306) (#("         " 0 9 (fontified t)) . 293) (undo-tree-id9 . -9) 302 (293 . 302) (#("     " 0 5 (fontified t)) . 293) (undo-tree-id10 . -5) 298) nil (26686 42602 771937 304000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 312)) nil (26686 42602 771931 598000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 312) (undo-tree-id5 . -1) (undo-tree-id6 . -1)) nil (26686 42602 771928 735000) 0 nil])
([nil nil ((6925 . 6926) (t 26696 5397 139933 766000) 6924) nil (26707 61913 608106 568000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7064 . 7065) (nil fontified nil 6926 . 7065) (6926 . 7065)) nil (26707 61913 608102 701000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6987 . 6988) (nil fontified nil 6926 . 6988) (6926 . 6988) (#("\\SetTblrTemplate{contfoot-text}{} % Remove default spacing
\\SetTblrTemplate{conthead-text}{} % Remove default spacing for continued headers" 0 16 (face font-lock-keyword-face fontified t) 16 34 (fontified t) 34 59 (face font-lock-comment-face fontified t) 59 75 (face font-lock-keyword-face fontified t) 75 93 (fontified t) 93 138 (face font-lock-comment-face fontified t) 138 139 (face font-lock-comment-face rear-nonsticky t fontified t)) . 6926) (undo-tree-id0 . -138) (undo-tree-id1 . -57) (undo-tree-id2 . -116) (undo-tree-id3 . -59) (undo-tree-id4 . -116) (undo-tree-id5 . -116) (undo-tree-id6 . -116) (undo-tree-id7 . -116) (undo-tree-id8 . -116) (undo-tree-id9 . -116) (undo-tree-id10 . -116) (undo-tree-id11 . -116) (undo-tree-id12 . -116) (undo-tree-id13 . -116) (undo-tree-id14 . -116) (undo-tree-id15 . -116) (undo-tree-id16 . -139) 7066 (t 26707 61913 608354 547000)) nil (26707 61948 535447 91000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7020 . 7021) (nil fontified nil 6926 . 7021) (6926 . 7021) (#("\\SetTblrOuter{
  presep = 5pt, % Default space before tables
}" 0 13 (face font-lock-keyword-face fontified t) 13 31 (fontified t) 31 61 (face font-lock-comment-face fontified t) 61 62 (rear-nonsticky t fontified t)) . 6926) (undo-tree-id17 . -61) (undo-tree-id18 . -61) (undo-tree-id19 . -61) (t 26707 61948 536075 413000)) nil (26707 61976 852804 278000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6992 . 6993) (nil fontified nil 6926 . 6993) (6926 . 6993) (#("\\DefTblrTemplate{contfoot-text}{normal}{\\vspace{-10pt}}
\\SetTblrTemplate{contfoot-text}{normal}" 0 16 (face font-lock-keyword-face fontified t) 16 40 (fontified t) 40 47 (face font-lock-keyword-face fontified t) 47 56 (fontified t) 56 72 (face font-lock-keyword-face fontified t) 72 94 (fontified t) 94 95 (rear-nonsticky t fontified t)) . 6926) (undo-tree-id20 . -94) (undo-tree-id21 . -94) (undo-tree-id22 . -38) (undo-tree-id23 . -94) (undo-tree-id24 . -94) (undo-tree-id25 . -94) (undo-tree-id26 . -94) (undo-tree-id27 . -94) (undo-tree-id28 . -94) (undo-tree-id29 . -94) (undo-tree-id30 . -94) (undo-tree-id31 . -94) (undo-tree-id32 . -94) (undo-tree-id33 . -94) (undo-tree-id34 . -94) (undo-tree-id35 . -94) (undo-tree-id36 . -94) (undo-tree-id37 . -94) (undo-tree-id38 . -94) (undo-tree-id39 . -94) (undo-tree-id40 . -94) (undo-tree-id41 . -94) (undo-tree-id42 . -94) (undo-tree-id43 . -94) (undo-tree-id44 . -94) (undo-tree-id45 . -94) (undo-tree-id46 . -94) (undo-tree-id47 . -94) (undo-tree-id48 . -94) (undo-tree-id49 . -94) (undo-tree-id50 . -38) (undo-tree-id51 . -38) (undo-tree-id52 . -38) (undo-tree-id53 . -38) (undo-tree-id54 . -38) (undo-tree-id55 . -38) (undo-tree-id56 . -38) (undo-tree-id57 . -38) (undo-tree-id58 . -38) (undo-tree-id59 . -38) (undo-tree-id60 . -38) (undo-tree-id61 . -38) (undo-tree-id62 . -38) (undo-tree-id63 . -38) (undo-tree-id64 . -38) (undo-tree-id65 . -94) (undo-tree-id66 . -38) (undo-tree-id67 . -38) (undo-tree-id68 . -38) (undo-tree-id69 . -95) (t 26707 61976 852872 128000)) nil (26707 62075 257981 23000) 0 nil])
([nil nil ((6988 . 6989) (#("0" 0 1 (fontified t)) . 6988) (undo-tree-id70 . -1) (t 26707 62075 258296 10000)) nil (26707 62092 797691 788000) 0 nil])
([nil nil ((6993 . 6994) (t 26707 62092 798210 928000) 6988) nil (26707 62134 957298 592000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7038 . 7039) (nil fontified nil 6994 . 7039) (6994 . 7039)) nil (26707 62134 957294 755000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7041 . 7042) (nil fontified nil 6994 . 7042) (6994 . 7042) (#("\\SetTblrTemplate{caption-text}{\\centering #1}" 0 16 (face font-lock-keyword-face fontified t) 16 31 (fontified t) 31 41 (face font-lock-keyword-face fontified t) 41 44 (fontified t) 44 45 (rear-nonsticky t fontified t)) . 6994) (undo-tree-id71 . -44) (undo-tree-id72 . -44) (undo-tree-id73 . -44) (undo-tree-id74 . -44) (undo-tree-id75 . -44) (undo-tree-id76 . -44) (undo-tree-id77 . -44) (undo-tree-id78 . -44) (undo-tree-id79 . -44) (undo-tree-id80 . -44) (undo-tree-id81 . -44) (undo-tree-id82 . -44) (undo-tree-id83 . -44) (undo-tree-id84 . -45) 7040 (t 26707 62134 958024 73000)) nil (26707 62158 816363 482000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7158 . 7159) (nil fontified nil 6994 . 7159) (6994 . 7159) (#("\\captionsetup[longtblr]{justification=centering}" 0 13 (face font-lock-keyword-face fontified t) 13 47 (fontified t) 47 48 (rear-nonsticky t fontified t)) . 6994) (undo-tree-id85 . -47) (undo-tree-id86 . -47) (undo-tree-id87 . -47) (undo-tree-id88 . -47) (undo-tree-id89 . -47) 7043 (t 26707 62158 816928 248000)) nil (26707 62182 569844 763000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7133 . 7134) (nil fontified nil 6994 . 7134) (6994 . 7134) (#("\\SetTblrTemplate{caption}{
  \\centering
  \\UseTblrTemplate{caption-tag}{default}
  \\UseTblrTemplate{caption-sep}{default}
  \\UseTblrTemplate{caption-text}{default}
}
" 0 16 (face font-lock-keyword-face fontified t) 16 29 (fontified t) 29 39 (face font-lock-keyword-face fontified t) 39 42 (fontified t) 42 58 (face font-lock-keyword-face fontified t) 58 83 (fontified t) 83 99 (face font-lock-keyword-face fontified t) 99 124 (fontified t) 124 140 (face font-lock-keyword-face fontified t) 140 164 (fontified t) 164 165 (rear-nonsticky t fontified t) 165 166 (fontified t)) . 6994) (undo-tree-id90 . -166) (undo-tree-id91 . 1) (undo-tree-id92 . -165) (undo-tree-id93 . -164) (undo-tree-id94 . -166) (undo-tree-id95 . -166) (undo-tree-id96 . -166) (undo-tree-id97 . -166) (undo-tree-id98 . -166) (undo-tree-id99 . -164) (undo-tree-id100 . -164) (undo-tree-id101 . -164) (undo-tree-id102 . -164) (undo-tree-id103 . -164) (undo-tree-id104 . -164) (undo-tree-id105 . -164) (undo-tree-id106 . -164) (undo-tree-id107 . -164) (undo-tree-id108 . -164) (undo-tree-id109 . -122) (undo-tree-id110 . -122) (undo-tree-id111 . -122) (undo-tree-id112 . -122) (undo-tree-id113 . -122) (undo-tree-id114 . -122) (undo-tree-id115 . -122) (undo-tree-id116 . -122) (undo-tree-id117 . -122) (undo-tree-id118 . -122) (undo-tree-id119 . -122) (undo-tree-id120 . -122) (undo-tree-id121 . -122) (undo-tree-id122 . -122) (undo-tree-id123 . -122) (undo-tree-id124 . -122) (undo-tree-id125 . -122) (undo-tree-id126 . -81) (undo-tree-id127 . -81) (undo-tree-id128 . -81) (undo-tree-id129 . -81) (undo-tree-id130 . -81) (undo-tree-id131 . -40) (undo-tree-id132 . -40) (undo-tree-id133 . -40) (undo-tree-id134 . -40) (undo-tree-id135 . -40) (undo-tree-id136 . -27) (undo-tree-id137 . -27) (undo-tree-id138 . -27) (undo-tree-id139 . -27) (undo-tree-id140 . -27) (undo-tree-id141 . -27) (undo-tree-id142 . -27) (undo-tree-id143 . -27) (undo-tree-id144 . -27) (undo-tree-id145 . -27) (undo-tree-id146 . -27) (undo-tree-id147 . -27) (undo-tree-id148 . -27) (undo-tree-id149 . -27) (undo-tree-id150 . -27) (undo-tree-id151 . -27) (undo-tree-id152 . -27) (undo-tree-id153 . -27) (undo-tree-id154 . -27) (undo-tree-id155 . -27) (undo-tree-id156 . -164) (undo-tree-id157 . -166) (t 26707 62182 570839 158000)) nil (26707 62300 712716 65000) 0 nil])
([nil nil ((#("\\DeclareCaptionTextFormat{tblr}{\\centering #1}
" 0 25 (face font-lock-keyword-face fontified t) 25 32 (fontified t) 32 42 (face font-lock-keyword-face fontified t) 42 47 (fontified t)) . 6994) (undo-tree-id158 . -46) (undo-tree-id159 . -47) (t 26707 62300 713472 74000)) nil (26707 62337 472702 985000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 6994) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (t 26707 62337 702377 760000)) nil (26707 62347 4330 112000) 0 nil] [nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 6994) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (t 26707 62324 787409 766000)) ((6994 . 6995) (t 26707 62337 33379 396000)) (26707 62337 32806 827000) 0 nil])
([nil nil ((#("captionsetup[longtblr]{
" 0 12 (fontified t) 12 23 (fontified t) 23 24 (fontified t)) . 6994) (undo-tree-id174 . -23) (undo-tree-id175 . -24)) nil (26707 62347 4329 10000) 0 nil])
nil
([nil nil ((#("  labelformat=tblr,
" 0 19 (fontified t) 19 20 (fontified t)) . 6994) (undo-tree-id171 . -19) (undo-tree-id172 . -19) (undo-tree-id173 . -20)) nil (26707 62347 4327 908000) 0 nil])
([nil nil ((#("  textformat=tblr,
" 0 18 (fontified t) 18 19 (fontified t)) . 6994) (undo-tree-id168 . -18) (undo-tree-id169 . -18) (undo-tree-id170 . -19)) nil (26707 62347 4326 345000) 0 nil])
([nil nil ((#("  justification=centering
" 0 25 (fontified t) 25 26 (fontified t)) . 6994) (undo-tree-id165 . -25) (undo-tree-id166 . -25) (undo-tree-id167 . -26)) nil (26707 62347 4325 12000) 0 nil])
([nil nil ((#("}
" 0 1 (fontified t) 1 2 (fontified t)) . 6994) (undo-tree-id163 . -1) (undo-tree-id164 . -2)) nil (26707 62347 4323 259000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 6994) (undo-tree-id162 . -1)) nil (26707 62547 674034 191000) 0 nil])
([nil nil ((6629 . 6630) (t 26707 62548 965199 1000) 6629) nil (26707 62641 631260 222000) 0 nil] [nil nil ((nil rear-nonsticky nil 6398 . 6399) (nil fontified nil 6354 . 6399) (6354 . 6399) (#("\\usepackage{caption}" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 19 (face font-lock-builtin-face fontified t) 19 20 (fontified t)) . 6354) (undo-tree-id178 . -19) (undo-tree-id179 . -12) (undo-tree-id180 . -12) (undo-tree-id181 . -19) (undo-tree-id182 . -19) (undo-tree-id183 . -19) (undo-tree-id184 . -19) (undo-tree-id185 . -19) (undo-tree-id186 . -19) (undo-tree-id187 . -19) (undo-tree-id188 . -19) (undo-tree-id189 . -19) (undo-tree-id190 . -19) (undo-tree-id191 . -19) (undo-tree-id192 . -19) (undo-tree-id193 . -19) (undo-tree-id194 . -19) (undo-tree-id195 . -19) (undo-tree-id196 . -19) (undo-tree-id197 . -19) (undo-tree-id198 . -19) (undo-tree-id199 . -19) (undo-tree-id200 . -19) (undo-tree-id201 . -19) (undo-tree-id202 . -19) (undo-tree-id203 . -19) (undo-tree-id204 . -19) (undo-tree-id205 . -19) (undo-tree-id206 . -19) (undo-tree-id207 . -19) (undo-tree-id208 . -19) (undo-tree-id209 . -19) (undo-tree-id210 . -19) (undo-tree-id211 . -19) (undo-tree-id212 . -12) (undo-tree-id213 . -12) (undo-tree-id214 . -12) (undo-tree-id215 . -12) (undo-tree-id216 . -12) (undo-tree-id217 . -12) (undo-tree-id218 . -12) (undo-tree-id219 . -12) (undo-tree-id220 . -12) (undo-tree-id221 . -12) (undo-tree-id222 . -12) (undo-tree-id223 . -12) (undo-tree-id224 . -12) (undo-tree-id225 . -12) (undo-tree-id226 . -12) (undo-tree-id227 . -12) (undo-tree-id228 . -12) (undo-tree-id229 . -12) (undo-tree-id230 . -12) (undo-tree-id231 . -12) (undo-tree-id232 . -12) (undo-tree-id233 . -12) (undo-tree-id234 . -12) (undo-tree-id235 . -12) (undo-tree-id236 . -12) (undo-tree-id237 . -12) (undo-tree-id238 . -12) (undo-tree-id239 . -12) (undo-tree-id240 . -12) (undo-tree-id241 . -12) (undo-tree-id242 . -12) (undo-tree-id243 . -12) (undo-tree-id244 . -12) (undo-tree-id245 . -12) (undo-tree-id246 . -12) (undo-tree-id247 . -20) 6375 (t 26707 62347 5355 279000)) ((6354 . 6374) (#("\\usepackage[justification=centering]{caption}" 0 11 (face font-lock-keyword-face fontified nil) 11 37 (fontified nil) 37 44 (face font-lock-builtin-face fontified nil) 44 45 (rear-nonsticky nil fontified nil)) . 6354) (undo-tree-id248 . -44) (undo-tree-id249 . -44) (undo-tree-id250 . -44) (undo-tree-id251 . -44) (undo-tree-id252 . -44) (undo-tree-id253 . -44) (undo-tree-id254 . -44) (undo-tree-id255 . -44) (undo-tree-id256 . -44) (undo-tree-id257 . -44) (undo-tree-id258 . -44) (undo-tree-id259 . -44) (undo-tree-id260 . -44) (undo-tree-id261 . -44) (undo-tree-id262 . -44) (undo-tree-id263 . -44) (undo-tree-id264 . -44) (undo-tree-id265 . -44) (undo-tree-id266 . -44) (undo-tree-id267 . -44) (undo-tree-id268 . -44) (undo-tree-id269 . -44) (undo-tree-id270 . -44) (undo-tree-id271 . -44) (undo-tree-id272 . -44) (undo-tree-id273 . -44) (undo-tree-id274 . -44) (undo-tree-id275 . -44) (undo-tree-id276 . -44) (undo-tree-id277 . -44) (undo-tree-id278 . -44) (undo-tree-id279 . -44) (undo-tree-id280 . -44) (undo-tree-id281 . -44) (undo-tree-id282 . -44) (undo-tree-id283 . -44) (undo-tree-id284 . -44) (undo-tree-id285 . -44) (undo-tree-id286 . -44) (undo-tree-id287 . -44) (undo-tree-id288 . -44) (undo-tree-id289 . -44) (undo-tree-id290 . -44) (undo-tree-id291 . -44) (undo-tree-id292 . -44) (undo-tree-id293 . -44) (undo-tree-id294 . -44) (undo-tree-id295 . -44) (undo-tree-id296 . -44) (undo-tree-id297 . -44) (undo-tree-id298 . -44) (undo-tree-id299 . -44) (undo-tree-id300 . -44) (undo-tree-id301 . -44) (undo-tree-id302 . -44) (undo-tree-id303 . -44) (undo-tree-id304 . -44) (undo-tree-id305 . -44) (undo-tree-id306 . -44) (undo-tree-id307 . -44) (undo-tree-id308 . -44) (undo-tree-id309 . -44) (undo-tree-id310 . -44) (undo-tree-id311 . -44) (undo-tree-id312 . -44) (undo-tree-id313 . -44) (undo-tree-id314 . -44) (undo-tree-id315 . -44) (undo-tree-id316 . -44) (undo-tree-id317 . -44) (undo-tree-id318 . -44) (undo-tree-id319 . -44) (undo-tree-id320 . -44) (undo-tree-id321 . -44) (undo-tree-id322 . -44) (undo-tree-id323 . -44) (undo-tree-id324 . -44) (undo-tree-id325 . -44) (undo-tree-id326 . -44) (undo-tree-id327 . -44) (undo-tree-id328 . -44) (undo-tree-id329 . -44) (undo-tree-id330 . -44) (undo-tree-id331 . -44) (undo-tree-id332 . -44) (undo-tree-id333 . -44) (undo-tree-id334 . -44) (undo-tree-id335 . -44) (undo-tree-id336 . -44) (undo-tree-id337 . -44) (undo-tree-id338 . -44) (undo-tree-id339 . -44) (undo-tree-id340 . -44) (undo-tree-id341 . -44) (undo-tree-id342 . -44) (undo-tree-id343 . -44) (undo-tree-id344 . -44) (undo-tree-id345 . -44) (undo-tree-id346 . -44) (undo-tree-id347 . -44) (undo-tree-id348 . -44) (undo-tree-id349 . -44) (undo-tree-id350 . -44) (undo-tree-id351 . -44) (undo-tree-id352 . -44) (undo-tree-id353 . -44) (undo-tree-id354 . -44) (undo-tree-id355 . -44) (undo-tree-id356 . -44) (undo-tree-id357 . -44) (undo-tree-id358 . -44) (undo-tree-id359 . -44) (undo-tree-id360 . -44) (undo-tree-id361 . -44) (undo-tree-id362 . -44) (undo-tree-id363 . -44) (undo-tree-id364 . -44) (undo-tree-id365 . -44) (undo-tree-id366 . -44) (undo-tree-id367 . -44) (undo-tree-id368 . -44) (undo-tree-id369 . -44) (undo-tree-id370 . -44) (undo-tree-id371 . -44) (undo-tree-id372 . -44) (undo-tree-id373 . -44) (nil rear-nonsticky t 6398 . 6399) (t 26707 62532 575279 415000)) (26707 62532 574972 530000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 6629) (undo-tree-id665 . 1) (undo-tree-id666 . -1) (t 26707 62642 392767 560000)) nil (26707 62643 558741 283000) 0 nil] [nil nil ((nil rear-nonsticky nil 6718 . 6719) (nil fontified nil 6629 . 6719) (6629 . 6719)) ((#("\\DeclareCaptionFormat{centering}{\\centering#1#2#3}
\\captionsetup[table]{format=centering}
" 0 21 (face font-lock-keyword-face fontified nil) 21 33 (fontified nil) 33 43 (face font-lock-keyword-face fontified nil) 43 51 (fontified nil) 51 64 (face font-lock-keyword-face fontified nil) 64 65 (fontified nil) 65 66 (fontified nil) 66 70 (fontified nil) 70 89 (fontified nil) 89 90 (rear-nonsticky nil fontified nil)) . 6629) (undo-tree-id550 . -90) (undo-tree-id551 . 20) (undo-tree-id552 . -66) (undo-tree-id553 . -69) (undo-tree-id554 . -65) (undo-tree-id555 . -65) (undo-tree-id556 . -65) (undo-tree-id557 . -65) (undo-tree-id558 . -65) (undo-tree-id559 . -65) (undo-tree-id560 . -65) (undo-tree-id561 . -65) (undo-tree-id562 . -65) (undo-tree-id563 . -65) (undo-tree-id564 . -65) (undo-tree-id565 . -65) (undo-tree-id566 . -65) (undo-tree-id567 . -65) (undo-tree-id568 . -65) (undo-tree-id569 . -65) (undo-tree-id570 . -65) (undo-tree-id571 . -65) (undo-tree-id572 . -65) (undo-tree-id573 . -65) (undo-tree-id574 . -65) (undo-tree-id575 . -65) (undo-tree-id576 . -65) (undo-tree-id577 . -65) (undo-tree-id578 . -65) (undo-tree-id579 . -65) (undo-tree-id580 . -65) (undo-tree-id581 . -65) (undo-tree-id582 . -65) (undo-tree-id583 . -65) (undo-tree-id584 . -65) (undo-tree-id585 . -65) (undo-tree-id586 . -65) (undo-tree-id587 . -65) (undo-tree-id588 . -65) (undo-tree-id589 . -65) (undo-tree-id590 . -65) (undo-tree-id591 . -65) (undo-tree-id592 . -66) (undo-tree-id593 . -66) (undo-tree-id594 . -66) (undo-tree-id595 . -66) (undo-tree-id596 . -66) (undo-tree-id597 . -66) (undo-tree-id598 . -66) (undo-tree-id599 . -66) (undo-tree-id600 . -66) (undo-tree-id601 . -66) (undo-tree-id602 . -66) (undo-tree-id603 . -66) (undo-tree-id604 . -66) (undo-tree-id605 . -66) (undo-tree-id606 . -66) (undo-tree-id607 . -65) (undo-tree-id608 . -66) (undo-tree-id609 . -66) (undo-tree-id610 . -66) (undo-tree-id611 . -66) (undo-tree-id612 . -66) (undo-tree-id613 . -66) (undo-tree-id614 . -66) (undo-tree-id615 . -66) (undo-tree-id616 . -66) (undo-tree-id617 . -66) (undo-tree-id618 . -66) (undo-tree-id619 . -66) (undo-tree-id620 . -66) (undo-tree-id621 . -66) (undo-tree-id622 . -66) (undo-tree-id623 . -66) (undo-tree-id624 . -66) (undo-tree-id625 . -66) (undo-tree-id626 . -90) (undo-tree-id627 . -90) (undo-tree-id628 . -90) (undo-tree-id629 . -90) (undo-tree-id630 . -90) (undo-tree-id631 . -90) (undo-tree-id632 . -90) (undo-tree-id633 . -90) (undo-tree-id634 . -90) (undo-tree-id635 . -90) (undo-tree-id636 . -90) (undo-tree-id637 . -90) (undo-tree-id638 . -90) (undo-tree-id639 . -90) (undo-tree-id640 . -90) (undo-tree-id641 . -90) (undo-tree-id642 . -90) (undo-tree-id643 . -90) (undo-tree-id644 . -90) (undo-tree-id645 . -90) (undo-tree-id646 . -90) (undo-tree-id647 . -90) (undo-tree-id648 . -90) (undo-tree-id649 . -90) (undo-tree-id650 . -90) (undo-tree-id651 . -90) (undo-tree-id652 . -90) (undo-tree-id653 . -90) (undo-tree-id654 . -90) (undo-tree-id655 . -90) (undo-tree-id656 . -90) (undo-tree-id657 . -90) (undo-tree-id658 . -90) (undo-tree-id659 . -65) (undo-tree-id660 . -90) (undo-tree-id661 . -90) (undo-tree-id662 . -90) (undo-tree-id663 . -66) (undo-tree-id664 . -90) (nil fontified t 6672 . 6680) (nil fontified t 6662 . 6672) (nil fontified t 6650 . 6662) (nil fontified t 6629 . 6650) (nil rear-nonsticky t 6718 . 6719)) (26707 62641 68152 202000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 9003 . 9004) (nil fontified nil 8855 . 9004) (8855 . 9004) (t 26707 62643 559762 441000)) nil (26710 26485 382388 992000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 6719) (t 26707 62565 941117 264000)) ((6719 . 6720)) (26707 62640 714220 569000) 0 nil])
([nil nil ((9004 . 9005) 9003) nil (26710 26485 382384 784000) 0 nil])
([nil nil ((#("able" 0 4 (fontified t)) . 6695) (undo-tree-id378 . -3) (undo-tree-id380 . -4) (t 26707 62568 684104 202000)) ((6695 . 6699)) (26707 62640 359221 860000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9131 . 9132) (nil fontified nil 8855 . 9132) (8855 . 9132) (#("\\setlength{\\abovedisplayskip}{6pt}
\\setlength{\\belowdisplayskip}{6pt}
\\setlength{\\abovedisplayshortskip}{3pt}
\\setlength{\\belowdisplayshortskip}{3pt}" 0 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 28 (face font-lock-variable-name-face fontified t) 28 35 (fontified t) 35 45 (face font-lock-keyword-face fontified t) 45 46 (fontified t) 46 63 (face font-lock-variable-name-face fontified t) 63 70 (fontified t) 70 80 (face font-lock-keyword-face fontified t) 80 81 (fontified t) 81 103 (face font-lock-variable-name-face fontified t) 103 110 (fontified t) 110 120 (face font-lock-keyword-face fontified t) 120 121 (fontified t) 121 143 (face font-lock-variable-name-face fontified t) 143 148 (fontified t) 148 149 (rear-nonsticky t fontified t)) . 8855) (undo-tree-id0 . -148) (undo-tree-id1 . -148) (undo-tree-id2 . -34) (undo-tree-id3 . -148) (undo-tree-id4 . -34) (t 26710 26485 383367 959000)) nil (26710 26513 957483 461000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -6694) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) 6695) ((6694 . 6695)) (26707 62639 727440 694000) 0 nil])
([nil nil ((8965 . 8966)) nil (26710 26638 623043 784000) 0 nil])
([nil nil ((6694 . 6702)) ((#("longtblr" 0 8 (fontified t)) . 6694) (undo-tree-id381 . -7) (undo-tree-id382 . -7) (undo-tree-id383 . -8) (undo-tree-id384 . -8) (undo-tree-id385 . -8) (undo-tree-id386 . -8) (undo-tree-id387 . -8) (undo-tree-id388 . -8) (undo-tree-id389 . -8) (undo-tree-id390 . -8) (undo-tree-id391 . -8) (undo-tree-id392 . -8) (undo-tree-id393 . -8) (undo-tree-id394 . -8) (undo-tree-id395 . -8) (undo-tree-id396 . -8) (undo-tree-id397 . -8) (undo-tree-id398 . -8) (undo-tree-id399 . -8) (undo-tree-id400 . -8) (undo-tree-id401 . -8) (undo-tree-id402 . -8) (undo-tree-id403 . -8) (undo-tree-id404 . -8) (undo-tree-id405 . -8) (undo-tree-id406 . -8) (undo-tree-id407 . -8) (undo-tree-id408 . -8) (undo-tree-id409 . -8) (undo-tree-id410 . -8) (undo-tree-id411 . -8) (undo-tree-id412 . -8) (undo-tree-id413 . -8) (undo-tree-id414 . -8) (undo-tree-id415 . -8) (undo-tree-id416 . -8) (undo-tree-id417 . -8) (undo-tree-id418 . -8) (undo-tree-id419 . -8) (undo-tree-id420 . -8) (undo-tree-id421 . -8) (undo-tree-id422 . -8) (undo-tree-id423 . -8) (undo-tree-id424 . -8) (undo-tree-id425 . -8) (undo-tree-id426 . -8) (undo-tree-id427 . -8) (undo-tree-id428 . -8) (undo-tree-id429 . -8) (undo-tree-id430 . -8) (undo-tree-id431 . -8) (undo-tree-id432 . -8) (undo-tree-id433 . -8) (undo-tree-id434 . -8) (undo-tree-id435 . -8) (undo-tree-id436 . -8) (undo-tree-id437 . -8) (undo-tree-id438 . -8) (undo-tree-id439 . -8) (undo-tree-id440 . -8) (undo-tree-id441 . -8) (undo-tree-id442 . -8) (undo-tree-id443 . -8) (undo-tree-id444 . -8) (undo-tree-id445 . -8) (undo-tree-id446 . -8) (undo-tree-id447 . -8) (undo-tree-id448 . -8) (undo-tree-id449 . -8) (undo-tree-id450 . -8) (undo-tree-id451 . -8) (undo-tree-id452 . -8) (undo-tree-id453 . -8) (undo-tree-id454 . -8) (undo-tree-id455 . -8) (undo-tree-id456 . -8) (undo-tree-id457 . -8) (undo-tree-id458 . -8) (undo-tree-id459 . -8) (undo-tree-id460 . -8) (undo-tree-id461 . -8) (undo-tree-id462 . -8) (undo-tree-id463 . -8) (undo-tree-id464 . -8) (undo-tree-id465 . -8) (undo-tree-id466 . -8) (undo-tree-id467 . -8) (undo-tree-id468 . -8) (undo-tree-id469 . -8) (undo-tree-id470 . -8) (undo-tree-id471 . -8) (undo-tree-id472 . -8) (undo-tree-id473 . -8) (undo-tree-id474 . -8) (undo-tree-id475 . -8) (undo-tree-id476 . -8) (undo-tree-id477 . -8) (undo-tree-id478 . -8) (undo-tree-id479 . -8) (undo-tree-id480 . -8) (undo-tree-id481 . -8) (undo-tree-id482 . -8) (undo-tree-id483 . -8) (undo-tree-id484 . -8) (undo-tree-id485 . -8) (undo-tree-id486 . -8) (undo-tree-id487 . -8) (undo-tree-id488 . -8) (undo-tree-id489 . -8) (undo-tree-id490 . -8) (undo-tree-id491 . -8) (undo-tree-id492 . -8) (undo-tree-id493 . -8) (undo-tree-id494 . -8) (undo-tree-id495 . -8) (undo-tree-id496 . -8) (undo-tree-id497 . -8) (undo-tree-id498 . -8) (undo-tree-id499 . -8) (undo-tree-id500 . -8) (undo-tree-id501 . -8) (undo-tree-id502 . -8) (undo-tree-id503 . -8) (undo-tree-id504 . -8) (undo-tree-id505 . -8) (undo-tree-id506 . -8) (undo-tree-id507 . -8) (undo-tree-id508 . -8) (undo-tree-id509 . -8) (undo-tree-id510 . -8) (undo-tree-id511 . -8) (undo-tree-id512 . -8) (undo-tree-id513 . -8) (undo-tree-id514 . -8) (undo-tree-id515 . -8) (undo-tree-id516 . -8) (undo-tree-id517 . -8) (undo-tree-id518 . -8) (undo-tree-id519 . -8) (undo-tree-id520 . -8) (undo-tree-id521 . -8) (undo-tree-id522 . -8) (undo-tree-id523 . -8) (undo-tree-id524 . -8) (undo-tree-id525 . -8) (undo-tree-id526 . -8) (undo-tree-id527 . -8) (undo-tree-id528 . -8) (undo-tree-id529 . -8) (undo-tree-id530 . -7) (undo-tree-id531 . -7) (undo-tree-id532 . -7) (undo-tree-id533 . -7) (undo-tree-id534 . -7) (undo-tree-id535 . -7) (undo-tree-id536 . -7) (undo-tree-id537 . -7) (undo-tree-id538 . -7) (undo-tree-id539 . -7) (undo-tree-id540 . -7) (undo-tree-id541 . -7) (undo-tree-id542 . -7) (undo-tree-id543 . -7) (undo-tree-id544 . -7) (undo-tree-id545 . -8) (undo-tree-id546 . -7) (undo-tree-id547 . -7) (undo-tree-id548 . -7) (undo-tree-id549 . -7) (t 26707 62622 795854 482000)) (26707 62622 795975 860000) 0 nil])
([nil nil ((#("
% In preamble
\\setlength{\\abovedisplayskip}{10pt}     % space before equation
\\setlength{\\belowdisplayskip}{100pt}     % space after equation
\\setlength{\\abovedisplayshortskip}{5pt} % space before (short lines)
\\setlength{\\belowdisplayshortskip}{5pt} % space after (short lines)
" 0 1 (fontified t) 1 3 (face font-lock-comment-delimiter-face fontified t) 3 15 (face font-lock-comment-face fontified t) 15 25 (face font-lock-keyword-face fontified t) 25 26 (fontified t) 26 43 (face font-lock-variable-name-face fontified t) 43 55 (fontified t) 55 79 (face font-lock-comment-face fontified t) 79 89 (face font-lock-keyword-face fontified t) 89 90 (fontified t) 90 107 (face font-lock-variable-name-face fontified t) 107 120 (fontified t) 120 143 (face font-lock-comment-face fontified t) 143 153 (face font-lock-keyword-face fontified t) 153 154 (fontified t) 154 176 (face font-lock-variable-name-face fontified t) 176 183 (fontified t) 183 212 (face font-lock-comment-face fontified t) 212 222 (face font-lock-keyword-face fontified t) 222 223 (fontified t) 223 245 (face font-lock-variable-name-face fontified t) 245 252 (fontified t) 252 278 (face font-lock-comment-face fontified t) 278 279 (face font-lock-comment-face fontified t rear-nonsticky t) 279 280 (face font-lock-comment-face fontified t)) . 8854) (undo-tree-id12 . -280) (undo-tree-id13 . -280) (undo-tree-id14 . 168) (undo-tree-id15 . -280) (undo-tree-id16 . -280) (undo-tree-id17 . -280) (undo-tree-id18 . -280) (undo-tree-id19 . -280) (undo-tree-id20 . -280) (undo-tree-id21 . -280) (undo-tree-id22 . -280) (undo-tree-id23 . -280) (undo-tree-id24 . -280) (undo-tree-id25 . -280) (undo-tree-id26 . -280) (undo-tree-id27 . -280) (undo-tree-id28 . -280) (undo-tree-id29 . -280) (undo-tree-id30 . -280) (undo-tree-id31 . -280) (undo-tree-id32 . -280) (undo-tree-id33 . -280) (undo-tree-id34 . -280) (undo-tree-id35 . -280) (undo-tree-id36 . -280) (undo-tree-id37 . -280) (undo-tree-id38 . -280) (undo-tree-id39 . -280) (undo-tree-id40 . -280) (undo-tree-id41 . -280) (undo-tree-id42 . -280) (undo-tree-id43 . -280) (undo-tree-id44 . -280) (undo-tree-id45 . -280) (undo-tree-id46 . -280) (undo-tree-id47 . -280) (undo-tree-id48 . -280) (undo-tree-id49 . -280) (undo-tree-id50 . -280) (undo-tree-id51 . -280) (undo-tree-id52 . -280) (undo-tree-id53 . -280) (undo-tree-id54 . -280) (undo-tree-id55 . -280) (undo-tree-id56 . -280) (undo-tree-id57 . -280) (undo-tree-id58 . -280) (undo-tree-id59 . -280) (undo-tree-id60 . -280) (undo-tree-id61 . -280) (undo-tree-id62 . -280) (undo-tree-id63 . -111) (undo-tree-id64 . -280) (undo-tree-id65 . -280) (undo-tree-id66 . -280) (undo-tree-id67 . -280) (t 26710 26513 958171 362000)) ((8854 . 9134)) (26710 29014 983378 139000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -8853) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) 8854) nil (26710 29016 132222 109000) 0 nil] [nil nil ((8854 . 8855) (t 26710 26721 303745 32000) 8854) ((#("
" 0 1 (fontified t)) . 8854) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1)) (26710 29013 936667 370000) 0 nil] [nil nil ((nil rear-nonsticky nil 8922 . 8923) (nil fontified nil 8854 . 8923) (8854 . 8923) (t 26710 26642 354288 134000)) ((#("\\setlength{\\abovedisplayskip}{3pt}
\\setlength{\\belowdisplayskip}{3pt}" 0 10 (face font-lock-keyword-face fontified nil) 10 11 (fontified nil) 11 28 (face font-lock-variable-name-face fontified nil) 28 35 (fontified nil) 35 45 (face font-lock-keyword-face fontified nil) 45 46 (fontified nil) 46 63 (face font-lock-variable-name-face fontified nil) 63 68 (fontified nil) 68 69 (rear-nonsticky nil fontified nil)) . 8854) (undo-tree-id70 . -68) (undo-tree-id71 . -68) (undo-tree-id72 . -68) (undo-tree-id73 . -67) (undo-tree-id74 . -68) (undo-tree-id75 . -68) (undo-tree-id76 . -68) (undo-tree-id77 . -68) (undo-tree-id78 . -68) (undo-tree-id79 . -68) (undo-tree-id80 . -68) (undo-tree-id81 . -68) (undo-tree-id82 . -68) (undo-tree-id83 . -68) (undo-tree-id84 . -68) (undo-tree-id85 . -68) (undo-tree-id86 . -68) (undo-tree-id87 . -68) (undo-tree-id88 . -68) (undo-tree-id89 . -68) (undo-tree-id90 . -68) (undo-tree-id91 . -68) (undo-tree-id92 . -68) (undo-tree-id93 . -68) (undo-tree-id94 . -68) (undo-tree-id95 . -68) (undo-tree-id96 . -68) (undo-tree-id97 . -68) (undo-tree-id98 . -68) (undo-tree-id99 . -68) (undo-tree-id100 . -68) (undo-tree-id101 . -68) (undo-tree-id102 . -68) (undo-tree-id103 . -68) (undo-tree-id104 . -68) (undo-tree-id105 . -68) (undo-tree-id106 . -68) (undo-tree-id107 . -68) (undo-tree-id108 . -68) (undo-tree-id109 . -68) (undo-tree-id110 . -68) (undo-tree-id111 . -68) (undo-tree-id112 . -68) (undo-tree-id113 . -68) (undo-tree-id114 . -68) (undo-tree-id115 . -68) (undo-tree-id116 . -68) (undo-tree-id117 . -68) (undo-tree-id118 . -68) (undo-tree-id119 . -68) (undo-tree-id120 . -68) (undo-tree-id121 . -68) (undo-tree-id122 . -68) (undo-tree-id123 . -68) (undo-tree-id124 . -68) (undo-tree-id125 . -68) (undo-tree-id126 . -68) (undo-tree-id127 . -68) (undo-tree-id128 . -68) (undo-tree-id129 . -68) (undo-tree-id130 . -68) (undo-tree-id131 . -68) (undo-tree-id132 . -68) (undo-tree-id133 . -68) (undo-tree-id134 . -68) (undo-tree-id135 . -68) (undo-tree-id136 . -68) (undo-tree-id137 . -68) (undo-tree-id138 . -68) (undo-tree-id139 . -68) (undo-tree-id140 . -67) (undo-tree-id141 . -68) (undo-tree-id142 . -35) (undo-tree-id143 . -68) (undo-tree-id144 . -68) (undo-tree-id145 . -68) (undo-tree-id146 . -68) (undo-tree-id147 . -68) (undo-tree-id148 . -68) (undo-tree-id149 . -68) (undo-tree-id150 . -68) (undo-tree-id151 . -68) (undo-tree-id152 . -68) (undo-tree-id153 . -68) (undo-tree-id154 . -68) (undo-tree-id155 . -68) (undo-tree-id156 . -68) (undo-tree-id157 . -68) (undo-tree-id158 . -68) (undo-tree-id159 . -68) (undo-tree-id160 . -68) (undo-tree-id161 . -68) (undo-tree-id162 . -68) (undo-tree-id163 . -68) (undo-tree-id164 . -68) (undo-tree-id165 . -68) (undo-tree-id166 . -68) (undo-tree-id167 . -68) (nil fontified t 8882 . 8889) (nil fontified t 8865 . 8882) (nil fontified t 8864 . 8865) (nil fontified t 8854 . 8864) (nil rear-nonsticky t 8922 . 8923)) (26710 26720 187922 324000) 0 nil])
([nil nil ((8853 . 8854) 8821) nil (26710 29016 132115 861000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8942 . 8943) (nil fontified nil 8855 . 8943) (8855 . 8943)) ((#("\\patchcmd{\\equation}{}{\\vspace{-10pt}}{}{}
\\patchcmd{\\endequation}{}{\\vspace{-10pt}}{}{}" 0 9 (face font-lock-keyword-face fontified nil) 9 10 (fontified nil) 10 19 (face font-lock-keyword-face fontified nil) 19 23 (fontified nil) 23 30 (face font-lock-keyword-face fontified nil) 30 33 (fontified nil) 33 34 (fontified nil) 34 42 (fontified nil) 42 43 (fontified nil) 43 52 (face font-lock-keyword-face fontified nil) 52 53 (fontified nil) 53 65 (face font-lock-keyword-face fontified nil) 65 69 (fontified nil) 69 76 (face font-lock-keyword-face fontified nil) 76 79 (fontified nil) 79 80 (fontified nil) 80 87 (fontified nil) 87 88 (rear-nonsticky nil fontified nil)) . 8855) (undo-tree-id473 . -87) (undo-tree-id474 . -79) (undo-tree-id475 . -79) (undo-tree-id476 . -87) (undo-tree-id477 . -87) (undo-tree-id478 . -87) (undo-tree-id479 . -87) (undo-tree-id480 . -87) (undo-tree-id481 . -87) (undo-tree-id482 . -87) (undo-tree-id483 . -87) (undo-tree-id484 . -87) (undo-tree-id485 . -87) (undo-tree-id486 . -87) (undo-tree-id487 . -87) (undo-tree-id488 . -87) (undo-tree-id489 . -87) (undo-tree-id490 . -87) (undo-tree-id491 . -87) (undo-tree-id492 . -87) (undo-tree-id493 . -87) (undo-tree-id494 . -87) (undo-tree-id495 . -87) (undo-tree-id496 . -87) (undo-tree-id497 . -87) (undo-tree-id498 . -87) (undo-tree-id499 . -87) (undo-tree-id500 . -87) (undo-tree-id501 . -87) (undo-tree-id502 . -87) (undo-tree-id503 . -87) (undo-tree-id504 . -87) (undo-tree-id505 . -87) (undo-tree-id506 . -87) (undo-tree-id507 . -87) (undo-tree-id508 . -87) (undo-tree-id509 . -87) (undo-tree-id510 . -87) (undo-tree-id511 . -87) (undo-tree-id512 . -87) (undo-tree-id513 . -87) (undo-tree-id514 . -87) (undo-tree-id515 . -87) (undo-tree-id516 . -87) (undo-tree-id517 . -87) (undo-tree-id518 . -87) (undo-tree-id519 . -87) (undo-tree-id520 . -87) (undo-tree-id521 . -87) (undo-tree-id522 . -87) (undo-tree-id523 . -87) (undo-tree-id524 . -87) (undo-tree-id525 . -87) (undo-tree-id526 . -87) (undo-tree-id527 . -87) (undo-tree-id528 . -87) (undo-tree-id529 . -87) (undo-tree-id530 . -87) (undo-tree-id531 . -87) (undo-tree-id532 . -87) (undo-tree-id533 . -87) (undo-tree-id534 . -87) (undo-tree-id535 . -87) (undo-tree-id536 . -87) (undo-tree-id537 . -43) (undo-tree-id538 . -43) (undo-tree-id539 . -43) (undo-tree-id540 . -43) (undo-tree-id541 . -43) (undo-tree-id542 . -43) (undo-tree-id543 . -43) (undo-tree-id544 . -43) (undo-tree-id545 . -43) (undo-tree-id546 . -43) (undo-tree-id547 . -43) (undo-tree-id548 . -43) (undo-tree-id549 . -43) (undo-tree-id550 . -43) (undo-tree-id551 . -43) (undo-tree-id552 . -43) (undo-tree-id553 . -43) (undo-tree-id554 . -43) (undo-tree-id555 . -43) (undo-tree-id556 . -43) (undo-tree-id557 . -43) (undo-tree-id558 . -43) (undo-tree-id559 . -43) (undo-tree-id560 . -43) (undo-tree-id561 . -43) (undo-tree-id562 . -43) (undo-tree-id563 . -43) (undo-tree-id564 . -43) (undo-tree-id565 . -43) (undo-tree-id566 . -43) (undo-tree-id567 . -43) (undo-tree-id568 . -43) (undo-tree-id569 . -43) (undo-tree-id570 . -43) (undo-tree-id571 . -43) (undo-tree-id572 . -43) (undo-tree-id573 . -43) (undo-tree-id574 . -43) (undo-tree-id575 . -43) (undo-tree-id576 . -43) (undo-tree-id577 . -43) (undo-tree-id578 . -43) (undo-tree-id579 . -43) (undo-tree-id580 . -43) (undo-tree-id581 . -43) (undo-tree-id582 . -43) (undo-tree-id583 . -43) (undo-tree-id584 . -43) (undo-tree-id585 . -43) (undo-tree-id586 . -43) (undo-tree-id587 . -43) (undo-tree-id588 . -43) (undo-tree-id589 . -79) (undo-tree-id590 . -79) (undo-tree-id591 . -79) (undo-tree-id592 . -79) (undo-tree-id593 . -79) (undo-tree-id594 . -79) (undo-tree-id595 . -79) (undo-tree-id596 . -79) (undo-tree-id597 . -79) (undo-tree-id598 . -79) (undo-tree-id599 . -79) (undo-tree-id600 . -79) (undo-tree-id601 . -79) (undo-tree-id602 . -79) (undo-tree-id603 . -79) (undo-tree-id604 . -79) (undo-tree-id605 . -79) (undo-tree-id606 . -79) (undo-tree-id607 . -79) (undo-tree-id608 . -79) (undo-tree-id609 . -79) (undo-tree-id610 . -79) (undo-tree-id611 . -79) (undo-tree-id612 . -79) (undo-tree-id613 . -79) (undo-tree-id614 . -79) (undo-tree-id615 . -79) (undo-tree-id616 . -79) (undo-tree-id617 . -79) (undo-tree-id618 . -79) (undo-tree-id619 . -79) (undo-tree-id620 . -79) (undo-tree-id621 . -79) (undo-tree-id622 . -79) (undo-tree-id623 . -79) (undo-tree-id624 . -79) (undo-tree-id625 . -79) (undo-tree-id626 . -79) (undo-tree-id627 . -79) (undo-tree-id628 . -79) (undo-tree-id629 . -79) (undo-tree-id630 . -79) (undo-tree-id631 . -79) (undo-tree-id632 . -79) (undo-tree-id633 . -79) (undo-tree-id634 . -79) (undo-tree-id635 . -79) (undo-tree-id636 . -79) (undo-tree-id637 . -79) (undo-tree-id638 . -79) (undo-tree-id639 . -79) (undo-tree-id640 . -79) (undo-tree-id641 . -79) (undo-tree-id642 . -79) (undo-tree-id643 . -79) (undo-tree-id644 . -79) (undo-tree-id645 . -79) (undo-tree-id646 . -79) (undo-tree-id647 . -79) (undo-tree-id648 . -79) (undo-tree-id649 . -79) (undo-tree-id650 . -79) (undo-tree-id651 . -79) (undo-tree-id652 . -79) (undo-tree-id653 . -79) (undo-tree-id654 . -79) (undo-tree-id655 . -79) (undo-tree-id656 . -79) (undo-tree-id657 . -79) (undo-tree-id658 . -79) (undo-tree-id659 . -79) (undo-tree-id660 . -79) (undo-tree-id661 . -79) (undo-tree-id662 . -79) (undo-tree-id663 . -79) (undo-tree-id664 . -79) (undo-tree-id665 . -79) (undo-tree-id666 . -79) (undo-tree-id667 . -79) (undo-tree-id668 . -79) (undo-tree-id669 . -79) (undo-tree-id670 . -79) (undo-tree-id671 . -79) (undo-tree-id672 . -79) (undo-tree-id673 . -79) (undo-tree-id674 . -79) (undo-tree-id675 . -79) (undo-tree-id676 . -79) (undo-tree-id677 . -79) (undo-tree-id678 . -79) (undo-tree-id679 . -79) (undo-tree-id680 . -79) (undo-tree-id681 . -79) (undo-tree-id682 . -79) (undo-tree-id683 . -79) (undo-tree-id684 . -79) (undo-tree-id685 . -79) (undo-tree-id686 . -79) (undo-tree-id687 . -79) (undo-tree-id688 . -79) (undo-tree-id689 . -43) (undo-tree-id690 . -79) (undo-tree-id691 . -79) (undo-tree-id692 . -79) (undo-tree-id693 . -79) (undo-tree-id694 . -79) (undo-tree-id695 . -79) (undo-tree-id696 . -79) (undo-tree-id697 . -79) (undo-tree-id698 . -79) (undo-tree-id699 . -79) (undo-tree-id700 . -79) (undo-tree-id701 . -79) (undo-tree-id702 . -79) (undo-tree-id703 . -79) (undo-tree-id704 . -79) (undo-tree-id705 . -79) (undo-tree-id706 . -79) (undo-tree-id707 . -79) (undo-tree-id708 . -79) (undo-tree-id709 . -33) (undo-tree-id710 . -33) (undo-tree-id711 . -33) (undo-tree-id712 . -33) (undo-tree-id713 . -33) (undo-tree-id714 . -33) (undo-tree-id715 . -33) (undo-tree-id716 . -33) (undo-tree-id717 . -33) (undo-tree-id718 . -33) (undo-tree-id719 . -33) (undo-tree-id720 . -33) (undo-tree-id721 . -33) (undo-tree-id722 . -33) (undo-tree-id723 . -33) (undo-tree-id724 . -79) (undo-tree-id725 . -33) (undo-tree-id726 . -43) (undo-tree-id727 . -87) (undo-tree-id728 . -87) (undo-tree-id729 . -87) (undo-tree-id730 . -87) (undo-tree-id731 . -87) (undo-tree-id732 . -87) (undo-tree-id733 . -87) (undo-tree-id734 . -87) (undo-tree-id735 . -87) (undo-tree-id736 . -87) (undo-tree-id737 . -87) (undo-tree-id738 . -87) (undo-tree-id739 . -87) (undo-tree-id740 . -79) (undo-tree-id741 . -87) (undo-tree-id742 . -87) (undo-tree-id743 . -87) (undo-tree-id744 . -33) (undo-tree-id745 . -87) (nil fontified t 8897 . 8898) (nil fontified t 8889 . 8897) (nil fontified t 8888 . 8889) (nil fontified t 8885 . 8888) (nil fontified t 8878 . 8885) (nil fontified t 8874 . 8878) (nil fontified t 8865 . 8874) (nil fontified t 8864 . 8865) (nil fontified t 8855 . 8864) (nil rear-nonsticky t 8942 . 8943)) (26710 29013 651440 565000) 0 nil])
([nil nil ((8923 . 8924) 8922) ((#("
" 0 1 (fontified t)) . 8923) (t 26710 26701 286882 719000)) (26710 26700 850332 643000) 0 nil])
([nil nil ((3527 . 3528) (t 26710 29016 132958 442000) 3480) nil (26710 29103 6098 695000) 0 nil])
([nil nil ((8943 . 8944) 8942) ((#("
" 0 1 (fontified t)) . 8943)) (26710 29013 342443 879000) 0 nil])
([nil nil ((#("}" 0 1 (rear-nonsticky t fontified t)) . 8922) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (t 26710 26680 159028 66000)) ((8922 . 8923) (t 26710 26700 247889 867000)) (26710 26700 246911 446000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3750 . 3751) (nil fontified nil 3528 . 3751) (3528 . 3751)) nil (26710 29175 174287 246000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 8888) (undo-tree-id472 . -1)) ((8888 . 8889)) (26710 29013 149465 35000) 0 nil] [nil nil ((#("\\patchcmd{\\endequation}{}{\\vspace{-10pt}}{}{}
" 0 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 22 (face font-lock-keyword-face fontified t) 22 26 (fontified t) 26 33 (face font-lock-keyword-face fontified t) 33 44 (fontified t) 44 45 (rear-nonsticky t fontified t) 45 46 (fontified t)) . 8898) (undo-tree-id404 . -45) (undo-tree-id405 . -44) (undo-tree-id406 . -44) (undo-tree-id407 . -44) (undo-tree-id408 . -44) (undo-tree-id409 . -44) (undo-tree-id410 . -44) (undo-tree-id411 . -44) (undo-tree-id412 . -44) (undo-tree-id413 . -44) (undo-tree-id414 . -44) (undo-tree-id415 . -44) (undo-tree-id416 . -44) (undo-tree-id417 . -44) (undo-tree-id418 . -44) (undo-tree-id419 . -44) (undo-tree-id420 . -44) (undo-tree-id421 . -44) (undo-tree-id422 . -44) (undo-tree-id423 . -44) (undo-tree-id424 . -44) (undo-tree-id425 . -44) (undo-tree-id426 . -44) (undo-tree-id427 . -44) (undo-tree-id428 . -44) (undo-tree-id429 . -44) (undo-tree-id430 . -44) (undo-tree-id431 . -44) (undo-tree-id432 . -44) (undo-tree-id433 . -44) (undo-tree-id434 . -44) (undo-tree-id435 . -44) (undo-tree-id436 . -44) (undo-tree-id437 . -44) (undo-tree-id438 . -44) (undo-tree-id439 . -44) (undo-tree-id440 . -44) (undo-tree-id441 . -44) (undo-tree-id442 . -44) (undo-tree-id443 . -44) (undo-tree-id444 . -44) (undo-tree-id445 . -44) (undo-tree-id446 . -44) (undo-tree-id447 . -44) (undo-tree-id448 . -44) (undo-tree-id449 . -44) (undo-tree-id450 . -44) (undo-tree-id451 . -44) (undo-tree-id452 . -44) (undo-tree-id453 . -44) (undo-tree-id454 . -44) (undo-tree-id455 . -44) (undo-tree-id456 . -44) (undo-tree-id457 . -44) (undo-tree-id458 . -44) (undo-tree-id459 . -44) (undo-tree-id460 . -44) (undo-tree-id461 . -44) (undo-tree-id462 . -44) (undo-tree-id463 . -44) (undo-tree-id464 . -44) (undo-tree-id465 . -44) (undo-tree-id466 . -44) (undo-tree-id467 . -44) (undo-tree-id468 . -44) (undo-tree-id469 . -46) 8942 (t 26710 27030 99620 609000)) ((8898 . 8944)) (26710 28994 35440 627000) 0 nil])
nil
([nil nil ((3698 . 3699) (#("6" 0 1 (fontified t)) . 3698) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1)) nil (26710 29229 564579 907000) 0 nil] [nil nil ((3555 . 3559) (#("20" 0 2 (fontified t)) . -3555) (undo-tree-id1102 . -2) (undo-tree-id1103 . -2) (undo-tree-id1104 . -2) 3557 (3554 . 3557) (#("0" 0 1 (fontified t)) . -3554) (undo-tree-id1105 . -1) 3555 (t 26710 29103 7360 876000)) ((3554 . 3555) (#("-20" 0 1 (fontified nil) 1 3 (fontified nil)) . 3554) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -3) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -3) (undo-tree-id1201 . -3) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (3555 . 3557) (#("2012" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 3555) (undo-tree-id1206 . -2) (undo-tree-id1207 . -2) (undo-tree-id1208 . -2) (undo-tree-id1209 . -2) (undo-tree-id1210 . -2) (undo-tree-id1211 . -2) (undo-tree-id1212 . -2) (undo-tree-id1213 . -2) (undo-tree-id1214 . -2) (undo-tree-id1215 . -2) (undo-tree-id1216 . -2) (undo-tree-id1217 . -2) (undo-tree-id1218 . -2) (undo-tree-id1219 . -2) (undo-tree-id1220 . -2) (undo-tree-id1221 . -2) (undo-tree-id1222 . -2) (undo-tree-id1223 . -2) (undo-tree-id1224 . -2) (undo-tree-id1225 . -2) (undo-tree-id1226 . -2) (undo-tree-id1227 . -2) (undo-tree-id1228 . -2) (undo-tree-id1229 . -2) (undo-tree-id1230 . -2) (undo-tree-id1231 . -2) (undo-tree-id1232 . -2) (undo-tree-id1233 . -2) (undo-tree-id1234 . -2) (undo-tree-id1235 . -2) (undo-tree-id1236 . -2) (undo-tree-id1237 . -2) (undo-tree-id1238 . -2) (undo-tree-id1239 . -2) (undo-tree-id1240 . -2) (undo-tree-id1241 . -2) (undo-tree-id1242 . -2) (undo-tree-id1243 . -2) (undo-tree-id1244 . -2) (undo-tree-id1245 . -2) (undo-tree-id1246 . -2) (undo-tree-id1247 . -2) (undo-tree-id1248 . -2) (undo-tree-id1249 . -2) (undo-tree-id1250 . -2) (undo-tree-id1251 . -2) (undo-tree-id1252 . -2) (undo-tree-id1253 . -2) (undo-tree-id1254 . -2) (undo-tree-id1255 . -2) (undo-tree-id1256 . -2) (undo-tree-id1257 . -2) (undo-tree-id1258 . -2) (undo-tree-id1259 . -2) (undo-tree-id1260 . -2) (undo-tree-id1261 . -2) (undo-tree-id1262 . -2) (undo-tree-id1263 . -2) (undo-tree-id1264 . -2) (undo-tree-id1265 . -2) (undo-tree-id1266 . -2) (undo-tree-id1267 . -2) (undo-tree-id1268 . -2) (undo-tree-id1269 . -2) (undo-tree-id1270 . -2) (undo-tree-id1271 . -2) (undo-tree-id1272 . -2) (undo-tree-id1273 . -2) (undo-tree-id1274 . -2) (undo-tree-id1275 . -2) (undo-tree-id1276 . -2) (undo-tree-id1277 . -2) (undo-tree-id1278 . -2) (undo-tree-id1279 . -2) (undo-tree-id1280 . -2) (undo-tree-id1281 . -2) (undo-tree-id1282 . -2) (undo-tree-id1283 . -2) (undo-tree-id1284 . -2) (undo-tree-id1285 . -2) (undo-tree-id1286 . -2) (undo-tree-id1287 . -2) (undo-tree-id1288 . -2) (undo-tree-id1289 . -2) (undo-tree-id1290 . -2) (undo-tree-id1291 . -2) (undo-tree-id1292 . -2) (undo-tree-id1293 . -2) (undo-tree-id1294 . -2) (undo-tree-id1295 . -2) (undo-tree-id1296 . -2) (undo-tree-id1297 . -2) (undo-tree-id1298 . -2) (undo-tree-id1299 . -2) (undo-tree-id1300 . -2) (undo-tree-id1301 . -2) (undo-tree-id1302 . -2) (undo-tree-id1303 . -2) (undo-tree-id1304 . -2)) (26710 29174 819214 546000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 8933) (undo-tree-id470 . -1) (undo-tree-id471 . -1)) ((8933 . 8934) (t 26710 28998 863077 238000)) (26710 28998 861848 886000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8897) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) 8898) ((8897 . 8898)) (26710 28993 496671 480000) 0 nil])
([nil nil ((#("\\setlength{\\premulticols}{0pt}   % no extra space before multicols starts
" 0 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 24 (face font-lock-variable-name-face fontified t) 24 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 33 (fontified t) 33 74 (face font-lock-comment-face fontified t)) . 3528) (undo-tree-id1384 . -73) (undo-tree-id1385 . 47) (undo-tree-id1386 . -26) (undo-tree-id1387 . -26) (undo-tree-id1388 . -26) (undo-tree-id1389 . -26) (undo-tree-id1390 . -26) (undo-tree-id1391 . -26) (undo-tree-id1392 . -29) (undo-tree-id1393 . -29) (undo-tree-id1394 . -29) (undo-tree-id1395 . -29) (undo-tree-id1396 . -29) (undo-tree-id1397 . -29) (undo-tree-id1398 . -29) (undo-tree-id1399 . -29) (undo-tree-id1400 . -29) (undo-tree-id1401 . -29) (undo-tree-id1402 . -29) (undo-tree-id1403 . -29) (undo-tree-id1404 . -29) (undo-tree-id1405 . -29) (undo-tree-id1406 . -29) (undo-tree-id1407 . -29) (undo-tree-id1408 . -29) (undo-tree-id1409 . -29) (undo-tree-id1410 . -29) (undo-tree-id1411 . -29) (undo-tree-id1412 . -29) (undo-tree-id1413 . -29) (undo-tree-id1414 . -29) (undo-tree-id1415 . -29) (undo-tree-id1416 . -74) 3557) nil (26710 29233 968593 436000) 0 nil] [nil nil ((3554 . 3559) (#("0" 0 1 (fontified t)) . -3554) (undo-tree-id1316 . -1) (#("p" 0 1 (fontified t)) . -3555) (undo-tree-id1317 . 1) (undo-tree-id1318 . -1) (#("t" 0 1 (fontified t)) . -3556) (undo-tree-id1319 . -1) 3557 (t 26710 29190 1762 437000)) ((3554 . 3557) (#("-10cm" 0 5 (fontified t)) . 3554) (undo-tree-id1320 . -3) (t 26710 29215 146589 474000)) (26710 29215 145304 25000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 3557)) ((3557 . 3558)) (26710 29174 464262 942000) 0 nil])
nil
([nil nil ((#("
\\patchcmd{\\equation}{}{\\vspace{-10pt}}{}{}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 20 (face font-lock-keyword-face fontified t) 20 24 (fontified t) 24 31 (face font-lock-keyword-face fontified t) 31 43 (fontified t)) . 8854) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -42) (undo-tree-id171 . -43) (undo-tree-id172 . -43) (undo-tree-id173 . -43) (undo-tree-id174 . -43) (undo-tree-id175 . -43) (undo-tree-id176 . -43) (undo-tree-id177 . -43) (undo-tree-id178 . -43) (undo-tree-id179 . -43) (undo-tree-id180 . -43) (undo-tree-id181 . -43) (undo-tree-id182 . -43) (undo-tree-id183 . -43) (undo-tree-id184 . -43) (undo-tree-id185 . -43) (undo-tree-id186 . -43) (undo-tree-id187 . -43) (undo-tree-id188 . -43) (undo-tree-id189 . -43) (undo-tree-id190 . -43) (undo-tree-id191 . -43) (undo-tree-id192 . -43) (undo-tree-id193 . -43) (undo-tree-id194 . -43) (undo-tree-id195 . -43) (undo-tree-id196 . -43) (undo-tree-id197 . -43) (undo-tree-id198 . -43) (undo-tree-id199 . -43) (undo-tree-id200 . -43) (undo-tree-id201 . -43) (undo-tree-id202 . -43) (undo-tree-id203 . -43) (undo-tree-id204 . -43) (undo-tree-id205 . -43) (undo-tree-id206 . -43) (undo-tree-id207 . -43) (undo-tree-id208 . -43) (undo-tree-id209 . -43) (undo-tree-id210 . -43) (undo-tree-id211 . -43) (undo-tree-id212 . -43) (undo-tree-id213 . -43) (undo-tree-id214 . -43) (undo-tree-id215 . -43) (undo-tree-id216 . -43) (undo-tree-id217 . -43) (undo-tree-id218 . -43) (undo-tree-id219 . -43) (undo-tree-id220 . -43) (undo-tree-id221 . -43) (undo-tree-id222 . -43) (undo-tree-id223 . -43) (undo-tree-id224 . -43) (undo-tree-id225 . -43) (undo-tree-id226 . -43) (undo-tree-id227 . -43) (undo-tree-id228 . -43) (undo-tree-id229 . -43) (undo-tree-id230 . -43) (undo-tree-id231 . -43) (undo-tree-id232 . -43) (undo-tree-id233 . -43) (undo-tree-id234 . -43) (undo-tree-id235 . -43) (undo-tree-id236 . -43) (undo-tree-id237 . -43) (undo-tree-id238 . -43) (undo-tree-id239 . -43) (undo-tree-id240 . -43) (undo-tree-id241 . -43) (undo-tree-id242 . -43) (undo-tree-id243 . -43) (undo-tree-id244 . -43) (undo-tree-id245 . -43) (undo-tree-id246 . -43) (undo-tree-id247 . -43) (undo-tree-id248 . -43) (undo-tree-id249 . -43) (undo-tree-id250 . -43) (undo-tree-id251 . -43) (undo-tree-id252 . -43) (undo-tree-id253 . -43) (undo-tree-id254 . -43) (undo-tree-id255 . -43) (undo-tree-id256 . -43) (undo-tree-id257 . -43) (undo-tree-id258 . -43) (undo-tree-id259 . -43) (undo-tree-id260 . -43) (undo-tree-id261 . -43) (undo-tree-id262 . -43) (undo-tree-id263 . -43) (undo-tree-id264 . -43) (undo-tree-id265 . -43) (undo-tree-id266 . -43) (undo-tree-id267 . -43) (undo-tree-id268 . -43) (undo-tree-id269 . -43) (undo-tree-id270 . -43) (undo-tree-id271 . -43) (undo-tree-id272 . -43) (undo-tree-id273 . -43) (undo-tree-id274 . -43) (undo-tree-id275 . -43) (undo-tree-id276 . -43) (undo-tree-id277 . -43) (undo-tree-id278 . -43) (undo-tree-id279 . -43) (undo-tree-id280 . -43) (undo-tree-id281 . -43) (undo-tree-id282 . -43) (undo-tree-id283 . -43) (undo-tree-id284 . -1) 8855) ((8854 . 8897) (t 26710 28984 605175 321000)) (26710 28984 603634 895000) 0 nil])
([nil nil ((#("\\setlength{\\postmulticols}{0pt}  % no extra space after multicols ends
" 0 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 25 (face font-lock-variable-name-face fontified t) 25 33 (fontified t) 33 70 (face font-lock-comment-face fontified t) 70 71 (face font-lock-comment-face fontified t)) . 3528) (undo-tree-id1368 . -30) (undo-tree-id1369 . -70) (undo-tree-id1370 . 71) (undo-tree-id1371 . -30) (undo-tree-id1372 . -70) (undo-tree-id1373 . -29) (undo-tree-id1374 . -29) (undo-tree-id1375 . -29) (undo-tree-id1376 . -29) (undo-tree-id1377 . -30) (undo-tree-id1378 . -29) (undo-tree-id1379 . -29) (undo-tree-id1380 . -29) (undo-tree-id1381 . -29) (undo-tree-id1382 . -29) (undo-tree-id1383 . -71) 3557) nil (26710 29233 968581 394000) 0 nil])
nil
([nil nil ((#("2" 0 1 (fontified t)) . 3557)) ((3557 . 3558)) (26710 29173 809750 536000) 0 nil])
nil
([nil nil ((#("\\setlength{\\multicolsep}{0pt}    % standard space before/after multicols block
" 0 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 23 (face font-lock-variable-name-face fontified t) 23 25 (fontified t) 25 26 (fontified t) 26 33 (fontified t) 33 77 (face font-lock-comment-face fontified t) 77 78 (face font-lock-comment-face fontified t rear-nonsticky t) 78 79 (face font-lock-comment-face fontified t)) . 3528) (undo-tree-id1321 . -78) (undo-tree-id1322 . 79) (undo-tree-id1323 . -78) (undo-tree-id1324 . -29) (undo-tree-id1325 . -29) (undo-tree-id1326 . -29) (undo-tree-id1327 . -29) (undo-tree-id1328 . -29) (undo-tree-id1329 . -29) (undo-tree-id1330 . -29) (undo-tree-id1331 . -29) (undo-tree-id1332 . -29) (undo-tree-id1333 . -29) (undo-tree-id1334 . -29) (undo-tree-id1335 . -29) (undo-tree-id1336 . -29) (undo-tree-id1337 . -29) (undo-tree-id1338 . -29) (undo-tree-id1339 . -29) (undo-tree-id1340 . -29) (undo-tree-id1341 . -29) (undo-tree-id1342 . -29) (undo-tree-id1343 . -29) (undo-tree-id1344 . -29) (undo-tree-id1345 . -29) (undo-tree-id1346 . -29) (undo-tree-id1347 . -29) (undo-tree-id1348 . -29) (undo-tree-id1349 . -29) (undo-tree-id1350 . -29) (undo-tree-id1351 . -29) (undo-tree-id1352 . -29) (undo-tree-id1353 . -29) (undo-tree-id1354 . -29) (undo-tree-id1355 . -29) (undo-tree-id1356 . -29) (undo-tree-id1357 . -29) (undo-tree-id1358 . -29) (undo-tree-id1359 . -29) (undo-tree-id1360 . -29) (undo-tree-id1361 . -29) (undo-tree-id1362 . -29) (undo-tree-id1363 . -29) (undo-tree-id1364 . -29) (undo-tree-id1365 . -29) (undo-tree-id1366 . -29) (undo-tree-id1367 . -79) 3557) nil (26710 29233 968572 196000) 0 nil])
([nil nil ((3557 . 3558) (t 26710 29146 255063 359000)) ((#("0" 0 1 (fontified t)) . 3557) (t 26710 29160 175967 597000)) (26710 29160 174784 766000) 0 nil])
([nil nil ((3527 . 3528) (t 26710 29233 970459 976000) 3497) nil (26710 29291 212915 954000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 3605 . 3606) (nil fontified nil 3528 . 3606) (3528 . 3606)) nil (26710 29340 145762 750000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t)) . 3553) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1)) nil (26710 29343 261568 262000) 0 nil] [nil nil ((3554 . 3555)) ((#("0" 0 1 (fontified t)) . 3554) (t 26710 29325 470830 530000)) (26710 29325 469951 125000) 0 nil] [nil nil ((3565 . 3566) (t 26710 29291 217066 149000)) ((#("0" 0 1 (fontified t)) . 3565) (undo-tree-id1417 . -1) (t 26710 29305 519967 766000)) (26710 29305 519094 418000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 3553) (undo-tree-id1421 . 1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1)) nil (26710 29343 261653 261000) 0 nil])
nil
nil
([nil nil ((3553 . 3554) (#("0" 0 1 (fontified t)) . 3553) (undo-tree-id1433 . 1) (undo-tree-id1434 . -1)) nil (26710 29345 572398 409000) 0 nil] [nil nil ((#("0" 0 1 (fontified t)) . 3553) (undo-tree-id1418 . 1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1)) ((3553 . 3554)) (26710 29343 261561 19000) 0 nil])
([nil nil ((3554 . 3556) (#("pt" 0 2 (fontified t)) . 3554) (undo-tree-id1429 . -1) (undo-tree-id1430 . 2) (undo-tree-id1431 . -2) (undo-tree-id1432 . -2)) nil (26710 29345 572394 11000) 0 nil])
nil
([nil nil ((#("2" 0 1 (fontified t)) . 3562) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (t 26710 29345 573692 267000)) nil (26710 29428 774793 735000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 3562)) nil (26710 29428 774791 961000) 0 nil])
([nil nil ((3575 . 3577) (#("pt" 0 2 (fontified t)) . 3575) (undo-tree-id1435 . -1) (undo-tree-id1436 . -2) (undo-tree-id1437 . -2)) nil (26710 29428 774789 66000) 0 nil])
([nil nil ((#("\\setlength{\\multicolsep}{1em plus 0pt minus 1.5em}% 50% of original values
" 0 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 23 (face font-lock-variable-name-face fontified t) 23 25 (fontified t) 25 28 (fontified t) 28 50 (fontified t) 50 73 (face font-lock-comment-face fontified t) 73 74 (face font-lock-comment-face rear-nonsticky t fontified t) 74 75 (face font-lock-comment-face fontified t)) . 3528) (undo-tree-id1441 . -25) (undo-tree-id1442 . -74) (undo-tree-id1443 . 26) (undo-tree-id1444 . -34) (undo-tree-id1445 . -75) (undo-tree-id1446 . -75) (undo-tree-id1447 . -75) (undo-tree-id1448 . -75) (undo-tree-id1449 . -75) (undo-tree-id1450 . -75) (undo-tree-id1451 . -75) (undo-tree-id1452 . -75) (undo-tree-id1453 . -75) (undo-tree-id1454 . -75) (undo-tree-id1455 . -75) (undo-tree-id1456 . -75) (undo-tree-id1457 . -75) (undo-tree-id1458 . -75) (undo-tree-id1459 . -75) (undo-tree-id1460 . -75) (undo-tree-id1461 . -75) (undo-tree-id1462 . -75) (undo-tree-id1463 . -75) (undo-tree-id1464 . -75) (undo-tree-id1465 . -75) (undo-tree-id1466 . -75) (undo-tree-id1467 . -75) (undo-tree-id1468 . -75) (undo-tree-id1469 . -75) (undo-tree-id1470 . -75) (undo-tree-id1471 . -75) (undo-tree-id1472 . -75) (undo-tree-id1473 . -75) (undo-tree-id1474 . -75) (undo-tree-id1475 . -75) (undo-tree-id1476 . -75) (undo-tree-id1477 . -75) (undo-tree-id1478 . -75) (undo-tree-id1479 . -75) (undo-tree-id1480 . -75) (undo-tree-id1481 . -75) (undo-tree-id1482 . -75) (undo-tree-id1483 . -34) (undo-tree-id1484 . -34) (undo-tree-id1485 . -25) (undo-tree-id1486 . -25) (undo-tree-id1487 . -48) (undo-tree-id1488 . -48) 3576 (t 26710 29428 776119 893000)) nil (26710 29775 492227 623000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8990 . 8991) (nil fontified nil 8854 . 8991) (8854 . 8991)) nil (26710 29775 492201 484000) 0 nil])
([nil nil ((8991 . 8992) 8990) nil (26710 29775 492197 797000) 0 nil])
([nil nil ((8974 . 8977) (#("4" 0 1 (fontified t)) . -8974) (undo-tree-id1489 . -1) (#("p" 0 1 (fontified t)) . -8975) (undo-tree-id1490 . -1) (#("t" 0 1 (fontified t)) . -8976) (undo-tree-id1491 . -1) 8977 (t 26710 29775 493734 673000)) nil (26710 29788 957734 524000) 0 nil])
([nil nil ((8974 . 8975) (#("4" 0 1 (fontified t)) . 8974) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (t 26710 29788 958642 47000)) nil (26710 29802 993201 984000) 0 nil])
([nil nil ((8990 . 9002) (t 26710 29802 994545 493000)) nil (26710 45645 53236 617000) 0 nil])
([nil nil ((apply -9 8854 9013 undo--wrap-and-run-primitive-undo 8854 9013 ((8946 . 8949) (8917 . 8920) (8854 . 8857) 9004))) ((apply 9 8854 9004 undo--wrap-and-run-primitive-undo 8854 9004 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 8854) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 8917) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 8946) 9007 (t 26710 29847 501239 298000)))) (26710 45645 903873 422000) 0 nil])
([nil nil ((#("%% % In preamble - automatically reduce space before equations
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 5 (face font-lock-comment-face fontified t) 5 63 (face font-lock-comment-face fontified t)) . 8854) (undo-tree-id1532 . -62) (undo-tree-id1533 . -61) (undo-tree-id1534 . -61) (undo-tree-id1535 . -61) (undo-tree-id1536 . -61) 8915 (t 26710 29847 501239 298000)) nil (26710 45648 534139 459000) 0 nil])
([nil nil ((#("%% \\let\\oldequation\\equation
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 7 (face font-lock-comment-face fontified t) 7 19 (face font-lock-comment-face fontified t) 19 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t)) . 8854) (undo-tree-id1520 . -28) (undo-tree-id1521 . -28) (undo-tree-id1522 . -27) (undo-tree-id1523 . -27) (undo-tree-id1524 . -27) (undo-tree-id1525 . -27) (undo-tree-id1526 . -27) (undo-tree-id1527 . -27) (undo-tree-id1528 . -27) (undo-tree-id1529 . -27) (undo-tree-id1530 . -27) (undo-tree-id1531 . -29) 8881) nil (26710 45648 534136 203000) 0 nil])
([nil nil ((#("%% \\renewcommand{\\equation}{\\vspace{-1em}\\oldequation\\vspace{1em}}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 16 (face font-lock-comment-face fontified t) 16 17 (face font-lock-comment-face fontified t) 17 26 (face font-lock-comment-face fontified t) 26 28 (face font-lock-comment-face fontified t) 28 35 (face font-lock-comment-face fontified t) 35 37 (face font-lock-comment-face fontified t) 37 38 (face font-lock-comment-face fontified t) 38 41 (face font-lock-comment-face fontified t) 41 53 (face font-lock-comment-face fontified t) 53 60 (face font-lock-comment-face fontified t) 60 65 (face font-lock-comment-face fontified t) 65 66 (face font-lock-comment-face fontified t rear-nonsticky t) 66 67 (face font-lock-comment-face fontified t)) . 8854) (undo-tree-id1494 . -61) (undo-tree-id1495 . -66) (undo-tree-id1496 . -61) (undo-tree-id1497 . 2) (undo-tree-id1498 . -61) (undo-tree-id1499 . -67) (undo-tree-id1500 . -61) (undo-tree-id1501 . -61) (undo-tree-id1502 . -61) (undo-tree-id1503 . -66) (undo-tree-id1504 . -27) (undo-tree-id1505 . -27) (undo-tree-id1506 . -27) (undo-tree-id1507 . -27) (undo-tree-id1508 . -27) (undo-tree-id1509 . -27) (undo-tree-id1510 . -27) (undo-tree-id1511 . -27) (undo-tree-id1512 . -27) (undo-tree-id1513 . -27) (undo-tree-id1514 . -61) (undo-tree-id1515 . -27) (undo-tree-id1516 . -27) (undo-tree-id1517 . -27) (undo-tree-id1518 . -27) (undo-tree-id1519 . -67) 8881) nil (26710 45648 534128 218000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8853) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) 8854 (t 26710 45648 535512 894000)) nil (26710 45650 44979 882000) 0 nil])
([nil current ((8853 . 8854) 8821) nil (26710 45650 44906 574000) 0 nil])
nil
