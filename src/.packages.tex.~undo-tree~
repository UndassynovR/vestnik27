(undo-tree-save-format-version . 1)
"1d0d03432b944c5bbeb020ed0c88530f69eb22cc"
[nil nil nil nil (26686 42381 764224 3000) 0 nil]
([nil nil ((nil rear-nonsticky nil 677 . 678) (nil fontified nil 656 . 678) (656 . 678) (655 . 656) (t 26676 20011 168533 926000) 634) nil (26686 42381 764218 540000) 0 nil])
([nil nil ((apply -3 7334 7357 undo--wrap-and-run-primitive-undo 7334 7357 ((7334 . 7337) 7349 (t 26686 42381 772866 560000)))) nil (26686 42415 31282 976000) 0 nil])
([nil nil ((apply -3 7357 7382 undo--wrap-and-run-primitive-undo 7357 7382 ((7357 . 7360) 7372))) nil (26686 42415 31279 319000) 0 nil])
([nil nil ((nil rear-nonsticky nil 443 . 444) (nil fontified nil 107 . 444) (107 . 444) (#("\\usepackage{polyglossia}              % Multilingual support
\\setmainlanguage{russian}
\\setotherlanguages{english}
\\defaultfontfeatures{Ligatures=TeX}
\\setmainfont{FreeSerif}
\\setsansfont{FreeSans}
\\setmonofont{FreeMono}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 23 (face font-lock-builtin-face fontified t) 23 38 (fontified t) 38 61 (face font-lock-comment-face fontified t) 61 77 (face font-lock-keyword-face fontified t) 77 87 (fontified t) 87 105 (face font-lock-keyword-face fontified t) 105 115 (fontified t) 115 135 (face font-lock-keyword-face fontified t) 135 151 (fontified t) 151 163 (face font-lock-keyword-face fontified t) 163 175 (fontified t) 175 187 (face font-lock-keyword-face fontified t) 187 198 (fontified t) 198 210 (face font-lock-keyword-face fontified t) 210 221 (fontified t)) . 107) (undo-tree-id0 . -221) (undo-tree-id1 . -198) (undo-tree-id2 . -220) (undo-tree-id3 . -198) (undo-tree-id4 . -198) 328 (t 26686 42415 32067 917000)) nil (26686 42577 707163 610000) 0 nil])
([nil nil ((nil rear-nonsticky nil 167 . 168) (nil fontified nil 146 . 168) (146 . 168) (#(" " 0 1 (fontified t)) . -146) (undo-tree-id13 . -1) 147 (145 . 147) (131 . 145) (t 26686 42577 714079 102000)) nil (26686 42602 771941 790000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 145) (undo-tree-id11 . -1) (undo-tree-id12 . -1)) nil (26686 42602 771939 973000) 0 nil])
([nil nil ((293 . 314) (#("                 " 0 17 (fontified t)) . 293) (undo-tree-id7 . -17) 310 (293 . 310) (#("             " 0 13 (fontified t)) . 293) (undo-tree-id8 . -13) 306 (293 . 306) (#("         " 0 9 (fontified t)) . 293) (undo-tree-id9 . -9) 302 (293 . 302) (#("     " 0 5 (fontified t)) . 293) (undo-tree-id10 . -5) 298) nil (26686 42602 771937 304000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 312)) nil (26686 42602 771931 598000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 312) (undo-tree-id5 . -1) (undo-tree-id6 . -1)) nil (26686 42602 771928 735000) 0 nil])
([nil nil ((6925 . 6926) (t 26696 5397 139933 766000) 6924) nil (26707 61913 608106 568000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7064 . 7065) (nil fontified nil 6926 . 7065) (6926 . 7065)) nil (26707 61913 608102 701000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6987 . 6988) (nil fontified nil 6926 . 6988) (6926 . 6988) (#("\\SetTblrTemplate{contfoot-text}{} % Remove default spacing
\\SetTblrTemplate{conthead-text}{} % Remove default spacing for continued headers" 0 16 (face font-lock-keyword-face fontified t) 16 34 (fontified t) 34 59 (face font-lock-comment-face fontified t) 59 75 (face font-lock-keyword-face fontified t) 75 93 (fontified t) 93 138 (face font-lock-comment-face fontified t) 138 139 (face font-lock-comment-face rear-nonsticky t fontified t)) . 6926) (undo-tree-id0 . -138) (undo-tree-id1 . -57) (undo-tree-id2 . -116) (undo-tree-id3 . -59) (undo-tree-id4 . -116) (undo-tree-id5 . -116) (undo-tree-id6 . -116) (undo-tree-id7 . -116) (undo-tree-id8 . -116) (undo-tree-id9 . -116) (undo-tree-id10 . -116) (undo-tree-id11 . -116) (undo-tree-id12 . -116) (undo-tree-id13 . -116) (undo-tree-id14 . -116) (undo-tree-id15 . -116) (undo-tree-id16 . -139) 7066 (t 26707 61913 608354 547000)) nil (26707 61948 535447 91000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7020 . 7021) (nil fontified nil 6926 . 7021) (6926 . 7021) (#("\\SetTblrOuter{
  presep = 5pt, % Default space before tables
}" 0 13 (face font-lock-keyword-face fontified t) 13 31 (fontified t) 31 61 (face font-lock-comment-face fontified t) 61 62 (rear-nonsticky t fontified t)) . 6926) (undo-tree-id17 . -61) (undo-tree-id18 . -61) (undo-tree-id19 . -61) (t 26707 61948 536075 413000)) nil (26707 61976 852804 278000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6992 . 6993) (nil fontified nil 6926 . 6993) (6926 . 6993) (#("\\DefTblrTemplate{contfoot-text}{normal}{\\vspace{-10pt}}
\\SetTblrTemplate{contfoot-text}{normal}" 0 16 (face font-lock-keyword-face fontified t) 16 40 (fontified t) 40 47 (face font-lock-keyword-face fontified t) 47 56 (fontified t) 56 72 (face font-lock-keyword-face fontified t) 72 94 (fontified t) 94 95 (rear-nonsticky t fontified t)) . 6926) (undo-tree-id20 . -94) (undo-tree-id21 . -94) (undo-tree-id22 . -38) (undo-tree-id23 . -94) (undo-tree-id24 . -94) (undo-tree-id25 . -94) (undo-tree-id26 . -94) (undo-tree-id27 . -94) (undo-tree-id28 . -94) (undo-tree-id29 . -94) (undo-tree-id30 . -94) (undo-tree-id31 . -94) (undo-tree-id32 . -94) (undo-tree-id33 . -94) (undo-tree-id34 . -94) (undo-tree-id35 . -94) (undo-tree-id36 . -94) (undo-tree-id37 . -94) (undo-tree-id38 . -94) (undo-tree-id39 . -94) (undo-tree-id40 . -94) (undo-tree-id41 . -94) (undo-tree-id42 . -94) (undo-tree-id43 . -94) (undo-tree-id44 . -94) (undo-tree-id45 . -94) (undo-tree-id46 . -94) (undo-tree-id47 . -94) (undo-tree-id48 . -94) (undo-tree-id49 . -94) (undo-tree-id50 . -38) (undo-tree-id51 . -38) (undo-tree-id52 . -38) (undo-tree-id53 . -38) (undo-tree-id54 . -38) (undo-tree-id55 . -38) (undo-tree-id56 . -38) (undo-tree-id57 . -38) (undo-tree-id58 . -38) (undo-tree-id59 . -38) (undo-tree-id60 . -38) (undo-tree-id61 . -38) (undo-tree-id62 . -38) (undo-tree-id63 . -38) (undo-tree-id64 . -38) (undo-tree-id65 . -94) (undo-tree-id66 . -38) (undo-tree-id67 . -38) (undo-tree-id68 . -38) (undo-tree-id69 . -95) (t 26707 61976 852872 128000)) nil (26707 62075 257981 23000) 0 nil])
([nil nil ((6988 . 6989) (#("0" 0 1 (fontified t)) . 6988) (undo-tree-id70 . -1) (t 26707 62075 258296 10000)) nil (26707 62092 797691 788000) 0 nil])
([nil nil ((6993 . 6994) (t 26707 62092 798210 928000) 6988) nil (26707 62134 957298 592000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7038 . 7039) (nil fontified nil 6994 . 7039) (6994 . 7039)) nil (26707 62134 957294 755000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7041 . 7042) (nil fontified nil 6994 . 7042) (6994 . 7042) (#("\\SetTblrTemplate{caption-text}{\\centering #1}" 0 16 (face font-lock-keyword-face fontified t) 16 31 (fontified t) 31 41 (face font-lock-keyword-face fontified t) 41 44 (fontified t) 44 45 (rear-nonsticky t fontified t)) . 6994) (undo-tree-id71 . -44) (undo-tree-id72 . -44) (undo-tree-id73 . -44) (undo-tree-id74 . -44) (undo-tree-id75 . -44) (undo-tree-id76 . -44) (undo-tree-id77 . -44) (undo-tree-id78 . -44) (undo-tree-id79 . -44) (undo-tree-id80 . -44) (undo-tree-id81 . -44) (undo-tree-id82 . -44) (undo-tree-id83 . -44) (undo-tree-id84 . -45) 7040 (t 26707 62134 958024 73000)) nil (26707 62158 816363 482000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7158 . 7159) (nil fontified nil 6994 . 7159) (6994 . 7159) (#("\\captionsetup[longtblr]{justification=centering}" 0 13 (face font-lock-keyword-face fontified t) 13 47 (fontified t) 47 48 (rear-nonsticky t fontified t)) . 6994) (undo-tree-id85 . -47) (undo-tree-id86 . -47) (undo-tree-id87 . -47) (undo-tree-id88 . -47) (undo-tree-id89 . -47) 7043 (t 26707 62158 816928 248000)) nil (26707 62182 569844 763000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7133 . 7134) (nil fontified nil 6994 . 7134) (6994 . 7134) (#("\\SetTblrTemplate{caption}{
  \\centering
  \\UseTblrTemplate{caption-tag}{default}
  \\UseTblrTemplate{caption-sep}{default}
  \\UseTblrTemplate{caption-text}{default}
}
" 0 16 (face font-lock-keyword-face fontified t) 16 29 (fontified t) 29 39 (face font-lock-keyword-face fontified t) 39 42 (fontified t) 42 58 (face font-lock-keyword-face fontified t) 58 83 (fontified t) 83 99 (face font-lock-keyword-face fontified t) 99 124 (fontified t) 124 140 (face font-lock-keyword-face fontified t) 140 164 (fontified t) 164 165 (rear-nonsticky t fontified t) 165 166 (fontified t)) . 6994) (undo-tree-id90 . -166) (undo-tree-id91 . 1) (undo-tree-id92 . -165) (undo-tree-id93 . -164) (undo-tree-id94 . -166) (undo-tree-id95 . -166) (undo-tree-id96 . -166) (undo-tree-id97 . -166) (undo-tree-id98 . -166) (undo-tree-id99 . -164) (undo-tree-id100 . -164) (undo-tree-id101 . -164) (undo-tree-id102 . -164) (undo-tree-id103 . -164) (undo-tree-id104 . -164) (undo-tree-id105 . -164) (undo-tree-id106 . -164) (undo-tree-id107 . -164) (undo-tree-id108 . -164) (undo-tree-id109 . -122) (undo-tree-id110 . -122) (undo-tree-id111 . -122) (undo-tree-id112 . -122) (undo-tree-id113 . -122) (undo-tree-id114 . -122) (undo-tree-id115 . -122) (undo-tree-id116 . -122) (undo-tree-id117 . -122) (undo-tree-id118 . -122) (undo-tree-id119 . -122) (undo-tree-id120 . -122) (undo-tree-id121 . -122) (undo-tree-id122 . -122) (undo-tree-id123 . -122) (undo-tree-id124 . -122) (undo-tree-id125 . -122) (undo-tree-id126 . -81) (undo-tree-id127 . -81) (undo-tree-id128 . -81) (undo-tree-id129 . -81) (undo-tree-id130 . -81) (undo-tree-id131 . -40) (undo-tree-id132 . -40) (undo-tree-id133 . -40) (undo-tree-id134 . -40) (undo-tree-id135 . -40) (undo-tree-id136 . -27) (undo-tree-id137 . -27) (undo-tree-id138 . -27) (undo-tree-id139 . -27) (undo-tree-id140 . -27) (undo-tree-id141 . -27) (undo-tree-id142 . -27) (undo-tree-id143 . -27) (undo-tree-id144 . -27) (undo-tree-id145 . -27) (undo-tree-id146 . -27) (undo-tree-id147 . -27) (undo-tree-id148 . -27) (undo-tree-id149 . -27) (undo-tree-id150 . -27) (undo-tree-id151 . -27) (undo-tree-id152 . -27) (undo-tree-id153 . -27) (undo-tree-id154 . -27) (undo-tree-id155 . -27) (undo-tree-id156 . -164) (undo-tree-id157 . -166) (t 26707 62182 570839 158000)) nil (26707 62300 712716 65000) 0 nil])
([nil nil ((#("\\DeclareCaptionTextFormat{tblr}{\\centering #1}
" 0 25 (face font-lock-keyword-face fontified t) 25 32 (fontified t) 32 42 (face font-lock-keyword-face fontified t) 42 47 (fontified t)) . 6994) (undo-tree-id158 . -46) (undo-tree-id159 . -47) (t 26707 62300 713472 74000)) nil (26707 62337 472702 985000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 6994) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (t 26707 62337 702377 760000)) nil (26707 62347 4330 112000) 0 nil] [nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 6994) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (t 26707 62324 787409 766000)) ((6994 . 6995) (t 26707 62337 33379 396000)) (26707 62337 32806 827000) 0 nil])
([nil nil ((#("captionsetup[longtblr]{
" 0 12 (fontified t) 12 23 (fontified t) 23 24 (fontified t)) . 6994) (undo-tree-id174 . -23) (undo-tree-id175 . -24)) nil (26707 62347 4329 10000) 0 nil])
nil
([nil nil ((#("  labelformat=tblr,
" 0 19 (fontified t) 19 20 (fontified t)) . 6994) (undo-tree-id171 . -19) (undo-tree-id172 . -19) (undo-tree-id173 . -20)) nil (26707 62347 4327 908000) 0 nil])
([nil nil ((#("  textformat=tblr,
" 0 18 (fontified t) 18 19 (fontified t)) . 6994) (undo-tree-id168 . -18) (undo-tree-id169 . -18) (undo-tree-id170 . -19)) nil (26707 62347 4326 345000) 0 nil])
([nil nil ((#("  justification=centering
" 0 25 (fontified t) 25 26 (fontified t)) . 6994) (undo-tree-id165 . -25) (undo-tree-id166 . -25) (undo-tree-id167 . -26)) nil (26707 62347 4325 12000) 0 nil])
([nil nil ((#("}
" 0 1 (fontified t) 1 2 (fontified t)) . 6994) (undo-tree-id163 . -1) (undo-tree-id164 . -2)) nil (26707 62347 4323 259000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 6994) (undo-tree-id162 . -1)) nil (26707 62547 674034 191000) 0 nil])
([nil nil ((6629 . 6630) (t 26707 62548 965199 1000) 6629) nil (26707 62641 631260 222000) 0 nil] [nil nil ((nil rear-nonsticky nil 6398 . 6399) (nil fontified nil 6354 . 6399) (6354 . 6399) (#("\\usepackage{caption}" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 19 (face font-lock-builtin-face fontified t) 19 20 (fontified t)) . 6354) (undo-tree-id178 . -19) (undo-tree-id179 . -12) (undo-tree-id180 . -12) (undo-tree-id181 . -19) (undo-tree-id182 . -19) (undo-tree-id183 . -19) (undo-tree-id184 . -19) (undo-tree-id185 . -19) (undo-tree-id186 . -19) (undo-tree-id187 . -19) (undo-tree-id188 . -19) (undo-tree-id189 . -19) (undo-tree-id190 . -19) (undo-tree-id191 . -19) (undo-tree-id192 . -19) (undo-tree-id193 . -19) (undo-tree-id194 . -19) (undo-tree-id195 . -19) (undo-tree-id196 . -19) (undo-tree-id197 . -19) (undo-tree-id198 . -19) (undo-tree-id199 . -19) (undo-tree-id200 . -19) (undo-tree-id201 . -19) (undo-tree-id202 . -19) (undo-tree-id203 . -19) (undo-tree-id204 . -19) (undo-tree-id205 . -19) (undo-tree-id206 . -19) (undo-tree-id207 . -19) (undo-tree-id208 . -19) (undo-tree-id209 . -19) (undo-tree-id210 . -19) (undo-tree-id211 . -19) (undo-tree-id212 . -12) (undo-tree-id213 . -12) (undo-tree-id214 . -12) (undo-tree-id215 . -12) (undo-tree-id216 . -12) (undo-tree-id217 . -12) (undo-tree-id218 . -12) (undo-tree-id219 . -12) (undo-tree-id220 . -12) (undo-tree-id221 . -12) (undo-tree-id222 . -12) (undo-tree-id223 . -12) (undo-tree-id224 . -12) (undo-tree-id225 . -12) (undo-tree-id226 . -12) (undo-tree-id227 . -12) (undo-tree-id228 . -12) (undo-tree-id229 . -12) (undo-tree-id230 . -12) (undo-tree-id231 . -12) (undo-tree-id232 . -12) (undo-tree-id233 . -12) (undo-tree-id234 . -12) (undo-tree-id235 . -12) (undo-tree-id236 . -12) (undo-tree-id237 . -12) (undo-tree-id238 . -12) (undo-tree-id239 . -12) (undo-tree-id240 . -12) (undo-tree-id241 . -12) (undo-tree-id242 . -12) (undo-tree-id243 . -12) (undo-tree-id244 . -12) (undo-tree-id245 . -12) (undo-tree-id246 . -12) (undo-tree-id247 . -20) 6375 (t 26707 62347 5355 279000)) ((6354 . 6374) (#("\\usepackage[justification=centering]{caption}" 0 11 (face font-lock-keyword-face fontified nil) 11 37 (fontified nil) 37 44 (face font-lock-builtin-face fontified nil) 44 45 (rear-nonsticky nil fontified nil)) . 6354) (undo-tree-id248 . -44) (undo-tree-id249 . -44) (undo-tree-id250 . -44) (undo-tree-id251 . -44) (undo-tree-id252 . -44) (undo-tree-id253 . -44) (undo-tree-id254 . -44) (undo-tree-id255 . -44) (undo-tree-id256 . -44) (undo-tree-id257 . -44) (undo-tree-id258 . -44) (undo-tree-id259 . -44) (undo-tree-id260 . -44) (undo-tree-id261 . -44) (undo-tree-id262 . -44) (undo-tree-id263 . -44) (undo-tree-id264 . -44) (undo-tree-id265 . -44) (undo-tree-id266 . -44) (undo-tree-id267 . -44) (undo-tree-id268 . -44) (undo-tree-id269 . -44) (undo-tree-id270 . -44) (undo-tree-id271 . -44) (undo-tree-id272 . -44) (undo-tree-id273 . -44) (undo-tree-id274 . -44) (undo-tree-id275 . -44) (undo-tree-id276 . -44) (undo-tree-id277 . -44) (undo-tree-id278 . -44) (undo-tree-id279 . -44) (undo-tree-id280 . -44) (undo-tree-id281 . -44) (undo-tree-id282 . -44) (undo-tree-id283 . -44) (undo-tree-id284 . -44) (undo-tree-id285 . -44) (undo-tree-id286 . -44) (undo-tree-id287 . -44) (undo-tree-id288 . -44) (undo-tree-id289 . -44) (undo-tree-id290 . -44) (undo-tree-id291 . -44) (undo-tree-id292 . -44) (undo-tree-id293 . -44) (undo-tree-id294 . -44) (undo-tree-id295 . -44) (undo-tree-id296 . -44) (undo-tree-id297 . -44) (undo-tree-id298 . -44) (undo-tree-id299 . -44) (undo-tree-id300 . -44) (undo-tree-id301 . -44) (undo-tree-id302 . -44) (undo-tree-id303 . -44) (undo-tree-id304 . -44) (undo-tree-id305 . -44) (undo-tree-id306 . -44) (undo-tree-id307 . -44) (undo-tree-id308 . -44) (undo-tree-id309 . -44) (undo-tree-id310 . -44) (undo-tree-id311 . -44) (undo-tree-id312 . -44) (undo-tree-id313 . -44) (undo-tree-id314 . -44) (undo-tree-id315 . -44) (undo-tree-id316 . -44) (undo-tree-id317 . -44) (undo-tree-id318 . -44) (undo-tree-id319 . -44) (undo-tree-id320 . -44) (undo-tree-id321 . -44) (undo-tree-id322 . -44) (undo-tree-id323 . -44) (undo-tree-id324 . -44) (undo-tree-id325 . -44) (undo-tree-id326 . -44) (undo-tree-id327 . -44) (undo-tree-id328 . -44) (undo-tree-id329 . -44) (undo-tree-id330 . -44) (undo-tree-id331 . -44) (undo-tree-id332 . -44) (undo-tree-id333 . -44) (undo-tree-id334 . -44) (undo-tree-id335 . -44) (undo-tree-id336 . -44) (undo-tree-id337 . -44) (undo-tree-id338 . -44) (undo-tree-id339 . -44) (undo-tree-id340 . -44) (undo-tree-id341 . -44) (undo-tree-id342 . -44) (undo-tree-id343 . -44) (undo-tree-id344 . -44) (undo-tree-id345 . -44) (undo-tree-id346 . -44) (undo-tree-id347 . -44) (undo-tree-id348 . -44) (undo-tree-id349 . -44) (undo-tree-id350 . -44) (undo-tree-id351 . -44) (undo-tree-id352 . -44) (undo-tree-id353 . -44) (undo-tree-id354 . -44) (undo-tree-id355 . -44) (undo-tree-id356 . -44) (undo-tree-id357 . -44) (undo-tree-id358 . -44) (undo-tree-id359 . -44) (undo-tree-id360 . -44) (undo-tree-id361 . -44) (undo-tree-id362 . -44) (undo-tree-id363 . -44) (undo-tree-id364 . -44) (undo-tree-id365 . -44) (undo-tree-id366 . -44) (undo-tree-id367 . -44) (undo-tree-id368 . -44) (undo-tree-id369 . -44) (undo-tree-id370 . -44) (undo-tree-id371 . -44) (undo-tree-id372 . -44) (undo-tree-id373 . -44) (nil rear-nonsticky t 6398 . 6399) (t 26707 62532 575279 415000)) (26707 62532 574972 530000) 0 nil])
([nil current ((#("
" 0 1 (fontified t)) . 6629) (undo-tree-id665 . 1) (undo-tree-id666 . -1) (t 26707 62642 392767 560000)) nil (26707 62643 558741 283000) 0 nil] [nil nil ((nil rear-nonsticky nil 6718 . 6719) (nil fontified nil 6629 . 6719) (6629 . 6719)) ((#("\\DeclareCaptionFormat{centering}{\\centering#1#2#3}
\\captionsetup[table]{format=centering}
" 0 21 (face font-lock-keyword-face fontified nil) 21 33 (fontified nil) 33 43 (face font-lock-keyword-face fontified nil) 43 51 (fontified nil) 51 64 (face font-lock-keyword-face fontified nil) 64 65 (fontified nil) 65 66 (fontified nil) 66 70 (fontified nil) 70 89 (fontified nil) 89 90 (rear-nonsticky nil fontified nil)) . 6629) (undo-tree-id550 . -90) (undo-tree-id551 . 20) (undo-tree-id552 . -66) (undo-tree-id553 . -69) (undo-tree-id554 . -65) (undo-tree-id555 . -65) (undo-tree-id556 . -65) (undo-tree-id557 . -65) (undo-tree-id558 . -65) (undo-tree-id559 . -65) (undo-tree-id560 . -65) (undo-tree-id561 . -65) (undo-tree-id562 . -65) (undo-tree-id563 . -65) (undo-tree-id564 . -65) (undo-tree-id565 . -65) (undo-tree-id566 . -65) (undo-tree-id567 . -65) (undo-tree-id568 . -65) (undo-tree-id569 . -65) (undo-tree-id570 . -65) (undo-tree-id571 . -65) (undo-tree-id572 . -65) (undo-tree-id573 . -65) (undo-tree-id574 . -65) (undo-tree-id575 . -65) (undo-tree-id576 . -65) (undo-tree-id577 . -65) (undo-tree-id578 . -65) (undo-tree-id579 . -65) (undo-tree-id580 . -65) (undo-tree-id581 . -65) (undo-tree-id582 . -65) (undo-tree-id583 . -65) (undo-tree-id584 . -65) (undo-tree-id585 . -65) (undo-tree-id586 . -65) (undo-tree-id587 . -65) (undo-tree-id588 . -65) (undo-tree-id589 . -65) (undo-tree-id590 . -65) (undo-tree-id591 . -65) (undo-tree-id592 . -66) (undo-tree-id593 . -66) (undo-tree-id594 . -66) (undo-tree-id595 . -66) (undo-tree-id596 . -66) (undo-tree-id597 . -66) (undo-tree-id598 . -66) (undo-tree-id599 . -66) (undo-tree-id600 . -66) (undo-tree-id601 . -66) (undo-tree-id602 . -66) (undo-tree-id603 . -66) (undo-tree-id604 . -66) (undo-tree-id605 . -66) (undo-tree-id606 . -66) (undo-tree-id607 . -65) (undo-tree-id608 . -66) (undo-tree-id609 . -66) (undo-tree-id610 . -66) (undo-tree-id611 . -66) (undo-tree-id612 . -66) (undo-tree-id613 . -66) (undo-tree-id614 . -66) (undo-tree-id615 . -66) (undo-tree-id616 . -66) (undo-tree-id617 . -66) (undo-tree-id618 . -66) (undo-tree-id619 . -66) (undo-tree-id620 . -66) (undo-tree-id621 . -66) (undo-tree-id622 . -66) (undo-tree-id623 . -66) (undo-tree-id624 . -66) (undo-tree-id625 . -66) (undo-tree-id626 . -90) (undo-tree-id627 . -90) (undo-tree-id628 . -90) (undo-tree-id629 . -90) (undo-tree-id630 . -90) (undo-tree-id631 . -90) (undo-tree-id632 . -90) (undo-tree-id633 . -90) (undo-tree-id634 . -90) (undo-tree-id635 . -90) (undo-tree-id636 . -90) (undo-tree-id637 . -90) (undo-tree-id638 . -90) (undo-tree-id639 . -90) (undo-tree-id640 . -90) (undo-tree-id641 . -90) (undo-tree-id642 . -90) (undo-tree-id643 . -90) (undo-tree-id644 . -90) (undo-tree-id645 . -90) (undo-tree-id646 . -90) (undo-tree-id647 . -90) (undo-tree-id648 . -90) (undo-tree-id649 . -90) (undo-tree-id650 . -90) (undo-tree-id651 . -90) (undo-tree-id652 . -90) (undo-tree-id653 . -90) (undo-tree-id654 . -90) (undo-tree-id655 . -90) (undo-tree-id656 . -90) (undo-tree-id657 . -90) (undo-tree-id658 . -90) (undo-tree-id659 . -65) (undo-tree-id660 . -90) (undo-tree-id661 . -90) (undo-tree-id662 . -90) (undo-tree-id663 . -66) (undo-tree-id664 . -90) (nil fontified t 6672 . 6680) (nil fontified t 6662 . 6672) (nil fontified t 6650 . 6662) (nil fontified t 6629 . 6650) (nil rear-nonsticky t 6718 . 6719)) (26707 62641 68152 202000) 0 nil])
nil
nil
([nil nil ((#("
" 0 1 (fontified t)) . 6719) (t 26707 62565 941117 264000)) ((6719 . 6720)) (26707 62640 714220 569000) 0 nil])
([nil nil ((#("able" 0 4 (fontified t)) . 6695) (undo-tree-id378 . -3) (undo-tree-id380 . -4) (t 26707 62568 684104 202000)) ((6695 . 6699)) (26707 62640 359221 860000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -6694) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) 6695) ((6694 . 6695)) (26707 62639 727440 694000) 0 nil])
([nil nil ((6694 . 6702)) ((#("longtblr" 0 8 (fontified t)) . 6694) (undo-tree-id381 . -7) (undo-tree-id382 . -7) (undo-tree-id383 . -8) (undo-tree-id384 . -8) (undo-tree-id385 . -8) (undo-tree-id386 . -8) (undo-tree-id387 . -8) (undo-tree-id388 . -8) (undo-tree-id389 . -8) (undo-tree-id390 . -8) (undo-tree-id391 . -8) (undo-tree-id392 . -8) (undo-tree-id393 . -8) (undo-tree-id394 . -8) (undo-tree-id395 . -8) (undo-tree-id396 . -8) (undo-tree-id397 . -8) (undo-tree-id398 . -8) (undo-tree-id399 . -8) (undo-tree-id400 . -8) (undo-tree-id401 . -8) (undo-tree-id402 . -8) (undo-tree-id403 . -8) (undo-tree-id404 . -8) (undo-tree-id405 . -8) (undo-tree-id406 . -8) (undo-tree-id407 . -8) (undo-tree-id408 . -8) (undo-tree-id409 . -8) (undo-tree-id410 . -8) (undo-tree-id411 . -8) (undo-tree-id412 . -8) (undo-tree-id413 . -8) (undo-tree-id414 . -8) (undo-tree-id415 . -8) (undo-tree-id416 . -8) (undo-tree-id417 . -8) (undo-tree-id418 . -8) (undo-tree-id419 . -8) (undo-tree-id420 . -8) (undo-tree-id421 . -8) (undo-tree-id422 . -8) (undo-tree-id423 . -8) (undo-tree-id424 . -8) (undo-tree-id425 . -8) (undo-tree-id426 . -8) (undo-tree-id427 . -8) (undo-tree-id428 . -8) (undo-tree-id429 . -8) (undo-tree-id430 . -8) (undo-tree-id431 . -8) (undo-tree-id432 . -8) (undo-tree-id433 . -8) (undo-tree-id434 . -8) (undo-tree-id435 . -8) (undo-tree-id436 . -8) (undo-tree-id437 . -8) (undo-tree-id438 . -8) (undo-tree-id439 . -8) (undo-tree-id440 . -8) (undo-tree-id441 . -8) (undo-tree-id442 . -8) (undo-tree-id443 . -8) (undo-tree-id444 . -8) (undo-tree-id445 . -8) (undo-tree-id446 . -8) (undo-tree-id447 . -8) (undo-tree-id448 . -8) (undo-tree-id449 . -8) (undo-tree-id450 . -8) (undo-tree-id451 . -8) (undo-tree-id452 . -8) (undo-tree-id453 . -8) (undo-tree-id454 . -8) (undo-tree-id455 . -8) (undo-tree-id456 . -8) (undo-tree-id457 . -8) (undo-tree-id458 . -8) (undo-tree-id459 . -8) (undo-tree-id460 . -8) (undo-tree-id461 . -8) (undo-tree-id462 . -8) (undo-tree-id463 . -8) (undo-tree-id464 . -8) (undo-tree-id465 . -8) (undo-tree-id466 . -8) (undo-tree-id467 . -8) (undo-tree-id468 . -8) (undo-tree-id469 . -8) (undo-tree-id470 . -8) (undo-tree-id471 . -8) (undo-tree-id472 . -8) (undo-tree-id473 . -8) (undo-tree-id474 . -8) (undo-tree-id475 . -8) (undo-tree-id476 . -8) (undo-tree-id477 . -8) (undo-tree-id478 . -8) (undo-tree-id479 . -8) (undo-tree-id480 . -8) (undo-tree-id481 . -8) (undo-tree-id482 . -8) (undo-tree-id483 . -8) (undo-tree-id484 . -8) (undo-tree-id485 . -8) (undo-tree-id486 . -8) (undo-tree-id487 . -8) (undo-tree-id488 . -8) (undo-tree-id489 . -8) (undo-tree-id490 . -8) (undo-tree-id491 . -8) (undo-tree-id492 . -8) (undo-tree-id493 . -8) (undo-tree-id494 . -8) (undo-tree-id495 . -8) (undo-tree-id496 . -8) (undo-tree-id497 . -8) (undo-tree-id498 . -8) (undo-tree-id499 . -8) (undo-tree-id500 . -8) (undo-tree-id501 . -8) (undo-tree-id502 . -8) (undo-tree-id503 . -8) (undo-tree-id504 . -8) (undo-tree-id505 . -8) (undo-tree-id506 . -8) (undo-tree-id507 . -8) (undo-tree-id508 . -8) (undo-tree-id509 . -8) (undo-tree-id510 . -8) (undo-tree-id511 . -8) (undo-tree-id512 . -8) (undo-tree-id513 . -8) (undo-tree-id514 . -8) (undo-tree-id515 . -8) (undo-tree-id516 . -8) (undo-tree-id517 . -8) (undo-tree-id518 . -8) (undo-tree-id519 . -8) (undo-tree-id520 . -8) (undo-tree-id521 . -8) (undo-tree-id522 . -8) (undo-tree-id523 . -8) (undo-tree-id524 . -8) (undo-tree-id525 . -8) (undo-tree-id526 . -8) (undo-tree-id527 . -8) (undo-tree-id528 . -8) (undo-tree-id529 . -8) (undo-tree-id530 . -7) (undo-tree-id531 . -7) (undo-tree-id532 . -7) (undo-tree-id533 . -7) (undo-tree-id534 . -7) (undo-tree-id535 . -7) (undo-tree-id536 . -7) (undo-tree-id537 . -7) (undo-tree-id538 . -7) (undo-tree-id539 . -7) (undo-tree-id540 . -7) (undo-tree-id541 . -7) (undo-tree-id542 . -7) (undo-tree-id543 . -7) (undo-tree-id544 . -7) (undo-tree-id545 . -8) (undo-tree-id546 . -7) (undo-tree-id547 . -7) (undo-tree-id548 . -7) (undo-tree-id549 . -7) (t 26707 62622 795854 482000)) (26707 62622 795975 860000) 0 nil])
nil
