(undo-tree-save-format-version . 1)
"0a2f6a68ef068e61daf9df80bb5a96343324a13c"
[nil nil nil nil (26709 10788 183518 34000) 0 nil]
([nil nil ((21974 . 21978) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -21974) (undo-tree-id14 . -1) (21973 . 21975) (#("b" 0 1 (face font-lock-keyword-face fontified t)) . -21973) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 21974 (21959 . 21974) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -21959) (undo-tree-id18 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -21960) (undo-tree-id19 . -1) (#(" " 0 1 (fontified t)) . -21961) (undo-tree-id20 . -1) 21962 (21953 . 21962) (#("7" 0 1 (fontified t)) . -21953) (undo-tree-id21 . -1) 21954 (21952 . 21954) (#("5" 0 1 (fontified t)) . -21952) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 21953 (21947 . 21953) (#(" " 0 1 (fontified t)) . -21947) (undo-tree-id25 . -1) (#("=" 0 1 (fontified t)) . -21948) (undo-tree-id26 . -1) 21949 (21947 . 21949) (#(" " 0 1 (fontified t)) . -21947) (undo-tree-id27 . -1) 21948 (21947 . 21948) (#("#" 0 1 (fontified t)) . -21947) (undo-tree-id28 . -1) 21948 (21947 . 21948) (#(" " 0 1 (fontified t)) . -21947) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("!" 0 1 (fontified t)) . -21948) (undo-tree-id32 . -1) 21949 (21948 . 21949) (#("#" 0 1 (fontified t)) . -21948) (undo-tree-id33 . -1) 21949 (21948 . 21949) (#("/" 0 1 (fontified t)) . -21948) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) 21949 (21940 . 21949) (21939 . 21940) (t 26707 60558 684110 592000) 21939) nil (26709 10788 183871 626000) 0 nil])
([nil nil ((21956 . 21960) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -21956) (undo-tree-id188 . -1) (21955 . 21957) (#("bullet" 0 6 (face font-lock-keyword-face fontified t)) . 21955) (undo-tree-id189 . -5)) nil (26709 10847 92734 301000) 0 nil] [nil nil ((22012 . 22017) (#("b" 0 1 (fontified nil)) . -22012) (undo-tree-id0 . -1) 22013 (21998 . 22013) (#("e" 0 1 (fontified nil)) . -21998) (undo-tree-id1 . -1) (#("t" 0 1 (fontified nil)) . -21999) (undo-tree-id2 . -1) (#(" " 0 1 (fontified nil)) . -22000) (undo-tree-id3 . -1) 22001 (21992 . 22001) (#("7" 0 1 (fontified nil)) . -21992) (undo-tree-id4 . -1) 21993 (21991 . 21993) (#("5" 0 1 (fontified nil)) . -21991) (undo-tree-id5 . -1) 21992 (21986 . 21992) (#(" " 0 1 (fontified nil)) . -21986) (undo-tree-id6 . -1) (#("=" 0 1 (fontified nil)) . -21987) (undo-tree-id7 . -1) 21988 (21986 . 21988) (#(" " 0 1 (fontified nil)) . -21986) (undo-tree-id8 . -1) 21987 (21986 . 21987) (#("#" 0 1 (fontified nil)) . -21986) (undo-tree-id9 . -1) 21987 (21986 . 21987) (#(" " 0 1 (fontified nil)) . -21986) (undo-tree-id10 . -1) (#("!" 0 1 (fontified nil)) . -21987) (undo-tree-id11 . -1) 21988 (21987 . 21988) (#("#" 0 1 (fontified nil)) . -21987) (undo-tree-id12 . -1) 21988 (21987 . 21988) (#("/" 0 1 (fontified nil)) . -21987) (undo-tree-id13 . -1) 21988 (21979 . 21988) (21978 . 21979) 21955) ((#("
" 0 1 (fontified t)) . 21978) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("Альбедо /" 0 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil)) . 21979) (undo-tree-id42 . -7) (undo-tree-id43 . -7) (undo-tree-id44 . -7) (undo-tree-id45 . -7) (21987 . 21988) (#("#" 0 1 (fontified nil)) . 21987) (21987 . 21988) (#("!" 0 1 (fontified nil)) . 21987) (21986 . 21988) (#("#" 0 1 (fontified nil)) . 21986) (21986 . 21987) (#(" " 0 1 (fontified nil)) . 21986) (21986 . 21987) (#(" =" 0 1 (fontified nil) 1 2 (fontified nil)) . 21986) (21986 . 21988) (#(" = 0.5" 0 5 (fontified nil) 5 6 (fontified nil)) . 21986) (undo-tree-id46 . -5) (undo-tree-id47 . -5) (undo-tree-id48 . -5) (undo-tree-id49 . -5) (21991 . 21992) (#("17" 0 1 (fontified nil) 1 2 (fontified nil)) . 21991) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (21992 . 21993) (#("5\\bullet " 0 1 (fontified nil) 1 6 (face font-lock-keyword-face fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil)) . 21992) (undo-tree-id54 . -6) (undo-tree-id55 . -6) (undo-tree-id56 . -6) (undo-tree-id57 . -6) (21998 . 22001) (#("et B02 + 0.15\\b" 0 2 (face font-lock-keyword-face fontified nil) 2 13 (fontified nil) 13 14 (face font-lock-keyword-face fontified nil) 14 15 (fontified nil)) . 21998) (undo-tree-id58 . -14) (undo-tree-id59 . -14) (undo-tree-id60 . -14) (undo-tree-id61 . -14) (22012 . 22013) (#("times" 0 5 (face font-lock-keyword-face fontified t)) . 22012) (undo-tree-id62 . -4) (undo-tree-id63 . -4) (undo-tree-id64 . -4) (undo-tree-id65 . -4)) (26709 10788 183426 553000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 21966)) nil (26709 10847 92733 299000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . 21964) (undo-tree-id186 . -1) (undo-tree-id187 . -1)) nil (26709 10847 92732 858000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 21960) (undo-tree-id185 . 1)) nil (26709 10847 92731 866000) 0 nil])
([nil nil ((21976 . 21978) (#("2" 0 1 (fontified t)) . -21976) (undo-tree-id184 . -1) 21977 (21974 . 21977)) nil (26709 10847 92731 295000) 0 nil])
([nil nil ((21989 . 21991) (#("0" 0 1 (fontified t)) . -21989) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) 21990 (21984 . 21990) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -21984) (undo-tree-id183 . -1) (21978 . 21985)) nil (26709 10847 92730 443000) 0 nil])
([nil nil ((21988 . 21989)) nil (26709 10847 92728 720000) 0 nil])
([nil nil ((21974 . 21975)) nil (26709 10847 92728 49000) 0 nil])
([nil nil ((21960 . 21961)) nil (26709 10847 92727 247000) 0 nil])
([nil nil ((22014 . 22022) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -22014) (undo-tree-id173 . -1) (22007 . 22015) (#("1" 0 1 (fontified t)) . -22007) (undo-tree-id174 . -1) (#(" " 0 1 (fontified t)) . -22008) (undo-tree-id175 . -1) (#("+" 0 1 (fontified t)) . -22009) (undo-tree-id176 . -1) (#(" " 0 1 (fontified t)) . -22010) (undo-tree-id177 . -1) 22011 (22007 . 22011) (#(" " 0 1 (fontified t)) . -22007) (undo-tree-id178 . -1) 22008 (22000 . 22008) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -22000) (undo-tree-id179 . -1) (21994 . 22001)) nil (26709 10847 92726 296000) 0 nil])
([nil nil ((21940 . 21957) (22023 . 22038)) nil (26709 10847 92723 100000) 0 nil])
([nil nil ((#("%% ??????
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 10 (face font-lock-comment-face fontified t)) . 22055) (undo-tree-id146 . -9) (undo-tree-id147 . -9) (undo-tree-id148 . -8) (undo-tree-id149 . -8) (undo-tree-id150 . -8) (undo-tree-id151 . -8) (undo-tree-id152 . -8) (undo-tree-id153 . -8) (undo-tree-id154 . -8) (undo-tree-id155 . -8) (undo-tree-id156 . -8) (undo-tree-id157 . -8) (undo-tree-id158 . -8) (undo-tree-id159 . -8) (undo-tree-id160 . -8) (undo-tree-id161 . -8) (undo-tree-id162 . -8) (undo-tree-id163 . -8) (undo-tree-id164 . -8) (undo-tree-id165 . -8) (undo-tree-id166 . -8) (undo-tree-id167 . -8) (undo-tree-id168 . -8) (undo-tree-id169 . -8) (undo-tree-id170 . -8) (undo-tree-id171 . -8) (undo-tree-id172 . -10) 22063) nil (26709 10847 92722 198000) 0 nil])
([nil nil ((#("(1)
" 0 3 (fontified t) 3 4 (fontified t)) . 22055) (undo-tree-id144 . -3) (undo-tree-id145 . -2) 22057) nil (26709 10847 92714 173000) 0 nil])
([nil nil ((21957 . 21971) (#("Альбедо" 0 7 (fontified t)) . -21957) (undo-tree-id66 . -6) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -3) (undo-tree-id71 . -3) (undo-tree-id72 . -4) (undo-tree-id73 . -4) (undo-tree-id74 . -4) (undo-tree-id75 . -4) (undo-tree-id76 . -4) (undo-tree-id77 . -5) (undo-tree-id78 . -5) (undo-tree-id79 . -5) (undo-tree-id80 . -5) (undo-tree-id81 . -5) (undo-tree-id82 . -6) (undo-tree-id83 . -6) (undo-tree-id84 . -6) (undo-tree-id85 . -6) (undo-tree-id86 . -6) (undo-tree-id87 . -7) (undo-tree-id88 . -7) (undo-tree-id89 . -7) (undo-tree-id90 . -7) (undo-tree-id91 . -7) (undo-tree-id92 . -7) (undo-tree-id93 . -7) (undo-tree-id94 . -7) (undo-tree-id95 . -7) (undo-tree-id96 . -7) (undo-tree-id97 . -7) (undo-tree-id98 . -7) (undo-tree-id99 . -7) (undo-tree-id100 . -7) (undo-tree-id101 . -7) (undo-tree-id102 . -7) (undo-tree-id103 . -7) (undo-tree-id104 . -7) (undo-tree-id105 . -7) (undo-tree-id106 . -7) (undo-tree-id107 . -6) (undo-tree-id108 . -6) (undo-tree-id109 . -6) (undo-tree-id110 . -6) (undo-tree-id111 . -6) (undo-tree-id112 . -6) (undo-tree-id113 . -6) (undo-tree-id114 . -6) (undo-tree-id115 . -6) (undo-tree-id116 . -6) (undo-tree-id117 . -6) (undo-tree-id118 . -6) (undo-tree-id119 . -6) (undo-tree-id120 . -6) (undo-tree-id121 . -6) (undo-tree-id122 . -6) (undo-tree-id123 . -6) (undo-tree-id124 . -6) (undo-tree-id125 . -6) (undo-tree-id126 . -6) (undo-tree-id127 . -6) (undo-tree-id128 . -6) (undo-tree-id129 . -6) (undo-tree-id130 . -6) (undo-tree-id131 . -6) (undo-tree-id132 . -6) (undo-tree-id133 . -6) (undo-tree-id134 . -6) (undo-tree-id135 . -6) (undo-tree-id136 . -6) (undo-tree-id137 . -6) (undo-tree-id138 . -6) (undo-tree-id139 . -6) (undo-tree-id140 . -6) (undo-tree-id141 . -6) (undo-tree-id142 . -6) (undo-tree-id143 . -7) 21964) nil (26709 10873 514817 567000) 0 nil])
([nil nil ((21963 . 21976) (#("Альбедо" 0 7 (fontified t)) . -21963) (undo-tree-id193 . -6) (undo-tree-id194 . -6) (undo-tree-id195 . -6) (undo-tree-id196 . -6) (undo-tree-id197 . -6) (undo-tree-id198 . -6) (undo-tree-id199 . -6) (undo-tree-id200 . -6) (undo-tree-id201 . -6) (undo-tree-id202 . -6) (undo-tree-id203 . -6) (undo-tree-id204 . -6) (undo-tree-id205 . -6) (undo-tree-id206 . -6) (undo-tree-id207 . -6) (undo-tree-id208 . -6) (undo-tree-id209 . -6) (undo-tree-id210 . -6) (undo-tree-id211 . -6) (undo-tree-id212 . -6) (undo-tree-id213 . -6) (undo-tree-id214 . -6) (undo-tree-id215 . -6) (undo-tree-id216 . -6) (undo-tree-id217 . -6) (undo-tree-id218 . -6) (undo-tree-id219 . -6) (undo-tree-id220 . -6) (undo-tree-id221 . -6) (undo-tree-id222 . -6) (undo-tree-id223 . -6) (undo-tree-id224 . -6) (undo-tree-id225 . -6) (undo-tree-id226 . -6) (undo-tree-id227 . -6) (undo-tree-id228 . -6) (undo-tree-id229 . -6) (undo-tree-id230 . -6) (undo-tree-id231 . -6) (undo-tree-id232 . -6) (undo-tree-id233 . -6) (undo-tree-id234 . -6) (undo-tree-id235 . -6) (undo-tree-id236 . -6) (undo-tree-id237 . -6) (undo-tree-id238 . -6) (undo-tree-id239 . -6) (undo-tree-id240 . -6) (undo-tree-id241 . -6) (undo-tree-id242 . -6) (undo-tree-id243 . -6) (undo-tree-id244 . -6) (undo-tree-id245 . -6) (undo-tree-id246 . -6) (undo-tree-id247 . -6) (undo-tree-id248 . -6) (undo-tree-id249 . -6) (undo-tree-id250 . -6) (undo-tree-id251 . -6) (undo-tree-id252 . -6) (undo-tree-id253 . -6) (undo-tree-id254 . -6) (undo-tree-id255 . -6) (undo-tree-id256 . -6) (undo-tree-id257 . -6) (undo-tree-id258 . -6) (undo-tree-id259 . -6) (undo-tree-id260 . -6) (undo-tree-id261 . -6) (undo-tree-id262 . -6) (undo-tree-id263 . -6) (undo-tree-id264 . -6) (undo-tree-id265 . -6) (undo-tree-id266 . -6) (undo-tree-id267 . -6) (undo-tree-id268 . -6) (undo-tree-id269 . -6) (undo-tree-id270 . -6) (undo-tree-id271 . -6) (undo-tree-id272 . -6) (undo-tree-id273 . -6) (undo-tree-id274 . -6) (undo-tree-id275 . -6) (undo-tree-id276 . -6) (undo-tree-id277 . -6) (undo-tree-id278 . -6) (undo-tree-id279 . -6) (undo-tree-id280 . -7) 21970 (t 26709 10847 94970 764000)) nil (26709 10883 36333 293000) 0 nil] [nil nil ((21963 . 21980) (21970 . 21985) 21963 (t 26709 10847 94970 764000)) ((#("\\end{equation}
" 0 4 (face font-lock-keyword-face fontified nil) 4 5 (latex-env-pair t fontified nil) 5 13 (face font-lock-function-name-face latex-env-pair t fontified nil) 13 14 (latex-env-pair t fontified nil) 14 15 (fontified nil)) . 21970) (undo-tree-id192 . 15) (#("\\begin{equation}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 15 (face font-lock-function-name-face latex-env-pair t fontified t) 15 16 (latex-env-pair t fontified t) 16 17 (fontified t)) . 21963)) (26709 10873 514564 273000) 0 nil] [nil nil ((21963 . 21982) (21970 . 21987) (t 26709 10847 94970 764000)) ((#("\\end{authorinfo}
" 0 4 (face font-lock-keyword-face fontified nil) 4 5 (latex-env-pair t fontified nil) 5 15 (face font-lock-function-name-face latex-env-pair t fontified nil) 15 16 (latex-env-pair t fontified nil) 16 17 (fontified nil)) . 21970) (undo-tree-id190 . 17) (#("\\begin{authorinfo}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 17 (face font-lock-function-name-face latex-env-pair t fontified t) 17 18 (latex-env-pair t fontified t) 18 19 (fontified t)) . 21963) (undo-tree-id191 . -19)) (26709 10870 499701 49000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 25319) (t 26709 10883 39794 418000)) nil (26709 10917 180722 402000) 0 nil])
nil
nil
([nil nil ((#("(" 0 1 (fontified t)) . 25319)) nil (26709 10917 180722 41000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 25346)) nil (26709 10917 180721 620000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 25345)) nil (26709 10917 180721 259000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 25344)) nil (26709 10917 180720 869000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 25343)) nil (26709 10917 180720 478000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-keyword-face fontified t)) . 25342)) nil (26709 10917 180720 57000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 25341)) nil (26709 10917 180719 536000) 0 nil])
([nil nil ((25319 . 25336) (25342 . 25357)) nil (26709 10917 180815 386000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 25676)) nil (26709 10922 819151 63000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . 25696) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) 25697) ((25696 . 25697)) (26709 10917 180715 639000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 25676)) nil (26709 10922 819150 672000) 0 nil])
nil
([nil nil ((#(")" 0 1 (fontified t)) . 25717)) nil (26709 10922 819150 201000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . 25716)) nil (26709 10922 819149 209000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 25715)) nil (26709 10922 819148 137000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 25714)) nil (26709 10922 819147 526000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-keyword-face fontified t)) . 25713)) nil (26709 10922 819146 614000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 25712)) nil (26709 10922 819145 743000) 0 nil])
([nil nil ((25676 . 25693) (25713 . 25728)) nil (26709 10922 819142 26000) 0 nil])
([nil nil ((#("(4)
" 0 4 (fontified t)) . 26585) (undo-tree-id314 . -3) (t 26709 10922 822599 254000)) nil (26709 11032 463028 791000) 0 nil])
([nil nil ((26585 . 26594) (#("Резуль" 0 6 (fontified t)) . -26585) (undo-tree-id309 . -6) (undo-tree-id310 . -6) (undo-tree-id311 . -6) 26591 (26588 . 26591) (#("х" 0 1 (fontified t)) . -26588) (undo-tree-id312 . -1) (#("у" 0 1 (fontified t)) . -26589) (undo-tree-id313 . -1) 26590 (26585 . 26590) (26584 . 26585) 26584) nil (26709 11032 463026 948000) 0 nil])
([nil nil ((26594 . 26595)) nil (26709 11032 463024 132000) 0 nil])
([nil nil ((26585 . 26601) (#("Результат" 0 9 (fontified t)) . 26585) (undo-tree-id307 . -9) (undo-tree-id308 . -8)) nil (26709 11032 463023 641000) 0 nil])
([nil nil ((26591 . 26606) (#("Результат" 0 9 (fontified t)) . 26591) (undo-tree-id305 . -9) (undo-tree-id306 . -8)) nil (26709 11032 463021 507000) 0 nil])
([nil nil ((26608 . 26625)) nil (26709 11032 463010 697000) 0 nil])
([nil nil ((26585 . 26602) (26626 . 26641) (t 26709 11032 465061 317000)) nil (26709 11045 138268 529000) 0 nil])
([nil nil ((26627 . 26631) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -26627) (undo-tree-id319 . -1) (26625 . 26628) (t 26709 11045 140999 126000)) nil (26709 11349 182635 90000) 0 nil])
([nil nil ((26626 . 26630) (#("right" 0 5 (face font-lock-keyword-face fontified t)) . 26626) (undo-tree-id316 . -4) (undo-tree-id317 . -4) (undo-tree-id318 . -4)) nil (26709 11349 182633 908000) 0 nil])
([nil nil ((26648 . 26652) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -26648) (undo-tree-id315 . -1) (26646 . 26649)) nil (26709 11349 182629 189000) 0 nil])
([nil nil ((26655 . 26659) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -26655) (undo-tree-id320 . -1) (26653 . 26656) (t 26709 11349 185507 430000)) nil (26709 11380 745022 94000) 0 nil])
([nil nil ((26643 . 26645) (#("i" 0 1 (face (subscript) fontified nil)) . -26643) (undo-tree-id541 . -1) (26640 . 26644)) nil (26709 11403 557975 335000) 0 nil] [nil nil ((nil rear-nonsticky nil 26692 . 26693) (nil fontified nil 26659 . 26693) (26659 . 26693) 26658) ((#("\\left(\\frac{A-A}{A-A}\\right)\\times" 0 5 (face font-lock-keyword-face fontified nil) 5 6 (fontified nil) 6 11 (face font-lock-keyword-face fontified nil) 11 21 (fontified nil) 21 27 (face font-lock-keyword-face fontified nil) 27 28 (fontified nil) 28 33 (face font-lock-keyword-face fontified nil) 33 34 (face font-lock-keyword-face rear-nonsticky nil fontified nil)) . 26659) (undo-tree-id415 . -33) (undo-tree-id416 . -34) (undo-tree-id417 . -34) (undo-tree-id418 . -34) (undo-tree-id419 . -34) (undo-tree-id420 . -34) (undo-tree-id421 . -34) (undo-tree-id422 . -34) (undo-tree-id423 . -34) (undo-tree-id424 . -34) (undo-tree-id425 . -34) (undo-tree-id426 . -34) (undo-tree-id427 . -34) (undo-tree-id428 . -34) (undo-tree-id429 . -34) (undo-tree-id430 . -34) (undo-tree-id431 . -34) (undo-tree-id432 . -34) (undo-tree-id433 . -34) (undo-tree-id434 . -34) (undo-tree-id435 . -34) (undo-tree-id436 . -34) (undo-tree-id437 . -34) (undo-tree-id438 . -34) (undo-tree-id439 . -34) (undo-tree-id440 . -34) (undo-tree-id441 . -34) (undo-tree-id442 . -34) (undo-tree-id443 . -34) (undo-tree-id444 . -34) (undo-tree-id445 . -34) (undo-tree-id446 . -34) (undo-tree-id447 . -34) (undo-tree-id448 . -34) (undo-tree-id449 . -34) (undo-tree-id450 . -34) (undo-tree-id451 . -34) (undo-tree-id452 . -34) (undo-tree-id453 . -34) (undo-tree-id454 . -34) (undo-tree-id455 . -34) (undo-tree-id456 . -34) (undo-tree-id457 . -34) (undo-tree-id458 . -34) (undo-tree-id459 . -34) (undo-tree-id460 . -34) (undo-tree-id461 . -34) (undo-tree-id462 . -34) (undo-tree-id463 . -34) (undo-tree-id464 . -34) (undo-tree-id465 . -34) (undo-tree-id466 . -34) (undo-tree-id467 . -34) (undo-tree-id468 . -34) (undo-tree-id469 . -34) (undo-tree-id470 . -34) (undo-tree-id471 . -34) (undo-tree-id472 . -34) (undo-tree-id473 . -34) (undo-tree-id474 . -34) (undo-tree-id475 . -34) (undo-tree-id476 . -34) (undo-tree-id477 . -34) (undo-tree-id478 . -34) (undo-tree-id479 . -34) (undo-tree-id480 . -34) (undo-tree-id481 . -34) (undo-tree-id482 . -34) (undo-tree-id483 . -34) (undo-tree-id484 . -34) (undo-tree-id485 . -34) (undo-tree-id486 . -34) (undo-tree-id487 . -34) (undo-tree-id488 . -34) (undo-tree-id489 . -34) (undo-tree-id490 . -34) (undo-tree-id491 . -34) (undo-tree-id492 . -34) (undo-tree-id493 . -34) (undo-tree-id494 . -34) (undo-tree-id495 . -34) (undo-tree-id496 . -34) (undo-tree-id497 . -34) (undo-tree-id498 . -34) (undo-tree-id499 . -34) (undo-tree-id500 . -34) (undo-tree-id501 . -34) (undo-tree-id502 . -34) (undo-tree-id503 . -34) (undo-tree-id504 . -34) (undo-tree-id505 . -34) (undo-tree-id506 . -34) (undo-tree-id507 . -34) (undo-tree-id508 . -34) (undo-tree-id509 . -33) (undo-tree-id510 . -33) (undo-tree-id511 . -33) (undo-tree-id512 . -33) (undo-tree-id513 . -33) (undo-tree-id514 . -33) (undo-tree-id515 . -33) (undo-tree-id516 . -33) (undo-tree-id517 . -33) (undo-tree-id518 . -33) (undo-tree-id519 . -33) (undo-tree-id520 . -33) (undo-tree-id521 . -33) (undo-tree-id522 . -33) (undo-tree-id523 . -33) (undo-tree-id524 . -33) (undo-tree-id525 . -34) (undo-tree-id526 . -33) (nil rear-nonsticky t 26692 . 26693)) (26709 11380 345031 590000) 0 nil])
([nil nil ((26645 . 26646)) nil (26709 11403 557974 463000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26726 . 26727) (nil fontified nil 26693 . 26727) (26693 . 26727) 26692) ((#("\\left(\\frac{A-A}{A-A}\\right)\\times" 0 5 (face font-lock-keyword-face fontified nil) 5 6 (fontified nil) 6 11 (face font-lock-keyword-face fontified nil) 11 21 (fontified nil) 21 27 (face font-lock-keyword-face fontified nil) 27 28 (fontified nil) 28 29 (face font-lock-keyword-face fontified nil) 29 30 (face font-lock-keyword-face fontified nil) 30 31 (face font-lock-keyword-face fontified nil) 31 32 (face font-lock-keyword-face fontified nil) 32 33 (face font-lock-keyword-face fontified nil) 33 34 (face font-lock-keyword-face rear-nonsticky nil fontified nil)) . 26693) (undo-tree-id321 . -33) (undo-tree-id322 . -28) (undo-tree-id323 . -28) (undo-tree-id324 . -28) (undo-tree-id325 . -28) (undo-tree-id326 . -28) (undo-tree-id327 . -28) (undo-tree-id328 . -28) (undo-tree-id329 . -28) (undo-tree-id330 . -29) (undo-tree-id331 . -29) (undo-tree-id332 . -29) (undo-tree-id333 . -29) (undo-tree-id334 . -29) (undo-tree-id335 . -29) (undo-tree-id336 . -29) (undo-tree-id337 . -29) (undo-tree-id338 . -29) (undo-tree-id339 . -29) (undo-tree-id340 . -29) (undo-tree-id341 . -29) (undo-tree-id342 . -29) (undo-tree-id343 . -29) (undo-tree-id344 . -29) (undo-tree-id345 . -29) (undo-tree-id346 . -29) (undo-tree-id347 . -29) (undo-tree-id348 . -29) (undo-tree-id349 . -29) (undo-tree-id350 . -29) (undo-tree-id351 . -29) (undo-tree-id352 . -29) (undo-tree-id353 . -29) (undo-tree-id354 . -29) (undo-tree-id355 . -29) (undo-tree-id356 . -29) (undo-tree-id357 . -29) (undo-tree-id358 . -29) (undo-tree-id359 . -28) (undo-tree-id360 . -29) (undo-tree-id361 . -30) (undo-tree-id362 . -30) (undo-tree-id363 . -30) (undo-tree-id364 . -30) (undo-tree-id365 . -30) (undo-tree-id366 . -30) (undo-tree-id367 . -30) (undo-tree-id368 . -30) (undo-tree-id369 . -30) (undo-tree-id370 . -30) (undo-tree-id371 . -30) (undo-tree-id372 . -30) (undo-tree-id373 . -30) (undo-tree-id374 . -30) (undo-tree-id375 . -30) (undo-tree-id376 . -29) (undo-tree-id377 . -30) (undo-tree-id378 . -31) (undo-tree-id379 . -31) (undo-tree-id380 . -31) (undo-tree-id381 . -31) (undo-tree-id382 . -31) (undo-tree-id383 . -31) (undo-tree-id384 . -31) (undo-tree-id385 . -31) (undo-tree-id386 . -31) (undo-tree-id387 . -31) (undo-tree-id388 . -30) (undo-tree-id389 . -31) (undo-tree-id390 . -32) (undo-tree-id391 . -32) (undo-tree-id392 . -32) (undo-tree-id393 . -32) (undo-tree-id394 . -32) (undo-tree-id395 . -32) (undo-tree-id396 . -32) (undo-tree-id397 . -32) (undo-tree-id398 . -32) (undo-tree-id399 . -32) (undo-tree-id400 . -31) (undo-tree-id401 . -32) (undo-tree-id402 . -33) (undo-tree-id403 . -33) (undo-tree-id404 . -33) (undo-tree-id405 . -33) (undo-tree-id406 . -33) (undo-tree-id407 . -33) (undo-tree-id408 . -33) (undo-tree-id409 . -33) (undo-tree-id410 . -33) (undo-tree-id411 . -33) (undo-tree-id412 . -33) (undo-tree-id413 . -32) (undo-tree-id414 . -33) (nil rear-nonsticky t 26726 . 26727)) (26709 11380 174626 258000) 0 nil])
([nil nil ((26649 . 26655)) nil (26709 11403 557974 233000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-keyword-face rear-nonsticky t fontified t)) . 26726)) ((26726 . 26727)) (26709 11380 28023 748000) 0 nil])
([nil nil ((26657 . 26663)) nil (26709 11403 557974 62000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t)) . 26725)) ((26725 . 26726)) (26709 11379 834987 139000) 0 nil])
([nil nil ((26660 . 26662) (#("i" 0 1 (face (subscript) fontified nil)) . -26660) (undo-tree-id539 . -1) (26660 . 26661) (#("ax" 0 2 (face (subscript) display (raise -0.2) fontified t)) . 26660) (undo-tree-id540 . -1)) nil (26709 11403 557973 632000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-keyword-face fontified t)) . 26724)) ((26724 . 26725)) (26709 11379 527097 172000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26728 . 26729) (nil fontified nil 26677 . 26729) (26677 . 26729) 26676) nil (26709 11403 557971 658000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-keyword-face fontified t)) . 26723)) ((26723 . 26724)) (26709 11378 802941 80000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26780 . 26781) (nil fontified nil 26729 . 26781) (26729 . 26781) 26728) nil (26709 11403 557971 177000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-keyword-face fontified t)) . 26722)) ((26722 . 26723)) (26709 11378 688789 585000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-keyword-face rear-nonsticky t fontified t)) . 26780)) nil (26709 11403 557970 676000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 26721)) ((26721 . 26722)) (26709 11378 688686 783000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t)) . 26779)) nil (26709 11403 557970 375000) 0 nil])
nil
([nil nil ((#("m" 0 1 (face font-lock-keyword-face fontified t)) . 26778)) nil (26709 11403 557970 35000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-keyword-face fontified t)) . 26777) (undo-tree-id537 . -1) (undo-tree-id538 . -1)) nil (26709 11403 557969 684000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-keyword-face fontified t)) . 26776) (undo-tree-id535 . -1) (undo-tree-id536 . -1)) nil (26709 11403 557968 251000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 26775) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1)) nil (26709 11403 557964 174000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -26692) (undo-tree-id552 . -1) 26693 (26689 . 26693) (#("m" 0 1 (fontified t)) . -26689) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) 26690 (26689 . 26690) (#("A" 0 1 (fontified t)) . 26689) (t 26709 11403 560240 653000)) nil (26709 11421 970257 13000) 0 nil])
([nil nil ((#("s" 0 1 (fontified nil)) . -26696) (undo-tree-id548 . -1) 26697 (26693 . 26697) (#("m" 0 1 (fontified nil)) . -26693) (undo-tree-id549 . -1) 26694 (26693 . 26694) (#("A" 0 1 (fontified t)) . 26693) (undo-tree-id550 . -1) (undo-tree-id551 . -1)) nil (26709 11421 970255 60000) 0 nil])
([nil nil ((#("s" 0 1 (fontified nil)) . -26707) 26708 (26704 . 26708) (#("m" 0 1 (fontified nil)) . -26704) 26705 (26704 . 26705) (#("A" 0 1 (fontified t)) . 26704)) nil (26709 11421 970252 655000) 0 nil])
([nil nil ((#("s" 0 1 (fontified nil)) . -26717) 26718 (26714 . 26718) (#("m" 0 1 (fontified nil)) . -26714) 26715 (26714 . 26715) (#("A" 0 1 (fontified t)) . 26714)) nil (26709 11421 970251 824000) 0 nil])
([nil nil ((26749 . 26753) (#("A" 0 1 (fontified t)) . 26749) (undo-tree-id546 . -1) (undo-tree-id547 . -1)) nil (26709 11421 970250 571000) 0 nil])
([nil nil ((26754 . 26758) (#("A" 0 1 (fontified t)) . 26754)) nil (26709 11421 970249 309000) 0 nil])
([nil nil ((26766 . 26770) (#("A" 0 1 (fontified t)) . 26766) (undo-tree-id544 . -1) (undo-tree-id545 . -1)) nil (26709 11421 970248 427000) 0 nil])
([nil nil ((26777 . 26781) (#("A" 0 1 (fontified t)) . 26777) (undo-tree-id542 . -1) (undo-tree-id543 . -1)) nil (26709 11421 970244 229000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26883 . 26884) (nil fontified nil 26838 . 26884) (26838 . 26884) (t 26709 11421 973150 306000)) nil (26710 26303 507806 248000) 0 nil])
([nil nil ((26838 . 26840)) nil (26710 26303 507805 386000) 0 nil])
([nil nil ((26839 . 26840) (#("{" 0 1 (face font-lock-keyword-face fontified t)) . 26839) (26839 . 26840) (#("}" 0 1 (face font-lock-keyword-face fontified t)) . 26839) (26839 . 26840) (#("}" 0 1 (face font-lock-keyword-face fontified t)) . 26839)) nil (26710 26303 507803 913000) 0 nil])
([nil nil ((26886 . 26888)) nil (26710 26303 507802 981000) 0 nil])
([nil nil ((26888 . 26889) (#("
" 0 1 (fontified t)) . -26888) (undo-tree-id0 . 1) 26887) nil (26710 26303 507801 809000) 0 nil])
([nil nil ((26892 . 26893) (#("
" 0 1 (fontified t)) . -26892) 26888) nil (26710 26303 507775 540000) 0 nil])
([nil nil ((27058 . 27059) (#("
" 0 1 (fontified t)) . -27058) 27057 (t 26710 26303 510619 148000)) nil (26710 26324 345947 167000) 0 nil])
([nil nil ((27055 . 27060)) nil (26710 26324 345946 425000) 0 nil])
([nil nil ((27183 . 27188)) nil (26710 28936 348780 648000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27110 . 27111) (27057 . 27111)) ((#("\\left(\\frac{MSI-MSI_{min}}{MSI_{max}-MSI_{min}}\\right)" 0 5 (face font-lock-keyword-face fontified nil) 5 6 (fontified nil) 6 11 (face font-lock-keyword-face fontified nil) 11 20 (fontified nil) 20 25 (face (subscript) fontified nil display (raise -0.2)) 25 31 (fontified nil) 31 36 (face (subscript) fontified nil display (raise -0.2)) 36 41 (fontified nil) 41 46 (face (subscript) fontified nil display (raise -0.2)) 46 47 (fontified nil) 47 53 (face font-lock-keyword-face fontified nil) 53 54 (fontified nil rear-nonsticky nil)) . 27057) (nil rear-nonsticky t 27110 . 27111) (t 26710 28935 929510 217000)) (26710 28937 133780 216000) 0 nil] [nil nil ((27262 . 27263) (#("
" 0 1 (fontified t)) . -27262) (27191 . 27192) (#("
" 0 1 (fontified t)) . -27191) 27187) ((27191 . 27192) (#(" " 0 1 (fontified nil)) . 27191) (27262 . 27263) (#(" " 0 1 (fontified t)) . 27262)) (26710 26324 345942 398000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27296 . 27297) (27239 . 27297) (t 26710 28935 929510 217000)) ((#("\\left(\\frac{NDMI-NDMI_{min}}{NDMI_{max}-NDMI_{min}}\\right)" 0 5 (face font-lock-keyword-face fontified nil) 5 6 (fontified nil) 6 11 (face font-lock-keyword-face fontified nil) 11 22 (fontified nil) 22 27 (face (subscript) fontified nil display (raise -0.2)) 27 34 (fontified nil) 34 39 (face (subscript) fontified nil display (raise -0.2)) 39 45 (fontified nil) 45 50 (face (subscript) fontified nil display (raise -0.2)) 50 51 (fontified nil) 51 57 (face font-lock-keyword-face fontified nil) 57 58 (fontified nil rear-nonsticky nil)) . 27239) (nil rear-nonsticky t 27296 . 27297) (t 26710 27041 141544 667000)) (26710 28937 275389 692000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 29135) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (t 26710 28937 543499 113000)) nil (26710 29880 783916 850000) 0 nil] [nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (latex-env-pair t fontified t) 5 14 (face font-lock-function-name-face latex-env-pair t fontified t) 14 15 (latex-env-pair t fontified t) 15 16 (fontified t)) . 26568) (undo-tree-id204 . -15) (undo-tree-id205 . -16) (undo-tree-id206 . -16) (undo-tree-id207 . -16) (t 26710 26481 611393 907000)) ((26568 . 26584)) (26710 27040 160627 182000) 0 nil] [nil nil ((26591 . 26597) (#("-" 0 1 (fontified nil)) . 26591) (26584 . 26592) (t 26710 26408 888894 213000)) ((#("\\vspace-" 0 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil)) . 26584) (undo-tree-id168 . -7) (undo-tree-id169 . -7) (undo-tree-id170 . -7) (undo-tree-id171 . -7) (undo-tree-id172 . -7) (undo-tree-id173 . -7) (undo-tree-id174 . -7) (undo-tree-id175 . -7) (undo-tree-id176 . -7) (undo-tree-id177 . -7) (undo-tree-id178 . -7) (undo-tree-id179 . -7) (undo-tree-id180 . -7) (undo-tree-id181 . -7) (undo-tree-id182 . -7) (undo-tree-id183 . -7) (undo-tree-id184 . -7) (undo-tree-id185 . -7) (undo-tree-id186 . -7) (undo-tree-id187 . -7) (undo-tree-id188 . -7) (undo-tree-id189 . -7) (undo-tree-id190 . -7) (undo-tree-id191 . -7) (undo-tree-id192 . -7) (undo-tree-id193 . -7) (26591 . 26592) (#("(-1em}" 0 1 (fontified t) 1 6 (fontified t)) . 26591) (undo-tree-id194 . -3)) (26710 26480 308247 865000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image31}
	\\caption*{}
\\end{figure}


\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image32}
	\\caption*{}
\\end{figure}


{\\bfseries Рис.1 - Оригинальное изображение}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 116 (fontified t) 116 122 (face font-lock-keyword-face fontified t) 122 123 (fontified t latex-env-pair t) 123 129 (face font-lock-function-name-face fontified t latex-env-pair t) 129 130 (fontified t latex-env-pair t) 130 135 (fontified t) 135 145 (face font-lock-keyword-face fontified t) 145 147 (fontified t) 147 163 (face font-lock-keyword-face fontified t) 163 173 (fontified t) 173 183 (face font-lock-keyword-face fontified t) 183 185 (fontified t) 185 202 (face font-lock-builtin-face fontified t) 202 205 (fontified t) 205 214 (face font-lock-keyword-face fontified t) 214 217 (fontified t) 217 221 (face font-lock-keyword-face fontified t) 221 222 (fontified t latex-env-pair t) 222 228 (face font-lock-function-name-face fontified t latex-env-pair t) 228 229 (fontified t latex-env-pair t) 229 233 (fontified t) 233 242 (face font-lock-keyword-face fontified t) 242 275 (face (bold) fontified t) 275 277 (fontified t)) . 34844) (undo-tree-id310 . -239) (undo-tree-id311 . -7) (undo-tree-id312 . -239) (undo-tree-id313 . -276) (undo-tree-id314 . -239) 35083 (t 26710 29880 790010 287000)) nil (26710 29940 616147 997000) 0 nil])
([nil nil ((#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 20 (fontified t) 20 21 (fontified t)) . 26796) (undo-tree-id201 . -20) (undo-tree-id202 . -20) (undo-tree-id203 . -20)) ((26796 . 26817)) (26710 27039 920669 186000) 0 nil])
([nil nil ((26591 . 26592) (#("(" 0 1 (fontified t)) . 26591)) ((26591 . 26592) (#("{" 0 1 (fontified t)) . 26591)) (26710 26479 953351 762000) 0 nil] [nil nil ((nil rear-nonsticky nil 26824 . 26825) (#("
" 0 1 (fontified nil)) . -26838) (26824 . 26839)) ((#("
\\vspace(-1em}
" 0 1 (fontified nil rear-nonsticky nil) 1 8 (face font-lock-keyword-face fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 14 (fontified nil) 14 15 (fontified nil)) . 26824) (undo-tree-id47 . -10) (undo-tree-id48 . -9) (undo-tree-id49 . -1) (undo-tree-id50 . -10) (undo-tree-id51 . -10) (undo-tree-id52 . -10) (undo-tree-id53 . -10) (undo-tree-id54 . -10) (undo-tree-id55 . -10) (undo-tree-id56 . -10) (undo-tree-id57 . -10) (undo-tree-id58 . -9) (undo-tree-id59 . -10) (26838 . 26839) (nil rear-nonsticky t 26824 . 26825)) (26710 26406 31573 566000) 0 nil] [nil nil ((nil rear-nonsticky nil 26845 . 26846) (#("
" 0 1 (fontified nil)) . -26859) (26845 . 26860) 26837) ((#("
\\vspace(-1em}
" 0 1 (rear-nonsticky nil fontified nil) 1 8 (face font-lock-keyword-face fontified nil) 8 14 (fontified nil) 14 15 (fontified nil)) . 26845) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -14) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (26859 . 26860) (nil rear-nonsticky t 26845 . 26846)) (26710 26375 810521 901000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35201 . 35202) (nil fontified nil 34843 . 35202) (34843 . 35202)) nil (26710 29940 616136 115000) 0 nil])
([nil nil ((26571 . 26580) (#("m" 0 1 (face font-lock-keyword-face fontified t)) . -26571) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (#("u" 0 1 (face font-lock-keyword-face fontified t)) . -26572) (undo-tree-id200 . -1) 26573 (26568 . 26573)) ((#("\\comu" 0 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 26568) (26571 . 26573) (#("lumnbreak" 0 9 (face font-lock-keyword-face fontified t)) . 26571)) (26710 27039 774823 12000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26824 . 26825) (#("
" 0 1 (fontified nil)) . -26838) (26824 . 26839)) ((#("
\\vspace{-1em}
" 0 1 (rear-nonsticky nil fontified nil) 1 8 (face font-lock-keyword-face fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 14 (fontified nil) 14 15 (fontified nil)) . 26824) (undo-tree-id65 . -9) (undo-tree-id66 . -9) (undo-tree-id67 . -9) (undo-tree-id68 . -9) (undo-tree-id69 . -9) (undo-tree-id70 . -9) (undo-tree-id71 . -9) (undo-tree-id72 . -9) (undo-tree-id73 . -9) (undo-tree-id74 . -9) (undo-tree-id75 . -9) (undo-tree-id76 . -9) (undo-tree-id77 . -9) (undo-tree-id78 . -9) (undo-tree-id79 . -9) (undo-tree-id80 . -9) (undo-tree-id81 . -9) (undo-tree-id82 . -9) (undo-tree-id83 . -9) (undo-tree-id84 . -9) (undo-tree-id85 . -9) (undo-tree-id86 . -9) (undo-tree-id87 . -9) (undo-tree-id88 . -9) (undo-tree-id89 . -9) (undo-tree-id90 . -9) (undo-tree-id91 . -9) (undo-tree-id92 . -9) (undo-tree-id93 . -9) (undo-tree-id94 . -9) (undo-tree-id95 . -9) (undo-tree-id96 . -9) (undo-tree-id97 . -9) (undo-tree-id98 . -9) (undo-tree-id99 . -9) (undo-tree-id100 . -9) (undo-tree-id101 . -9) (undo-tree-id102 . -9) (undo-tree-id103 . -9) (undo-tree-id104 . -9) (undo-tree-id105 . -9) (undo-tree-id106 . -9) (undo-tree-id107 . -9) (undo-tree-id108 . -9) (undo-tree-id109 . -9) (undo-tree-id110 . -9) (undo-tree-id111 . -9) (undo-tree-id112 . -9) (undo-tree-id113 . -9) (undo-tree-id114 . -9) (undo-tree-id115 . -9) (undo-tree-id116 . -9) (undo-tree-id117 . -9) (undo-tree-id118 . -9) (undo-tree-id119 . -9) (undo-tree-id120 . -9) (undo-tree-id121 . -9) (undo-tree-id122 . -9) (undo-tree-id123 . -9) (undo-tree-id124 . -9) (undo-tree-id125 . -9) (undo-tree-id126 . -9) (undo-tree-id127 . -9) (undo-tree-id128 . -9) (undo-tree-id129 . -9) (undo-tree-id130 . -9) (undo-tree-id131 . -9) (undo-tree-id132 . -9) (undo-tree-id133 . -9) (undo-tree-id134 . -9) (undo-tree-id135 . -9) (undo-tree-id136 . -9) (undo-tree-id137 . -9) (undo-tree-id138 . -9) (undo-tree-id139 . -9) (undo-tree-id140 . -9) (undo-tree-id141 . -9) (undo-tree-id142 . -9) (undo-tree-id143 . -9) (undo-tree-id144 . -9) (undo-tree-id145 . -9) (undo-tree-id146 . -9) (undo-tree-id147 . -9) (undo-tree-id148 . -9) (undo-tree-id149 . -9) (undo-tree-id150 . -9) (undo-tree-id151 . -9) (undo-tree-id152 . -9) (undo-tree-id153 . -9) (undo-tree-id154 . -9) (undo-tree-id155 . -9) (undo-tree-id156 . -9) (undo-tree-id157 . -9) (undo-tree-id158 . -9) (undo-tree-id159 . -9) (undo-tree-id160 . -9) (undo-tree-id161 . -9) (undo-tree-id162 . -9) (undo-tree-id163 . -9) (undo-tree-id164 . -9) (undo-tree-id165 . -9) (undo-tree-id166 . -9) (undo-tree-id167 . -9) (26838 . 26839) (nil rear-nonsticky t 26824 . 26825)) (26710 26479 737349 561000) 0 nil])
([nil nil ((26834 . 26835) (#("1" 0 1 (fontified t)) . 26834)) ((26834 . 26835) (#("2" 0 1 (fontified t)) . 26834)) (26710 26403 759556 137000) 0 nil])
nil
([nil nil ((#("   \\hfill
" 0 3 (fontified t) 3 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t)) . 35004) (undo-tree-id315 . -9) (undo-tree-id316 . -8) (undo-tree-id317 . -8) (undo-tree-id318 . -8) (undo-tree-id319 . -8) (undo-tree-id320 . -8) (undo-tree-id321 . -8) (undo-tree-id322 . -8) (undo-tree-id323 . -8) (undo-tree-id324 . -8) (undo-tree-id325 . -8) (undo-tree-id326 . -8) (undo-tree-id327 . -8) (undo-tree-id328 . -8) (undo-tree-id329 . -8) (undo-tree-id330 . -8) (undo-tree-id331 . -8) (undo-tree-id332 . -8) (undo-tree-id333 . -8) (undo-tree-id334 . -8) (undo-tree-id335 . -8) (undo-tree-id336 . -8) (undo-tree-id337 . -8) (undo-tree-id338 . -8) (undo-tree-id339 . -8) (undo-tree-id340 . -10) 35012 (t 26710 29940 618598 790000)) nil (26710 29959 356298 886000) 0 nil])
([nil nil ((26810 . 26819) (#("m" 0 1 (fontified nil)) . -26810) (#("u" 0 1 (fontified nil)) . -26811) 26812 (26807 . 26812)) ((#("\\comu" 0 3 (face font-lock-keyword-face fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 26807) (undo-tree-id215 . -3) (undo-tree-id216 . -3) (undo-tree-id217 . -3) (undo-tree-id218 . -3) (undo-tree-id219 . -3) (undo-tree-id220 . -3) (undo-tree-id221 . -3) (undo-tree-id222 . -3) (undo-tree-id223 . -3) (undo-tree-id224 . -3) (undo-tree-id225 . -3) (undo-tree-id226 . -3) (undo-tree-id227 . -3) (undo-tree-id228 . -3) (undo-tree-id229 . -3) (undo-tree-id230 . -3) (undo-tree-id231 . -3) (undo-tree-id232 . -3) (undo-tree-id233 . -3) (undo-tree-id234 . -3) (undo-tree-id235 . -3) (undo-tree-id236 . -3) (undo-tree-id237 . -3) (undo-tree-id238 . -3) (undo-tree-id239 . -3) (undo-tree-id240 . -3) (undo-tree-id241 . -3) (undo-tree-id242 . -3) (undo-tree-id243 . -3) (undo-tree-id244 . -3) (undo-tree-id245 . -3) (undo-tree-id246 . -3) (undo-tree-id247 . -3) (undo-tree-id248 . -3) (undo-tree-id249 . -3) (undo-tree-id250 . -3) (undo-tree-id251 . -3) (undo-tree-id252 . -3) (undo-tree-id253 . -3) (undo-tree-id254 . -3) (undo-tree-id255 . -3) (undo-tree-id256 . -3) (26810 . 26812) (#("lumnbreak" 0 9 (face font-lock-keyword-face fontified t)) . 26810) (undo-tree-id257 . -8) (undo-tree-id258 . -9) (undo-tree-id259 . -9) (undo-tree-id260 . -8) (undo-tree-id261 . -9) (undo-tree-id262 . -9) (undo-tree-id263 . -8) (undo-tree-id264 . -8) (undo-tree-id265 . -8) (undo-tree-id266 . -8) (undo-tree-id267 . -8) (undo-tree-id268 . -8) (undo-tree-id269 . -8) (undo-tree-id270 . -8) (undo-tree-id271 . -8) (undo-tree-id272 . -8) (undo-tree-id273 . -8) (undo-tree-id274 . -8) (undo-tree-id275 . -8) (undo-tree-id276 . -8) (undo-tree-id277 . -8) (undo-tree-id278 . -8) (undo-tree-id279 . -8) (undo-tree-id280 . -8) (undo-tree-id281 . -8) (undo-tree-id282 . -8) (undo-tree-id283 . -8) (undo-tree-id284 . -8) (undo-tree-id285 . -8) (undo-tree-id286 . -8) (undo-tree-id287 . -8) (undo-tree-id288 . -8) (undo-tree-id289 . -8) (undo-tree-id290 . -8) (undo-tree-id291 . -8) (undo-tree-id292 . -8) (undo-tree-id293 . -8) (undo-tree-id294 . -8) (undo-tree-id295 . -8) (undo-tree-id296 . -9) (undo-tree-id297 . -8) (undo-tree-id298 . -8) (t 26710 26920 475374 767000)) (26710 26919 778558 17000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 26824)) ((26824 . 26825)) (26710 26479 359227 346000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 26833) (undo-tree-id9 . -1) (undo-tree-id11 . -1) (undo-tree-id13 . -1) (undo-tree-id15 . -1) (undo-tree-id17 . -1) (undo-tree-id19 . -1) (undo-tree-id21 . -1) (undo-tree-id23 . -1) (undo-tree-id25 . -1) (undo-tree-id27 . -1) (undo-tree-id29 . -1) (undo-tree-id31 . -1) (undo-tree-id33 . -1) (undo-tree-id35 . -1) (undo-tree-id37 . -1) (undo-tree-id39 . -1) (undo-tree-id41 . -1) (undo-tree-id43 . -1)) ((26833 . 26834)) (26710 26403 289725 376000) 0 nil])
([nil nil ((34978 . 34982) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -34978) (undo-tree-id342 . -1) (34967 . 34979) (#("i" 0 1 (fontified nil)) . -34967) (undo-tree-id343 . -1) (34965 . 34968) (#(" " 0 1 (fontified t)) . -34965) (undo-tree-id344 . -1) 34966 (34964 . 34966) (t 26710 29959 359469 866000)) nil (26710 29971 313404 499000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26819 . 26820) (#("
" 0 1 (fontified nil)) . -26840) (26819 . 26841) 26818) ((#("
\\begin{multicols}{2}
" 0 1 (fontified nil rear-nonsticky nil) 1 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil latex-env-pair t) 8 17 (face font-lock-function-name-face fontified nil latex-env-pair t) 17 18 (fontified nil latex-env-pair t) 18 21 (fontified nil) 21 22 (fontified nil)) . 26819) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -21) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (26840 . 26841) (nil rear-nonsticky t 26819 . 26820)) (26710 26919 778379 714000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 26832) (undo-tree-id64 . -1)) ((26832 . 26833)) (26710 26479 188518 982000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 26824) (t 26710 26378 952100 157000)) ((26824 . 26825) (t 26710 26379 735094 771000)) (26710 26379 731647 552000) 0 nil])
([nil nil ((35112 . 35129) (#(" " 0 1 (face font-lock-keyword-face fontified nil)) . -35112) (undo-tree-id341 . -1) 35113 (35111 . 35113)) nil (26710 29971 313399 229000) 0 nil])
nil
([nil nil ((26832 . 26833) (#("1" 0 1 (fontified t)) . 26832)) ((26832 . 26833) (#("2" 0 1 (fontified t)) . 26832) (t 26710 26420 652813 281000)) (26710 26420 650004 675000) 0 nil])
nil
([nil nil ((#("Этот снимок является основой для дальнейшего анализа состояния почвы и
оценки эрозионных процессов с применением спектральных индексов. Он
предоставляет исходные данные, которые затем обрабатываются для
выявления признаков эрозии.

" 0 49 (fontified t) 49 71 (fontified t) 71 232 (fontified t)) . 35251) (undo-tree-id345 . -231) (undo-tree-id346 . -54) (undo-tree-id347 . -231) (undo-tree-id348 . -231) (undo-tree-id349 . -231) 35482 (t 26710 29971 316387 609000)) nil (26710 29992 642183 286000) 0 nil])
nil
([nil nil ((34825 . 34826) 34771) nil (26710 29992 642172 857000) 0 nil])
([nil nil ((nil rear-nonsticky nil 34826 . 34827) (#("
" 0 1 (fontified nil)) . -35058) (34826 . 35059)) nil (26710 29992 642168 889000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 35058) (undo-tree-id379 . 1) (t 26710 29992 645240 878000)) nil (26710 30041 385375 568000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image33}
	\\caption*{}
\\end{figure}


\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image34}
	\\caption*{}
\\end{figure}


{\\bfseries Рис.2. - Использование метода альбедо}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 39 (face font-lock-keyword-face fontified t) 39 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 88 (fontified t) 88 89 (fontified t) 89 94 (face font-lock-keyword-face fontified t) 94 98 (fontified t face font-lock-keyword-face) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 109 (face font-lock-function-name-face fontified t latex-env-pair t) 109 110 (fontified t face font-lock-function-name-face latex-env-pair t) 110 112 (fontified t face font-lock-function-name-face latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t) 114 116 (fontified t) 116 122 (face font-lock-keyword-face fontified t) 122 123 (fontified t latex-env-pair t) 123 129 (face font-lock-function-name-face fontified t latex-env-pair t) 129 130 (fontified t latex-env-pair t) 130 135 (fontified t) 135 145 (face font-lock-keyword-face fontified t) 145 147 (fontified t) 147 163 (face font-lock-keyword-face fontified t) 163 173 (fontified t) 173 183 (face font-lock-keyword-face fontified t) 183 185 (fontified t) 185 202 (face font-lock-builtin-face fontified t) 202 205 (fontified t) 205 214 (face font-lock-keyword-face fontified t) 214 217 (fontified t) 217 221 (face font-lock-keyword-face fontified t) 221 222 (fontified t latex-env-pair t) 222 228 (face font-lock-function-name-face fontified t latex-env-pair t) 228 229 (fontified t latex-env-pair t) 229 233 (fontified t) 233 242 (face font-lock-keyword-face fontified t) 242 265 (face (bold) fontified t) 265 266 (face (bold) fontified t) 266 280 (face (bold) fontified t) 280 282 (fontified t)) . 36464) (undo-tree-id375 . -232) (undo-tree-id376 . -232) (undo-tree-id377 . -281) (undo-tree-id378 . -232) 36696) nil (26710 30041 385374 877000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36826 . 36827) (nil fontified nil 36463 . 36827) (36463 . 36827)) nil (26710 30041 385373 384000) 0 nil])
([nil nil ((#("   \\hfill
" 0 3 (fontified t) 3 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t)) . 36624) (undo-tree-id373 . -9) (undo-tree-id374 . -8) 36632) nil (26710 30041 385373 34000) 0 nil])
([nil nil ((36598 . 36602) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -36598) (undo-tree-id356 . -1) (36596 . 36599) (#("w" 0 1 (face font-lock-keyword-face fontified t)) . -36596) (undo-tree-id357 . -1) 36597 (36596 . 36597) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -36596) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (#(" " 0 1 (fontified t)) . -36597) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (#("i" 0 1 (fontified t)) . -36598) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (#("d" 0 1 (fontified t)) . -36599) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) 36600 (36598 . 36600) (#("i" 0 1 (fontified nil)) . -36598) (undo-tree-id370 . -1) (36587 . 36599) (#("i" 0 1 (fontified nil)) . -36587) (undo-tree-id371 . -1) (36585 . 36588) (#(" " 0 1 (fontified t)) . -36585) (undo-tree-id372 . -1) 36586 (36584 . 36586)) nil (26710 30041 385370 840000) 0 nil])
([nil nil ((36743 . 36749) (#("w" 0 1 (face font-lock-keyword-face fontified nil)) . -36743) (undo-tree-id350 . -1) 36744 (36743 . 36744) (#("t" 0 1 (face font-lock-keyword-face fontified nil)) . -36743) (undo-tree-id351 . -1) (#(" " 0 1 (face font-lock-keyword-face fontified nil)) . -36744) (undo-tree-id352 . -1) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -36745) (undo-tree-id353 . -1) (#("d" 0 1 (face font-lock-keyword-face fontified nil)) . -36746) (undo-tree-id354 . -1) 36747 (36732 . 36747) (#(" " 0 1 (face font-lock-keyword-face fontified nil)) . -36732) (undo-tree-id355 . -1) 36733 (36731 . 36733)) nil (26710 30041 385335 163000) 0 nil])
([nil nil ((#("\\end{multicols}

\\begin{figure}[H]
   \\centering
   \\begin{subfigure}{0.45\\textwidth}
   	\\centering
   	\\includegraphics[width=\\textwidth,height=\\textwidth]{media/ict/image33}
   \\end{subfigure}
   \\begin{subfigure}{0.45\\textwidth}
   	\\centering
   	\\includegraphics[width=\\textwidth,height=\\textwidth]{media/ict/image34}
   \\end{subfigure}
   \\caption*{Рис.2. - Использование метода альбедо}
\\end{figure}

\\begin{multicols}{2}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 17 (fontified t) 17 23 (face font-lock-keyword-face fontified t) 23 24 (latex-env-pair t fontified t) 24 30 (face font-lock-function-name-face latex-env-pair t fontified t) 30 31 (latex-env-pair t fontified t) 31 38 (fontified t) 38 48 (face font-lock-keyword-face fontified t) 48 52 (fontified t) 52 58 (face font-lock-keyword-face fontified t) 58 59 (latex-env-pair t fontified t) 59 68 (face font-lock-function-name-face latex-env-pair t fontified t) 68 69 (latex-env-pair t fontified t) 69 74 (fontified t) 74 84 (face font-lock-keyword-face fontified t) 84 90 (fontified t) 90 100 (face font-lock-keyword-face fontified t) 100 101 (fontified t) 101 105 (fontified t) 105 121 (face font-lock-keyword-face fontified t) 121 128 (fontified t) 128 138 (face font-lock-keyword-face fontified t) 138 146 (fontified t) 146 156 (face font-lock-keyword-face fontified t) 156 157 (fontified t) 157 158 (fontified t) 158 175 (face font-lock-builtin-face fontified t) 175 177 (fontified t) 177 180 (fontified t) 180 184 (face font-lock-keyword-face fontified t) 184 185 (fontified t latex-env-pair t) 185 194 (face font-lock-function-name-face fontified t latex-env-pair t) 194 195 (fontified t latex-env-pair t) 195 196 (fontified t) 196 199 (fontified t) 199 205 (face font-lock-keyword-face fontified t) 205 206 (fontified t latex-env-pair t) 206 215 (face font-lock-function-name-face fontified t latex-env-pair t) 215 216 (fontified t latex-env-pair t) 216 221 (fontified t) 221 231 (face font-lock-keyword-face fontified t) 231 232 (fontified t) 232 233 (fontified t) 233 237 (fontified t) 237 247 (face font-lock-keyword-face fontified t) 247 248 (fontified t) 248 252 (fontified t) 252 268 (face font-lock-keyword-face fontified t) 268 275 (fontified t) 275 285 (face font-lock-keyword-face fontified t) 285 293 (fontified t) 293 303 (face font-lock-keyword-face fontified t) 303 305 (fontified t) 305 322 (face font-lock-builtin-face fontified t) 322 324 (fontified t) 324 327 (fontified t) 327 331 (face font-lock-keyword-face fontified t) 331 332 (fontified t latex-env-pair t) 332 341 (face font-lock-function-name-face fontified t latex-env-pair t) 341 342 (fontified t latex-env-pair t) 342 346 (fontified t) 346 355 (face font-lock-keyword-face fontified t) 355 395 (fontified t) 395 399 (face font-lock-keyword-face fontified t) 399 400 (fontified t latex-env-pair t) 400 406 (face font-lock-function-name-face fontified t latex-env-pair t) 406 407 (fontified t latex-env-pair t rear-nonsticky t) 407 408 (fontified t) 408 409 (fontified t) 409 415 (face font-lock-keyword-face fontified t) 415 416 (fontified t latex-env-pair t) 416 425 (face font-lock-function-name-face fontified t latex-env-pair t) 425 426 (fontified t latex-env-pair t) 426 430 (fontified t)) . 36446) (undo-tree-id393 . -423) (undo-tree-id394 . -14) (undo-tree-id395 . -423) (undo-tree-id396 . -429) (undo-tree-id397 . 127) (undo-tree-id398 . -155) (undo-tree-id399 . -408) (undo-tree-id400 . -302) (undo-tree-id401 . -423) 36869 (t 26710 30041 387905 554000)) nil (26710 30059 388046 285000) 0 nil])
([nil nil ((36445 . 36446) 36393) nil (26710 30059 388043 691000) 0 nil])
([nil nil ((35462 . 35892) (#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 21 (fontified t)) . 35462) (undo-tree-id383 . -21) (undo-tree-id384 . -20) (undo-tree-id385 . -21) (undo-tree-id386 . -21) (undo-tree-id387 . -21) (undo-tree-id388 . -21) (undo-tree-id389 . -21) (undo-tree-id390 . -21) (undo-tree-id391 . -21) (undo-tree-id392 . -21) 35483) nil (26710 30059 388043 230000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 35462) (undo-tree-id381 . -15) (undo-tree-id382 . -16)) nil (26710 30059 388039 272000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 35462) (undo-tree-id380 . -1)) nil (26710 30059 388034 804000) 0 nil])
([nil nil ((#("i" 0 1 (fontified nil)) . -26584) (undo-tree-id407 . -1) (26584 . 26585) (t 26710 30059 390781 709000)) nil (26710 30104 158381 674000) 0 nil])
([nil nil ((26584 . 26585) (t 26710 30059 390781 709000)) nil (26710 30104 158380 642000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -26584) (undo-tree-id406 . -1) 26585) nil (26710 30104 158380 312000) 0 nil])
([nil nil ((26584 . 26585)) nil (26710 30104 158379 661000) 0 nil])
([nil nil ((26585 . 26586)) nil (26710 30104 158379 300000) 0 nil])
([nil nil ((26592 . 26597) (#("s" 0 1 (fontified t)) . -26592) (undo-tree-id402 . -1) (#("-" 0 1 (fontified t)) . -26593) (undo-tree-id403 . -1) 26594 (26585 . 26594) (#("{" 0 1 (face font-lock-keyword-face fontified t)) . -26585) (undo-tree-id404 . 1) (undo-tree-id405 . -1) 26586) nil (26710 30104 158376 214000) 0 nil])
([nil nil ((26824 . 26836) (t 26710 30104 165473 692000)) nil (26710 30117 788092 240000) 0 nil])
([nil nil ((26593 . 26594) (#("2" 0 1 (fontified t)) . 26593) (undo-tree-id408 . -1) (t 26710 30117 791379 954000)) nil (26710 30131 782559 521000) 0 nil])
([nil nil ((26832 . 26835) (#("*" 0 1 (fontified t)) . -26832) (undo-tree-id419 . -1) 26833 (26832 . 26833) (#("1" 0 1 (fontified t)) . -26832) (undo-tree-id420 . -1) (undo-tree-id421 . -1) 26833 (t 26710 30131 786283 664000)) nil (26710 30205 486106 571000) 0 nil])
([nil nil ((26834 . 26835) (t 26710 30180 164950 857000)) nil (26710 30209 958748 965000) 0 nil] [nil nil ((26838 . 26839) (26834 . 26838) (#("5" 0 1 (fontified t)) . -26834) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) 26835 (26834 . 26835) (t 26710 30180 164950 857000)) ((#("5" 0 1 (fontified nil)) . 26834) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (26834 . 26835) (#("5000" 0 4 (fontified nil)) . 26834) (undo-tree-id443 . -4) (undo-tree-id444 . -4) (undo-tree-id445 . -4) (#("h" 0 1 (fontified t)) . 26838)) (26710 30205 485840 944000) 0 nil] [nil nil ((26593 . 26596) (#("*" 0 1 (fontified nil)) . -26593) 26594 (26593 . 26594) (#("1" 0 1 (fontified t)) . -26593) (undo-tree-id411 . -1) (undo-tree-id413 . -1) (undo-tree-id415 . -1) (undo-tree-id417 . -1) 26594) ((26593 . 26594) (#("*" 0 1 (fontified nil)) . 26593) (26593 . 26594) (#("0.5" 0 3 (fontified t)) . 26593) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -2) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (t 26710 30169 258025 884000)) (26710 30169 255237 700000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image35}
	\\caption*{}
\\end{figure}


\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image36}
	\\caption*{}
\\end{figure}


{\\bfseries Рис.3 - Использование комбинированного метода (альбедо + оценка влажности})
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 116 (fontified t) 116 122 (face font-lock-keyword-face fontified t) 122 123 (fontified t latex-env-pair t) 123 129 (face font-lock-function-name-face fontified t latex-env-pair t) 129 130 (fontified t latex-env-pair t) 130 135 (fontified t) 135 145 (face font-lock-keyword-face fontified t) 145 147 (fontified t) 147 163 (face font-lock-keyword-face fontified t) 163 173 (fontified t) 173 183 (face font-lock-keyword-face fontified t) 183 185 (fontified t) 185 202 (face font-lock-builtin-face fontified t) 202 205 (fontified t) 205 214 (face font-lock-keyword-face fontified t) 214 217 (fontified t) 217 221 (face font-lock-keyword-face fontified t) 221 222 (fontified t latex-env-pair t) 222 228 (face font-lock-function-name-face fontified t latex-env-pair t) 228 229 (fontified t latex-env-pair t) 229 233 (fontified t) 233 242 (face font-lock-keyword-face fontified t) 242 259 (face (bold) fontified t) 259 277 (face (bold) fontified t) 277 316 (face (bold) fontified t) 316 319 (fontified t)) . 37855) (undo-tree-id457 . -232) (undo-tree-id458 . -232) (undo-tree-id459 . -318) (undo-tree-id460 . -232) 38087 (t 26710 30209 961745 887000)) nil (26710 30252 926622 588000) 0 nil])
nil
nil
([nil nil ((nil rear-nonsticky nil 38254 . 38255) (nil fontified nil 37854 . 38255) (37854 . 38255)) nil (26710 30252 926621 145000) 0 nil])
([nil nil ((#("   \\hfill
" 0 3 (fontified t) 3 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t)) . 38015) (undo-tree-id455 . -9) (undo-tree-id456 . -8) 38023) nil (26710 30252 926620 544000) 0 nil])
([nil nil ((37989 . 37993) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -37989) (undo-tree-id446 . -1) (37984 . 37990) (#("h" 0 1 (face font-lock-keyword-face fontified t)) . -37984) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -37985) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -37986) (undo-tree-id453 . -1) 37987 (37978 . 37987) (#("i" 0 1 (fontified nil)) . -37978) (undo-tree-id454 . -1) (37975 . 37979)) nil (26710 30252 926619 51000) 0 nil])
([nil nil ((38131 . 38140) (#("h" 0 1 (face font-lock-keyword-face fontified nil)) . -38131) (#("t" 0 1 (face font-lock-keyword-face fontified nil)) . -38132) (#("e" 0 1 (face font-lock-keyword-face fontified nil)) . -38133) 38134 (38122 . 38134)) nil (26710 30252 926603 743000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image37}
	\\caption*{}
\\end{figure}


\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image38}
	\\caption*{}
\\end{figure}


{\\bfseries Рис.4 - Полная сегментация, зелёные участки это норма, жёлтые
это начальная стадия, оранжевая это прогресс эрозии, красная это уже
деградированные земля то есть непригодная земля}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 116 (fontified t) 116 122 (face font-lock-keyword-face fontified t) 122 123 (fontified t latex-env-pair t) 123 129 (face font-lock-function-name-face fontified t latex-env-pair t) 129 130 (fontified t latex-env-pair t) 130 135 (fontified t) 135 145 (face font-lock-keyword-face fontified t) 145 147 (fontified t) 147 163 (face font-lock-keyword-face fontified t) 163 173 (fontified t) 173 183 (face font-lock-keyword-face fontified t) 183 185 (fontified t) 185 202 (face font-lock-builtin-face fontified t) 202 205 (fontified t) 205 214 (face font-lock-keyword-face fontified t) 214 217 (fontified t) 217 221 (face font-lock-keyword-face fontified t) 221 222 (fontified t latex-env-pair t) 222 228 (face font-lock-function-name-face fontified t latex-env-pair t) 228 229 (fontified t latex-env-pair t) 229 233 (fontified t) 233 242 (face font-lock-keyword-face fontified t) 242 421 (face (bold) fontified t) 421 423 (fontified t)) . 41503) (undo-tree-id461 . -374) (undo-tree-id462 . -374) (undo-tree-id463 . -422) (undo-tree-id464 . -374) 41877 (t 26710 30252 930450 313000)) nil (26710 30306 309200 597000) 0 nil])
([nil nil ((nil rear-nonsticky nil 42034 . 42035) (nil fontified nil 41502 . 42035) (41502 . 42035)) nil (26710 30306 309191 360000) 0 nil])
([nil nil ((41501 . 41502) 41497) nil (26710 30306 309186 862000) 0 nil])
([nil nil ((37983 . 37986) (t 26710 30306 313083 50000)) nil (26710 30335 919100 306000) 0 nil])
([nil nil ((38133 . 38136)) nil (26710 30335 919096 239000) 0 nil])
([nil nil ((41639 . 41642) (t 26710 30335 922879 365000)) nil (26710 30351 494023 652000) 0 nil])
([nil nil ((41790 . 41793)) nil (26710 30351 494020 55000) 0 nil])
([nil nil ((35766 . 35769) (t 26710 30351 496772 232000)) nil (26710 30380 515749 144000) 0 nil])
([nil nil ((35619 . 35622)) nil (26710 30380 515748 573000) 0 nil])
([nil nil ((35379 . 35382)) nil (26710 30380 515748 142000) 0 nil])
([nil nil ((35232 . 35235)) nil (26710 30380 515744 695000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image39}
	\\caption*{}
\\end{figure}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image40}
	\\caption*{}
\\end{figure}


{\\bfseries Рис.5 - Динамика изменения потерь и результат точности для обучающей и валидационной выборки}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 115 (fontified t) 115 121 (face font-lock-keyword-face fontified t) 121 122 (fontified t latex-env-pair t) 122 128 (face font-lock-function-name-face fontified t latex-env-pair t) 128 129 (fontified t latex-env-pair t) 129 134 (fontified t) 134 144 (face font-lock-keyword-face fontified t) 144 146 (fontified t) 146 162 (face font-lock-keyword-face fontified t) 162 172 (fontified t) 172 182 (face font-lock-keyword-face fontified t) 182 184 (fontified t) 184 201 (face font-lock-builtin-face fontified t) 201 204 (fontified t) 204 213 (face font-lock-keyword-face fontified t) 213 216 (fontified t) 216 220 (face font-lock-keyword-face fontified t) 220 221 (fontified t latex-env-pair t) 221 227 (face font-lock-function-name-face fontified t latex-env-pair t) 227 228 (fontified t latex-env-pair t) 228 232 (fontified t) 232 241 (face font-lock-keyword-face fontified t) 241 334 (face (bold) fontified t) 334 336 (fontified t)) . 45227) (undo-tree-id465 . -231) (undo-tree-id466 . -231) (undo-tree-id467 . -335) (undo-tree-id468 . -231) 45458 (t 26710 30380 519572 592000)) nil (26710 30460 880834 705000) 0 nil])
([nil nil ((nil rear-nonsticky nil 45677 . 45678) (nil fontified nil 45227 . 45678) (45227 . 45678)) nil (26710 30463 789536 151000) 0 nil] [nil nil ((nil rear-nonsticky nil 45676 . 45677) (nil fontified nil 45226 . 45677) (45226 . 45677)) ((#("\\begin{figure}[H]
   \\centering
   \\begin{subfigure}{0.5\\textwidth}
   	\\centering
   	\\includegraphics[width=\\textwidth, height=0.3\\textwidth]{media/ict/image39}
   \\end{subfigure}
   \\begin{subfigure}{0.4\\textwidth}
   	\\centering
   	\\includegraphics[width=\\textwidth, height=0.3\\textwidth]{media/ict/image40}
   \\end{subfigure}
   \\caption*{Рис.5 - Динамика изменения потерь и результат точности для обучающей и валидационной выборки}
\\end{figure}" 0 6 (face font-lock-keyword-face fontified nil) 6 7 (latex-env-pair t fontified nil) 7 13 (face font-lock-function-name-face latex-env-pair t fontified nil) 13 14 (latex-env-pair t fontified nil) 14 21 (fontified nil) 21 31 (face font-lock-keyword-face fontified nil) 31 35 (fontified nil) 35 41 (face font-lock-keyword-face fontified nil) 41 42 (latex-env-pair t fontified nil) 42 51 (face font-lock-function-name-face latex-env-pair t fontified nil) 51 52 (latex-env-pair t fontified nil) 52 56 (fontified nil) 56 66 (face font-lock-keyword-face fontified nil) 66 72 (fontified nil) 72 82 (face font-lock-keyword-face fontified nil) 82 87 (fontified nil) 87 103 (face font-lock-keyword-face fontified nil) 103 110 (fontified nil) 110 120 (face font-lock-keyword-face fontified nil) 120 132 (fontified nil) 132 142 (face font-lock-keyword-face fontified nil) 142 144 (fontified nil) 144 161 (face font-lock-builtin-face fontified nil) 161 166 (fontified nil) 166 170 (face font-lock-keyword-face fontified nil) 170 171 (latex-env-pair t fontified nil) 171 180 (face font-lock-function-name-face latex-env-pair t fontified nil) 180 181 (latex-env-pair t fontified nil) 181 185 (fontified nil) 185 191 (face font-lock-keyword-face fontified nil) 191 192 (latex-env-pair t fontified nil) 192 201 (face font-lock-function-name-face latex-env-pair t fontified nil) 201 202 (latex-env-pair t fontified nil) 202 206 (fontified nil) 206 216 (face font-lock-keyword-face fontified nil) 216 222 (fontified nil) 222 232 (face font-lock-keyword-face fontified nil) 232 237 (fontified nil) 237 253 (face font-lock-keyword-face fontified nil) 253 260 (fontified nil) 260 270 (face font-lock-keyword-face fontified nil) 270 282 (fontified nil) 282 292 (face font-lock-keyword-face fontified nil) 292 294 (fontified nil) 294 311 (face font-lock-builtin-face fontified nil) 311 316 (fontified nil) 316 320 (face font-lock-keyword-face fontified nil) 320 321 (latex-env-pair t fontified nil) 321 330 (face font-lock-function-name-face latex-env-pair t fontified nil) 330 331 (latex-env-pair t fontified nil) 331 335 (fontified nil) 335 344 (face font-lock-keyword-face fontified nil) 344 439 (fontified nil) 439 443 (face font-lock-keyword-face fontified nil) 443 444 (latex-env-pair t fontified nil) 444 450 (face font-lock-function-name-face latex-env-pair t fontified nil) 450 451 (latex-env-pair t rear-nonsticky nil fontified nil)) . 45226) (undo-tree-id469 . -450) (undo-tree-id470 . -450) (undo-tree-id471 . -439) (undo-tree-id472 . -450) (undo-tree-id473 . -450) (nil fontified t 45570 . 45665) (nil fontified t 45561 . 45570) (nil fontified t 45557 . 45561) (nil fontified t 45556 . 45557) (nil fontified t 45547 . 45556) (nil fontified t 45546 . 45547) (nil fontified t 45542 . 45546) (nil fontified t 45537 . 45542) (nil fontified t 45520 . 45537) (nil fontified t 45518 . 45520) (nil fontified t 45508 . 45518) (nil fontified t 45496 . 45508) (nil fontified t 45486 . 45496) (nil fontified t 45479 . 45486) (nil fontified t 45463 . 45479) (nil fontified t 45458 . 45463) (nil fontified t 45448 . 45458) (nil fontified t 45442 . 45448) (nil fontified t 45432 . 45442) (nil fontified t 45428 . 45432) (nil fontified t 45427 . 45428) (nil fontified t 45418 . 45427) (nil fontified t 45417 . 45418) (nil fontified t 45411 . 45417) (nil fontified t 45407 . 45411) (nil fontified t 45406 . 45407) (nil fontified t 45397 . 45406) (nil fontified t 45396 . 45397) (nil fontified t 45392 . 45396) (nil fontified t 45387 . 45392) (nil fontified t 45370 . 45387) (nil fontified t 45368 . 45370) (nil fontified t 45358 . 45368) (nil fontified t 45346 . 45358) (nil fontified t 45336 . 45346) (nil fontified t 45329 . 45336) (nil fontified t 45313 . 45329) (nil fontified t 45308 . 45313) (nil fontified t 45298 . 45308) (nil fontified t 45292 . 45298) (nil fontified t 45282 . 45292) (nil fontified t 45278 . 45282) (nil fontified t 45277 . 45278) (nil fontified t 45268 . 45277) (nil fontified t 45267 . 45268) (nil fontified t 45261 . 45267) (nil fontified t 45257 . 45261) (nil fontified t 45247 . 45257) (nil fontified t 45240 . 45247) (nil fontified t 45239 . 45240) (nil fontified t 45233 . 45239) (nil fontified t 45232 . 45233) (nil fontified t 45226 . 45232) (nil rear-nonsticky t 45676 . 45677)) (26710 30460 880651 72000) 0 nil])
([nil nil ((45699 . 45700) 45690) nil (26710 30463 789649 603000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 45700) (undo-tree-id482 . 1) (undo-tree-id483 . -1)) nil (26710 30465 582774 510000) 0 nil] [nil nil ((#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 20 (fontified t) 20 21 (fontified t)) . 45679) (undo-tree-id474 . -20) (undo-tree-id475 . -21) (undo-tree-id476 . -21) (undo-tree-id477 . -21) (undo-tree-id478 . -21) (undo-tree-id479 . -21) (undo-tree-id480 . -21) (undo-tree-id481 . -21) 45700) ((45679 . 45700)) (26710 30463 789533 216000) 0 nil])
([nil nil ((nil rear-nonsticky nil 45678 . 45679) (#("
" 0 1 (fontified nil)) . -45679) (45678 . 45680) 45666) nil (26710 30465 582762 958000) 0 nil])
nil
([nil nil ((45508 . 45509) (#("6" 0 1 (fontified t)) . 45508) (undo-tree-id485 . -1) (45508 . 45509) (#("3" 0 1 (fontified t)) . 45508) (undo-tree-id486 . -1) (t 26710 30465 587987 288000)) nil (26710 30610 563739 73000) 0 nil])
([nil nil ((45358 . 45359) (#("3" 0 1 (fontified t)) . 45358) (undo-tree-id484 . -1)) nil (26710 30610 563734 134000) 0 nil])
([nil nil ((45433 . 45434) (t 26710 30610 566989 980000)) nil (26710 30629 900347 761000) 0 nil])
([nil current ((45282 . 45283)) nil (26710 30629 900343 893000) 0 nil])
nil
