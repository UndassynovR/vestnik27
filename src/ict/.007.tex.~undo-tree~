(undo-tree-save-format-version . 1)
"a69ab7c4d1d35d48727b976379a6e0e8bd83072b"
[nil nil nil nil (26710 45724 662839 947000) 0 nil]
([nil nil ((#("д" 0 1 (face (bold) fontified t)) . 3809) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (t 26707 60558 685110 604000)) nil (26710 45726 300434 485000) 0 nil] [nil nil ((#("Т" 0 1 (face (bold) fontified t)) . 3804) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (t 26707 60558 685110 604000)) ((3804 . 3805)) (26710 45724 662637 328000) 0 nil])
([nil nil ((#("і" 0 1 (face (bold) fontified t)) . 3809) (undo-tree-id2 . -1) (undo-tree-id3 . -1)) nil (26710 45726 300430 888000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 11658) (t 26710 45726 302059 953000)) nil (26710 45794 834449 35000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 11735) (11736 . 11737) 11735) nil (26710 45794 834448 484000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 11811) (11812 . 11813) 11811) nil (26710 45794 834447 863000) 0 nil])
([nil nil ((nil fontified t 11811 . 11812) (#("2" 0 1 (fontified t)) . 11811) (11812 . 11813) 11811) nil (26710 45815 441103 713000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11990)) ((11990 . 11991) (t 26710 45796 68618 251000)) (26710 45816 432218 282000) 0 nil])
([nil nil ((#("%% \\begin{longtable}[]{@{}
%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 2\\tabcolsep) * \\real{0.9463}}
%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 2\\tabcolsep) * \\real{0.0537}}@{}}
%% \\toprule\\noalign{}
%% \\begin{minipage}[b]{\\linewidth}\\centering
%% 
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% (1)
%% \\end{minipage} \\\\
%% \\midrule\\noalign{}
%% \\endhead
%% \\bottomrule\\noalign{}
%% \\endlastfoot
%% \\end{longtable}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 20 (face font-lock-comment-face fontified t latex-env-pair t) 20 27 (face font-lock-comment-face fontified t) 27 32 (face font-lock-comment-delimiter-face fontified t) 32 107 (face font-lock-comment-face fontified t) 107 108 (face font-lock-comment-face fontified t) 108 113 (face font-lock-comment-delimiter-face fontified t) 113 192 (face font-lock-comment-face fontified t) 192 193 (face font-lock-comment-face fontified t) 193 196 (face font-lock-comment-delimiter-face fontified t) 196 214 (face font-lock-comment-face fontified t) 214 215 (face font-lock-comment-face fontified t) 215 218 (face font-lock-comment-delimiter-face fontified t) 218 224 (face font-lock-comment-face fontified t) 224 234 (face font-lock-comment-face fontified t latex-env-pair t) 234 259 (face font-lock-comment-face fontified t) 259 260 (face font-lock-comment-face fontified t) 260 263 (face font-lock-comment-delimiter-face fontified t) 263 264 (face font-lock-comment-face fontified t) 264 267 (face font-lock-comment-delimiter-face fontified t) 267 271 (face font-lock-comment-face fontified t) 271 281 (face font-lock-comment-face fontified t latex-env-pair t) 281 290 (face font-lock-comment-face fontified t) 290 300 (face font-lock-comment-face fontified t latex-env-pair t) 300 326 (face font-lock-comment-face fontified t) 326 329 (face font-lock-comment-delimiter-face fontified t) 329 333 (face font-lock-comment-face fontified t) 333 336 (face font-lock-comment-delimiter-face fontified t) 336 340 (face font-lock-comment-face fontified t) 340 350 (face font-lock-comment-face fontified t latex-env-pair t) 350 354 (face font-lock-comment-face fontified t) 354 357 (face font-lock-comment-delimiter-face fontified t) 357 376 (face font-lock-comment-face fontified t) 376 379 (face font-lock-comment-delimiter-face fontified t) 379 388 (face font-lock-comment-face fontified t) 388 391 (face font-lock-comment-delimiter-face fontified t) 391 413 (face font-lock-comment-face fontified t) 413 416 (face font-lock-comment-delimiter-face fontified t) 416 429 (face font-lock-comment-face fontified t) 429 432 (face font-lock-comment-delimiter-face fontified t) 432 436 (face font-lock-comment-face fontified t) 436 447 (face font-lock-comment-face fontified t latex-env-pair t) 447 448 (face font-lock-comment-face fontified t)) . 12446) (undo-tree-id253 . -429) (undo-tree-id254 . -447) (undo-tree-id255 . -193) (undo-tree-id256 . -193) (undo-tree-id257 . -193) (undo-tree-id258 . -193) (undo-tree-id259 . -193) (undo-tree-id260 . -193) (undo-tree-id261 . -193) (undo-tree-id262 . -193) (undo-tree-id263 . -193) (undo-tree-id264 . -193) (undo-tree-id265 . -193) (undo-tree-id266 . -193) (undo-tree-id267 . -193) (undo-tree-id268 . -193) (undo-tree-id269 . -193) (undo-tree-id270 . -193) (undo-tree-id271 . -193) (undo-tree-id272 . -193) (undo-tree-id273 . -193) (undo-tree-id274 . -193) (undo-tree-id275 . -193) (undo-tree-id276 . -193) (undo-tree-id277 . -193) (undo-tree-id278 . -193) (undo-tree-id279 . -193) (undo-tree-id280 . -193) (undo-tree-id281 . -193) (undo-tree-id282 . -193) (undo-tree-id283 . -193) (undo-tree-id284 . -193) (undo-tree-id285 . -193) (undo-tree-id286 . -193) (undo-tree-id287 . -193) (undo-tree-id288 . -193) (undo-tree-id289 . -193) (undo-tree-id290 . -193) (undo-tree-id291 . -193) (undo-tree-id292 . -193) (undo-tree-id293 . -193) (undo-tree-id294 . -193) (undo-tree-id295 . -193) (undo-tree-id296 . -193) (undo-tree-id297 . -193) (undo-tree-id298 . -193) (undo-tree-id299 . -193) (undo-tree-id300 . -193) (undo-tree-id301 . -193) (undo-tree-id302 . -193) (undo-tree-id303 . -193) (undo-tree-id304 . -193) (undo-tree-id305 . -193) (undo-tree-id306 . -193) (undo-tree-id307 . -193) (undo-tree-id308 . -193) (undo-tree-id309 . -193) (undo-tree-id310 . -193) (undo-tree-id311 . -193) (undo-tree-id312 . -193) (undo-tree-id313 . -193) (undo-tree-id314 . -193) (undo-tree-id315 . -193) (undo-tree-id316 . -193) (undo-tree-id317 . -193) (undo-tree-id318 . -193) (undo-tree-id319 . -193) (undo-tree-id320 . -193) (undo-tree-id321 . -193) (undo-tree-id322 . -193) (undo-tree-id323 . -193) (undo-tree-id324 . -193) (undo-tree-id325 . -193) (undo-tree-id326 . -193) (undo-tree-id327 . -193) (undo-tree-id328 . -193) (undo-tree-id329 . -193) (undo-tree-id330 . -193) (undo-tree-id331 . -193) (undo-tree-id332 . -193) (undo-tree-id333 . -193) (undo-tree-id334 . -193) (undo-tree-id335 . -193) (undo-tree-id336 . -193) (undo-tree-id337 . -193) (undo-tree-id338 . -193) (undo-tree-id339 . -193) (undo-tree-id340 . -193) (undo-tree-id341 . -193) (undo-tree-id342 . -193) (undo-tree-id343 . -193) (undo-tree-id344 . -193) (undo-tree-id345 . -193) (undo-tree-id346 . -108) (undo-tree-id347 . -108) (undo-tree-id348 . -108) (undo-tree-id349 . -108) (undo-tree-id350 . -108) (undo-tree-id351 . -108) (undo-tree-id352 . -108) (undo-tree-id353 . -108) (undo-tree-id354 . -108) (undo-tree-id355 . -108) (undo-tree-id356 . -27) (undo-tree-id357 . -27) (undo-tree-id358 . -27) (undo-tree-id359 . -27) (undo-tree-id360 . -27) (undo-tree-id361 . -107) (undo-tree-id362 . -192) (undo-tree-id363 . -429) (undo-tree-id364 . -193) (undo-tree-id365 . -448) (t 26710 45796 68618 251000)) nil (26710 45868 301139 196000) 0 nil] [nil nil ((#("%% \\begin{longtable}[]{@{}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 20 (face font-lock-comment-face fontified t latex-env-pair t) 20 27 (face font-lock-comment-face fontified t)) . 12446) (undo-tree-id116 . -26) (undo-tree-id117 . -27) (undo-tree-id118 . -27) (undo-tree-id119 . -27) (undo-tree-id120 . -27) (undo-tree-id121 . -27) (undo-tree-id122 . -27) (t 26710 45796 68618 251000)) ((12446 . 12473)) (26710 45806 713094 841000) 0 nil])
([nil nil ((12445 . 12446) 12445) nil (26710 45868 301103 530000) 0 nil])
([nil nil ((#("%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 2\\tabcolsep) * \\real{0.9463}}
" 0 5 (face font-lock-comment-delimiter-face fontified t) 5 80 (face font-lock-comment-face fontified t) 80 81 (face font-lock-comment-face fontified t)) . 12446) (undo-tree-id103 . -80) (undo-tree-id104 . -81) (undo-tree-id105 . -81) (undo-tree-id106 . -81) (undo-tree-id107 . -81) (undo-tree-id108 . -81) (undo-tree-id109 . -81) (undo-tree-id110 . -81) (undo-tree-id111 . -81) (undo-tree-id112 . -81) (undo-tree-id113 . -81) (undo-tree-id114 . -80) (undo-tree-id115 . -81)) ((12446 . 12527)) (26710 45806 543179 624000) 0 nil])
([nil nil ((12446 . 12463) (12447 . 12462)) nil (26710 45868 301103 139000) 0 nil])
([nil nil ((#("%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 2\\tabcolsep) * \\real{0.0537}}@{}}
" 0 5 (face font-lock-comment-delimiter-face fontified t) 5 84 (face font-lock-comment-face fontified t) 84 85 (face font-lock-comment-face fontified t)) . 12446) (undo-tree-id8 . -84) (undo-tree-id9 . -85) (undo-tree-id10 . -85) (undo-tree-id11 . -85) (undo-tree-id12 . -85) (undo-tree-id13 . -85) (undo-tree-id14 . -85) (undo-tree-id15 . -85) (undo-tree-id16 . -85) (undo-tree-id17 . -85) (undo-tree-id18 . -85) (undo-tree-id19 . -85) (undo-tree-id20 . -85) (undo-tree-id21 . -85) (undo-tree-id22 . -85) (undo-tree-id23 . -85) (undo-tree-id24 . -85) (undo-tree-id25 . -85) (undo-tree-id26 . -85) (undo-tree-id27 . -85) (undo-tree-id28 . -85) (undo-tree-id29 . -85) (undo-tree-id30 . -85) (undo-tree-id31 . -85) (undo-tree-id32 . -85) (undo-tree-id33 . -85) (undo-tree-id34 . -85) (undo-tree-id35 . -85) (undo-tree-id36 . -85) (undo-tree-id37 . -85) (undo-tree-id38 . -85) (undo-tree-id39 . -85) (undo-tree-id40 . -85) (undo-tree-id41 . -85) (undo-tree-id42 . -85) (undo-tree-id43 . -85) (undo-tree-id44 . -85) (undo-tree-id45 . -85) (undo-tree-id46 . -85) (undo-tree-id47 . -85) (undo-tree-id48 . -85) (undo-tree-id49 . -85) (undo-tree-id50 . -85) (undo-tree-id51 . -85) (undo-tree-id52 . -85) (undo-tree-id53 . -85) (undo-tree-id54 . -85) (undo-tree-id55 . -85) (undo-tree-id56 . -85) (undo-tree-id57 . -85) (undo-tree-id58 . -85) (undo-tree-id59 . -85) (undo-tree-id60 . -85) (undo-tree-id61 . -85) (undo-tree-id62 . -85) (undo-tree-id63 . -85) (undo-tree-id64 . -85) (undo-tree-id65 . -85) (undo-tree-id66 . -85) (undo-tree-id67 . -85) (undo-tree-id68 . -85) (undo-tree-id69 . -85) (undo-tree-id70 . -85) (undo-tree-id71 . -85) (undo-tree-id72 . -85) (undo-tree-id73 . -85) (undo-tree-id74 . -85) (undo-tree-id75 . -85) (undo-tree-id76 . -85) (undo-tree-id77 . -85) (undo-tree-id78 . -85) (undo-tree-id79 . -85) (undo-tree-id80 . -85) (undo-tree-id81 . -85) (undo-tree-id82 . -85) (undo-tree-id83 . -85) (undo-tree-id84 . -85) (undo-tree-id85 . -85) (undo-tree-id86 . -85) (undo-tree-id87 . -85) (undo-tree-id88 . -85) (undo-tree-id89 . -85) (undo-tree-id90 . -85) (undo-tree-id91 . -85) (undo-tree-id92 . -85) (undo-tree-id93 . -85) (undo-tree-id94 . -85) (undo-tree-id95 . -85) (undo-tree-id96 . -85) (undo-tree-id97 . -85) (undo-tree-id98 . -85) (undo-tree-id99 . -85) (undo-tree-id100 . -84) (undo-tree-id101 . -85) (undo-tree-id102 . -85)) ((12446 . 12531)) (26710 45806 388993 50000) 0 nil])
([nil nil ((12491 . 12494) (#(")" 0 1 (face (superscript) display (raise 0.2) fontified t)) . -12491) (undo-tree-id123 . -1) 12492 (12490 . 12492) (12488 . 12490) (#("j" 0 1 (fontified t)) . -12488) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) 12489 (12486 . 12489) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -12486) (undo-tree-id127 . -1) (12477 . 12487) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -12477) (undo-tree-id128 . -1) (12477 . 12478) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -12477) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -12478) (undo-tree-id132 . -1) (#("_" 0 1 (fontified t)) . -12479) (undo-tree-id133 . -1) 12480 (12478 . 12480) (12477 . 12478) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -12477) (undo-tree-id134 . -1) (12463 . 12478) (12463 . 12464) (#("
" 0 1 (fontified t)) . 12463) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . 1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . 1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1)) nil (26710 45868 301097 809000) 0 nil])
([nil nil ((#("%% \\toprule\\noalign{}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 21 (face font-lock-comment-face fontified t) 21 22 (face font-lock-comment-face fontified t)) . 12446) (undo-tree-id7 . -21)) ((12446 . 12468)) (26710 45806 388816 761000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 12429) (undo-tree-id366 . -15) (undo-tree-id367 . -14) 12443 (t 26710 45868 303174 555000)) nil (26710 45883 286558 873000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 12695 . 12696) (#("
" 0 1 (fontified nil)) . -12711) (12695 . 12712) 12638) nil (26710 45883 286540 328000) 0 nil])
([nil nil ((#("%% \\begin{longtable}[]{@{}
%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 2\\tabcolsep) * \\real{0.9470}}
%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 2\\tabcolsep) * \\real{0.0530}}@{}}
%% \\toprule\\noalign{}
%% \\begin{minipage}[b]{\\linewidth}\\centering
%% 
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% (2)
%% \\end{minipage} \\\\
%% \\midrule\\noalign{}
%% \\endhead
%% \\bottomrule\\noalign{}
%% \\endlastfoot
%% \\end{longtable}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 20 (face font-lock-comment-face fontified t latex-env-pair t) 20 27 (face font-lock-comment-face fontified t) 27 32 (face font-lock-comment-delimiter-face fontified t) 32 61 (face font-lock-comment-face fontified t) 61 84 (face font-lock-comment-face fontified t) 84 108 (face font-lock-comment-face fontified t) 108 113 (face font-lock-comment-delimiter-face fontified t) 113 137 (face font-lock-comment-face fontified t) 137 193 (face font-lock-comment-face fontified t) 193 196 (face font-lock-comment-delimiter-face fontified t) 196 213 (face font-lock-comment-face fontified t) 213 215 (face font-lock-comment-face fontified t) 215 218 (face font-lock-comment-delimiter-face fontified t) 218 224 (face font-lock-comment-face fontified t) 224 234 (face font-lock-comment-face fontified t latex-env-pair t) 234 260 (face font-lock-comment-face fontified t) 260 263 (face font-lock-comment-delimiter-face fontified t) 263 264 (face font-lock-comment-face fontified t) 264 267 (face font-lock-comment-delimiter-face fontified t) 267 271 (face font-lock-comment-face fontified t) 271 281 (face font-lock-comment-face fontified t latex-env-pair t) 281 290 (face font-lock-comment-face fontified t) 290 300 (face font-lock-comment-face fontified t latex-env-pair t) 300 326 (face font-lock-comment-face fontified t) 326 329 (face font-lock-comment-delimiter-face fontified t) 329 333 (face font-lock-comment-face fontified t) 333 336 (face font-lock-comment-delimiter-face fontified t) 336 340 (face font-lock-comment-face fontified t) 340 350 (face font-lock-comment-face fontified t latex-env-pair t) 350 354 (face font-lock-comment-face fontified t) 354 357 (face font-lock-comment-delimiter-face fontified t) 357 376 (face font-lock-comment-face fontified t) 376 379 (face font-lock-comment-delimiter-face fontified t) 379 388 (face font-lock-comment-face fontified t) 388 391 (face font-lock-comment-delimiter-face fontified t) 391 393 (face font-lock-comment-face fontified t) 393 394 (face font-lock-comment-face fontified t) 394 413 (face font-lock-comment-face fontified t) 413 416 (face font-lock-comment-delimiter-face fontified t) 416 429 (face font-lock-comment-face fontified t) 429 432 (face font-lock-comment-delimiter-face fontified t) 432 436 (face font-lock-comment-face fontified t) 436 447 (face font-lock-comment-face fontified t latex-env-pair t) 447 448 (face font-lock-comment-face fontified t)) . 12713) (undo-tree-id374 . -429) (undo-tree-id375 . -447) (undo-tree-id376 . -429) (undo-tree-id377 . -413) (undo-tree-id378 . -413) (undo-tree-id379 . -413) (undo-tree-id380 . -413) (undo-tree-id381 . -413) (undo-tree-id382 . -413) (undo-tree-id383 . -413) (undo-tree-id384 . -413) (undo-tree-id385 . -429) (undo-tree-id386 . -429) (undo-tree-id387 . -429) (undo-tree-id388 . -429) (undo-tree-id389 . -429) (undo-tree-id390 . -429) (undo-tree-id391 . -429) (undo-tree-id392 . -429) (undo-tree-id393 . -429) (undo-tree-id394 . -429) (undo-tree-id395 . -429) (undo-tree-id396 . -429) (undo-tree-id397 . -429) (undo-tree-id398 . -429) (undo-tree-id399 . -429) (undo-tree-id400 . -429) (undo-tree-id401 . -429) (undo-tree-id402 . -429) (undo-tree-id403 . -429) (undo-tree-id404 . -429) (undo-tree-id405 . -429) (undo-tree-id406 . -413) (undo-tree-id407 . -429) (undo-tree-id408 . -429) (undo-tree-id409 . -429) (undo-tree-id410 . -429) (undo-tree-id411 . -448) 13142 (t 26710 45883 288084 167000)) nil (26710 45887 597291 909000) 0 nil])
([nil nil ((12525 . 12526) (#("
" 0 1 (fontified t)) . -12525) (12522 . 12523) (#("
" 0 1 (fontified t)) . -12522) 12495 (t 26710 45892 402029 460000)) nil (26710 45906 219000 871000) 0 nil] [nil nil ((#("
где:

- 
-- базовая вейвлет-функция,

- 
-- фазовый множитель, который модулирует вейвлет, добавляя эффект
чирпа.
Чирплет-преобразование позволяет разложить сигнал в базис, состоящий из
чирповых сигналов разной частоты и частотного наклона.

Базисные функции в чирплет-преобразовании представляют собой растянутые,
сдвинутые и искривленные версии исходного вейвлета.
" 0 1 (fontified t) 1 368 (fontified t)) . 12713) (undo-tree-id368 . -316) (undo-tree-id369 . -367) (undo-tree-id370 . -316) (undo-tree-id371 . -316) (undo-tree-id372 . -316) (undo-tree-id373 . -368) 13029) ((12713 . 13081)) (26710 45887 597169 781000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -12557) (12556 . 12557) 12525) nil (26710 45906 218989 390000) 0 nil])
nil
([nil nil ((12634 . 12646) (t 26710 45906 220946 897000)) nil (26710 45923 337137 873000) 0 nil])
([nil nil ((12646 . 12647)) nil (26710 45923 337133 455000) 0 nil])
([nil nil ((12725 . 12726) (t 26710 45923 338845 249000) 12725) nil (26710 45986 480080 780000) 0 nil])
([nil nil ((12726 . 12743) (12727 . 12742)) nil (26710 45986 480080 490000) 0 nil])
([nil nil ((12796 . 12809) (12794 . 12796) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -12794) (undo-tree-id414 . -1) (12784 . 12795) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -12784) (undo-tree-id415 . -1) (12779 . 12785) (12765 . 12779) (12747 . 12765) (12746 . 12747) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -12746) (undo-tree-id416 . -1) (12743 . 12747) (12743 . 12744) (#("
" 0 1 (fontified t)) . 12743) (undo-tree-id417 . 1) (undo-tree-id418 . 1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1)) nil (26710 45986 480079 408000) 0 nil])
([nil nil ((12796 . 12802)) nil (26710 45986 480061 685000) 0 nil])
([nil nil ((12801 . 12802) (#("{" 0 1 (fontified t)) . 12801)) nil (26710 45986 480061 374000) 0 nil])
([nil nil ((12801 . 12802) (#("}" 0 1 (fontified t)) . 12801) (undo-tree-id413 . -1)) nil (26710 45986 480060 833000) 0 nil])
([nil nil ((12817 . 12822) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -12817) (undo-tree-id412 . -1) (12815 . 12818)) nil (26710 46015 303965 201000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 12500) (t 26710 46015 673308 561000)) nil (26710 46033 332114 728000) 0 nil] [nil nil ((12744 . 12745) (#("p" 0 1 (face font-lock-keyword-face fontified t)) . 12744) (undo-tree-id452 . -1) (t 26710 45986 482476 176000)) ((12744 . 12745) (#("P" 0 1 (face font-lock-keyword-face fontified t)) . 12744) (t 26710 46006 348361 906000)) (26710 46006 346763 294000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 12500)) nil (26710 46033 332114 427000) 0 nil])
nil
([nil nil ((#("m" 0 1 (fontified t)) . 12500)) nil (26710 46033 332114 257000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 12500) (undo-tree-id467 . -1)) nil (26710 46033 332114 36000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 12500) (undo-tree-id465 . -1) (undo-tree-id466 . -1)) nil (26710 46033 332113 315000) 0 nil])
([nil nil ((12500 . 12501) (#("{" 0 1 (fontified t)) . 12500) (undo-tree-id464 . -1)) nil (26710 46033 332112 373000) 0 nil])
([nil nil ((12502 . 12503) (#("}" 0 1 (fontified t)) . 12502)) nil (26710 46033 332111 742000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 12540) (undo-tree-id463 . -1)) nil (26710 46033 332110 961000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 12540) (undo-tree-id461 . -1) (undo-tree-id462 . -1)) nil (26710 46033 332110 330000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 12540) (undo-tree-id459 . -1) (undo-tree-id460 . -1)) nil (26710 46033 332109 318000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 12540) (undo-tree-id457 . -1) (undo-tree-id458 . -1)) nil (26710 46033 332107 975000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 12540) (undo-tree-id455 . -1) (undo-tree-id456 . -1)) nil (26710 46033 332204 756000) 0 nil])
([nil nil ((12540 . 12541) (#("{" 0 1 (fontified t)) . 12540) (undo-tree-id468 . -1)) nil (26710 46040 851470 744000) 0 nil] [nil nil ((#("{" 0 1 (fontified t)) . 12540) (undo-tree-id453 . -1) (undo-tree-id454 . -1)) ((12540 . 12541)) (26710 46033 332102 385000) 0 nil])
([nil nil ((12542 . 12543) (#("}" 0 1 (fontified t)) . 12542)) nil (26710 46040 851462 989000) 0 nil])
nil
([nil nil ((12519 . 12523) (12517 . 12519)) nil (26710 46040 851459 443000) 0 nil])
([nil nil ((#("- 
" 0 3 (fontified t)) . 12841) (undo-tree-id470 . -2) (undo-tree-id471 . -1) 12842 (t 26710 46040 853165 452000)) nil (26710 46078 241090 177000) 0 nil])
([nil nil ((12845 . 12850) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -12845) (undo-tree-id469 . -1) (12841 . 12846)) nil (26710 46078 241085 228000) 0 nil])
([nil nil ((#("- 
" 0 3 (fontified t)) . 12879) (undo-tree-id474 . -2) (undo-tree-id475 . -1) 12880 (t 26710 46078 242955 386000)) nil (26710 46097 615588 489000) 0 nil])
([nil nil ((12879 . 12880)) nil (26710 46097 615587 77000) 0 nil])
([nil nil ((12850 . 12851)) nil (26710 46097 615586 576000) 0 nil])
([nil nil ((12888 . 12896) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -12888) (undo-tree-id472 . -1) (12882 . 12889) (#("_" 0 1 (fontified t)) . -12882) (undo-tree-id473 . -1) 12883 (12882 . 12883) (12881 . 12882)) nil (26710 46097 615583 530000) 0 nil])
([nil nil ((12896 . 12897) (t 26710 46097 616847 656000)) nil (26710 46098 912933 278000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -13078) (13077 . 13078) (#(" " 0 1 (fontified nil)) . -13014) (13013 . 13014) (#(" " 0 1 (fontified nil)) . -12947) (12946 . 12947) (13042 . 13043) (#("
" 0 1 (fontified t)) . 13042) (12970 . 12971) (#("
" 0 1 (fontified nil)) . 12970) (12962 . 12963) (#("
" 0 1 (fontified t)) . 12962) (12969 . 12970) 13055 (t 26710 46098 914840 464000)) nil (26710 46103 476199 691000) 0 nil])
([nil nil ((12970 . 12971) (#(" " 0 1 (fontified nil)) . 12969) (undo-tree-id478 . -1) (12970 . 12971) (#(" " 0 1 (fontified t)) . -12970) (undo-tree-id479 . -1) 12971 (t 26710 46103 477815 212000)) nil (26710 46117 951314 732000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 12705) (undo-tree-id487 . -15) (t 26710 46118 417732 817000)) nil (26710 46152 936657 941000) 0 nil] [nil nil ((#("." 0 1 (fontified t)) . 12968) (undo-tree-id476 . -1) (undo-tree-id477 . -1)) ((12968 . 12969)) (26710 46117 951213 253000) 0 nil])
([nil nil ((#("\\begin{multicols}{2}
" 0 3 (face font-lock-keyword-face fontified t) 3 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 21 (fontified t)) . 14578) (undo-tree-id480 . -20) (undo-tree-id481 . -21) (undo-tree-id482 . -21) (undo-tree-id483 . -21) (undo-tree-id484 . -21) (undo-tree-id485 . -21) (undo-tree-id486 . -21)) nil (26710 46152 936654 625000) 0 nil])
nil
([nil nil ((13253 . 13254) (#("}" 0 1 (fontified t)) . -13253) (undo-tree-id498 . -1) 13254 (13252 . 13254) (#("i" 0 1 (fontified nil)) . -13252) (undo-tree-id499 . -1) (13248 . 13253) (t 26710 46152 937544 103000)) nil (26710 46204 453613 553000) 0 nil])
([nil nil ((13254 . 13255) (#("
" 0 1 (fontified t)) . -13254) (undo-tree-id493 . 1) (undo-tree-id494 . 1) (#("
" 0 1 (fontified t)) . -13254) (undo-tree-id495 . 1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) 13253) nil (26710 46204 453611 589000) 0 nil])
([nil nil ((13268 . 13277) (13266 . 13268) (#("i" 0 1 (fontified nil)) . -13266) (undo-tree-id492 . -1) (13264 . 13267)) nil (26710 46204 453608 954000) 0 nil])
([nil nil ((13277 . 13278) (#(" " 0 1 (fontified t)) . -13277) (undo-tree-id488 . -1) (#(" " 0 1 (fontified t)) . -13278) (undo-tree-id489 . -1) (#(" " 0 1 (fontified t)) . -13279) (undo-tree-id490 . -1) (#(" " 0 1 (fontified t)) . -13280) (undo-tree-id491 . -1) 13281 (13277 . 13281)) nil (26710 46204 453605 488000) 0 nil])
([nil nil ((13274 . 13277) (#("i" 0 1 (face tex-math fontified nil)) . -13274) (undo-tree-id500 . -1) (13269 . 13275) (#("hat" 0 3 (face tex-math fontified t)) . 13269) (undo-tree-id501 . -2) (undo-tree-id502 . -2) (t 26710 46204 456266 569000)) nil (26710 46214 413432 737000) 0 nil])
([nil nil ((13283 . 13284) (#("
" 0 1 (fontified t)) . -13283) 13276 (t 26710 46214 415213 473000)) nil (26710 46225 821782 843000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 13283) (undo-tree-id503 . -1) (undo-tree-id504 . -1)) nil (26710 46225 821779 577000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 13347) (t 26710 46225 824152 863000)) nil (26710 46242 334894 500000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 13347)) nil (26710 46242 334894 60000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 13347)) nil (26710 46242 334893 789000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 13347)) nil (26710 46242 334893 418000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 13347)) nil (26710 46242 334893 248000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 13347)) nil (26710 46242 334893 8000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 13347)) nil (26710 46242 334892 707000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 13347)) nil (26710 46242 334892 397000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 13347)) nil (26710 46242 334892 136000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . 13347)) nil (26710 46242 334891 825000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 13347)) nil (26710 46242 334891 555000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 13347)) nil (26710 46242 334891 234000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 13347)) nil (26710 46242 334890 984000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 13347)) nil (26710 46242 334890 743000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 13347)) nil (26710 46242 334890 423000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 13347)) nil (26710 46242 334890 72000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 13347)) nil (26710 46242 334889 681000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 13347)) nil (26710 46242 334889 361000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 13347)) nil (26710 46242 334889 110000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 13347)) nil (26710 46242 334888 850000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . 13347)) nil (26710 46242 334888 269000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 13347) (undo-tree-id506 . -1)) nil (26710 46242 334887 808000) 0 nil])
([nil nil ((13350 . 13353) (#("i" 0 1 (fontified nil)) . -13350) (undo-tree-id505 . -1) (13347 . 13351)) nil (26710 46242 334884 141000) 0 nil])
([nil nil ((13424 . 13426) (#("i" 0 1 (fontified nil)) . -13424) (undo-tree-id507 . -1) (13422 . 13425) (#("(" 0 1 (fontified t)) . -13422) (undo-tree-id508 . -1) (undo-tree-id509 . -1) 13423 (13415 . 13423) (13414 . 13415) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -13414) (undo-tree-id510 . -1) (13412 . 13415) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -13412) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (#("p" 0 1 (face font-lock-keyword-face fontified t)) . -13413) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) 13414 (13407 . 13414) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -13407) (undo-tree-id517 . -1) (13405 . 13408) (13398 . 13405) (#("i" 0 1 (fontified nil)) . -13398) (undo-tree-id518 . -1) (13390 . 13399) (13374 . 13390) (13374 . 13375) (#("%% \\begin{longtable}[]{@{}
%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 2\\tabcolsep) * \\real{0.9463}}
%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 2\\tabcolsep) * \\real{0.0537}}@{}}
%% \\toprule\\noalign{}
%% \\begin{minipage}[b]{\\linewidth}\\centering
%% 
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% (3)
%% \\end{minipage} \\\\
%% \\midrule\\noalign{}
%% \\endhead
%% \\bottomrule\\noalign{}
%% \\endlastfoot
%% \\end{longtable}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 20 (face font-lock-comment-face fontified t latex-env-pair t) 20 27 (face font-lock-comment-face fontified t) 27 32 (face font-lock-comment-delimiter-face fontified t) 32 66 (face font-lock-comment-face fontified t) 66 67 (face font-lock-comment-face fontified t) 67 108 (face font-lock-comment-face fontified t) 108 113 (face font-lock-comment-delimiter-face fontified t) 113 133 (face font-lock-comment-face fontified t) 133 134 (face font-lock-comment-face fontified t) 134 193 (face font-lock-comment-face fontified t) 193 196 (face font-lock-comment-delimiter-face fontified t) 196 215 (face font-lock-comment-face fontified t) 215 218 (face font-lock-comment-delimiter-face fontified t) 218 224 (face font-lock-comment-face fontified t) 224 234 (face font-lock-comment-face fontified t latex-env-pair t) 234 242 (face font-lock-comment-face fontified t) 242 260 (face font-lock-comment-face fontified t) 260 263 (face font-lock-comment-delimiter-face fontified t) 263 264 (face font-lock-comment-face fontified t) 264 267 (face font-lock-comment-delimiter-face fontified t) 267 271 (face font-lock-comment-face fontified t) 271 281 (face font-lock-comment-face fontified t latex-env-pair t) 281 290 (face font-lock-comment-face fontified t) 290 300 (face font-lock-comment-face fontified t latex-env-pair t) 300 307 (face font-lock-comment-face fontified t) 307 322 (face font-lock-comment-face fontified t) 322 323 (face font-lock-comment-face fontified t) 323 326 (face font-lock-comment-face fontified t) 326 329 (face font-lock-comment-delimiter-face fontified t) 329 333 (face font-lock-comment-face fontified t) 333 336 (face font-lock-comment-delimiter-face fontified t) 336 340 (face font-lock-comment-face fontified t) 340 350 (face font-lock-comment-face fontified t latex-env-pair t) 350 354 (face font-lock-comment-face fontified t) 354 357 (face font-lock-comment-delimiter-face fontified t) 357 376 (face font-lock-comment-face fontified t) 376 379 (face font-lock-comment-delimiter-face fontified t) 379 388 (face font-lock-comment-face fontified t) 388 391 (face font-lock-comment-delimiter-face fontified t) 391 413 (face font-lock-comment-face fontified t) 413 416 (face font-lock-comment-delimiter-face fontified t) 416 429 (face font-lock-comment-face fontified t) 429 432 (face font-lock-comment-delimiter-face fontified t) 432 436 (face font-lock-comment-face fontified t) 436 447 (face font-lock-comment-face fontified t latex-env-pair t) 447 448 (face font-lock-comment-face fontified t)) . 13374) (undo-tree-id519 . -434) (undo-tree-id520 . -447) (undo-tree-id521 . -5) (undo-tree-id522 . -434) (undo-tree-id523 . -434) 13808 (t 26710 46242 337065 538000)) nil (26710 46295 568184 609000) 0 nil])
([nil nil ((13374 . 13391) (13427 . 13442)) nil (26710 46295 568165 784000) 0 nil])
([nil nil ((13440 . 13442) (#("|" 0 1 (fontified t)) . -13440) (undo-tree-id552 . -1) 13441 (13440 . 13441) (t 26710 46295 569787 185000)) nil (26710 46470 758223 708000) 0 nil])
([nil nil ((13423 . 13427) (#("times" 0 5 (face font-lock-keyword-face fontified t)) . 13423) (undo-tree-id524 . -4) (undo-tree-id525 . -5) (undo-tree-id526 . -5) (undo-tree-id527 . -5) (undo-tree-id528 . -5) (undo-tree-id529 . -5) (undo-tree-id530 . -4) (undo-tree-id531 . -4) (undo-tree-id532 . -4) (undo-tree-id533 . -4) (undo-tree-id534 . -4) (undo-tree-id535 . -3) (undo-tree-id536 . -3) (undo-tree-id537 . -3) (undo-tree-id538 . -3) (undo-tree-id539 . -3) (undo-tree-id540 . -2) (undo-tree-id541 . -2) (undo-tree-id542 . -2) (undo-tree-id543 . -2) (undo-tree-id544 . -2) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -5) (undo-tree-id551 . -5)) nil (26710 46470 758220 101000) 0 nil])
([nil nil ((13421 . 13422) (#("j" 0 1 (face (subscript) fontified t display (raise -0.2))) . 13421) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (t 26710 46470 763902 540000)) nil (26710 46505 484041 132000) 0 nil])
([nil nil ((13470 . 13471) (#("\\emph{" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t)) . 13470) (undo-tree-id573 . -5) (undo-tree-id574 . -5) (undo-tree-id575 . -5) (undo-tree-id576 . -5) 13475 (t 26710 46505 485732 466000)) nil (26710 46531 974871 590000) 0 nil])
([nil nil ((13564 . 13565) (#("\\emph{" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t)) . 13564) (undo-tree-id567 . -5) (undo-tree-id568 . -5) (undo-tree-id569 . -5) (undo-tree-id570 . -5) (undo-tree-id571 . -6) (undo-tree-id572 . -6) 13569) nil (26710 46531 974868 625000) 0 nil])
([nil nil ((13595 . 13596) (#("\\emph{" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t)) . 13595) (undo-tree-id564 . -5) (undo-tree-id565 . -5) (undo-tree-id566 . -5) 13600) nil (26710 46531 974865 699000) 0 nil])
([nil nil ((13622 . 13623) (#("\\emph{" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t)) . 13622) (undo-tree-id561 . -5) (undo-tree-id562 . -5) (undo-tree-id563 . -5) 13627) nil (26710 46531 974863 836000) 0 nil])
([nil nil ((13624 . 13625) (#("}" 0 1 (fontified t)) . 13624)) nil (26710 46531 974860 930000) 0 nil])
([nil nil ((13597 . 13598) (#("}" 0 1 (fontified t)) . 13597) (undo-tree-id560 . -1)) nil (26710 46531 974860 369000) 0 nil])
([nil nil ((13566 . 13567) (#("}" 0 1 (fontified t)) . 13566) (undo-tree-id559 . -1)) nil (26710 46531 974858 776000) 0 nil])
([nil nil ((13472 . 13473) (#("}" 0 1 (fontified t)) . 13472)) nil (26710 46534 211829 694000) 0 nil])
([nil nil ((13494 . 13495) (#(" " 0 1 (fontified nil)) . 13494) (undo-tree-id638 . -1) (#("
" 0 1 (fontified t)) . -13495) 13494 (t 26710 46531 976603 775000)) nil (26710 46556 256946 852000) 0 nil] [nil nil ((#("- 
" 0 3 (fontified t)) . 13493) (undo-tree-id577 . -2) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -3) 13494 (t 26710 46531 976603 775000)) ((13493 . 13496)) (26710 46534 211523 732000) 0 nil])
([nil nil ((13498 . 13500) (#("i" 0 1 (fontified nil)) . -13498) (undo-tree-id637 . -1) (13494 . 13499)) nil (26710 46556 256945 470000) 0 nil])
nil
([nil nil ((13534 . 13535) (#(" " 0 1 (fontified nil)) . 13534) (#("
" 0 1 (fontified t)) . -13535) 13534) nil (26710 46556 256937 905000) 0 nil])
([nil nil ((13534 . 13536)) nil (26710 46556 256937 354000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13549 . 13550) (nil fontified nil 13536 . 13550) (13536 . 13550) 13535) nil (26710 46556 256936 914000) 0 nil])
([nil nil ((13550 . 13551)) nil (26710 46556 256932 435000) 0 nil])
([nil nil ((12825 . 12827) (t 26710 46556 259486 607000)) nil (26710 46589 532474 227000) 0 nil])
([nil nil ((12866 . 12868)) nil (26710 46589 532470 159000) 0 nil])
([nil nil ((#("%% \\begin{longtable}[]{@{}
%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 2\\tabcolsep) * \\real{0.9470}}
%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 2\\tabcolsep) * \\real{0.0530}}@{}}
%% \\toprule\\noalign{}
%% \\begin{minipage}[b]{\\linewidth}\\centering
%% 
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% (4)
%% \\end{minipage} \\\\
%% \\midrule\\noalign{}
%% \\endhead
%% \\bottomrule\\noalign{}
%% \\endlastfoot
%% \\end{longtable}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 20 (face font-lock-comment-face fontified t latex-env-pair t) 20 27 (face font-lock-comment-face fontified t) 27 32 (face font-lock-comment-delimiter-face fontified t) 32 55 (face font-lock-comment-face fontified t) 55 96 (face font-lock-comment-face fontified t) 96 108 (face font-lock-comment-face fontified t) 108 113 (face font-lock-comment-delimiter-face fontified t) 113 130 (face font-lock-comment-face fontified t) 130 135 (face font-lock-comment-face fontified t) 135 176 (face font-lock-comment-face fontified t) 176 193 (face font-lock-comment-face fontified t) 193 196 (face font-lock-comment-delimiter-face fontified t) 196 209 (face font-lock-comment-face fontified t) 209 211 (face font-lock-comment-face fontified t) 211 212 (face font-lock-comment-face fontified t) 212 215 (face font-lock-comment-face fontified t) 215 218 (face font-lock-comment-delimiter-face fontified t) 218 224 (face font-lock-comment-face fontified t) 224 234 (face font-lock-comment-face fontified t latex-env-pair t) 234 248 (face font-lock-comment-face fontified t) 248 249 (face font-lock-comment-face fontified t) 249 251 (face font-lock-comment-face fontified t) 251 252 (face font-lock-comment-face fontified t) 252 260 (face font-lock-comment-face fontified t) 260 263 (face font-lock-comment-delimiter-face fontified t) 263 264 (face font-lock-comment-face fontified t) 264 267 (face font-lock-comment-delimiter-face fontified t) 267 271 (face font-lock-comment-face fontified t) 271 281 (face font-lock-comment-face fontified t latex-env-pair t) 281 290 (face font-lock-comment-face fontified t) 290 300 (face font-lock-comment-face fontified t latex-env-pair t) 300 318 (face font-lock-comment-face fontified t) 318 319 (face font-lock-comment-face fontified t) 319 325 (face font-lock-comment-face fontified t) 325 326 (face font-lock-comment-face fontified t) 326 329 (face font-lock-comment-delimiter-face fontified t) 329 333 (face font-lock-comment-face fontified t) 333 336 (face font-lock-comment-delimiter-face fontified t) 336 340 (face font-lock-comment-face fontified t) 340 350 (face font-lock-comment-face fontified t latex-env-pair t) 350 354 (face font-lock-comment-face fontified t) 354 357 (face font-lock-comment-delimiter-face fontified t) 357 369 (face font-lock-comment-face fontified t) 369 376 (face font-lock-comment-face fontified t) 376 379 (face font-lock-comment-delimiter-face fontified t) 379 388 (face font-lock-comment-face fontified t) 388 391 (face font-lock-comment-delimiter-face fontified t) 391 413 (face font-lock-comment-face fontified t) 413 416 (face font-lock-comment-delimiter-face fontified t) 416 429 (face font-lock-comment-face fontified t) 429 432 (face font-lock-comment-delimiter-face fontified t) 432 433 (face font-lock-comment-face fontified t) 433 436 (face font-lock-comment-face fontified t) 436 447 (face font-lock-comment-face fontified t latex-env-pair t) 447 448 (face font-lock-comment-face fontified t)) . 13779) (undo-tree-id639 . -429) (undo-tree-id640 . -447) (undo-tree-id641 . -429) (t 26710 46589 535327 277000)) nil (26710 47089 687520 704000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13891 . 13892) (nil fontified nil 13778 . 13892) (13778 . 13892)) nil (26710 47089 687506 217000) 0 nil])
([nil nil ((13777 . 13778) 13726) nil (26710 47089 687502 209000) 0 nil])
([nil nil ((13992 . 13994) (#("i" 0 1 (fontified nil)) . -13992) (undo-tree-id652 . -1) (13988 . 13993) (t 26710 47089 690073 845000)) nil (26710 47125 952667 505000) 0 nil])
([nil nil ((14004 . 14005) (#("
" 0 1 (fontified t)) . -14004) (undo-tree-id647 . -1) (13994 . 13995) (#("
" 0 1 (fontified t)) . -13994) (undo-tree-id648 . 1) (undo-tree-id649 . -1) (#("
" 0 1 (fontified t)) . -13994) (undo-tree-id650 . 1) (undo-tree-id651 . -1) 13993) nil (26710 47125 952666 283000) 0 nil])
([nil nil ((14020 . 14023) (#("n" 0 1 (fontified t)) . -14020) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) 14021 (14018 . 14021) (14014 . 14018) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -14014) (undo-tree-id645 . -1) (14006 . 14015) (#("i" 0 1 (fontified nil)) . -14006) (undo-tree-id646 . -1) (14005 . 14007)) nil (26710 47125 952658 929000) 0 nil])
([nil nil ((14356 . 14365) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -14356) (undo-tree-id656 . -1) (14350 . 14357) (14348 . 14350) (#("i" 0 1 (fontified nil)) . -14348) (undo-tree-id657 . -1) (14345 . 14349) (#("i" 0 1 (fontified nil)) . -14345) (undo-tree-id658 . -1) (14335 . 14346) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -14335) (undo-tree-id659 . -1) (14330 . 14336) (t 26710 47125 955919 17000)) nil (26710 47157 586620 973000) 0 nil])
([nil nil ((14368 . 14369) (#("
" 0 1 (fontified t)) . -14368) (undo-tree-id653 . -1) (14365 . 14366) (#("
" 0 1 (fontified t)) . -14365) (undo-tree-id654 . 1) (undo-tree-id655 . -1) 14364) nil (26710 47189 822879 771000) 0 nil])
([nil nil ((14672 . 14673) (#("о" 0 1 (fontified t)) . 14672) (t 26710 47157 588784 747000)) nil (26710 47200 675929 149000) 0 nil] [nil nil ((14733 . 14734) (#("ы" 0 1 (fontified nil)) . 14733) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (14732 . 14733) (#("т" 0 1 (fontified nil)) . 14732) (14731 . 14732) (#("н" 0 1 (fontified nil)) . 14731) (14730 . 14731) (#("е" 0 1 (fontified nil)) . 14730) (14729 . 14730) (#("ц" 0 1 (fontified nil)) . 14729) (14728 . 14729) (#("и" 0 1 (fontified nil)) . 14728) (14727 . 14728) (#("ф" 0 1 (fontified nil)) . 14727) (14726 . 14727) (#("ф" 0 1 (fontified nil)) . 14726) (14725 . 14726) (#("э" 0 1 (fontified nil)) . 14725) (14724 . 14725) (#("о" 0 1 (fontified nil)) . 14724) (14723 . 14724) (#("к" 0 1 (fontified nil)) . 14723) (14722 . 14723) (#(" " 0 1 (fontified nil)) . 14722) (14721 . 14722) (#("е" 0 1 (fontified nil)) . 14721) (14720 . 14721) (#("ы" 0 1 (fontified nil)) . 14720) (14719 . 14720) (#("н" 0 1 (fontified nil)) . 14719) (14718 . 14719) (#("д" 0 1 (fontified nil)) . 14718) (14717 . 14718) (#("у" 0 1 (fontified nil)) . 14717) (14716 . 14717) (#("т" 0 1 (fontified nil)) . 14716) (14715 . 14716) (#("и" 0 1 (fontified nil)) . 14715) (14714 . 14715) (#("л" 0 1 (fontified nil)) . 14714) (14713 . 14714) (#("п" 0 1 (fontified nil)) . 14713) (14712 . 14713) (#("м" 0 1 (fontified nil)) . 14712) (14711 . 14712) (#("а" 0 1 (fontified t)) . 14711) (14709 . 14710) (#("и" 0 1 (fontified nil)) . 14709) (14708 . 14709) (#(" " 0 1 (fontified nil)) . 14708) (14707 . 14708) (#("е" 0 1 (fontified nil)) . 14707) (14706 . 14707) (#("ы" 0 1 (fontified nil)) . 14706) (14705 . 14706) (#("н" 0 1 (fontified nil)) . 14705) (14704 . 14705) (#("т" 0 1 (fontified nil)) . 14704) (14703 . 14704) (#("о" 0 1 (fontified nil)) . 14703) (14702 . 14703) (#("т" 0 1 (fontified nil)) . 14702) (14701 . 14702) (#("с" 0 1 (fontified nil)) . 14701) (14700 . 14701) (#("а" 0 1 (fontified nil)) . 14700) (14699 . 14700) (#("ч" 0 1 (fontified nil)) . 14699) (14698 . 14699) (#(" " 0 1 (fontified nil)) . 14698) (14697 . 14698) (#("е" 0 1 (fontified nil)) . 14697) (14696 . 14697) (#("и" 0 1 (fontified nil)) . 14696) (14695 . 14696) (#("щ" 0 1 (fontified nil)) . 14695) (14694 . 14695) (#("ю" 0 1 (fontified nil)) . 14694) (14693 . 14694) (#("у" 0 1 (fontified nil)) . 14693) (14692 . 14693) (#("д" 0 1 (fontified nil)) . 14692) (14691 . 14692) (#("е" 0 1 (fontified nil)) . 14691) (14690 . 14691) (#("л" 0 1 (fontified nil)) . 14690) (14689 . 14690) (#("с" 0 1 (fontified nil)) . 14689) (14688 . 14689) (#(" " 0 1 (fontified nil)) . 14688) (14687 . 14688) (#("м" 0 1 (fontified nil)) . 14687) (14686 . 14687) (#("и" 0 1 (fontified nil)) . 14686) (14685 . 14686) (#("ч" 0 1 (fontified nil)) . 14685) (14684 . 14685) (#("у" 0 1 (fontified nil)) . 14684) (14683 . 14684) (#("л" 0 1 (fontified nil)) . 14683) (14682 . 14683) (#("о" 0 1 (fontified nil)) . 14682) (14681 . 14682) (#("п" 0 1 (fontified nil)) . 14681) (14680 . 14681) (#(" " 0 1 (fontified nil)) . 14680) (14679 . 14680) (#("а" 0 1 (fontified nil)) . 14679) (14678 . 14679) (#("г" 0 1 (fontified nil)) . 14678) (14677 . 14678) (#("а" 0 1 (fontified nil)) . 14677) (14676 . 14677) (#("ш" 0 1 (fontified nil)) . 14676) (14675 . 14676) (#(" " 0 1 (fontified nil)) . 14675) (14674 . 14675) (#("о" 0 1 (fontified nil)) . 14674) (14673 . 14674) (#("г" 0 1 (fontified nil)) . 14673) (14672 . 14673) (#("о" 0 1 (fontified t)) . 14672) (t 26710 47157 588784 747000)) ((14672 . 14673) (#(" " 0 1 (fontified nil)) . 14672) (14673 . 14674) (#(" " 0 1 (fontified nil)) . 14673) (14674 . 14675) (#(" " 0 1 (fontified nil)) . 14674) (14675 . 14676) (#(" " 0 1 (fontified nil)) . 14675) (14676 . 14677) (#(" " 0 1 (fontified nil)) . 14676) (14677 . 14678) (#(" " 0 1 (fontified nil)) . 14677) (14678 . 14679) (#(" " 0 1 (fontified nil)) . 14678) (14679 . 14680) (#(" " 0 1 (fontified nil)) . 14679) (14680 . 14681) (#(" " 0 1 (fontified nil)) . 14680) (14681 . 14682) (#(" " 0 1 (fontified nil)) . 14681) (14682 . 14683) (#(" " 0 1 (fontified nil)) . 14682) (14683 . 14684) (#(" " 0 1 (fontified nil)) . 14683) (14684 . 14685) (#(" " 0 1 (fontified nil)) . 14684) (14685 . 14686) (#(" " 0 1 (fontified nil)) . 14685) (14686 . 14687) (#(" " 0 1 (fontified nil)) . 14686) (14687 . 14688) (#(" " 0 1 (fontified nil)) . 14687) (14688 . 14689) (#(" " 0 1 (fontified nil)) . 14688) (14689 . 14690) (#(" " 0 1 (fontified nil)) . 14689) (14690 . 14691) (#(" " 0 1 (fontified nil)) . 14690) (14691 . 14692) (#(" " 0 1 (fontified nil)) . 14691) (14692 . 14693) (#(" " 0 1 (fontified nil)) . 14692) (14693 . 14694) (#(" " 0 1 (fontified nil)) . 14693) (14694 . 14695) (#(" " 0 1 (fontified nil)) . 14694) (14695 . 14696) (#(" " 0 1 (fontified nil)) . 14695) (14696 . 14697) (#(" " 0 1 (fontified nil)) . 14696) (14697 . 14698) (#(" " 0 1 (fontified nil)) . 14697) (14698 . 14699) (#(" " 0 1 (fontified nil)) . 14698) (14699 . 14700) (#(" " 0 1 (fontified nil)) . 14699) (14700 . 14701) (#(" " 0 1 (fontified nil)) . 14700) (14701 . 14702) (#(" " 0 1 (fontified nil)) . 14701) (14702 . 14703) (#(" " 0 1 (fontified nil)) . 14702) (14703 . 14704) (#(" " 0 1 (fontified nil)) . 14703) (14704 . 14705) (#(" " 0 1 (fontified nil)) . 14704) (14705 . 14706) (#(" " 0 1 (fontified nil)) . 14705) (14706 . 14707) (#(" " 0 1 (fontified nil)) . 14706) (14707 . 14708) (#(" " 0 1 (fontified nil)) . 14707) (14708 . 14709) (#(" " 0 1 (fontified nil)) . 14708) (14709 . 14710) (#(" " 0 1 (fontified t)) . 14709) (14711 . 14712) (#(" " 0 1 (fontified nil)) . 14711) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (14712 . 14713) (#(" " 0 1 (fontified nil)) . 14712) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (14713 . 14714) (#(" " 0 1 (fontified nil)) . 14713) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (14714 . 14715) (#(" " 0 1 (fontified nil)) . 14714) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (14715 . 14716) (#(" " 0 1 (fontified nil)) . 14715) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (14716 . 14717) (#(" " 0 1 (fontified nil)) . 14716) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (14717 . 14718) (#(" " 0 1 (fontified nil)) . 14717) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (14718 . 14719) (#(" " 0 1 (fontified nil)) . 14718) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (14719 . 14720) (#(" " 0 1 (fontified nil)) . 14719) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (14720 . 14721) (#(" " 0 1 (fontified nil)) . 14720) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (14721 . 14722) (#(" " 0 1 (fontified nil)) . 14721) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (14722 . 14723) (#(" " 0 1 (fontified nil)) . 14722) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (14723 . 14724) (#(" " 0 1 (fontified nil)) . 14723) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (14724 . 14725) (#(" " 0 1 (fontified nil)) . 14724) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (14725 . 14726) (#(" " 0 1 (fontified nil)) . 14725) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (14726 . 14727) (#(" " 0 1 (fontified nil)) . 14726) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (14727 . 14728) (#(" " 0 1 (fontified nil)) . 14727) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (14728 . 14729) (#(" " 0 1 (fontified nil)) . 14728) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (14729 . 14730) (#(" " 0 1 (fontified nil)) . 14729) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (14730 . 14731) (#(" " 0 1 (fontified nil)) . 14730) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (14731 . 14732) (#(" " 0 1 (fontified nil)) . 14731) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (14732 . 14733) (#(" " 0 1 (fontified nil)) . 14732) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (14733 . 14734) (#(" " 0 1 (fontified t)) . 14733) (undo-tree-id795 . -1)) (26710 47189 821191 241000) 0 nil])
([nil nil ((14673 . 14674)) nil (26710 47200 675924 801000) 0 nil])
nil
([nil nil ((14735 . 14737) (t 26710 47200 677602 979000)) nil (26710 47251 269259 531000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14766 . 14767) (nil fontified nil 14737 . 14767) (14737 . 14767) 14736) nil (26710 47251 269259 261000) 0 nil])
([nil nil ((14767 . 14768)) nil (26710 47251 269258 700000) 0 nil])
([nil nil ((14767 . 14768) (#(";" 0 1 (fontified t)) . 14767)) nil (26710 47251 269258 139000) 0 nil])
([nil nil ((14768 . 14769) (#("
" 0 1 (fontified t)) . -14768) (undo-tree-id798 . 1) (undo-tree-id799 . -1) 14767) nil (26710 47251 269256 977000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 14768) (undo-tree-id796 . -1) (undo-tree-id797 . -1)) nil (26710 47251 269253 230000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image64}
	\\caption*{Рис.1 - Исходный аудиосигнал}
\\end{figure}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image65}
	\\caption*{Рис.2 - Очищенный аудиосигнал}
\\end{figure}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image66}
	\\caption*{Рис.3 - Чирплетный аудиосигнал}
\\end{figure}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image67}
	\\caption*{Рис.4 - Амплитудный спектр чирплетного аудиосигнала}
\\end{figure}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image68}
	\\caption*{Рис.5 - Фазовый спектр чирплетного аудиосигнала}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 129 (fontified t) 129 133 (face font-lock-keyword-face fontified t) 133 134 (fontified t latex-env-pair t) 134 140 (face font-lock-function-name-face fontified t latex-env-pair t) 140 141 (fontified t latex-env-pair t) 141 143 (fontified t) 143 149 (face font-lock-keyword-face fontified t) 149 150 (fontified t latex-env-pair t) 150 156 (face font-lock-function-name-face fontified t latex-env-pair t) 156 157 (fontified t latex-env-pair t) 157 162 (fontified t) 162 164 (face font-lock-keyword-face fontified t) 164 172 (face font-lock-keyword-face fontified t) 172 173 (fontified t) 173 174 (fontified t) 174 190 (face font-lock-keyword-face fontified t) 190 200 (fontified t) 200 210 (face font-lock-keyword-face fontified t) 210 212 (fontified t) 212 228 (face font-lock-builtin-face fontified t) 228 229 (face font-lock-builtin-face fontified t) 229 231 (fontified t) 231 232 (fontified t) 232 241 (face font-lock-keyword-face fontified t) 241 252 (fontified t) 252 254 (fontified t) 254 273 (fontified t) 273 277 (face font-lock-keyword-face fontified t) 277 278 (fontified t latex-env-pair t) 278 284 (face font-lock-function-name-face fontified t latex-env-pair t) 284 285 (fontified t latex-env-pair t) 285 287 (fontified t) 287 293 (face font-lock-keyword-face fontified t) 293 294 (fontified t latex-env-pair t) 294 300 (face font-lock-function-name-face fontified t latex-env-pair t) 300 301 (fontified t latex-env-pair t) 301 306 (fontified t) 306 316 (face font-lock-keyword-face fontified t) 316 318 (fontified t) 318 334 (face font-lock-keyword-face fontified t) 334 344 (fontified t) 344 354 (face font-lock-keyword-face fontified t) 354 356 (fontified t) 356 373 (face font-lock-builtin-face fontified t) 373 376 (fontified t) 376 385 (face font-lock-keyword-face fontified t) 385 418 (fontified t) 418 422 (face font-lock-keyword-face fontified t) 422 423 (fontified t latex-env-pair t) 423 429 (face font-lock-function-name-face fontified t latex-env-pair t) 429 430 (fontified t latex-env-pair t) 430 432 (fontified t) 432 438 (face font-lock-keyword-face fontified t) 438 439 (fontified t latex-env-pair t) 439 445 (face font-lock-function-name-face fontified t latex-env-pair t) 445 446 (fontified t latex-env-pair t) 446 451 (fontified t) 451 461 (face font-lock-keyword-face fontified t) 461 463 (fontified t) 463 479 (face font-lock-keyword-face fontified t) 479 489 (fontified t) 489 499 (face font-lock-keyword-face fontified t) 499 501 (fontified t) 501 518 (face font-lock-builtin-face fontified t) 518 521 (fontified t) 521 530 (face font-lock-keyword-face fontified t) 530 584 (fontified t) 584 588 (face font-lock-keyword-face fontified t) 588 589 (fontified t latex-env-pair t) 589 595 (face font-lock-function-name-face fontified t latex-env-pair t) 595 596 (fontified t latex-env-pair t) 596 598 (fontified t) 598 604 (face font-lock-keyword-face fontified t) 604 605 (fontified t latex-env-pair t) 605 611 (face font-lock-function-name-face fontified t latex-env-pair t) 611 612 (fontified t latex-env-pair t) 612 617 (fontified t) 617 627 (face font-lock-keyword-face fontified t) 627 629 (fontified t) 629 645 (face font-lock-keyword-face fontified t) 645 655 (fontified t) 655 665 (face font-lock-keyword-face fontified t) 665 667 (fontified t) 667 684 (face font-lock-builtin-face fontified t) 684 687 (fontified t) 687 696 (face font-lock-keyword-face fontified t) 696 746 (fontified t) 746 750 (face font-lock-keyword-face fontified t) 750 751 (fontified t latex-env-pair t) 751 757 (face font-lock-function-name-face fontified t latex-env-pair t) 757 758 (fontified t latex-env-pair t) 758 759 (fontified t)) . 16016) (undo-tree-id800 . -746) (undo-tree-id801 . -758) (undo-tree-id802 . -746) (undo-tree-id803 . -746) 16762 (t 26710 47251 272391 143000)) nil (26710 47376 6499 581000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16990 . 16991) (nil fontified nil 16015 . 16991) (16015 . 16991)) nil (26710 47376 6485 856000) 0 nil])
([nil nil ((#("45" 0 2 (fontified t)) . 16243) (t 26710 47376 8875 733000) (16245 . 16247) 16244 (t 26710 47376 8875 733000)) nil (26710 47477 170455 467000) 0 nil])
([nil nil ((nil fontified t 16243 . 16245) (#("44" 0 2 (fontified t)) . 16243) (16245 . 16247) 16244) nil (26710 47477 170450 728000) 0 nil])
([nil nil ((16103 . 16115) (16098 . 16103) (t 26710 47477 173464 299000) 16097) nil (26710 47513 179605 639000) 0 nil])
([nil nil ((#("    \\vspace{1pt}
" 0 4 (fontified t) 4 11 (face font-lock-keyword-face fontified t) 11 16 (fontified t) 16 17 (fontified t)) . 16099) (undo-tree-id805 . -13) (undo-tree-id806 . -13) (undo-tree-id807 . -16) (undo-tree-id808 . 4) (undo-tree-id809 . -13) (undo-tree-id810 . -13) (undo-tree-id811 . -13) (undo-tree-id812 . -13) (undo-tree-id813 . -13) (undo-tree-id814 . -13) (undo-tree-id815 . -13) (undo-tree-id816 . -13) (undo-tree-id817 . -13) (undo-tree-id818 . -13) (undo-tree-id819 . -13) (undo-tree-id820 . -13) (undo-tree-id821 . -13) (undo-tree-id822 . -13) (undo-tree-id823 . -13) (undo-tree-id824 . -13) (undo-tree-id825 . -13) (undo-tree-id826 . -17) 16112) nil (26710 47514 321883 117000) 0 nil] [nil nil ((16112 . 16113) (t 26710 47498 136379 715000)) ((#("0" 0 1 (fontified t)) . 16112) (undo-tree-id804 . -1) (t 26710 47505 235351 121000)) (26710 47505 232714 242000) 0 nil])
([nil nil ((16244 . 16245) (#("3" 0 1 (fontified t)) . 16244) (undo-tree-id827 . -1) (t 26710 47514 325314 545000)) nil (26710 47516 729252 436000) 0 nil])
nil
([nil nil ((16885 . 16887) (#("2" 0 1 (fontified t)) . -16885) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (#("5" 0 1 (fontified t)) . -16886) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) 16887 (16885 . 16887) (#("8" 0 1 (fontified t)) . 16885) (t 26710 47516 732304 867000)) nil (26710 47523 430830 542000) 0 nil])
([nil nil ((16153 . 16157) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -16153) (undo-tree-id841 . -1) (16150 . 16154) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -16150) (undo-tree-id842 . -1) 16151 (16150 . 16151) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -16150) (undo-tree-id843 . -1) (16147 . 16151) (16144 . 16147) (#("\\" 0 1 (face font-lock-keyword-face fontified t)) . -16144) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -16145) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -16146) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (#("x" 0 1 (face font-lock-keyword-face fontified t)) . -16147) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -16148) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) 16149 (16139 . 16149) (#("i" 0 1 (fontified nil)) . -16139) (undo-tree-id859 . -1) (16137 . 16140) (#(" " 0 1 (fontified t)) . -16137) (undo-tree-id860 . -1) 16138 (16136 . 16138) (t 26710 47523 433277 940000)) nil (26710 47563 351984 695000) 0 nil])
([nil nil ((16344 . 16351) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -16344) 16345 (16338 . 16345) (#("\\" 0 1 (face font-lock-keyword-face fontified nil)) . -16338) (#("t" 0 1 (face font-lock-keyword-face fontified nil)) . -16339) (#("e" 0 1 (face font-lock-keyword-face fontified nil)) . -16340) (#("x" 0 1 (face font-lock-keyword-face fontified nil)) . -16341) (#("t" 0 1 (face font-lock-keyword-face fontified nil)) . -16342) 16343 (16331 . 16343) (#(" " 0 1 (face font-lock-keyword-face fontified nil)) . -16331) 16332 (16330 . 16332)) nil (26710 47563 351973 975000) 0 nil])
([nil nil ((16585 . 16592) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -16585) 16586 (16579 . 16586) (#("\\" 0 1 (face font-lock-keyword-face fontified nil)) . -16579) (#("t" 0 1 (face font-lock-keyword-face fontified nil)) . -16580) (#("e" 0 1 (face font-lock-keyword-face fontified nil)) . -16581) (#("x" 0 1 (face font-lock-keyword-face fontified nil)) . -16582) (#("t" 0 1 (face font-lock-keyword-face fontified nil)) . -16583) 16584 (16572 . 16584) (#(" " 0 1 (face font-lock-keyword-face fontified nil)) . -16572) 16573 (16571 . 16573)) nil (26710 47563 351972 1000) 0 nil])
([nil nil ((16781 . 16788) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -16781) (undo-tree-id834 . -1) 16782 (16775 . 16782) (#("\\" 0 1 (face font-lock-keyword-face fontified nil)) . -16775) (undo-tree-id835 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified nil)) . -16776) (undo-tree-id836 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified nil)) . -16777) (undo-tree-id837 . -1) (#("x" 0 1 (face font-lock-keyword-face fontified nil)) . -16778) (undo-tree-id838 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified nil)) . -16779) (undo-tree-id839 . -1) 16780 (16768 . 16780) (#(" " 0 1 (face font-lock-keyword-face fontified nil)) . -16768) (undo-tree-id840 . -1) 16769 (16767 . 16769)) nil (26710 47563 351967 373000) 0 nil])
([nil nil ((17343 . 17349) (17339 . 17343) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -17339) (undo-tree-id863 . -1) (17335 . 17340) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -17335) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) 17336 (17333 . 17336) (#("1" 0 1 (fontified t)) . -17333) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) 17334 (17325 . 17334) (t 26710 47563 355117 965000)) nil (26710 47647 567773 83000) 0 nil])
([nil nil ((17401 . 17415) (#("e" 0 1 (fontified nil)) . -17401) 17402 (17399 . 17402) (#("1" 0 1 (fontified nil)) . -17399) 17400 (17391 . 17400)) nil (26710 47647 567768 905000) 0 nil])
([nil nil ((17415 . 17416) (#("
" 0 1 (fontified t)) . -17415) (undo-tree-id862 . 1) 17414) nil (26710 47647 567768 304000) 0 nil])
([nil nil ((17349 . 17350) (#("
" 0 1 (fontified t)) . -17349) 17343) nil (26710 47647 567766 560000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 17349)) nil (26710 47647 567765 999000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 17414)) nil (26710 47647 567765 589000) 0 nil])
([nil nil ((17392 . 17393) (#("T" 0 1 (face tex-math fontified t)) . 17392) (undo-tree-id861 . -1)) nil (26710 47647 567762 583000) 0 nil])
([nil nil ((19731 . 19733) (t 26710 47647 569782 921000)) nil (26710 47701 363772 174000) 0 nil])
([nil nil ((20021 . 20023) (t 26710 47701 366570 530000)) nil (26710 47709 689419 469000) 0 nil])
([nil nil ((20836 . 20838) (t 26710 47709 691537 770000)) nil (26710 47723 95120 538000) 0 nil])
([nil nil ((22770 . 22772) (t 26710 47723 98485 72000)) nil (26710 47739 932640 800000) 0 nil])
([nil nil ((23628 . 23630) (t 26710 47739 936418 994000)) nil (26710 47746 394906 448000) 0 nil])
([nil nil ((#("\\href{mailto:" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 13 (face tex-verbatim fontified t)) . 1140) (undo-tree-id4 . -12) (t 26712 55164 244309 929000)) nil (26714 13436 932556 152000) 0 nil])
([nil nil ((#("}{jomartova@mail.ru}" 0 20 (fontified t)) . 1157) (undo-tree-id3 . -19)) nil (26714 13436 932637 24000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2961 . 2962) (nil fontified nil 2945 . 2962) (2945 . 2962) (#("\\href{mailto:jomartova@mail.ru}{jomartova@mail.ru}" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 30 (face tex-verbatim fontified t) 30 42 (fontified t) 42 50 (fontified t)) . 2945) (undo-tree-id14 . -49) (undo-tree-id15 . -50) (undo-tree-id16 . -49)) nil (26714 13457 955166 612000) 0 nil] [nil nil ((#("jomartova@mail.ru" 0 17 (fontified t)) . 1140) (undo-tree-id0 . -16) (undo-tree-id1 . -17) (undo-tree-id2 . -17)) ((1140 . 1157)) (26714 13436 932551 343000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4807 . 4808) (nil fontified nil 4758 . 4808) (4758 . 4808) (#("\\href{mailto:jomartova@mail.ru}{jomartova@mail.ru}" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 30 (face tex-verbatim fontified t) 30 50 (fontified t)) . 4758) (undo-tree-id9 . -49) (undo-tree-id10 . -50) (undo-tree-id11 . -49) (undo-tree-id12 . -17) (undo-tree-id13 . -17)) nil (26714 13457 955165 379000) 0 nil])
nil
([nil nil ((#("}" 0 1 (rear-nonsticky t fontified t)) . 4807)) nil (26714 13457 955163 506000) 0 nil])
([nil nil ((#("\\href{" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t)) . 4758) (undo-tree-id7 . -5) (undo-tree-id8 . -6)) nil (26714 13457 955162 925000) 0 nil])
([nil nil ((#("mailto:jomartova@mail.ru}{" 0 24 (fontified t) 24 26 (fontified t)) . 4758) (undo-tree-id5 . -25) (undo-tree-id6 . -26)) nil (26714 13457 955158 587000) 0 nil])
([nil nil ((#("ORCID:0009-0000-2958-1935\\
" 0 27 (fontified t)) . 26860) (undo-tree-id36 . -26) (t 26714 13457 957275 295000)) nil (26714 13483 551389 95000) 0 nil])
([nil nil ((26391 . 26392) (#("
" 0 1 (fontified t)) . -26391) 26372) nil (26714 13483 551388 414000) 0 nil])
([nil nil ((#("ORCID:0009-0000-2958-1935
" 0 26 (fontified t)) . 25551) (undo-tree-id34 . -25) (undo-tree-id35 . -19) 25570) nil (26714 13483 551387 973000) 0 nil])
([nil nil ((#("ORCID: 0000-0002-4216-9184
" 0 27 (fontified t)) . 25352) (undo-tree-id32 . -26) (undo-tree-id33 . -27)) nil (26714 13483 551386 730000) 0 nil])
([nil nil ((#("ORCID: 0000-0003-4765-7870
" 0 27 (fontified t)) . 25187) (undo-tree-id24 . -26) (undo-tree-id25 . -27) (undo-tree-id26 . -27) (undo-tree-id27 . -27) (undo-tree-id28 . -27) (undo-tree-id29 . -27) (undo-tree-id30 . -27) (undo-tree-id31 . -27)) nil (26714 13483 551508 620000) 0 nil])
([nil nil ((#("ORCID: 0000-0003-0598-4806
" 0 27 (fontified t)) . 25090) (undo-tree-id129 . -26) (undo-tree-id130 . -27) (undo-tree-id131 . -27) (undo-tree-id132 . -27) (undo-tree-id133 . -27) (undo-tree-id134 . -27) (undo-tree-id135 . -27) (undo-tree-id136 . -27)) nil (26714 13493 929639 859000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . 25187) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1)) ((25187 . 25188)) (26714 13483 551335 584000) 0 nil])
([nil nil ((#("https://orcid.org/ 0000-0001-9345-5167
" 0 39 (fontified t)) . 24889) (undo-tree-id114 . -38) (undo-tree-id115 . -39) (undo-tree-id116 . -39) (undo-tree-id117 . -39) (undo-tree-id118 . -39) (undo-tree-id119 . -39) (undo-tree-id120 . -39) (undo-tree-id121 . -39) (undo-tree-id122 . -39) (undo-tree-id123 . -39) (undo-tree-id124 . -39) (undo-tree-id125 . -39) (undo-tree-id126 . -39) (undo-tree-id127 . -39) (undo-tree-id128 . -39)) nil (26714 13493 929637 214000) 0 nil])
nil
([nil nil ((#("https://orcid.org/{\\bfseries 0000-0003-3019-3352}
" 0 19 (fontified t) 19 28 (face font-lock-keyword-face fontified t) 28 48 (face (bold) fontified t) 48 50 (fontified t)) . 24702) (undo-tree-id113 . -49)) nil (26714 13493 929580 37000) 0 nil])
([nil nil ((#("\\href{https://orcid.org/0000-0002-5882-5588}{}
" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 43 (face tex-verbatim fontified t) 43 47 (fontified t)) . 24549) (undo-tree-id111 . -46) (undo-tree-id112 . -47)) nil (26714 13493 929579 195000) 0 nil])
([nil nil ((#("https://orcid.org/\\href{https://orcid.org/0000-0002-3013-6617}{}
" 0 18 (fontified t) 18 23 (face font-lock-keyword-face fontified t) 23 24 (fontified t) 24 61 (face tex-verbatim fontified t) 61 65 (fontified t)) . 24356) (undo-tree-id93 . -64) (undo-tree-id94 . -65) (undo-tree-id95 . -65) (undo-tree-id96 . -65) (undo-tree-id97 . -65) (undo-tree-id98 . -65) (undo-tree-id99 . -65) (undo-tree-id100 . -65) (undo-tree-id101 . -65) (undo-tree-id102 . -65) (undo-tree-id103 . -65) (undo-tree-id104 . -65) (undo-tree-id105 . -65) (undo-tree-id106 . -65) (undo-tree-id107 . -65) (undo-tree-id108 . -65) (undo-tree-id109 . -65) (undo-tree-id110 . -65)) nil (26714 13493 929577 923000) 0 nil])
([nil nil ((#("ORCID:
" 0 7 (fontified t)) . 24349) (undo-tree-id37 . -6) (undo-tree-id38 . -7) (undo-tree-id39 . -7) (undo-tree-id40 . -7) (undo-tree-id41 . -7) (undo-tree-id42 . -7) (undo-tree-id43 . -7) (undo-tree-id44 . -7) (undo-tree-id45 . -7) (undo-tree-id46 . -7) (undo-tree-id47 . -7) (undo-tree-id48 . -7) (undo-tree-id49 . -7) (undo-tree-id50 . -7) (undo-tree-id51 . -7) (undo-tree-id52 . -7) (undo-tree-id53 . -7) (undo-tree-id54 . -7) (undo-tree-id55 . -7) (undo-tree-id56 . -7) (undo-tree-id57 . -7) (undo-tree-id58 . -7) (undo-tree-id59 . -7) (undo-tree-id60 . -7) (undo-tree-id61 . -7) (undo-tree-id62 . -7) (undo-tree-id63 . -7) (undo-tree-id64 . -7) (undo-tree-id65 . -7) (undo-tree-id66 . -7) (undo-tree-id67 . -7) (undo-tree-id68 . -7) (undo-tree-id69 . -7) (undo-tree-id70 . -7) (undo-tree-id71 . -7) (undo-tree-id72 . -7) (undo-tree-id73 . -7) (undo-tree-id74 . -7) (undo-tree-id75 . -7) (undo-tree-id76 . -7) (undo-tree-id77 . -7) (undo-tree-id78 . -7) (undo-tree-id79 . -7) (undo-tree-id80 . -7) (undo-tree-id81 . -7) (undo-tree-id82 . -7) (undo-tree-id83 . -7) (undo-tree-id84 . -7) (undo-tree-id85 . -7) (undo-tree-id86 . -7) (undo-tree-id87 . -7) (undo-tree-id88 . -7) (undo-tree-id89 . -7) (undo-tree-id90 . -7) (undo-tree-id91 . -7) (undo-tree-id92 . -7)) nil (26714 13493 929569 827000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24367 . 24368) (nil fontified nil 24348 . 24368) (24348 . 24368) (t 26714 13493 932385 552000)) nil (26714 13533 624708 517000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25457 . 25458) (nil fontified nil 25438 . 25458) (25438 . 25458)) nil (26714 13533 624707 986000) 0 nil])
([nil nil ((25437 . 25438) (#("
" 0 1 (fontified t)) . -25437) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) 25413) nil (26714 13533 624704 830000) 0 nil])
([nil nil ((#(" ORCID:" 0 7 (fontified t)) . 24732) (undo-tree-id145 . -6) (t 26714 13533 627503 24000)) nil (26714 13579 190330 127000) 0 nil])
([nil nil ((#(" ORCID:" 0 7 (fontified t)) . 24595) (undo-tree-id142 . -6) (undo-tree-id143 . -7) (undo-tree-id144 . -7)) nil (26714 13579 190329 45000) 0 nil])
([nil nil ((#(" ORCID:" 0 7 (fontified t)) . 24489) (undo-tree-id141 . -6)) nil (26714 13579 190326 440000) 0 nil])
([nil nil ((24470 . 24471) (#("
" 0 1 (fontified t)) . -24470) 24449) nil (26714 13579 190317 443000) 0 nil])
([nil nil ((24700 . 24701) (#("
" 0 1 (fontified t)) . -24700) 24699) nil (26714 13579 190317 52000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24971 . 24972) (nil fontified nil 24950 . 24972) (24950 . 24972)) nil (26714 13579 190316 511000) 0 nil])
([nil nil ((24953 . 24954)) nil (26714 13579 190316 20000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26272 . 26273) (#("
" 0 1 (fontified nil)) . -26296) (26272 . 26297)) nil (26714 13579 190315 339000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 26272)) nil (26714 13579 190314 417000) 0 nil])
([nil current ((25712 . 25713) (#("
" 0 1 (fontified t)) . -25712) 25685) nil (26714 13579 190309 137000) 0 nil])
nil
