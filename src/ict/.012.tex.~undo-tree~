(undo-tree-save-format-version . 1)
"7208a65eadfa0eb156e419ccdae8cb9d7b27c268"
[nil nil nil nil (26712 57398 914307 505000) 0 nil]
([nil nil ((87 . 88) (#("
" 0 1 (fontified t)) . -87) (#("
" 0 1 (fontified t)) . -87) 24 (t 26712 55164 244309 929000)) nil (26712 57398 914306 864000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 86)) nil (26712 57398 914306 283000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (face (bold) fontified t) 1 10 (face (font-lock-keyword-face bold) fontified t) 10 11 (face (bold) fontified t)) . 87) (undo-tree-id222 . -10)) nil (26712 57398 914306 82000) 0 nil])
([nil nil ((#("\\bfseries " 0 9 (face font-lock-keyword-face fontified t) 9 10 (face (bold) fontified t)) . 25) (undo-tree-id221 . -9)) nil (26712 57398 914305 471000) 0 nil])
([nil nil (25) nil (26712 57398 914304 259000) 0 nil])
([nil nil ((43 . 45) (25 . 43) (#("sectionwi" 0 9 (face font-lock-keyword-face fontified t)) . -25) (undo-tree-id216 . -9) (undo-tree-id217 . -9) (undo-tree-id218 . -9) 34 (33 . 34) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -33) (undo-tree-id219 . -1) 34 (29 . 34) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -29) (undo-tree-id220 . -1) (24 . 30)) nil (26712 57398 914303 648000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict2/image1}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 162) (undo-tree-id112 . -113) (undo-tree-id113 . -10) (undo-tree-id114 . -10) (undo-tree-id115 . -10) (undo-tree-id116 . -10) (undo-tree-id117 . -10) (undo-tree-id118 . -10) (undo-tree-id119 . -10) (undo-tree-id120 . -10) (undo-tree-id121 . -10) (undo-tree-id122 . -10) (undo-tree-id123 . -10) (undo-tree-id124 . -10) (undo-tree-id125 . -111) (undo-tree-id126 . -10) (undo-tree-id127 . -111) (undo-tree-id128 . -10) (undo-tree-id129 . -10) (undo-tree-id130 . -10) (undo-tree-id131 . -10) (undo-tree-id132 . -10) (undo-tree-id133 . -10) (undo-tree-id134 . -10) (undo-tree-id135 . -10) (undo-tree-id136 . -10) (undo-tree-id137 . -10) (undo-tree-id138 . -10) (undo-tree-id139 . -10) (undo-tree-id140 . -10) (undo-tree-id141 . -10) (undo-tree-id142 . -10) (undo-tree-id143 . -10) (undo-tree-id144 . -10) (undo-tree-id145 . -10) (undo-tree-id146 . -10) (undo-tree-id147 . -10) (undo-tree-id148 . -10) (undo-tree-id149 . -10) (undo-tree-id150 . -25) (undo-tree-id151 . -25) (undo-tree-id152 . -25) (undo-tree-id153 . -25) (undo-tree-id154 . -25) (undo-tree-id155 . -25) (undo-tree-id156 . -25) (undo-tree-id157 . -25) (undo-tree-id158 . -25) (undo-tree-id159 . -25) (undo-tree-id160 . -25) (undo-tree-id161 . -25) (undo-tree-id162 . -25) (undo-tree-id163 . -25) (undo-tree-id164 . -25) (undo-tree-id165 . -25) (undo-tree-id166 . -25) (undo-tree-id167 . -37) (undo-tree-id168 . -37) (undo-tree-id169 . -37) (undo-tree-id170 . -37) (undo-tree-id171 . -37) (undo-tree-id172 . -95) (undo-tree-id173 . -95) (undo-tree-id174 . -95) (undo-tree-id175 . -95) (undo-tree-id176 . -95) (undo-tree-id177 . -95) (undo-tree-id178 . -95) (undo-tree-id179 . -95) (undo-tree-id180 . -95) (undo-tree-id181 . -95) (undo-tree-id182 . -95) (undo-tree-id183 . -95) (undo-tree-id184 . -95) (undo-tree-id185 . -95) (undo-tree-id186 . -95) (undo-tree-id187 . -95) (undo-tree-id188 . -95) (undo-tree-id189 . -95) (undo-tree-id190 . -95) (undo-tree-id191 . -95) (undo-tree-id192 . -101) (undo-tree-id193 . -111) (undo-tree-id194 . -111) (undo-tree-id195 . -111) (undo-tree-id196 . -111) (undo-tree-id197 . -111) (undo-tree-id198 . -111) (undo-tree-id199 . -111) (undo-tree-id200 . -111) (undo-tree-id201 . -111) (undo-tree-id202 . -111) (undo-tree-id203 . -111) (undo-tree-id204 . -111) (undo-tree-id205 . -111) (undo-tree-id206 . -111) (undo-tree-id207 . -111) (undo-tree-id208 . -111) (undo-tree-id209 . -111) (undo-tree-id210 . -111) (undo-tree-id211 . -111) (undo-tree-id212 . -111) (undo-tree-id213 . -111) (undo-tree-id214 . -111) (undo-tree-id215 . -114) 273) nil (26712 57398 914300 121000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict2/image1}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 210) (undo-tree-id107 . -113) (undo-tree-id108 . -101) (undo-tree-id109 . -10) (undo-tree-id110 . -101) (undo-tree-id111 . -10) 311) nil (26712 57398 914268 592000) 0 nil])
([nil nil ((#("{\\bfseries ,
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 12 (face (bold) fontified t) 12 13 (face (bold) fontified t)) . 162) (undo-tree-id106 . -12)) nil (26712 57398 914266 678000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 194)) nil (26712 57398 914265 807000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 196) (undo-tree-id104 . -10) (undo-tree-id105 . 11)) nil (26712 57398 914265 586000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 224)) nil (26712 57398 914264 735000) 0 nil])
([nil nil ((194 . 195) (#("
" 0 1 (fontified t)) . -194) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#("
" 0 1 (fontified t)) . -194) 189) nil (26712 57398 914264 173000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 194)) nil (26712 57398 914262 370000) 0 nil])
([nil nil ((124 . 125) (#(" " 0 1 (face (bold) fontified t)) . 124)) nil (26712 57398 914262 29000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 159)) nil (26712 57398 914261 629000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 160) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1)) nil (26712 57398 914260 286000) 0 nil])
([nil nil ((159 . 160)) nil (26712 57398 914179 234000) 0 nil])
([nil nil ((222 . 223) (221 . 222) 220) nil (26712 57398 914179 33000) 0 nil])
([nil nil ((113 . 114) 113) nil (26712 57398 914178 693000) 0 nil])
([nil nil ((130 . 146) (113 . 129)) nil (26712 57398 914178 452000) 0 nil])
([nil nil ((129 . 130) (#("
" 0 1 (fontified t)) . -129) 113) nil (26712 57398 914178 102000) 0 nil])
([nil nil ((#("\\te" 0 3 (face font-lock-keyword-face fontified t)) . 143) (undo-tree-id3 . -2)) nil (26712 57398 914177 661000) 0 nil])
([nil nil ((#("Б.Қ. Нұрахметов, Ж.Т. Жұмашева" 0 16 (fontified t) 16 17 (fontified t) 17 30 (fontified t)) . 113) (undo-tree-id2 . -29)) nil (26712 57398 914177 20000) 0 nil])
([nil nil ((nil rear-nonsticky nil 73 . 74) (nil fontified nil 44 . 74) (44 . 74) 43) nil (26712 57398 914176 218000) 0 nil])
([nil nil ((24 . 46) (254 . 274) 24) nil (26712 57398 914175 827000) 0 nil])
([nil nil ((443 . 444) (#("
" 0 1 (fontified t)) . -443) 371) nil (26712 57398 914175 376000) 0 nil])
([nil nil ((515 . 516) (#("
" 0 1 (fontified t)) . -515) 514) nil (26712 57398 914174 996000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 455) (undo-tree-id1 . -10)) nil (26712 57398 914174 655000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 482)) nil (26712 57398 914173 593000) 0 nil])
([nil nil ((463 . 468) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -463) (undo-tree-id0 . -1) (455 . 464)) nil (26712 57398 914172 591000) 0 nil])
([nil nil ((297 . 317) (583 . 601) 297) nil (26712 57398 914152 824000) 0 nil])
([nil nil ((33200 . 33201) 329) nil (26712 57398 914148 376000) 0 nil])
([nil nil ((2514 . 2515) (#("
" 0 1 (fontified t)) . -2514) (#("
" 0 1 (fontified t)) . -2514) 2456 (t 26712 57398 915197 637000)) nil (26712 57429 15688 240000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 2513)) nil (26712 57429 15687 810000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (face (bold) fontified t) 1 10 (face (font-lock-keyword-face bold) fontified t) 10 11 (face (bold) fontified t)) . 2514) (undo-tree-id224 . -10)) nil (26712 57429 15687 579000) 0 nil])
([nil nil ((2539 . 2540) (#(" " 0 1 (face (bold) fontified t)) . 2539)) nil (26712 57429 15686 467000) 0 nil])
([nil nil ((2575 . 2576) (#(" " 0 1 (face (bold) fontified t)) . 2575)) nil (26712 57429 15685 976000) 0 nil])
([nil nil ((2599 . 2600) (#("
" 0 1 (fontified t)) . -2599) 2576) nil (26712 57429 15685 385000) 0 nil])
([nil nil ((2636 . 2637)) nil (26712 57429 15685 114000) 0 nil])
([nil nil ((2456 . 2478) (2638 . 2658) 2456) nil (26712 57429 15684 824000) 0 nil])
([nil nil ((2660 . 2661)) nil (26712 57429 15684 453000) 0 nil])
([nil nil ((2750 . 2751) (#("
" 0 1 (fontified t)) . -2750) (undo-tree-id223 . -1) 2683) nil (26712 57429 15683 972000) 0 nil])
([nil nil ((2832 . 2833) (#("
" 0 1 (fontified t)) . -2832) 2830) nil (26712 57429 15674 264000) 0 nil])
([nil nil ((2683 . 2703) (2881 . 2899) 2683) nil (26712 57429 15673 603000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2682)) nil (26712 57429 15668 794000) 0 nil])
([nil nil ((2436 . 2437) (#("
" 0 1 (fontified t)) . -2436) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (#("
" 0 1 (fontified t)) . -2436) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) 2417 (t 26712 57429 17349 492000)) nil (26712 57433 997946 967000) 0 nil])
([nil nil ((4958 . 4959) (#(" " 0 1 (face (bold) fontified t)) . 4958) (t 26712 57433 999374 448000)) nil (26712 57490 486326 0) 0 nil])
([nil nil ((4995 . 4996) (#(" " 0 1 (face (bold) fontified t)) . 4995)) nil (26712 57490 486325 730000) 0 nil])
([nil nil ((5020 . 5021) (#("
" 0 1 (fontified t)) . -5020) 4996) nil (26712 57490 486325 329000) 0 nil])
([nil nil ((5059 . 5060)) nil (26712 57490 486324 968000) 0 nil])
([nil nil ((4877 . 4899) (5062 . 5082) 4877) nil (26712 57490 486324 507000) 0 nil])
([nil nil ((4769 . 4795) (#("Ключевые слова" 0 14 (fontified t)) . -4769) (undo-tree-id243 . -13) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -2) (undo-tree-id260 . -2) (undo-tree-id261 . -2) (undo-tree-id262 . -2) (undo-tree-id263 . -2) (undo-tree-id264 . -3) (undo-tree-id265 . -3) (undo-tree-id266 . -3) (undo-tree-id267 . -3) (undo-tree-id268 . -3) (undo-tree-id269 . -4) (undo-tree-id270 . -4) (undo-tree-id271 . -4) (undo-tree-id272 . -4) (undo-tree-id273 . -4) (undo-tree-id274 . -5) (undo-tree-id275 . -5) (undo-tree-id276 . -5) (undo-tree-id277 . -5) (undo-tree-id278 . -5) (undo-tree-id279 . -6) (undo-tree-id280 . -6) (undo-tree-id281 . -6) (undo-tree-id282 . -6) (undo-tree-id283 . -6) (undo-tree-id284 . -7) (undo-tree-id285 . -7) (undo-tree-id286 . -7) (undo-tree-id287 . -7) (undo-tree-id288 . -7) (undo-tree-id289 . -8) (undo-tree-id290 . -8) (undo-tree-id291 . -8) (undo-tree-id292 . -8) (undo-tree-id293 . -8) (undo-tree-id294 . -9) (undo-tree-id295 . -9) (undo-tree-id296 . -9) (undo-tree-id297 . -9) (undo-tree-id298 . -9) (undo-tree-id299 . -10) (undo-tree-id300 . -10) (undo-tree-id301 . -10) (undo-tree-id302 . -10) (undo-tree-id303 . -10) (undo-tree-id304 . -11) (undo-tree-id305 . -11) (undo-tree-id306 . -11) (undo-tree-id307 . -11) (undo-tree-id308 . -11) (undo-tree-id309 . -12) (undo-tree-id310 . -12) (undo-tree-id311 . -12) (undo-tree-id312 . -12) (undo-tree-id313 . -12) (undo-tree-id314 . -13) (undo-tree-id315 . -13) (undo-tree-id316 . -13) (undo-tree-id317 . -13) (undo-tree-id318 . -13) (undo-tree-id319 . -13) (undo-tree-id320 . -13) (undo-tree-id321 . -13) (undo-tree-id322 . -13) (undo-tree-id323 . -13) (undo-tree-id324 . -13) (undo-tree-id325 . -13) (undo-tree-id326 . -13) (undo-tree-id327 . -13) (undo-tree-id328 . -13) (undo-tree-id329 . -13) (undo-tree-id330 . -13) (undo-tree-id331 . -13) (undo-tree-id332 . -13) (undo-tree-id333 . -13) (undo-tree-id334 . -13) (undo-tree-id335 . -13) (undo-tree-id336 . -13) (undo-tree-id337 . -13) (undo-tree-id338 . -13) (undo-tree-id339 . -13) (undo-tree-id340 . -13) (undo-tree-id341 . -13) (undo-tree-id342 . -13) (undo-tree-id343 . -13) (undo-tree-id344 . -13) (undo-tree-id345 . -13) (undo-tree-id346 . -13) (undo-tree-id347 . -13) (undo-tree-id348 . -13) (undo-tree-id349 . -13) (undo-tree-id350 . -13) (undo-tree-id351 . -13) (undo-tree-id352 . -13) (undo-tree-id353 . -13) (undo-tree-id354 . -13) (undo-tree-id355 . -14) 4783) nil (26712 57490 486319 768000) 0 nil])
([nil nil ((5258 . 5259) (#("
" 0 1 (fontified t)) . -5258) 5215 (t 26712 57490 488654 95000)) nil (26712 57507 730726 333000) 0 nil])
([nil nil ((5117 . 5137) (5308 . 5326) 5117) nil (26712 57507 730725 752000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . 4795)) nil (26712 57507 730724 419000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4794 . 4795) (nil fontified nil 4794 . 4795) (4794 . 4795) 4793) nil (26712 57507 730719 580000) 0 nil])
([nil nil ((7140 . 7161) (10590 . 10606) (t 26712 57507 732738 311000)) nil (26712 57522 868793 869000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 10627) (undo-tree-id568 . -1)) nil (26712 57522 868793 578000) 0 nil])
([nil nil ((10831 . 10832) (#("
" 0 1 (fontified t)) . -10831) (undo-tree-id565 . -1) (#("
" 0 1 (fontified t)) . -10831) (undo-tree-id566 . -1) (10820 . 10821) (#("
" 0 1 (face (bold) fontified t)) . -10820) (undo-tree-id567 . -1) 10746) nil (26712 57522 868792 837000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 10830) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1)) nil (26712 57522 868791 244000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (face (bold) fontified t) 1 10 (face (font-lock-keyword-face bold) fontified t) 10 11 (face (bold) fontified t)) . 10831) (undo-tree-id546 . -10) (undo-tree-id547 . -11)) nil (26712 57522 869007 310000) 0 nil])
([nil nil ((#("{\\bfseries 1-сурет. Бейнекамераның көмегімен конвейерде автоматты сұрыптау үрдісінің жалпы көрінісі}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 74 (face (bold) fontified t) 74 75 (face (bold) fontified t) 75 84 (face (bold) fontified t) 84 85 (face (bold) fontified t) 85 99 (face (bold) fontified t) 99 100 (fontified t)) . -10746) (undo-tree-id792 . -85) (undo-tree-id793 . -85) (undo-tree-id794 . -74) (undo-tree-id795 . -74) (undo-tree-id796 . -74) (undo-tree-id797 . -74) (undo-tree-id798 . -74) (undo-tree-id799 . -74) (undo-tree-id800 . -74) (undo-tree-id801 . -74) (undo-tree-id802 . -74) (undo-tree-id803 . -74) (undo-tree-id804 . -84) (undo-tree-id805 . -84) (undo-tree-id806 . -84) (undo-tree-id807 . -84) (undo-tree-id808 . -84) (undo-tree-id809 . -84) (undo-tree-id810 . -84) (undo-tree-id811 . -84) (undo-tree-id812 . -84) (undo-tree-id813 . -84) (undo-tree-id814 . -84) (undo-tree-id815 . -84) (undo-tree-id816 . -84) (undo-tree-id817 . -84) (undo-tree-id818 . -84) (undo-tree-id819 . -84) (undo-tree-id820 . -84) (undo-tree-id821 . -84) (undo-tree-id822 . -84) (undo-tree-id823 . -84) (undo-tree-id824 . -84) (undo-tree-id825 . -84) (undo-tree-id826 . -84) (undo-tree-id827 . -84) (undo-tree-id828 . -84) (undo-tree-id829 . -84) (undo-tree-id830 . -84) (undo-tree-id831 . -84) (undo-tree-id832 . -84) (undo-tree-id833 . -84) (undo-tree-id834 . -84) (undo-tree-id835 . -84) (undo-tree-id836 . -84) (undo-tree-id837 . -84) (undo-tree-id838 . -84) (undo-tree-id839 . -84) (undo-tree-id840 . -84) (undo-tree-id841 . -84) (undo-tree-id842 . -84) (undo-tree-id843 . -84) (undo-tree-id844 . -84) (undo-tree-id845 . -84) (undo-tree-id846 . -84) (undo-tree-id847 . -84) (undo-tree-id848 . -84) (undo-tree-id849 . -84) (undo-tree-id850 . -84) (undo-tree-id851 . -84) (undo-tree-id852 . -84) (undo-tree-id853 . -84) (undo-tree-id854 . -84) (undo-tree-id855 . -84) (undo-tree-id856 . -84) (undo-tree-id857 . -84) (undo-tree-id858 . -84) (undo-tree-id859 . -84) (undo-tree-id860 . -84) (undo-tree-id861 . -84) (undo-tree-id862 . -84) (undo-tree-id863 . -84) (undo-tree-id864 . -84) (undo-tree-id865 . -84) (undo-tree-id866 . -84) (undo-tree-id867 . -84) (undo-tree-id868 . -85) (undo-tree-id869 . -85) (undo-tree-id870 . -85) (undo-tree-id871 . -85) (undo-tree-id872 . -85) (undo-tree-id873 . -85) (undo-tree-id874 . -85) (undo-tree-id875 . -85) (undo-tree-id876 . -85) (undo-tree-id877 . -85) (undo-tree-id878 . -85) (undo-tree-id879 . -85) (undo-tree-id880 . -85) (undo-tree-id881 . -85) (undo-tree-id882 . -85) (undo-tree-id883 . -85) (undo-tree-id884 . -85) (undo-tree-id885 . -85) (undo-tree-id886 . -85) (undo-tree-id887 . -85) (undo-tree-id888 . -85) (undo-tree-id889 . -85) (undo-tree-id890 . -85) (undo-tree-id891 . -85) (undo-tree-id892 . -85) (undo-tree-id893 . -85) (undo-tree-id894 . -85) (undo-tree-id895 . -85) (undo-tree-id896 . -85) (undo-tree-id897 . -85) (undo-tree-id898 . -85) (undo-tree-id899 . -85) (undo-tree-id900 . -85) (undo-tree-id901 . -85) (undo-tree-id902 . -85) (undo-tree-id903 . -85) (undo-tree-id904 . -85) (undo-tree-id905 . -85) (undo-tree-id906 . -85) (undo-tree-id907 . -85) (undo-tree-id908 . -85) (undo-tree-id909 . -85) (undo-tree-id910 . -85) (undo-tree-id911 . -85) (undo-tree-id912 . -85) (undo-tree-id913 . -85) (undo-tree-id914 . -85) (undo-tree-id915 . -85) (undo-tree-id916 . -85) (undo-tree-id917 . -85) (undo-tree-id918 . -85) (undo-tree-id919 . -85) (undo-tree-id920 . -85) (undo-tree-id921 . -85) (undo-tree-id922 . -85) (undo-tree-id923 . -85) (undo-tree-id924 . -85) (undo-tree-id925 . -85) (undo-tree-id926 . -85) (undo-tree-id927 . -85) (undo-tree-id928 . -85) (undo-tree-id929 . -85) (undo-tree-id930 . -85) (undo-tree-id931 . -85) (undo-tree-id932 . -85) (undo-tree-id933 . -85) (undo-tree-id934 . -85) (undo-tree-id935 . -85) (undo-tree-id936 . -85) (undo-tree-id937 . -85) (undo-tree-id938 . -85) (undo-tree-id939 . -85) (undo-tree-id940 . -85) (undo-tree-id941 . -85) (undo-tree-id942 . -85) (undo-tree-id943 . -85) (undo-tree-id944 . -85) (undo-tree-id945 . -85) (undo-tree-id946 . -85) (undo-tree-id947 . -85) (undo-tree-id948 . -85) (undo-tree-id949 . -85) (undo-tree-id950 . -85) (undo-tree-id951 . -85) (undo-tree-id952 . -85) (undo-tree-id953 . -85) (undo-tree-id954 . -85) (undo-tree-id955 . -85) (undo-tree-id956 . -85) (undo-tree-id957 . -85) (undo-tree-id958 . -85) (undo-tree-id959 . -85) (undo-tree-id960 . -85) (undo-tree-id961 . -85) (undo-tree-id962 . -85) (undo-tree-id963 . -85) (undo-tree-id964 . -85) (undo-tree-id965 . -85) (undo-tree-id966 . -85) (undo-tree-id967 . -85) (undo-tree-id968 . -85) (undo-tree-id969 . -85) (undo-tree-id970 . -85) (undo-tree-id971 . -85) (undo-tree-id972 . -85) (undo-tree-id973 . -85) (undo-tree-id974 . -85) (undo-tree-id975 . -85) (undo-tree-id976 . -85) (undo-tree-id977 . -85) (undo-tree-id978 . -99) (undo-tree-id979 . -99) (undo-tree-id980 . -99) (undo-tree-id981 . -99) (undo-tree-id982 . -99) (undo-tree-id983 . -99) (undo-tree-id984 . -99) (undo-tree-id985 . -99) (undo-tree-id986 . -99) (undo-tree-id987 . -99) (undo-tree-id988 . -99) (undo-tree-id989 . -99) (undo-tree-id990 . -99) (undo-tree-id991 . -99) (undo-tree-id992 . -99) (undo-tree-id993 . -99) (undo-tree-id994 . -99) 10847) nil (26712 57535 426258 925000) 0 nil] [nil nil ((10746 . 10846) (#("{\\bfseries 1-сурет. Бейнекамераның көмегімен конвейерде автоматты сұрыптау үрдісінің жалпы көрінісі}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 74 (face (bold) fontified t) 74 75 (face (bold) fontified t) 75 84 (face (bold) fontified t) 84 85 (face (bold) fontified t) 85 99 (face (bold) fontified t) 99 101 (fontified t)) . -10746) (undo-tree-id356 . -85) (undo-tree-id357 . -85) (undo-tree-id358 . -85) (undo-tree-id359 . -85) (undo-tree-id360 . -74) (undo-tree-id361 . -74) (undo-tree-id362 . -74) (undo-tree-id363 . -74) (undo-tree-id364 . -74) (undo-tree-id365 . -74) (undo-tree-id366 . -74) (undo-tree-id367 . -74) (undo-tree-id368 . -74) (undo-tree-id369 . -74) (undo-tree-id370 . -84) (undo-tree-id371 . -84) (undo-tree-id372 . -84) (undo-tree-id373 . -84) (undo-tree-id374 . -84) (undo-tree-id375 . -84) (undo-tree-id376 . -84) (undo-tree-id377 . -84) (undo-tree-id378 . -84) (undo-tree-id379 . -84) (undo-tree-id380 . -84) (undo-tree-id381 . -84) (undo-tree-id382 . -84) (undo-tree-id383 . -84) (undo-tree-id384 . -84) (undo-tree-id385 . -84) (undo-tree-id386 . -84) (undo-tree-id387 . -84) (undo-tree-id388 . -84) (undo-tree-id389 . -84) (undo-tree-id390 . -84) (undo-tree-id391 . -84) (undo-tree-id392 . -84) (undo-tree-id393 . -84) (undo-tree-id394 . -84) (undo-tree-id395 . -84) (undo-tree-id396 . -84) (undo-tree-id397 . -84) (undo-tree-id398 . -84) (undo-tree-id399 . -84) (undo-tree-id400 . -84) (undo-tree-id401 . -84) (undo-tree-id402 . -84) (undo-tree-id403 . -84) (undo-tree-id404 . -84) (undo-tree-id405 . -84) (undo-tree-id406 . -84) (undo-tree-id407 . -84) (undo-tree-id408 . -84) (undo-tree-id409 . -84) (undo-tree-id410 . -84) (undo-tree-id411 . -84) (undo-tree-id412 . -84) (undo-tree-id413 . -84) (undo-tree-id414 . -84) (undo-tree-id415 . -84) (undo-tree-id416 . -84) (undo-tree-id417 . -84) (undo-tree-id418 . -84) (undo-tree-id419 . -84) (undo-tree-id420 . -84) (undo-tree-id421 . -84) (undo-tree-id422 . -84) (undo-tree-id423 . -84) (undo-tree-id424 . -84) (undo-tree-id425 . -84) (undo-tree-id426 . -84) (undo-tree-id427 . -84) (undo-tree-id428 . -84) (undo-tree-id429 . -84) (undo-tree-id430 . -84) (undo-tree-id431 . -84) (undo-tree-id432 . -84) (undo-tree-id433 . -84) (undo-tree-id434 . -85) (undo-tree-id435 . -85) (undo-tree-id436 . -85) (undo-tree-id437 . -85) (undo-tree-id438 . -85) (undo-tree-id439 . -85) (undo-tree-id440 . -85) (undo-tree-id441 . -85) (undo-tree-id442 . -85) (undo-tree-id443 . -85) (undo-tree-id444 . -85) (undo-tree-id445 . -85) (undo-tree-id446 . -85) (undo-tree-id447 . -85) (undo-tree-id448 . -85) (undo-tree-id449 . -85) (undo-tree-id450 . -85) (undo-tree-id451 . -85) (undo-tree-id452 . -85) (undo-tree-id453 . -85) (undo-tree-id454 . -85) (undo-tree-id455 . -85) (undo-tree-id456 . -85) (undo-tree-id457 . -85) (undo-tree-id458 . -85) (undo-tree-id459 . -85) (undo-tree-id460 . -85) (undo-tree-id461 . -85) (undo-tree-id462 . -85) (undo-tree-id463 . -85) (undo-tree-id464 . -85) (undo-tree-id465 . -85) (undo-tree-id466 . -85) (undo-tree-id467 . -85) (undo-tree-id468 . -85) (undo-tree-id469 . -85) (undo-tree-id470 . -85) (undo-tree-id471 . -85) (undo-tree-id472 . -85) (undo-tree-id473 . -85) (undo-tree-id474 . -85) (undo-tree-id475 . -85) (undo-tree-id476 . -85) (undo-tree-id477 . -85) (undo-tree-id478 . -85) (undo-tree-id479 . -85) (undo-tree-id480 . -85) (undo-tree-id481 . -85) (undo-tree-id482 . -85) (undo-tree-id483 . -85) (undo-tree-id484 . -85) (undo-tree-id485 . -85) (undo-tree-id486 . -85) (undo-tree-id487 . -85) (undo-tree-id488 . -85) (undo-tree-id489 . -85) (undo-tree-id490 . -85) (undo-tree-id491 . -85) (undo-tree-id492 . -85) (undo-tree-id493 . -85) (undo-tree-id494 . -85) (undo-tree-id495 . -85) (undo-tree-id496 . -85) (undo-tree-id497 . -85) (undo-tree-id498 . -85) (undo-tree-id499 . -85) (undo-tree-id500 . -85) (undo-tree-id501 . -85) (undo-tree-id502 . -85) (undo-tree-id503 . -85) (undo-tree-id504 . -85) (undo-tree-id505 . -85) (undo-tree-id506 . -85) (undo-tree-id507 . -85) (undo-tree-id508 . -85) (undo-tree-id509 . -85) (undo-tree-id510 . -85) (undo-tree-id511 . -85) (undo-tree-id512 . -85) (undo-tree-id513 . -85) (undo-tree-id514 . -85) (undo-tree-id515 . -85) (undo-tree-id516 . -85) (undo-tree-id517 . -85) (undo-tree-id518 . -85) (undo-tree-id519 . -85) (undo-tree-id520 . -85) (undo-tree-id521 . -85) (undo-tree-id522 . -85) (undo-tree-id523 . -85) (undo-tree-id524 . -85) (undo-tree-id525 . -85) (undo-tree-id526 . -85) (undo-tree-id527 . -85) (undo-tree-id528 . -85) (undo-tree-id529 . -85) (undo-tree-id530 . -85) (undo-tree-id531 . -85) (undo-tree-id532 . -85) (undo-tree-id533 . -85) (undo-tree-id534 . -85) (undo-tree-id535 . -85) (undo-tree-id536 . -85) (undo-tree-id537 . -85) (undo-tree-id538 . -85) (undo-tree-id539 . -85) (undo-tree-id540 . -85) (undo-tree-id541 . -85) (undo-tree-id542 . -85) (undo-tree-id543 . -85) (undo-tree-id544 . -85) (undo-tree-id545 . -101) 10847) ((10746 . 10847) (#("\\caption*{1-сурет. Бейнекамераның көмегімен конвейерде автоматты сұрыптау үрдісінің жалпы көрінісі}
" 0 9 (face font-lock-keyword-face fontified t) 9 99 (fontified t) 99 100 (fontified t)) . 10746)) (26712 57522 868780 253000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10816 . 10817) (nil fontified nil 10729 . 10817) (10729 . 10817)) nil (26712 57535 426203 0) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 10832) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1)) nil (26712 57535 426202 279000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 10832) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1)) nil (26712 57535 426194 3000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 10832)) nil (26712 57535 426361 17000) 0 nil])
([nil nil ((#("{\\bfseries 2-сурет. KUKA \\_3D Perception стерео сенсоры}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 25 (face (bold) fontified t) 25 27 (face (font-lock-keyword-face bold) fontified t) 27 30 (face (bold) fontified t) 30 44 (face (bold) fontified t) 44 55 (face (bold) fontified t) 55 56 (fontified t)) . 12289)) ((12289 . 12345)) (26712 57536 699467 746000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12315 . 12316) (nil fontified nil 12272 . 12316) (12272 . 12316)) nil (26712 57539 631511 435000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12170) (undo-tree-id1011 . -1)) nil (26712 57539 631686 83000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12330) (undo-tree-id1019 . -1)) nil (26712 57548 977754 954000) 0 nil] [nil nil ((#("\\begin{figure}[H]
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 17 (fontified t) 17 18 (fontified t)) . 12170) (undo-tree-id995 . -17) (undo-tree-id996 . -16) (undo-tree-id997 . -16) (undo-tree-id998 . -16) (undo-tree-id999 . -16) (undo-tree-id1000 . -16) (undo-tree-id1001 . -16) (undo-tree-id1002 . -16) (undo-tree-id1003 . -16) (undo-tree-id1004 . -16) (undo-tree-id1005 . -16) (undo-tree-id1006 . -16) (undo-tree-id1007 . -16) (undo-tree-id1008 . -17) (undo-tree-id1009 . -16) (undo-tree-id1010 . -18)) ((12170 . 12188)) (26712 57539 631506 215000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12330) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1)) nil (26712 57548 977753 392000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 12330)) nil (26712 57548 977670 325000) 0 nil])
([nil nil ((13110 . 13111)) nil (26712 57548 977669 895000) 0 nil])
([nil nil ((13112 . 13113)) nil (26712 57548 977854 442000) 0 nil])
([nil nil ((12272 . 12273)) nil (26712 57561 792067 630000) 0 nil] [nil nil ((12271 . 12272)) ((#(" " 0 1 (fontified t)) . 12271)) (26712 57548 977665 226000) 0 nil])
([nil nil ((12274 . 12275)) nil (26712 57561 792067 370000) 0 nil])
nil
([nil nil ((10731 . 10732)) nil (26712 57561 792067 89000) 0 nil])
([nil nil ((10730 . 10731)) nil (26712 57561 792066 839000) 0 nil])
([nil nil ((#("{\\bfseries 3 - сурет. iRVision жүйесі}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 37 (face (bold) fontified t) 37 38 (fontified t)) . -13102) 13141) nil (26712 57561 792066 508000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13110 . 13111) (nil fontified nil 13085 . 13111) (13085 . 13111)) nil (26712 57561 792066 248000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12982) (undo-tree-id1030 . -1)) nil (26712 57561 792065 877000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13125) (undo-tree-id1029 . -1)) nil (26712 57561 792064 785000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13125) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1)) nil (26712 57561 792062 661000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13125) (undo-tree-id1020 . -1)) nil (26712 57561 792054 145000) 0 nil])
([nil nil ((15077 . 15078) (t 26712 57561 793999 122000)) nil (26712 57576 173142 779000) 0 nil])
([nil nil ((15076 . 15077)) nil (26712 57576 173142 478000) 0 nil])
([nil nil ((#("{\\bfseries 5 - сурет. Контроллер элементтерінің орналасуы}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 57 (face (bold) fontified t) 57 58 (fontified t)) . -15064) (undo-tree-id1031 . 45) (undo-tree-id1032 . -12) (undo-tree-id1033 . -12) (undo-tree-id1034 . -12) (undo-tree-id1035 . -12) 15123) nil (26712 57576 173141 627000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15092 . 15093) (nil fontified nil 15047 . 15093) (15047 . 15093)) nil (26712 57576 173130 486000) 0 nil])
([nil nil ((13713 . 13714)) nil (26712 57576 173129 824000) 0 nil])
([nil nil ((13715 . 13716)) nil (26712 57576 173125 677000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15110) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (t 26712 57576 175067 742000)) nil (26712 57582 316905 177000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15110) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1)) nil (26712 57582 316899 45000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15110) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1)) nil (26712 57582 316892 533000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14947) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1)) nil (26712 57582 316884 67000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 16485) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (t 26712 57582 319096 960000)) nil (26712 57588 440537 338000) 0 nil])
([nil nil ((16671 . 16672) (#("
" 0 1 (face (bold) fontified t)) . -16671) 16604) nil (26712 57615 748305 482000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . -16685) (undo-tree-id1063 . -1) (16671 . 16672) (#("
" 0 1 (face (bold) fontified t)) . -16671) (undo-tree-id1064 . -1) 16604) ((16671 . 16672) (#(" " 0 1 (face (bold) fontified nil)) . 16671) (16685 . 16686)) (26712 57588 440182 260000) 0 nil])
([nil nil ((#("{\\bfseries Контроллердің сандық және аналогтық контактілері}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 46 (face (bold) fontified t) 46 47 (face (bold) fontified t) 47 59 (face (bold) fontified t) 59 60 (fontified t)) . -16625) (undo-tree-id1085 . -45) (undo-tree-id1086 . -46) (undo-tree-id1087 . -46) (undo-tree-id1088 . -59) (undo-tree-id1089 . -46) (undo-tree-id1090 . -46) 16686) nil (26712 57615 748304 350000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 16634 . 16635) (nil fontified nil 16587 . 16635) (16587 . 16635)) nil (26712 57615 748301 605000) 0 nil])
([nil nil ((#("{\\bfseries 6-сурет.}" 0 1 (fontified t) 1 3 (face font-lock-keyword-face fontified t) 3 10 (face font-lock-keyword-face fontified t) 10 19 (face (bold) fontified t) 19 20 (fontified t)) . -16652) (undo-tree-id1081 . -20) (undo-tree-id1082 . -20) (undo-tree-id1083 . -20) (undo-tree-id1084 . -20) 16674) nil (26712 57615 748301 14000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16594 . 16595) (nil fontified nil 16587 . 16595) (16587 . 16595) 16586) nil (26712 57615 748294 431000) 0 nil])
([nil nil ((16595 . 16596)) nil (26712 57615 748293 940000) 0 nil])
([nil nil ((16588 . 16589)) nil (26712 57615 748293 570000) 0 nil])
([nil nil ((16590 . 16591)) nil (26712 57615 748293 199000) 0 nil])
([nil nil ((#("{\\bfseries 7-сурет. Роботтандырылған жүйенің құрылымдық сұлбасы}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 63 (face (bold) fontified t) 63 64 (fontified t)) . -19927) 19992) nil (26712 57615 748292 57000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19961 . 19962) (nil fontified nil 19910 . 19962) (19910 . 19962)) nil (26712 57615 748291 686000) 0 nil])
([nil nil ((19911 . 19912)) nil (26712 57615 748291 185000) 0 nil])
([nil nil ((19913 . 19914)) nil (26712 57615 748290 804000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 19979) (undo-tree-id1080 . -1)) nil (26712 57615 748290 23000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 19979) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1)) nil (26712 57615 748288 560000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 19979) (undo-tree-id1071 . -1)) nil (26712 57615 748279 123000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 19808) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (t 26712 57615 751254 974000)) nil (26712 57617 89518 441000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 21255) (t 26712 57617 92261 279000)) nil (26712 57639 675024 954000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (face (bold) fontified t) 1 10 (face (font-lock-keyword-face bold) fontified t) 10 11 (face (bold) fontified t)) . 21256) (undo-tree-id1405 . -10) (undo-tree-id1406 . -11)) nil (26712 57639 675024 223000) 0 nil])
([nil nil ((#("{\\bfseries 8-сурет. Виртуалды аспаптың бет панелі}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 19 (face (bold) fontified t) 19 20 (face (bold) fontified t) 20 49 (face (bold) fontified t) 49 50 (fontified t)) . -21236) (undo-tree-id1306 . -20) (undo-tree-id1307 . -20) (undo-tree-id1308 . -20) (undo-tree-id1309 . -20) (undo-tree-id1310 . -20) (undo-tree-id1311 . -20) (undo-tree-id1312 . -20) (undo-tree-id1313 . -20) (undo-tree-id1314 . -20) (undo-tree-id1315 . -20) (undo-tree-id1316 . -20) (undo-tree-id1317 . -20) (undo-tree-id1318 . -20) (undo-tree-id1319 . -20) (undo-tree-id1320 . -20) (undo-tree-id1321 . -20) (undo-tree-id1322 . -20) (undo-tree-id1323 . -20) (undo-tree-id1324 . -20) (undo-tree-id1325 . -20) (undo-tree-id1326 . -20) (undo-tree-id1327 . -20) (undo-tree-id1328 . -20) (undo-tree-id1329 . -20) (undo-tree-id1330 . -20) (undo-tree-id1331 . -20) (undo-tree-id1332 . -20) (undo-tree-id1333 . -20) (undo-tree-id1334 . -20) (undo-tree-id1335 . -20) (undo-tree-id1336 . -20) (undo-tree-id1337 . -20) (undo-tree-id1338 . -20) (undo-tree-id1339 . -20) (undo-tree-id1340 . -20) (undo-tree-id1341 . -20) (undo-tree-id1342 . -20) (undo-tree-id1343 . -20) (undo-tree-id1344 . -20) (undo-tree-id1345 . -20) (undo-tree-id1346 . -20) (undo-tree-id1347 . -20) (undo-tree-id1348 . -20) (undo-tree-id1349 . -20) (undo-tree-id1350 . -20) (undo-tree-id1351 . -20) (undo-tree-id1352 . -20) (undo-tree-id1353 . -20) (undo-tree-id1354 . -20) (undo-tree-id1355 . -20) (undo-tree-id1356 . -20) (undo-tree-id1357 . -20) (undo-tree-id1358 . -20) (undo-tree-id1359 . -20) (undo-tree-id1360 . -20) (undo-tree-id1361 . -20) (undo-tree-id1362 . -20) (undo-tree-id1363 . -20) (undo-tree-id1364 . -20) (undo-tree-id1365 . -20) (undo-tree-id1366 . -20) (undo-tree-id1367 . -20) (undo-tree-id1368 . -20) (undo-tree-id1369 . -20) (undo-tree-id1370 . -20) (undo-tree-id1371 . -20) (undo-tree-id1372 . -20) (undo-tree-id1373 . -20) (undo-tree-id1374 . -20) (undo-tree-id1375 . -20) (undo-tree-id1376 . -20) (undo-tree-id1377 . -20) (undo-tree-id1378 . -20) (undo-tree-id1379 . -20) (undo-tree-id1380 . -20) (undo-tree-id1381 . -20) (undo-tree-id1382 . -20) (undo-tree-id1383 . -20) (undo-tree-id1384 . -20) (undo-tree-id1385 . -20) (undo-tree-id1386 . -20) (undo-tree-id1387 . -20) (undo-tree-id1388 . -20) (undo-tree-id1389 . -20) (undo-tree-id1390 . -20) (undo-tree-id1391 . -20) (undo-tree-id1392 . -20) (undo-tree-id1393 . -20) (undo-tree-id1394 . -20) (undo-tree-id1395 . -20) (undo-tree-id1396 . -20) (undo-tree-id1397 . -20) (undo-tree-id1398 . -20) (undo-tree-id1399 . -20) (undo-tree-id1400 . -20) (undo-tree-id1401 . -20) (undo-tree-id1402 . -20) (undo-tree-id1403 . -20) (undo-tree-id1404 . -20) 21287) nil (26712 57639 675021 979000) 0 nil])
([nil nil ((nil rear-nonsticky nil 21256 . 21257) (nil fontified nil 21219 . 21257) (21219 . 21257)) nil (26712 57639 674987 985000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21272) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1)) nil (26712 57639 674987 384000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21272) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1)) nil (26712 57639 674982 374000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21272)) nil (26712 57639 674903 366000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21117) (undo-tree-id1175 . -1)) nil (26712 57639 674903 155000) 0 nil])
([nil nil ((21536 . 21537)) nil (26712 57639 674902 684000) 0 nil])
([nil nil ((21538 . 21539)) nil (26712 57639 674902 444000) 0 nil])
([nil nil ((21219 . 21220)) nil (26712 57639 674902 294000) 0 nil])
([nil nil ((21221 . 21222)) nil (26712 57639 674902 13000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 21547)) nil (26712 57639 674901 723000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (face (bold) fontified t) 1 10 (face (font-lock-keyword-face bold) fontified t) 10 11 (face (bold) fontified t)) . 21548) (undo-tree-id1174 . -10)) nil (26712 57639 674901 492000) 0 nil])
([nil nil ((#("{\\bfseries 9 - сурет. Виртуалды аспаптың бет панелі}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 21 (face (bold) fontified t) 21 22 (face (bold) fontified t) 22 51 (face (bold) fontified t) 51 52 (fontified t)) . -21526) (undo-tree-id1156 . -22) (undo-tree-id1157 . -22) (undo-tree-id1158 . -22) (undo-tree-id1159 . -22) (undo-tree-id1160 . -22) (undo-tree-id1161 . -22) (undo-tree-id1162 . -22) (undo-tree-id1163 . -22) (undo-tree-id1164 . -22) (undo-tree-id1165 . -22) (undo-tree-id1166 . -22) (undo-tree-id1167 . -22) (undo-tree-id1168 . -22) (undo-tree-id1169 . -22) (undo-tree-id1170 . -22) (undo-tree-id1171 . -22) (undo-tree-id1172 . -22) (undo-tree-id1173 . -22) 21579) nil (26712 57639 674900 671000) 0 nil])
([nil nil ((nil rear-nonsticky nil 21548 . 21549) (nil fontified nil 21509 . 21549) (21509 . 21549)) nil (26712 57639 674894 439000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21564) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1)) nil (26712 57639 674893 908000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21564) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1)) nil (26712 57639 674888 157000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21564) (undo-tree-id1099 . -1)) nil (26712 57639 675143 527000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21407)) nil (26712 57654 952878 725000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . 21564) (undo-tree-id1097 . 1) (undo-tree-id1098 . -1)) ((21564 . 21565)) (26712 57639 674867 779000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 22371)) nil (26712 57654 952878 545000) 0 nil])
nil
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 22372) (undo-tree-id1774 . -10) (undo-tree-id1775 . -11)) nil (26712 57654 952878 134000) 0 nil])
([nil nil ((22413 . 22414) (#("
" 0 1 (face (bold) fontified t)) . -22413) (undo-tree-id1773 . -1) 22372) nil (26712 57654 952876 932000) 0 nil])
([nil nil ((#("{\\bfseries 10-сурет. Суреттер сериясын уақытша өңдеу жүйесінің құрылымы}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 20 (face (bold) fontified t) 20 21 (face (bold) fontified t) 21 62 (face (bold) fontified t) 62 63 (face (bold) fontified t) 63 71 (face (bold) fontified t) 71 72 (fontified t)) . -22351) (undo-tree-id1628 . -61) (undo-tree-id1629 . -62) (undo-tree-id1630 . -62) (undo-tree-id1631 . -21) (undo-tree-id1632 . -21) (undo-tree-id1633 . -21) (undo-tree-id1634 . -21) (undo-tree-id1635 . -21) (undo-tree-id1636 . -21) (undo-tree-id1637 . -21) (undo-tree-id1638 . -21) (undo-tree-id1639 . -21) (undo-tree-id1640 . -21) (undo-tree-id1641 . -21) (undo-tree-id1642 . -21) (undo-tree-id1643 . -21) (undo-tree-id1644 . -21) (undo-tree-id1645 . -21) (undo-tree-id1646 . -21) (undo-tree-id1647 . -21) (undo-tree-id1648 . -21) (undo-tree-id1649 . -21) (undo-tree-id1650 . -21) (undo-tree-id1651 . -21) (undo-tree-id1652 . -21) (undo-tree-id1653 . -21) (undo-tree-id1654 . -21) (undo-tree-id1655 . -21) (undo-tree-id1656 . -21) (undo-tree-id1657 . -21) (undo-tree-id1658 . -21) (undo-tree-id1659 . -21) (undo-tree-id1660 . -21) (undo-tree-id1661 . -21) (undo-tree-id1662 . -21) (undo-tree-id1663 . -21) (undo-tree-id1664 . -21) (undo-tree-id1665 . -21) (undo-tree-id1666 . -21) (undo-tree-id1667 . -21) (undo-tree-id1668 . -21) (undo-tree-id1669 . -21) (undo-tree-id1670 . -21) (undo-tree-id1671 . -21) (undo-tree-id1672 . -21) (undo-tree-id1673 . -21) (undo-tree-id1674 . -21) (undo-tree-id1675 . -21) (undo-tree-id1676 . -21) (undo-tree-id1677 . -21) (undo-tree-id1678 . -21) (undo-tree-id1679 . -21) (undo-tree-id1680 . -21) (undo-tree-id1681 . -21) (undo-tree-id1682 . -21) (undo-tree-id1683 . -21) (undo-tree-id1684 . -21) (undo-tree-id1685 . -21) (undo-tree-id1686 . -21) (undo-tree-id1687 . -21) (undo-tree-id1688 . -21) (undo-tree-id1689 . -62) (undo-tree-id1690 . -62) (undo-tree-id1691 . -62) (undo-tree-id1692 . -62) (undo-tree-id1693 . -62) (undo-tree-id1694 . -62) (undo-tree-id1695 . -62) (undo-tree-id1696 . -62) (undo-tree-id1697 . -62) (undo-tree-id1698 . -62) (undo-tree-id1699 . -62) (undo-tree-id1700 . -62) (undo-tree-id1701 . -62) (undo-tree-id1702 . -62) (undo-tree-id1703 . -62) (undo-tree-id1704 . -62) (undo-tree-id1705 . -62) (undo-tree-id1706 . -62) (undo-tree-id1707 . -62) (undo-tree-id1708 . -62) (undo-tree-id1709 . -62) (undo-tree-id1710 . -62) (undo-tree-id1711 . -62) (undo-tree-id1712 . -62) (undo-tree-id1713 . -62) (undo-tree-id1714 . -62) (undo-tree-id1715 . -62) (undo-tree-id1716 . -62) (undo-tree-id1717 . -62) (undo-tree-id1718 . -62) (undo-tree-id1719 . -62) (undo-tree-id1720 . -62) (undo-tree-id1721 . -62) (undo-tree-id1722 . -62) (undo-tree-id1723 . -62) (undo-tree-id1724 . -62) (undo-tree-id1725 . -62) (undo-tree-id1726 . -62) (undo-tree-id1727 . -62) (undo-tree-id1728 . -62) (undo-tree-id1729 . -62) (undo-tree-id1730 . -62) (undo-tree-id1731 . -62) (undo-tree-id1732 . -62) (undo-tree-id1733 . -62) (undo-tree-id1734 . -62) (undo-tree-id1735 . -62) (undo-tree-id1736 . -62) (undo-tree-id1737 . -62) (undo-tree-id1738 . -62) (undo-tree-id1739 . -62) (undo-tree-id1740 . -62) (undo-tree-id1741 . -62) (undo-tree-id1742 . -62) (undo-tree-id1743 . -62) (undo-tree-id1744 . -62) (undo-tree-id1745 . -62) (undo-tree-id1746 . -62) (undo-tree-id1747 . -62) (undo-tree-id1748 . -62) (undo-tree-id1749 . -62) (undo-tree-id1750 . -62) (undo-tree-id1751 . -62) (undo-tree-id1752 . -62) (undo-tree-id1753 . -62) (undo-tree-id1754 . -62) (undo-tree-id1755 . -62) (undo-tree-id1756 . -62) (undo-tree-id1757 . -62) (undo-tree-id1758 . -62) (undo-tree-id1759 . -62) (undo-tree-id1760 . -62) (undo-tree-id1761 . -62) (undo-tree-id1762 . -62) (undo-tree-id1763 . -62) (undo-tree-id1764 . -62) (undo-tree-id1765 . -62) (undo-tree-id1766 . -62) (undo-tree-id1767 . -62) (undo-tree-id1768 . -62) (undo-tree-id1769 . -62) (undo-tree-id1770 . -62) (undo-tree-id1771 . -62) (undo-tree-id1772 . -62) 22424) nil (26712 57654 952874 507000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22393 . 22394) (nil fontified nil 22334 . 22394) (22334 . 22394)) nil (26712 57654 952829 673000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 22409) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1)) nil (26712 57654 952829 252000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 22409) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1)) nil (26712 57654 952823 742000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 22409)) nil (26712 57654 952697 815000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 22231) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1)) nil (26712 57654 952697 384000) 0 nil])
([nil nil ((22786 . 22787) (#("
" 0 1 (fontified t)) . -22786) (undo-tree-id1443 . -1) 22765) nil (26712 57654 952694 759000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 22785) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1)) nil (26712 57654 952693 497000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (face (bold) fontified t) 1 4 (face (font-lock-keyword-face bold) fontified t) 4 10 (face (font-lock-keyword-face bold) fontified t) 10 11 (face (bold) fontified t)) . 22786) (undo-tree-id1412 . -10) (undo-tree-id1413 . -11)) nil (26712 57654 952978 854000) 0 nil])
([nil nil ((#("{\\bfseries 11-сурет. Бейнелерді талдау функциялары}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 20 (face (bold) fontified t) 20 21 (face (bold) fontified t) 21 50 (face (bold) fontified t) 50 51 (fontified t)) . -22765) (undo-tree-id1796 . -21) (undo-tree-id1797 . -21) (undo-tree-id1798 . -21) (undo-tree-id1799 . -21) (undo-tree-id1800 . -20) (undo-tree-id1801 . -20) (undo-tree-id1802 . -20) (undo-tree-id1803 . -20) (undo-tree-id1804 . -20) (undo-tree-id1805 . -20) (undo-tree-id1806 . -20) (undo-tree-id1807 . -20) (undo-tree-id1808 . -20) (undo-tree-id1809 . -20) (undo-tree-id1810 . -20) (undo-tree-id1811 . -20) (undo-tree-id1812 . -20) (undo-tree-id1813 . -20) (undo-tree-id1814 . -20) (undo-tree-id1815 . -20) (undo-tree-id1816 . -20) (undo-tree-id1817 . -20) (undo-tree-id1818 . -20) (undo-tree-id1819 . -20) (undo-tree-id1820 . -20) (undo-tree-id1821 . -20) (undo-tree-id1822 . -20) (undo-tree-id1823 . -20) (undo-tree-id1824 . -20) (undo-tree-id1825 . -20) (undo-tree-id1826 . -20) (undo-tree-id1827 . -21) (undo-tree-id1828 . -21) (undo-tree-id1829 . -21) (undo-tree-id1830 . -20) (undo-tree-id1831 . -21) (undo-tree-id1832 . -21) (undo-tree-id1833 . -21) (undo-tree-id1834 . -21) (undo-tree-id1835 . -21) (undo-tree-id1836 . -21) (undo-tree-id1837 . -21) (undo-tree-id1838 . -21) (undo-tree-id1839 . -21) (undo-tree-id1840 . -21) (undo-tree-id1841 . -21) (undo-tree-id1842 . -21) (undo-tree-id1843 . -21) (undo-tree-id1844 . -21) (undo-tree-id1845 . -21) (undo-tree-id1846 . -21) (undo-tree-id1847 . -21) (undo-tree-id1848 . -21) (undo-tree-id1849 . -21) (undo-tree-id1850 . -21) (undo-tree-id1851 . -21) (undo-tree-id1852 . -21) (undo-tree-id1853 . -21) (undo-tree-id1854 . -21) (undo-tree-id1855 . -21) (undo-tree-id1856 . -21) (undo-tree-id1857 . -21) (undo-tree-id1858 . -21) (undo-tree-id1859 . -21) (undo-tree-id1860 . -21) (undo-tree-id1861 . -21) (undo-tree-id1862 . -21) (undo-tree-id1863 . -21) (undo-tree-id1864 . -21) (undo-tree-id1865 . -21) (undo-tree-id1866 . -21) (undo-tree-id1867 . -21) (undo-tree-id1868 . -21) (undo-tree-id1869 . -21) (undo-tree-id1870 . -21) (undo-tree-id1871 . -21) (undo-tree-id1872 . -21) (undo-tree-id1873 . -21) (undo-tree-id1874 . -21) (undo-tree-id1875 . -21) (undo-tree-id1876 . -21) (undo-tree-id1877 . -21) (undo-tree-id1878 . -21) (undo-tree-id1879 . -21) (undo-tree-id1880 . -21) (undo-tree-id1881 . -21) (undo-tree-id1882 . -21) (undo-tree-id1883 . -21) (undo-tree-id1884 . -21) (undo-tree-id1885 . -21) (undo-tree-id1886 . -21) (undo-tree-id1887 . -21) (undo-tree-id1888 . -21) (undo-tree-id1889 . -21) (undo-tree-id1890 . -21) (undo-tree-id1891 . -21) (undo-tree-id1892 . -21) (undo-tree-id1893 . -21) (undo-tree-id1894 . -21) (undo-tree-id1895 . -21) (undo-tree-id1896 . -21) (undo-tree-id1897 . -21) (undo-tree-id1898 . -21) (undo-tree-id1899 . -21) (undo-tree-id1900 . -21) (undo-tree-id1901 . -21) (undo-tree-id1902 . -21) (undo-tree-id1903 . -21) (undo-tree-id1904 . -21) (undo-tree-id1905 . -21) (undo-tree-id1906 . -21) (undo-tree-id1907 . -21) (undo-tree-id1908 . -21) (undo-tree-id1909 . -21) (undo-tree-id1910 . -21) (undo-tree-id1911 . -21) (undo-tree-id1912 . -21) (undo-tree-id1913 . -21) (undo-tree-id1914 . -21) 22817) nil (26712 57676 156948 177000) 0 nil] [nil nil ((#("Бейнелерді талдау функциялары}" 0 29 (face (bold) fontified t) 29 30 (fontified t)) . 22786) (undo-tree-id1407 . 29) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1)) ((22786 . 22816)) (26712 57654 952676 74000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22788 . 22789) (nil fontified nil 22750 . 22789) (22750 . 22789)) nil (26712 57676 156907 370000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 22648) (undo-tree-id1795 . -1)) nil (26712 57676 156906 909000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 22804) (undo-tree-id1794 . 1)) nil (26712 57676 156906 198000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 24175) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1)) nil (26712 57676 156905 376000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 24295)) nil (26712 57676 156899 746000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 24295)) nil (26712 57676 156899 515000) 0 nil])
([nil nil ((#("{\\bfseries Контур қисығын анықтау процесі}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 41 (face (bold) fontified t) 41 42 (fontified t)) . -24317) 24360) nil (26712 57676 156899 285000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24309 . 24310) (nil fontified nil 24280 . 24310) (24280 . 24310)) nil (26712 57676 156898 964000) 0 nil])
([nil nil ((#("{\\bfseries 12-сурет.}" 0 1 (fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 10 (face font-lock-keyword-face fontified t) 10 20 (face (bold) fontified t) 20 21 (fontified t)) . -24325) (undo-tree-id1778 . -21) (undo-tree-id1779 . -21) (undo-tree-id1780 . -21) (undo-tree-id1781 . -21) 24348) nil (26712 57676 156898 223000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24288 . 24289) (nil fontified nil 24280 . 24289) (24280 . 24289) 24279) nil (26712 57676 156895 878000) 0 nil])
([nil nil ((24289 . 24290)) nil (26712 57676 156895 468000) 0 nil])
([nil nil ((24283 . 24284)) nil (26712 57676 156895 177000) 0 nil])
([nil nil ((24282 . 24283)) nil (26712 57676 156894 536000) 0 nil])
([nil nil ((#(" 
" 0 1 (fontified t) 1 2 (fontified t)) . 24337) (undo-tree-id1777 . -1)) nil (26712 57676 156893 925000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 24916) (undo-tree-id1776 . -1)) nil (26712 57676 156890 378000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 25055) (t 26712 57676 159536 625000)) nil (26712 57705 688948 103000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (face (bold) fontified t) 1 10 (face (font-lock-keyword-face bold) fontified t) 10 11 (face (bold) fontified t)) . 25056) (undo-tree-id2009 . -10)) nil (26712 57705 688947 852000) 0 nil])
([nil nil ((#("{\\bfseries 13-сурет. Виртуалды аспаптың блок сұлбасы}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 20 (face (bold) fontified t) 20 21 (face (bold) fontified t) 21 52 (face (bold) fontified t) 52 53 (fontified t)) . -25035) (undo-tree-id2003 . -21) (undo-tree-id2004 . -21) (undo-tree-id2005 . -21) (undo-tree-id2006 . -21) (undo-tree-id2007 . -21) (undo-tree-id2008 . -21) 25089) nil (26712 57705 688947 251000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25058 . 25059) (nil fontified nil 25018 . 25059) (25018 . 25059)) nil (26712 57705 688944 706000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 25075) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1)) nil (26712 57705 688944 265000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 25075) (undo-tree-id1988 . -1)) nil (26712 57705 688939 196000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 25075) (undo-tree-id1987 . 1)) nil (26712 57705 688938 434000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 25430)) nil (26712 57705 688937 883000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (face (bold) fontified t) 1 10 (face (font-lock-keyword-face bold) fontified t) 10 11 (face (bold) fontified t)) . 25431) (undo-tree-id1986 . -10)) nil (26712 57705 688937 683000) 0 nil])
([nil nil ((#("{\\bfseries 14-сурет. Виртуалды аспаптың блок-сұлбасы}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 20 (face (bold) fontified t) 20 21 (face (bold) fontified t) 21 52 (face (bold) fontified t) 52 53 (fontified t)) . -25410) (undo-tree-id1980 . -21) (undo-tree-id1981 . -21) (undo-tree-id1982 . -21) (undo-tree-id1983 . -21) (undo-tree-id1984 . -21) (undo-tree-id1985 . -21) 25464) nil (26712 57705 688936 912000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25433 . 25434) (nil fontified nil 25393 . 25434) (25393 . 25434)) nil (26712 57705 688934 647000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 25290) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1)) nil (26712 57705 688934 6000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 25448) (undo-tree-id1963 . -1)) nil (26712 57705 688927 113000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 25448) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1)) nil (26712 57705 688926 272000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 25448) (undo-tree-id1955 . -1)) nil (26712 57705 688923 36000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 25448) (undo-tree-id1954 . 1)) nil (26712 57705 688922 364000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 25684) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1)) nil (26712 57705 688921 633000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 25684) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1)) nil (26712 57705 688869 725000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 25566)) nil (26712 57705 688865 918000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 25799) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1)) nil (26712 57705 688865 477000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 25820) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1)) nil (26712 57705 688860 798000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 25821) (undo-tree-id1926 . -10) (undo-tree-id1927 . -11)) nil (26712 57705 688859 185000) 0 nil])
([nil nil ((25866 . 25867) (#("
" 0 1 (face (bold) fontified t)) . -25866) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) 25821) nil (26712 57705 688854 667000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 26884) (t 26712 57705 691672 661000)) nil (26712 57724 415163 902000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26895 . 26896) (nil fontified nil 26895 . 26896) (26895 . 26896) 26894) nil (26712 57724 415163 572000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 26904) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1)) nil (26712 57724 415163 131000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (face (bold) fontified t) 1 10 (face (font-lock-keyword-face bold) fontified t) 10 11 (face (bold) fontified t)) . 26905) (undo-tree-id2425 . -10) (undo-tree-id2426 . -11)) nil (26712 57724 415162 169000) 0 nil])
([nil nil ((#("{\\bfseries 16-сурет. Микроконтроллердің программалық коды}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t) 11 12 (face (bold) rear-nonsticky t fontified t) 12 20 (face (bold) fontified t) 20 21 (face (bold) fontified t) 21 34 (face (bold) fontified t) 34 57 (face (bold) fontified t) 57 58 (fontified t)) . -26884) (undo-tree-id2234 . -21) (undo-tree-id2235 . -21) (undo-tree-id2236 . -21) (undo-tree-id2237 . -21) (undo-tree-id2238 . -13) (undo-tree-id2239 . -13) (undo-tree-id2240 . -13) (undo-tree-id2241 . -13) (undo-tree-id2242 . -13) (undo-tree-id2243 . -13) (undo-tree-id2244 . -14) (undo-tree-id2245 . -14) (undo-tree-id2246 . -14) (undo-tree-id2247 . -14) (undo-tree-id2248 . -14) (undo-tree-id2249 . -15) (undo-tree-id2250 . -15) (undo-tree-id2251 . -15) (undo-tree-id2252 . -15) (undo-tree-id2253 . -15) (undo-tree-id2254 . -16) (undo-tree-id2255 . -16) (undo-tree-id2256 . -16) (undo-tree-id2257 . -16) (undo-tree-id2258 . -16) (undo-tree-id2259 . -17) (undo-tree-id2260 . -17) (undo-tree-id2261 . -17) (undo-tree-id2262 . -17) (undo-tree-id2263 . -17) (undo-tree-id2264 . -18) (undo-tree-id2265 . -18) (undo-tree-id2266 . -18) (undo-tree-id2267 . -18) (undo-tree-id2268 . -18) (undo-tree-id2269 . -19) (undo-tree-id2270 . -19) (undo-tree-id2271 . -19) (undo-tree-id2272 . -19) (undo-tree-id2273 . -19) (undo-tree-id2274 . -20) (undo-tree-id2275 . -20) (undo-tree-id2276 . -20) (undo-tree-id2277 . -20) (undo-tree-id2278 . -20) (undo-tree-id2279 . -20) (undo-tree-id2280 . -20) (undo-tree-id2281 . -20) (undo-tree-id2282 . -20) (undo-tree-id2283 . -20) (undo-tree-id2284 . -20) (undo-tree-id2285 . -20) (undo-tree-id2286 . -20) (undo-tree-id2287 . -20) (undo-tree-id2288 . -20) (undo-tree-id2289 . -20) (undo-tree-id2290 . -20) (undo-tree-id2291 . -20) (undo-tree-id2292 . -20) (undo-tree-id2293 . -20) (undo-tree-id2294 . -20) (undo-tree-id2295 . -20) (undo-tree-id2296 . -20) (undo-tree-id2297 . -20) (undo-tree-id2298 . -20) (undo-tree-id2299 . -20) (undo-tree-id2300 . -20) (undo-tree-id2301 . -20) (undo-tree-id2302 . -20) (undo-tree-id2303 . -20) (undo-tree-id2304 . -20) (undo-tree-id2305 . -21) (undo-tree-id2306 . -21) (undo-tree-id2307 . -21) (undo-tree-id2308 . -21) (undo-tree-id2309 . -21) (undo-tree-id2310 . -21) (undo-tree-id2311 . -21) (undo-tree-id2312 . -21) (undo-tree-id2313 . -21) (undo-tree-id2314 . -21) (undo-tree-id2315 . -21) (undo-tree-id2316 . -21) (undo-tree-id2317 . -21) (undo-tree-id2318 . -21) (undo-tree-id2319 . -21) (undo-tree-id2320 . -21) (undo-tree-id2321 . -21) (undo-tree-id2322 . -21) (undo-tree-id2323 . -21) (undo-tree-id2324 . -21) (undo-tree-id2325 . -21) (undo-tree-id2326 . -21) (undo-tree-id2327 . -21) (undo-tree-id2328 . -21) (undo-tree-id2329 . -21) (undo-tree-id2330 . -21) (undo-tree-id2331 . -21) (undo-tree-id2332 . -21) (undo-tree-id2333 . -21) (undo-tree-id2334 . -21) (undo-tree-id2335 . -21) (undo-tree-id2336 . -21) (undo-tree-id2337 . -21) (undo-tree-id2338 . -21) (undo-tree-id2339 . -21) (undo-tree-id2340 . -21) (undo-tree-id2341 . -21) (undo-tree-id2342 . -21) (undo-tree-id2343 . -21) (undo-tree-id2344 . -21) (undo-tree-id2345 . -21) (undo-tree-id2346 . -21) (undo-tree-id2347 . -21) (undo-tree-id2348 . -21) (undo-tree-id2349 . -21) (undo-tree-id2350 . -21) (undo-tree-id2351 . -21) (undo-tree-id2352 . -21) (undo-tree-id2353 . -21) (undo-tree-id2354 . -21) (undo-tree-id2355 . -21) (undo-tree-id2356 . -21) (undo-tree-id2357 . -21) (undo-tree-id2358 . -21) (undo-tree-id2359 . -21) (undo-tree-id2360 . -21) (undo-tree-id2361 . -21) (undo-tree-id2362 . -21) (undo-tree-id2363 . -21) (undo-tree-id2364 . -21) (undo-tree-id2365 . -21) (undo-tree-id2366 . -21) (undo-tree-id2367 . -21) (undo-tree-id2368 . -21) (undo-tree-id2369 . -21) (undo-tree-id2370 . -21) (undo-tree-id2371 . -21) (undo-tree-id2372 . -21) (undo-tree-id2373 . -21) (undo-tree-id2374 . -21) (undo-tree-id2375 . -21) (undo-tree-id2376 . -21) (undo-tree-id2377 . -21) (undo-tree-id2378 . -21) (undo-tree-id2379 . -21) (undo-tree-id2380 . -21) (undo-tree-id2381 . -21) (undo-tree-id2382 . -21) (undo-tree-id2383 . -21) (undo-tree-id2384 . -21) (undo-tree-id2385 . -21) (undo-tree-id2386 . -21) (undo-tree-id2387 . -21) (undo-tree-id2388 . -21) (undo-tree-id2389 . -21) (undo-tree-id2390 . -21) (undo-tree-id2391 . -21) (undo-tree-id2392 . -21) (undo-tree-id2393 . -21) (undo-tree-id2394 . -21) (undo-tree-id2395 . -21) (undo-tree-id2396 . -21) (undo-tree-id2397 . -21) (undo-tree-id2398 . -21) (undo-tree-id2399 . -21) (undo-tree-id2400 . -21) (undo-tree-id2401 . -21) (undo-tree-id2402 . -21) (undo-tree-id2403 . -21) (undo-tree-id2404 . -21) (undo-tree-id2405 . -21) (undo-tree-id2406 . -21) (undo-tree-id2407 . -21) (undo-tree-id2408 . -21) (undo-tree-id2409 . -21) (undo-tree-id2410 . -21) (undo-tree-id2411 . -21) (undo-tree-id2412 . -21) (undo-tree-id2413 . -21) (undo-tree-id2414 . -21) (undo-tree-id2415 . -21) (undo-tree-id2416 . -21) (undo-tree-id2417 . -21) (undo-tree-id2418 . -21) (undo-tree-id2419 . -21) (undo-tree-id2420 . -21) (undo-tree-id2421 . -21) (undo-tree-id2422 . -21) (undo-tree-id2423 . -21) (undo-tree-id2424 . -21) 26943) nil (26712 57724 415158 282000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26912 . 26913) (nil fontified nil 26867 . 26913) (26867 . 26913)) nil (26712 57724 415097 748000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 26928) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1)) nil (26712 57724 415096 896000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 26928) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1)) nil (26712 57724 415089 593000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 26928) (undo-tree-id2010 . -1)) nil (26712 57724 414981 620000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 26765)) nil (26712 57724 414972 643000) 0 nil])
([nil nil ((26928 . 26949) (28914 . 28930) 26928) nil (26712 57724 414968 415000) 0 nil])
([nil nil ((28952 . 28967) (28975 . 28988) (t 26712 57724 417758 393000)) nil (26712 57770 866897 847000) 0 nil])
([nil nil ((29004 . 29023) (30613 . 30630)) nil (26712 57770 866895 893000) 0 nil])
([nil nil ((30650 . 30665) (30673 . 30686)) nil (26712 57770 866894 350000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 30512) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1)) nil (26712 57770 866891 635000) 0 nil])
([nil nil ((#(".
" 0 1 (fontified t) 1 2 (fontified t)) . 30512) (undo-tree-id2446 . -1)) nil (26712 57770 866864 434000) 0 nil])
([nil nil ((30052 . 30060)) nil (26712 57770 866861 348000) 0 nil])
([nil nil ((30707 . 30726) (32530 . 32547)) nil (26712 57770 866859 785000) 0 nil])
([nil nil ((#(".
" 0 2 (fontified t)) . 32430) (undo-tree-id2429 . -1) (undo-tree-id2430 . -2) (undo-tree-id2431 . -2) (undo-tree-id2432 . -2) (undo-tree-id2433 . -2) (undo-tree-id2434 . -2) (undo-tree-id2435 . -2) (undo-tree-id2436 . -2) (undo-tree-id2437 . -2) (undo-tree-id2438 . -2) (undo-tree-id2439 . -2) (undo-tree-id2440 . -2) (undo-tree-id2441 . -2) (undo-tree-id2442 . -2) (undo-tree-id2443 . -2) (undo-tree-id2444 . -2) (undo-tree-id2445 . -2)) nil (26712 57770 866856 148000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 32430)) nil (26712 57770 866780 837000) 0 nil])
([nil nil ((32564 . 32583) (33229 . 33246)) nil (26712 57770 866763 915000) 0 nil])
([nil nil ((32129 . 32198) (#("https://www.ni.com/ru-ru/shop/labview.html" 0 26 (fontified t) 26 42 (fontified t)) . -32129) (undo-tree-id2547 . -41) (undo-tree-id2548 . -41) (undo-tree-id2549 . -41) 32171 (t 26712 57770 899969 544000)) nil (26712 57863 235520 6000) 0 nil])
([nil nil ((31863 . 31973) (#("https://www.kuka.com/en-de/products/robot-systems/industrial-robots/kr-40-pa.html" 0 81 (fontified t)) . 31863) (undo-tree-id2545 . -81) (undo-tree-id2546 . -80)) nil (26712 57863 235517 412000) 0 nil])
([nil nil ((31863 . 31864)) nil (26712 57863 235514 787000) 0 nil])
([nil nil ((30813 . 30929) (#("https://www.popmech.ru/technologies/238704-glazami-robota-chtotakoe-mashinnoe-zrenie/" 0 85 (fontified t)) . -30813) (undo-tree-id2542 . -84) (undo-tree-id2543 . -84) (undo-tree-id2544 . -84) 30898) nil (26712 57863 235512 853000) 0 nil])
([nil nil ((30223 . 30292) (#("https://www.ni.com/ru-ru/shop/labview.html" 0 42 (fontified t)) . -30223) (undo-tree-id2540 . -41) (undo-tree-id2541 . -41) 30265) nil (26712 57863 235890 373000) 0 nil])
([nil nil ((nil rear-nonsticky nil 30164 . 30165) (nil fontified nil 30053 . 30165) (30053 . 30165) 30052) nil (26712 57880 582851 802000) 0 nil] [nil nil ((#("\\href{https://www.kuka.com/en-de/products/robot-systems/industrial-robots/kr-40-pa.html}{https://www.kuka.com}.-" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 87 (face tex-verbatim fontified t) 87 110 (fontified t) 110 112 (fontified t)) . 31922) (undo-tree-id2458 . -111) (undo-tree-id2459 . 112) (undo-tree-id2460 . -80) (undo-tree-id2461 . -80) (undo-tree-id2462 . -80) (undo-tree-id2463 . -79) (undo-tree-id2464 . -79) (undo-tree-id2465 . -79) (undo-tree-id2466 . -79) (undo-tree-id2467 . -79) (undo-tree-id2468 . -78) (undo-tree-id2469 . -78) (undo-tree-id2470 . -78) (undo-tree-id2471 . -78) (undo-tree-id2472 . -78) (undo-tree-id2473 . -77) (undo-tree-id2474 . -77) (undo-tree-id2475 . -77) (undo-tree-id2476 . -77) (undo-tree-id2477 . -77) (undo-tree-id2478 . -76) (undo-tree-id2479 . -76) (undo-tree-id2480 . -76) (undo-tree-id2481 . -76) (undo-tree-id2482 . -76) (undo-tree-id2483 . -75) (undo-tree-id2484 . -75) (undo-tree-id2485 . -75) (undo-tree-id2486 . -75) (undo-tree-id2487 . -75) (undo-tree-id2488 . -75) (undo-tree-id2489 . -75) (undo-tree-id2490 . -75) (undo-tree-id2491 . -75) (undo-tree-id2492 . -75) (undo-tree-id2493 . -75) (undo-tree-id2494 . -75) (undo-tree-id2495 . -75) (undo-tree-id2496 . -75) (undo-tree-id2497 . -75) (undo-tree-id2498 . -74) (undo-tree-id2499 . -74) (undo-tree-id2500 . -74) (undo-tree-id2501 . -74) (undo-tree-id2502 . -74) (undo-tree-id2503 . -74) (undo-tree-id2504 . -74) (undo-tree-id2505 . -74) (undo-tree-id2506 . -74) (undo-tree-id2507 . -74) (undo-tree-id2508 . -74) (undo-tree-id2509 . -74) (undo-tree-id2510 . -74) (undo-tree-id2511 . -74) (undo-tree-id2512 . -74) (undo-tree-id2513 . -73) (undo-tree-id2514 . -73) (undo-tree-id2515 . -73) (undo-tree-id2516 . -73) (undo-tree-id2517 . -73) (undo-tree-id2518 . -67) (undo-tree-id2519 . -67) (undo-tree-id2520 . -67) (undo-tree-id2521 . -67) (undo-tree-id2522 . -67) (undo-tree-id2523 . -66) (undo-tree-id2524 . -66) (undo-tree-id2525 . -66) (undo-tree-id2526 . -66) (undo-tree-id2527 . -66) (undo-tree-id2528 . -56) (undo-tree-id2529 . -56) (undo-tree-id2530 . -56) (undo-tree-id2531 . -56) (undo-tree-id2532 . -56) (undo-tree-id2533 . -56) (undo-tree-id2534 . -56) (undo-tree-id2535 . -56) (undo-tree-id2536 . -56) (undo-tree-id2537 . -56) (undo-tree-id2538 . -112) (undo-tree-id2539 . -112)) ((31922 . 32034)) (26712 57863 235492 525000) 0 nil])
([nil nil ((#("%% TODO" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 7 (face font-lock-comment-face fontified t)) . 30165) (undo-tree-id2550 . -6) (undo-tree-id2551 . -7) (undo-tree-id2552 . -7)) nil (26712 57880 582837 525000) 0 nil])
nil
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 29108) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (t 26712 57880 592459 439000)) nil (26712 57887 789266 75000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . 29108) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1)) nil (26712 57887 789232 412000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 29108) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1)) nil (26712 57887 789213 767000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 29108) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1)) nil (26712 57887 789197 797000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 29108) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1)) nil (26712 57887 789468 476000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 29193)) nil (26712 57895 203143 837000) 0 nil] [nil nil ((#("." 0 1 (fontified t)) . 29194) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1)) ((29194 . 29195)) (26712 57887 789160 567000) 0 nil])
([nil nil ((29108 . 29224) (#("https://www.popmech.ru/technologies/238704-glazami-robota-chtotakoe-mashinnoe-zrenie/" 0 85 (fontified t)) . -29108) (undo-tree-id2635 . -85) (undo-tree-id2636 . -85) (undo-tree-id2637 . -84) (undo-tree-id2638 . -85) (undo-tree-id2639 . -84) (undo-tree-id2640 . -84) 29193) nil (26712 57895 203135 742000) 0 nil])
nil
([nil nil ((apply -15 24175 24353 undo--wrap-and-run-primitive-undo 24175 24353 ((24336 . 24339) (24278 . 24281) (24211 . 24214) (24196 . 24199) (24175 . 24178) 24337 (t 26712 57895 214523 946000)))) nil (26712 57928 921615 82000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 10684) (t 26712 57928 933672 58000) (10685 . 10686) 10684 (t 26712 57928 933672 58000)) nil (26712 63444 597038 40000) 0 nil])
([nil nil ((nil fontified t 10684 . 10685) (#("7" 0 1 (fontified t)) . 10684) (10685 . 10686) 10684) nil (26712 63444 597037 369000) 0 nil])
([nil nil ((#("\\end{multicols}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.6\\textwidth]{media/ict2/image168}
	\\caption*{1 - сурет. Бейнекамераның көмегімен конвейерде автоматты сұрыптау үрдісінің жалпы көрінісі}
\\end{figure}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (latex-env-pair t fontified t) 5 14 (face font-lock-function-name-face latex-env-pair t fontified t) 14 15 (latex-env-pair t fontified t) 15 17 (fontified t) 17 23 (face font-lock-keyword-face fontified t) 23 24 (latex-env-pair t fontified t) 24 27 (face font-lock-function-name-face latex-env-pair t fontified t) 27 30 (face font-lock-function-name-face latex-env-pair t fontified t) 30 31 (latex-env-pair t fontified t) 31 36 (fontified t) 36 46 (face font-lock-keyword-face fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 64 (face font-lock-keyword-face fontified t) 64 73 (fontified t) 73 74 (fontified t) 74 84 (face font-lock-keyword-face fontified t) 84 86 (fontified t) 86 105 (face font-lock-builtin-face fontified t) 105 107 (fontified t) 107 108 (fontified t) 108 117 (face font-lock-keyword-face fontified t) 117 210 (fontified t) 210 214 (face font-lock-keyword-face fontified t) 214 215 (latex-env-pair t fontified t) 215 221 (face font-lock-function-name-face latex-env-pair t fontified t) 221 222 (latex-env-pair t fontified t) 222 223 (fontified t)) . 10611) (undo-tree-id0 . -222) (undo-tree-id1 . -222) (undo-tree-id2 . -14) (undo-tree-id3 . -222) (undo-tree-id4 . -222) 10833) nil (26712 63444 597036 688000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11601 . 11602) (#("
" 0 1 (fontified nil)) . -11824) (11601 . 11825)) nil (26712 63444 597011 460000) 0 nil])
([nil nil ((nil fontified t 11675 . 11676) (t 26712 63444 600341 747000) (#("6" 0 1 (fontified t)) . 11675) (t 26712 63444 600341 747000) (11676 . 11677) 11675 (t 26712 63444 600341 747000)) nil (26712 63455 809428 103000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 12228) (t 26712 63455 813401 772000) (12229 . 12230) 12228 (t 26712 63455 813401 772000)) nil (26712 63471 867245 895000) 0 nil])
([nil nil ((nil fontified t 12228 . 12229) (#("7" 0 1 (fontified t)) . 12228) (12229 . 12230) 12228) nil (26712 63471 867244 642000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12171) (undo-tree-id11 . -1)) nil (26712 63471 867244 41000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 11601) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1)) nil (26712 63471 867240 415000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11811) (undo-tree-id12 . -4) (undo-tree-id13 . -4) (undo-tree-id14 . -4) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) (undo-tree-id28 . -4) (undo-tree-id29 . -4) (undo-tree-id30 . -4) (undo-tree-id31 . -4) (undo-tree-id32 . -4) (undo-tree-id33 . -4) (undo-tree-id34 . -4) (undo-tree-id35 . -4) (undo-tree-id36 . -4) (undo-tree-id37 . -4) (undo-tree-id38 . -4) (undo-tree-id39 . -4) (undo-tree-id40 . -4) (undo-tree-id41 . -4) (undo-tree-id42 . -4) (undo-tree-id43 . -4) (undo-tree-id44 . -4) (undo-tree-id45 . -4) (undo-tree-id46 . -4) (undo-tree-id47 . -4) (undo-tree-id48 . -4) (undo-tree-id49 . -4) (undo-tree-id50 . -4) (undo-tree-id51 . -4) (undo-tree-id52 . -4) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) 11815 (11810 . 11815) (t 26712 63471 870487 545000) 11804) nil (26712 63477 985022 798000) 0 nil])
([nil nil ((11824 . 11825) 11812) nil (26712 63477 984942 998000) 0 nil])
([nil nil ((12171 . 12172) 12104) nil (26712 63477 984938 439000) 0 nil])
([nil nil ((11826 . 11847) (12172 . 12188) (t 26712 63477 988520 172000)) nil (26712 63485 141801 271000) 0 nil])
([nil nil ((12373 . 12394) (13020 . 13036)) nil (26712 63507 409191 352000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict2/image171}
	\\caption*{}
\\end{figure}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict2/image172}
	\\caption*{}
\\end{figure}


{\\bfseries 4 - сурет. Baumer CX IP 65/67 камералары}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 88 (face font-lock-builtin-face fontified t) 88 91 (fontified t) 91 100 (face font-lock-keyword-face fontified t) 100 103 (fontified t) 103 107 (face font-lock-keyword-face fontified t) 107 108 (fontified t latex-env-pair t) 108 114 (face font-lock-function-name-face fontified t latex-env-pair t) 114 115 (fontified t latex-env-pair t) 115 117 (fontified t) 117 123 (face font-lock-keyword-face fontified t) 123 124 (fontified t latex-env-pair t) 124 130 (face font-lock-function-name-face fontified t latex-env-pair t) 130 131 (fontified t latex-env-pair t) 131 136 (fontified t) 136 137 (face font-lock-keyword-face fontified t) 137 146 (face font-lock-keyword-face fontified t) 146 147 (fontified t) 147 148 (fontified t) 148 164 (face font-lock-keyword-face fontified t) 164 174 (fontified t) 174 184 (face font-lock-keyword-face fontified t) 184 186 (fontified t) 186 205 (face font-lock-builtin-face fontified t) 205 206 (fontified t) 206 207 (fontified t) 207 208 (fontified t) 208 217 (face font-lock-keyword-face fontified t) 217 220 (fontified t) 220 224 (face font-lock-keyword-face fontified t) 224 225 (fontified t latex-env-pair t) 225 231 (face font-lock-function-name-face fontified t latex-env-pair t) 231 232 (fontified t latex-env-pair t) 232 236 (fontified t) 236 245 (face font-lock-keyword-face fontified t) 245 286 (face (bold) fontified t) 286 288 (fontified t)) . 13541) (undo-tree-id86 . -235) (undo-tree-id87 . -287) (undo-tree-id88 . -235) (t 26712 63485 144558 296000)) nil (26712 63586 70575 825000) 0 nil] [nil nil ((13040 . 13041) (t 26712 63485 144558 296000) 13011) ((#("
" 0 1 (fontified t)) . 13040) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1)) (26712 63507 73586 821000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13978 . 13979) (nil fontified nil 13540 . 13979) (13540 . 13979)) nil (26712 63586 70573 420000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13041) (undo-tree-id57 . 1)) ((13041 . 13042)) (26712 63507 73474 39000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 13913) (undo-tree-id84 . -10) (undo-tree-id85 . -11)) nil (26712 63586 70572 759000) 0 nil])
nil
([nil nil ((#("}" 0 1 (fontified t)) . 13954) (undo-tree-id82 . -1) (undo-tree-id83 . -1)) nil (26712 63586 70567 910000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 13114) (t 26712 63586 73091 979000) (13115 . 13116) 13114 (t 26712 63586 73091 979000)) nil (26712 63593 705727 54000) 0 nil])
([nil nil ((nil fontified t 13114 . 13115) (#("7" 0 1 (fontified t)) . 13114) (13115 . 13116) 13114) nil (26712 63593 705722 205000) 0 nil])
([nil nil ((13201 . 13222) (13539 . 13555) (t 26712 63593 708132 68000)) nil (26712 63604 218720 928000) 0 nil])
([nil nil ((14006 . 14027) (15197 . 15213)) nil (26712 63604 218716 58000) 0 nil])
([nil nil ((13800 . 13802) (#("4" 0 1 (fontified t)) . 13800) (t 26712 63604 221187 209000)) nil (26712 63631 429112 868000) 0 nil])
([nil nil ((13637 . 13639) (#("4" 0 1 (fontified t)) . 13637) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1)) nil (26712 63631 429109 211000) 0 nil])
([nil nil ((#("        \\caption*{}
" 0 8 (fontified t) 8 17 (face font-lock-keyword-face fontified t) 17 20 (fontified t)) . 13734) (undo-tree-id128 . -19) (undo-tree-id129 . -18) (undo-tree-id130 . -18) (undo-tree-id131 . -18) (undo-tree-id132 . -18) (undo-tree-id133 . -18) (undo-tree-id134 . -18) (undo-tree-id135 . -18) (undo-tree-id136 . -18) (undo-tree-id137 . -18) (undo-tree-id138 . -18) (undo-tree-id139 . -18) (undo-tree-id140 . -18) (undo-tree-id141 . -18) (undo-tree-id142 . -18) (undo-tree-id143 . -18) (undo-tree-id144 . -18) (undo-tree-id145 . -18) (undo-tree-id146 . -18) (undo-tree-id147 . -18) (undo-tree-id148 . -18) (undo-tree-id149 . -18) (undo-tree-id150 . -18) (undo-tree-id151 . -18) (undo-tree-id152 . -18) (undo-tree-id153 . -18) (undo-tree-id154 . -18) (undo-tree-id155 . -18) (undo-tree-id156 . -18) (undo-tree-id157 . -18) (undo-tree-id158 . -20) 13752 (t 26712 63631 432329 615000)) nil (26712 63634 467760 987000) 0 nil])
([nil nil ((#("        \\caption*{}
" 0 8 (fontified t) 8 17 (face font-lock-keyword-face fontified t) 17 20 (fontified t)) . 13878) (undo-tree-id106 . -19) (undo-tree-id107 . -18) (undo-tree-id108 . -18) (undo-tree-id109 . -18) (undo-tree-id110 . -18) (undo-tree-id111 . -18) (undo-tree-id112 . -18) (undo-tree-id113 . -18) (undo-tree-id114 . -18) (undo-tree-id115 . -18) (undo-tree-id116 . -18) (undo-tree-id117 . -18) (undo-tree-id118 . -18) (undo-tree-id119 . -18) (undo-tree-id120 . -18) (undo-tree-id121 . -18) (undo-tree-id122 . -18) (undo-tree-id123 . -18) (undo-tree-id124 . -18) (undo-tree-id125 . -18) (undo-tree-id126 . -18) (undo-tree-id127 . -20) 13896) nil (26712 63634 467715 401000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 15253) (t 26712 63634 470345 487000) (15254 . 15255) 15253 (t 26712 63634 470345 487000)) nil (26712 63647 613048 279000) 0 nil])
([nil nil ((nil fontified t 15253 . 15254) (#("7" 0 1 (fontified t)) . 15253) (15254 . 15255) 15253) nil (26712 63647 613044 281000) 0 nil])
([nil nil ((15360 . 15381) (15655 . 15671) (t 26712 63647 616414 103000)) nil (26712 63650 970458 316000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16417 . 16418) (nil fontified nil 15752 . 16418) (15752 . 16418) (#("
%% \\begin{longtable}[]{@{}
%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 2\\tabcolsep) * \\real{0.7731}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 2\\tabcolsep) * \\real{0.2269}}@{}}
%% \\toprule\\noalign{}
%% \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Сипаттамасы}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Мәні}
%% \\end{minipage} \\\\
%% \\midrule\\noalign{}
%% \\endhead
%% \\bottomrule\\noalign{}
%% \\endlastfoot
%% Жұмыс кернеуі & 5,0 В \\\\
%% Ұсынылатын кіріс кернеуі & 7,0 В \\ldots{} 12,0 В \\\\
%% Шекті кіру кернеуі & 6,0 В \\ldots{} 20,0 В \\\\
%% Цифрлық байланыстардың саны & 14 (6 ШИМ) \\\\
%% Ұқсас контактілер саны & 6 \\\\
%% Енгізу/шығару түйіспелерінің тоғы & 40 мА \\\\
%% Флэш-жад 32 Кб & 32 Кб \\\\
%% SRAM-жады (энергияға тәуелді) & 2 Кб \\\\
%% EEPROM-жады (энергияға тәуелсіз) & 1 Кб \\\\
%% Тактілік жиілігі & 16 МГц \\\\
%% Төлем мөлшері & 70мм х 53мм \\\\
%% \\end{longtable}" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 10 (face font-lock-comment-face fontified t) 10 21 (face font-lock-comment-face fontified t latex-env-pair t) 21 28 (face font-lock-comment-face fontified t) 28 33 (face font-lock-comment-delimiter-face fontified t) 33 109 (face font-lock-comment-face fontified t) 109 114 (face font-lock-comment-delimiter-face fontified t) 114 192 (face font-lock-comment-face fontified t) 192 195 (face font-lock-comment-delimiter-face fontified t) 195 214 (face font-lock-comment-face fontified t) 214 217 (face font-lock-comment-delimiter-face fontified t) 217 223 (face font-lock-comment-face fontified t) 223 233 (face font-lock-comment-face fontified t latex-env-pair t) 233 259 (face font-lock-comment-face fontified t) 259 262 (face font-lock-comment-delimiter-face fontified t) 262 286 (face font-lock-comment-face fontified t) 286 289 (face font-lock-comment-delimiter-face fontified t) 289 293 (face font-lock-comment-face fontified t) 293 303 (face font-lock-comment-face fontified t latex-env-pair t) 303 312 (face font-lock-comment-face fontified t) 312 322 (face font-lock-comment-face fontified t latex-env-pair t) 322 348 (face font-lock-comment-face fontified t) 348 351 (face font-lock-comment-delimiter-face fontified t) 351 368 (face font-lock-comment-face fontified t) 368 371 (face font-lock-comment-delimiter-face fontified t) 371 375 (face font-lock-comment-face fontified t) 375 385 (face font-lock-comment-face fontified t latex-env-pair t) 385 389 (face font-lock-comment-face fontified t) 389 392 (face font-lock-comment-delimiter-face fontified t) 392 411 (face font-lock-comment-face fontified t) 411 414 (face font-lock-comment-delimiter-face fontified t) 414 423 (face font-lock-comment-face fontified t) 423 426 (face font-lock-comment-delimiter-face fontified t) 426 448 (face font-lock-comment-face fontified t) 448 451 (face font-lock-comment-delimiter-face fontified t) 451 464 (face font-lock-comment-face fontified t) 464 467 (face font-lock-comment-delimiter-face fontified t) 467 492 (face font-lock-comment-face fontified t) 492 495 (face font-lock-comment-delimiter-face fontified t) 495 496 (face font-lock-comment-face fontified t) 496 547 (face font-lock-comment-face fontified t) 547 550 (face font-lock-comment-delimiter-face fontified t) 550 596 (face font-lock-comment-face fontified t) 596 599 (face font-lock-comment-delimiter-face fontified t) 599 643 (face font-lock-comment-face fontified t) 643 646 (face font-lock-comment-delimiter-face fontified t) 646 676 (face font-lock-comment-face fontified t) 676 679 (face font-lock-comment-delimiter-face fontified t) 679 724 (face font-lock-comment-face fontified t) 724 727 (face font-lock-comment-delimiter-face fontified t) 727 753 (face font-lock-comment-face fontified t) 753 756 (face font-lock-comment-delimiter-face fontified t) 756 796 (face font-lock-comment-face fontified t) 796 799 (face font-lock-comment-delimiter-face fontified t) 799 842 (face font-lock-comment-face fontified t) 842 845 (face font-lock-comment-delimiter-face fontified t) 845 874 (face font-lock-comment-face fontified t) 874 877 (face font-lock-comment-delimiter-face fontified t) 877 908 (face font-lock-comment-face fontified t) 908 911 (face font-lock-comment-delimiter-face fontified t) 911 915 (face font-lock-comment-face fontified t) 915 926 (face font-lock-comment-face fontified t latex-env-pair t)) . 15752) (undo-tree-id222 . -925) (undo-tree-id223 . -908) (undo-tree-id224 . -908) 16679 (t 26712 63650 973431 609000)) nil (26712 63699 810384 123000) 0 nil])
([nil nil ((#("% \\usepackage{tabularray}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 26 (face font-lock-comment-face fontified t)) . 15752) (undo-tree-id215 . -25) (undo-tree-id216 . -26) (undo-tree-id217 . -26) (undo-tree-id218 . -26) (undo-tree-id219 . -26) (undo-tree-id220 . -26) (undo-tree-id221 . -26)) nil (26712 63708 333717 357000) 0 nil])
([nil nil ((#("{\\bfseries 1 - кесте. Контроллердің негізгі сипаттамалары}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 57 (face (bold) fontified t) 57 59 (fontified t)) . -15693) (undo-tree-id428 . -58) (undo-tree-id429 . -59) (undo-tree-id430 . -59) (undo-tree-id431 . -59) (undo-tree-id432 . -59) (undo-tree-id433 . -59) (undo-tree-id434 . -59) (undo-tree-id435 . -59) (undo-tree-id436 . -59) (undo-tree-id437 . -59) (undo-tree-id438 . -59) (undo-tree-id439 . -59) (undo-tree-id440 . -59) (undo-tree-id441 . -59) (undo-tree-id442 . -59) (undo-tree-id443 . -59) (undo-tree-id444 . -59) (undo-tree-id445 . -59) (undo-tree-id446 . -59) (undo-tree-id447 . -59) (undo-tree-id448 . -59) (undo-tree-id449 . -59) (undo-tree-id450 . -59) (undo-tree-id451 . -59) (undo-tree-id452 . -59) (undo-tree-id453 . -59) (undo-tree-id454 . -59) (undo-tree-id455 . -59) (undo-tree-id456 . -59) (undo-tree-id457 . -59) (undo-tree-id458 . -59) (undo-tree-id459 . -59) (undo-tree-id460 . -59) (undo-tree-id461 . -59) (undo-tree-id462 . -59) (undo-tree-id463 . -59) (undo-tree-id464 . -59) (undo-tree-id465 . -59) (undo-tree-id466 . -59) (undo-tree-id467 . -59) (undo-tree-id468 . -59) (undo-tree-id469 . -59) (undo-tree-id470 . -59) (undo-tree-id471 . -59) (undo-tree-id472 . -59) (undo-tree-id473 . -59) (undo-tree-id474 . -59) (undo-tree-id475 . -59) (undo-tree-id476 . -59) (undo-tree-id477 . -59) (undo-tree-id478 . -59) (undo-tree-id479 . -59) (undo-tree-id480 . -59) (undo-tree-id481 . -59) (undo-tree-id482 . -59) (undo-tree-id483 . -59) (undo-tree-id484 . -59) (undo-tree-id485 . -59) (undo-tree-id486 . -59) (undo-tree-id487 . -59) (undo-tree-id488 . -59) (undo-tree-id489 . -59) (undo-tree-id490 . -59) (undo-tree-id491 . -59) (undo-tree-id492 . -59) (undo-tree-id493 . -59) (undo-tree-id494 . -59) (undo-tree-id495 . -59) (undo-tree-id496 . -59) (undo-tree-id497 . -59) (undo-tree-id498 . -59) (undo-tree-id499 . -59) (undo-tree-id500 . -59) (undo-tree-id501 . -59) (undo-tree-id502 . -59) (undo-tree-id503 . -59) (undo-tree-id504 . -59) (undo-tree-id505 . -59) (undo-tree-id506 . -59) (undo-tree-id507 . -59) (undo-tree-id508 . -59) (undo-tree-id509 . -59) 15752) nil (26712 63711 941822 163000) 0 nil] [nil nil ((15693 . 15694) (#("{\\bfseries 1 - кесте. Контроллердің негізгі сипаттамалары}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 57 (face (bold) fontified t) 57 59 (fontified t)) . 15693) (undo-tree-id344 . -58) (undo-tree-id345 . -59) (undo-tree-id346 . -59) (undo-tree-id347 . -59) (undo-tree-id348 . -59) (undo-tree-id349 . -59) (undo-tree-id350 . -59) (undo-tree-id351 . -59) (undo-tree-id352 . -59) (undo-tree-id353 . -59) (undo-tree-id354 . -59) (undo-tree-id355 . -59) (undo-tree-id356 . -59) (undo-tree-id357 . -59) (undo-tree-id358 . -59) (undo-tree-id359 . -59) (undo-tree-id360 . -59) (undo-tree-id361 . -59) (undo-tree-id362 . -59) (undo-tree-id363 . -59) (undo-tree-id364 . -59) (undo-tree-id365 . -59) (undo-tree-id366 . -59) (undo-tree-id367 . -59) (undo-tree-id368 . -59) (undo-tree-id369 . -59) (undo-tree-id370 . -59) (undo-tree-id371 . -59) (undo-tree-id372 . -59) (undo-tree-id373 . -59) (undo-tree-id374 . -59) (undo-tree-id375 . -59) (undo-tree-id376 . -59) (undo-tree-id377 . -59) (undo-tree-id378 . -59) (undo-tree-id379 . -59) (undo-tree-id380 . -59) (undo-tree-id381 . -59) (undo-tree-id382 . -59) (undo-tree-id383 . -59) (undo-tree-id384 . -59) (undo-tree-id385 . -59) (undo-tree-id386 . -59) (undo-tree-id387 . -59) (undo-tree-id388 . -59) (undo-tree-id389 . -59) (undo-tree-id390 . -59) (undo-tree-id391 . -59) (undo-tree-id392 . -59) (undo-tree-id393 . -59) (undo-tree-id394 . -59) (undo-tree-id395 . -59) (undo-tree-id396 . -59) (undo-tree-id397 . -59) (undo-tree-id398 . -59) (undo-tree-id399 . -59) (undo-tree-id400 . -59) (undo-tree-id401 . -59) (undo-tree-id402 . -59) (undo-tree-id403 . -59) (undo-tree-id404 . -59) (undo-tree-id405 . -59) (undo-tree-id406 . -59) (undo-tree-id407 . -59) (undo-tree-id408 . -59) (undo-tree-id409 . -59) (undo-tree-id410 . -59) (undo-tree-id411 . -59) (undo-tree-id412 . -59) (undo-tree-id413 . -59) (undo-tree-id414 . -59) (undo-tree-id415 . -59) (undo-tree-id416 . -59) (undo-tree-id417 . -59) (undo-tree-id418 . -59) (undo-tree-id419 . -59) (undo-tree-id420 . -59) (undo-tree-id421 . -59) (undo-tree-id422 . -59) (undo-tree-id423 . -59) (undo-tree-id424 . -59) (undo-tree-id425 . -59) (undo-tree-id426 . -59)) ((15693 . 15752) (#("
" 0 1 (fontified t)) . 15693) (undo-tree-id427 . 1)) (26712 63708 333510 468000) 0 nil] [nil nil ((#("{\\bfseries 1 - кесте. Контроллердің негізгі сипаттамалары}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 57 (face (bold) fontified t) 57 59 (fontified t)) . -15693) (undo-tree-id289 . -58) (undo-tree-id290 . -59) (undo-tree-id291 . -59) (undo-tree-id292 . -59) (undo-tree-id293 . -59) (undo-tree-id294 . -59) (undo-tree-id295 . -59) (undo-tree-id296 . -59) (undo-tree-id297 . -59) (undo-tree-id298 . -59) (undo-tree-id299 . -59) (undo-tree-id300 . -59) (undo-tree-id301 . -59) (undo-tree-id302 . -59) (undo-tree-id303 . -59) (undo-tree-id304 . -59) (undo-tree-id305 . -59) (undo-tree-id306 . -59) (undo-tree-id307 . -59) (undo-tree-id308 . -59) (undo-tree-id309 . -59) (undo-tree-id310 . -59) (undo-tree-id311 . -59) (undo-tree-id312 . -59) (undo-tree-id313 . -59) (undo-tree-id314 . -59) (undo-tree-id315 . -59) (undo-tree-id316 . -59) (undo-tree-id317 . -59) (undo-tree-id318 . -59) (undo-tree-id319 . -59) (undo-tree-id320 . -59) (undo-tree-id321 . -59) (undo-tree-id322 . -59) (undo-tree-id323 . -59) (undo-tree-id324 . -59) (undo-tree-id325 . -59) (undo-tree-id326 . -59) (undo-tree-id327 . -59) (undo-tree-id328 . -59) (undo-tree-id329 . -59) (undo-tree-id330 . -59) (undo-tree-id331 . -59) (undo-tree-id332 . -59) (undo-tree-id333 . -59) (undo-tree-id334 . -59) (undo-tree-id335 . -59) (undo-tree-id336 . -59) (undo-tree-id337 . -59) (undo-tree-id338 . -59) (undo-tree-id339 . -59) (undo-tree-id340 . -59) (undo-tree-id341 . -59) (undo-tree-id342 . -59) (undo-tree-id343 . -59) 15752) ((15693 . 15752)) (26712 63705 190415 961000) 0 nil] [nil nil ((15693 . 15694) (#("{\\bfseries 1 - кесте. Контроллердің негізгі сипаттамалары}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 57 (face (bold) fontified t) 57 59 (fontified t)) . 15693) (undo-tree-id228 . -58) (undo-tree-id229 . -59) (undo-tree-id230 . -59) (undo-tree-id231 . -59) (undo-tree-id232 . -59) (undo-tree-id233 . -59) (undo-tree-id234 . -59) (undo-tree-id235 . -59) (undo-tree-id236 . -59) (undo-tree-id237 . -59) (undo-tree-id238 . -59) (undo-tree-id239 . -59) (undo-tree-id240 . -59) (undo-tree-id241 . -59) (undo-tree-id242 . -59) (undo-tree-id243 . -59) (undo-tree-id244 . -59) (undo-tree-id245 . -59) (undo-tree-id246 . -59) (undo-tree-id247 . -59) (undo-tree-id248 . -59) (undo-tree-id249 . -59) (undo-tree-id250 . -59) (undo-tree-id251 . -59) (undo-tree-id252 . -59) (undo-tree-id253 . -59) (undo-tree-id254 . -59) (undo-tree-id255 . -59) (undo-tree-id256 . -59) (undo-tree-id257 . -59) (undo-tree-id258 . -59) (undo-tree-id259 . -59) (undo-tree-id260 . -59) (undo-tree-id261 . -59) (undo-tree-id262 . -59) (undo-tree-id263 . -59) (undo-tree-id264 . -59) (undo-tree-id265 . -59) (undo-tree-id266 . -59) (undo-tree-id267 . -59) (undo-tree-id268 . -59) (undo-tree-id269 . -59) (undo-tree-id270 . -59) (undo-tree-id271 . -59) (undo-tree-id272 . -59) (undo-tree-id273 . -59) (undo-tree-id274 . -59) (undo-tree-id275 . -59) (undo-tree-id276 . -59) (undo-tree-id277 . -59) (undo-tree-id278 . -59) (undo-tree-id279 . -59) (undo-tree-id280 . -59) (undo-tree-id281 . -59) (undo-tree-id282 . -59) (undo-tree-id283 . -59)) ((15693 . 15752) (#("
" 0 1 (fontified t)) . 15693) (undo-tree-id284 . 1)) (26712 63701 766729 508000) 0 nil] [nil nil ((15693 . 15694) (15693 . 15694) (#("{\\bfseries 1 - кесте. Контроллердің негізгі сипаттамалары}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 57 (face (bold) fontified t) 57 59 (fontified t)) . 15693) (undo-tree-id159 . -58) (undo-tree-id160 . -59) (undo-tree-id161 . -59) (undo-tree-id162 . -59) (undo-tree-id163 . -59) (undo-tree-id164 . -59) (undo-tree-id165 . -59) (undo-tree-id166 . -59) (undo-tree-id167 . -59) (undo-tree-id168 . -59) (undo-tree-id169 . -59) (undo-tree-id170 . -59) (undo-tree-id171 . -59) (undo-tree-id172 . -59) (undo-tree-id173 . -59) (undo-tree-id174 . -59) (undo-tree-id175 . -59) (undo-tree-id176 . -59) (undo-tree-id177 . -59) (undo-tree-id178 . -59) (undo-tree-id179 . -59) (undo-tree-id180 . -59) (undo-tree-id181 . -59) (undo-tree-id182 . -59) (undo-tree-id183 . -59) (undo-tree-id184 . -59) (undo-tree-id185 . -59) (undo-tree-id186 . -59) (undo-tree-id187 . -59) (undo-tree-id188 . -59) (undo-tree-id189 . -59) (undo-tree-id190 . -59) (undo-tree-id191 . -59) (undo-tree-id192 . -59) (undo-tree-id193 . -59) (undo-tree-id194 . -59) (undo-tree-id195 . -59) (undo-tree-id196 . -59) (undo-tree-id197 . -59) (undo-tree-id198 . -59) (undo-tree-id199 . -59) (undo-tree-id200 . -59) (undo-tree-id201 . -59) (undo-tree-id202 . -59) (undo-tree-id203 . -59) (undo-tree-id204 . -59) (undo-tree-id205 . -59) (undo-tree-id206 . -59) (undo-tree-id207 . -59) (undo-tree-id208 . -59) (undo-tree-id209 . -59) (undo-tree-id210 . -59) (undo-tree-id211 . -59) (undo-tree-id212 . -59) (undo-tree-id213 . -59) (undo-tree-id214 . -59)) ((15693 . 15752) (#("
" 0 1 (fontified nil)) . 15693) (undo-tree-id225 . 1) (#("C" 0 1 (fontified t)) . 15693) (undo-tree-id226 . -1) (undo-tree-id227 . -1)) (26712 63699 810377 351000) 0 nil])
([nil nil ((15710 . 15711) 15693) nil (26712 63711 941732 855000) 0 nil])
nil
([nil nil ((#("\\begin{longtblr}[
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 15 (face font-lock-function-name-face latex-env-pair t fontified t) 15 16 (latex-env-pair t fontified t) 16 17 (fontified t) 17 18 (fontified t)) . 15693) (undo-tree-id285 . -17) (undo-tree-id286 . 18) (undo-tree-id287 . -17) (undo-tree-id288 . -18)) ((15693 . 15711)) (26712 63705 190229 511000) 0 nil])
nil
nil
([nil nil ((nil rear-nonsticky nil 15781 . 15782) (nil fontified nil 15711 . 15782) (15711 . 15782)) nil (26712 63711 941728 207000) 0 nil])
nil
([nil nil ((#("  width = \\linewidth,
" 0 10 (fontified t) 10 20 (face font-lock-keyword-face fontified t) 20 22 (fontified t)) . 15818) (undo-tree-id527 . -21) (undo-tree-id528 . -20) (undo-tree-id529 . -20) (undo-tree-id530 . -20) (undo-tree-id531 . -20) (undo-tree-id532 . -20) (undo-tree-id533 . -20) (undo-tree-id534 . -20) (undo-tree-id535 . -20) (undo-tree-id536 . -20) (undo-tree-id537 . -20) (undo-tree-id538 . -20) (undo-tree-id539 . -20) (undo-tree-id540 . -20) (undo-tree-id541 . -20) (undo-tree-id542 . -20) (undo-tree-id543 . -20) (undo-tree-id544 . -20) (undo-tree-id545 . -20) (undo-tree-id546 . -20) (undo-tree-id547 . -20) (undo-tree-id548 . -20) (undo-tree-id549 . -20) (undo-tree-id550 . -20) (undo-tree-id551 . -20) (undo-tree-id552 . -20) (undo-tree-id553 . -20) (undo-tree-id554 . -20) (undo-tree-id555 . -20) (undo-tree-id556 . -20) (undo-tree-id557 . -20) (undo-tree-id558 . -20) (undo-tree-id559 . -20) (undo-tree-id560 . -20) (undo-tree-id561 . -20) (undo-tree-id562 . -20) (undo-tree-id563 . -20) (undo-tree-id564 . -20) (undo-tree-id565 . -20) (undo-tree-id566 . -20) (undo-tree-id567 . -20) (undo-tree-id568 . -20) (undo-tree-id569 . -20) (undo-tree-id570 . -20) (undo-tree-id571 . -20) (undo-tree-id572 . -20) (undo-tree-id573 . -20) (undo-tree-id574 . -20) (undo-tree-id575 . -20) (undo-tree-id576 . -20) (undo-tree-id577 . -20) (undo-tree-id578 . -20) (undo-tree-id579 . -20) (undo-tree-id580 . -20) (undo-tree-id581 . -20) (undo-tree-id582 . -20) (undo-tree-id583 . -20) (undo-tree-id584 . -20) (undo-tree-id585 . -20) (undo-tree-id586 . -20) (undo-tree-id587 . -20) (undo-tree-id588 . -20) (undo-tree-id589 . -20) (undo-tree-id590 . -20) (undo-tree-id591 . -20) (undo-tree-id592 . -20) (undo-tree-id593 . -20) (undo-tree-id594 . -20) (undo-tree-id595 . -20) (undo-tree-id596 . -20) (undo-tree-id597 . -20) (undo-tree-id598 . -20) (undo-tree-id599 . -20) (undo-tree-id600 . -20) (undo-tree-id601 . -20) (undo-tree-id602 . -20) (undo-tree-id603 . -20) (undo-tree-id604 . -20) (undo-tree-id605 . -20) (undo-tree-id606 . -20) (undo-tree-id607 . -20) (undo-tree-id608 . -22) 15838 (t 26712 63711 952748 524000)) nil (26712 63719 885844 255000) 0 nil])
([nil nil ((#("  colspec = {Q[658]Q[269]},
" 0 27 (fontified t) 27 28 (fontified t)) . 15818) (undo-tree-id510 . -27) (undo-tree-id511 . -27) (undo-tree-id512 . -20) (undo-tree-id513 . -20) (undo-tree-id514 . -20) (undo-tree-id515 . -20) (undo-tree-id516 . -20) (undo-tree-id517 . -20) (undo-tree-id518 . -20) (undo-tree-id519 . -20) (undo-tree-id520 . -20) (undo-tree-id521 . -20) (undo-tree-id522 . -20) (undo-tree-id523 . -20) (undo-tree-id524 . -20) (undo-tree-id525 . -20) (undo-tree-id526 . -28) 15838) nil (26712 63719 885813 307000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 16506) (t 26712 63719 889789 631000) (16507 . 16508) 16506 (t 26712 63719 889789 631000)) nil (26712 63739 150493 547000) 0 nil])
([nil nil ((nil fontified t 16506 . 16507) (#("7" 0 1 (fontified t)) . 16506) (16507 . 16508) 16506) nil (26712 63739 150492 746000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 16625) (undo-tree-id611 . -1)) nil (26712 63739 150492 265000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 16625) (undo-tree-id610 . -1)) nil (26712 63739 150491 523000) 0 nil])
([nil nil ((#(" 
" 0 1 (fontified t) 1 2 (fontified t)) . 16625) (undo-tree-id609 . -1)) nil (26712 63739 150490 511000) 0 nil])
([nil nil ((16626 . 16647) (16845 . 16861)) nil (26712 63739 150479 180000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17627 . 17628) (nil fontified nil 16939 . 17628) (16939 . 17628) (#("
%% \\begin{longtable}[]{@{}
%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 2\\tabcolsep) * \\real{0.7125}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 2\\tabcolsep) * \\real{0.2875}}@{}}
%% \\toprule\\noalign{}
%% \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Сипаттамасы}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Мәні}
%% \\end{minipage} \\\\
%% \\midrule\\noalign{}
%% \\endhead
%% \\bottomrule\\noalign{}
%% \\endlastfoot
%% Қуат кернеуі & 1,8В \\ldots{} 5,5В \\\\
%% Жұмыс режимінде тұтынылатын ток & 0,2 мА \\\\
%% Күту режимінде тұтынылатын ток & 0,75 мкА \\\\
%% Тактілік жиілік & 20 МГц \\\\
%% Flash жады & 32 Кб \\\\
%% SRAM жады & 2 Кб \\\\
%% EEPROM жады & 1 Кб \\\\
%% Барлық порттар саны (ШИМ порттары) & 23(6) \\\\
%% АСТ арналарының саны & 6 \\\\
%% АСТ рұқсаты & 10 бит \\\\
%% 8-разрядты санауыштар саны & 2 \\\\
%% 16-разрядты санауыштар саны & 1 \\\\
%% Жалпы мақсаттағы тіркелімдер саны & 32х8 \\\\
%% \\end{longtable}" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 10 (face font-lock-comment-face fontified t) 10 21 (face font-lock-comment-face fontified t latex-env-pair t) 21 28 (face font-lock-comment-face fontified t) 28 33 (face font-lock-comment-delimiter-face fontified t) 33 109 (face font-lock-comment-face fontified t) 109 114 (face font-lock-comment-delimiter-face fontified t) 114 192 (face font-lock-comment-face fontified t) 192 195 (face font-lock-comment-delimiter-face fontified t) 195 214 (face font-lock-comment-face fontified t) 214 217 (face font-lock-comment-delimiter-face fontified t) 217 223 (face font-lock-comment-face fontified t) 223 233 (face font-lock-comment-face fontified t latex-env-pair t) 233 259 (face font-lock-comment-face fontified t) 259 262 (face font-lock-comment-delimiter-face fontified t) 262 286 (face font-lock-comment-face fontified t) 286 289 (face font-lock-comment-delimiter-face fontified t) 289 293 (face font-lock-comment-face fontified t) 293 303 (face font-lock-comment-face fontified t latex-env-pair t) 303 312 (face font-lock-comment-face fontified t) 312 322 (face font-lock-comment-face fontified t latex-env-pair t) 322 327 (face font-lock-comment-face fontified t) 327 343 (face font-lock-comment-face fontified t) 343 348 (face font-lock-comment-face fontified t) 348 351 (face font-lock-comment-delimiter-face fontified t) 351 368 (face font-lock-comment-face fontified t) 368 371 (face font-lock-comment-delimiter-face fontified t) 371 375 (face font-lock-comment-face fontified t) 375 385 (face font-lock-comment-face fontified t latex-env-pair t) 385 389 (face font-lock-comment-face fontified t) 389 392 (face font-lock-comment-delimiter-face fontified t) 392 411 (face font-lock-comment-face fontified t) 411 414 (face font-lock-comment-delimiter-face fontified t) 414 423 (face font-lock-comment-face fontified t) 423 426 (face font-lock-comment-delimiter-face fontified t) 426 427 (face font-lock-comment-face fontified t) 427 448 (face font-lock-comment-face fontified t) 448 451 (face font-lock-comment-delimiter-face fontified t) 451 464 (face font-lock-comment-face fontified t) 464 467 (face font-lock-comment-delimiter-face fontified t) 467 504 (face font-lock-comment-face fontified t) 504 507 (face font-lock-comment-delimiter-face fontified t) 507 551 (face font-lock-comment-face fontified t) 551 554 (face font-lock-comment-delimiter-face fontified t) 554 599 (face font-lock-comment-face fontified t) 599 602 (face font-lock-comment-delimiter-face fontified t) 602 630 (face font-lock-comment-face fontified t) 630 633 (face font-lock-comment-delimiter-face fontified t) 633 655 (face font-lock-comment-face fontified t) 655 658 (face font-lock-comment-delimiter-face fontified t) 658 678 (face font-lock-comment-face fontified t) 678 681 (face font-lock-comment-delimiter-face fontified t) 681 703 (face font-lock-comment-face fontified t) 703 706 (face font-lock-comment-delimiter-face fontified t) 706 752 (face font-lock-comment-face fontified t) 752 755 (face font-lock-comment-delimiter-face fontified t) 755 783 (face font-lock-comment-face fontified t) 783 786 (face font-lock-comment-delimiter-face fontified t) 786 810 (face font-lock-comment-face fontified t) 810 813 (face font-lock-comment-delimiter-face fontified t) 813 847 (face font-lock-comment-face fontified t) 847 850 (face font-lock-comment-delimiter-face fontified t) 850 885 (face font-lock-comment-face fontified t) 885 888 (face font-lock-comment-delimiter-face fontified t) 888 932 (face font-lock-comment-face fontified t) 932 935 (face font-lock-comment-delimiter-face fontified t) 935 939 (face font-lock-comment-face fontified t) 939 950 (face font-lock-comment-face fontified t latex-env-pair t)) . 16939) (undo-tree-id639 . -949) (undo-tree-id640 . -932) (undo-tree-id641 . -259) (undo-tree-id642 . -932) 17890 (t 26712 63739 154889 280000)) nil (26712 63839 313778 524000) 0 nil])
([nil nil ((#("% \\usepackage{tabularray}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 26 (face font-lock-comment-face fontified t)) . 16939) (undo-tree-id638 . -25)) nil (26712 63839 313776 219000) 0 nil])
([nil nil ((#("{\\bfseries 2 - кесте. ATmega328P негізгі сипаттамалары}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 54 (face (bold) fontified t) 54 56 (fontified t)) . -16883) (undo-tree-id634 . -56) (undo-tree-id635 . -56) (undo-tree-id636 . -56) (undo-tree-id637 . -56) 16939) nil (26712 63839 313775 478000) 0 nil])
([nil nil ((16900 . 16901) 16883) nil (26712 63839 313773 855000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16968 . 16969) (nil fontified nil 16901 . 16969) (16901 . 16969)) nil (26712 63839 313773 584000) 0 nil])
([nil nil ((#("  width = \\linewidth,
" 0 10 (fontified t) 10 20 (face font-lock-keyword-face fontified t) 20 22 (fontified t)) . 17005) (undo-tree-id624 . -21) (undo-tree-id625 . -20) (undo-tree-id626 . -20) (undo-tree-id627 . -20) (undo-tree-id628 . -20) (undo-tree-id629 . -20) (undo-tree-id630 . -20) (undo-tree-id631 . -20) (undo-tree-id632 . -20) (undo-tree-id633 . -22) 17025) nil (26712 63839 313772 873000) 0 nil])
([nil nil ((#("  colspec = {Q[708]Q[221]},
" 0 27 (fontified t) 27 28 (fontified t)) . 17005) (undo-tree-id612 . -27) (undo-tree-id613 . -27) (undo-tree-id614 . -20) (undo-tree-id615 . -20) (undo-tree-id616 . -20) (undo-tree-id617 . -20) (undo-tree-id618 . -20) (undo-tree-id619 . -20) (undo-tree-id620 . -20) (undo-tree-id621 . -20) (undo-tree-id622 . -20) (undo-tree-id623 . -28) 17025) nil (26712 63839 313764 878000) 0 nil])
([nil nil ((17567 . 17588) (19480 . 19496) (t 26712 63839 317404 657000)) nil (26712 63854 708650 92000) 0 nil])
([nil nil ((19689 . 19710) (20826 . 20842) (t 26712 63854 712483 505000)) nil (26712 63901 123716 791000) 0 nil])
([nil nil ((21021 . 21042) (21153 . 21169)) nil (26712 63901 123716 420000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 20920) (20921 . 20922) 20920) nil (26712 63901 123716 110000) 0 nil])
([nil nil ((nil fontified t 20920 . 20921) (#("7" 0 1 (fontified t)) . 20920) (20921 . 20922) 20920) nil (26712 63901 123715 729000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 21247) (21248 . 21249) 21247) nil (26712 63901 123715 338000) 0 nil])
([nil nil ((nil fontified t 21247 . 21248) (#("7" 0 1 (fontified t)) . 21247) (21248 . 21249) 21247) nil (26712 63901 123714 888000) 0 nil])
([nil nil ((21348 . 21369) (22015 . 22031)) nil (26712 63901 123714 447000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 21174) (undo-tree-id656 . -15) (undo-tree-id657 . -16) (undo-tree-id658 . -16) (undo-tree-id659 . -16) (undo-tree-id660 . -16) (undo-tree-id661 . -16) (undo-tree-id662 . -16) (undo-tree-id663 . -16)) nil (26712 63901 123713 816000) 0 nil])
([nil nil ((#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 21 (fontified t)) . 21021) (undo-tree-id643 . -20) (undo-tree-id644 . -21) (undo-tree-id645 . -21) (undo-tree-id646 . -21) (undo-tree-id647 . -21) (undo-tree-id648 . -21) (undo-tree-id649 . -21) (undo-tree-id650 . -21) (undo-tree-id651 . -21) (undo-tree-id652 . -21) (undo-tree-id653 . -21) (undo-tree-id654 . -21) (undo-tree-id655 . -21)) nil (26712 63901 123707 484000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 22488) (t 26712 63901 127720 695000) (22489 . 22490) 22488 (t 26712 63901 127720 695000)) nil (26712 63930 962345 157000) 0 nil])
([nil nil ((nil fontified t 22488 . 22489) (#("7" 0 1 (fontified t)) . 22488) (22489 . 22490) 22488) nil (26712 63930 962344 606000) 0 nil])
([nil nil ((22193 . 22214) (22431 . 22447) 22193) nil (26712 63930 962344 35000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 22072) (22073 . 22074) 22072) nil (26712 63930 962343 414000) 0 nil])
([nil nil ((nil fontified t 22072 . 22073) (#("7" 0 1 (fontified t)) . 22072) (22073 . 22074) 22072) nil (26712 63930 962338 264000) 0 nil])
([nil nil ((nil fontified t 22525 . 22526) (t 26712 63930 967872 787000) (#("6" 0 1 (fontified t)) . 22525) (t 26712 63930 967872 787000) (22526 . 22527) 22525 (t 26712 63930 967872 787000)) nil (26712 63952 13849 900000) 0 nil])
([nil nil ((nil fontified t 22525 . 22526) (#("7" 0 1 (fontified t)) . 22525) (22526 . 22527) 22525) nil (26712 63952 13845 31000) 0 nil])
([nil nil ((#("\\end{multicols}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.6\\textwidth]{media/ict2/image178}
	\\caption*{10-сурет. Суреттер сериясын уақытша өңдеу жүйесінің құрылымы}
\\end{figure}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t) 16 17 (fontified t) 17 23 (face font-lock-keyword-face fontified t) 23 24 (fontified t latex-env-pair t) 24 30 (face font-lock-function-name-face fontified t latex-env-pair t) 30 31 (fontified t latex-env-pair t) 31 36 (fontified t) 36 46 (face font-lock-keyword-face fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 64 (face font-lock-keyword-face fontified t) 64 73 (fontified t) 73 74 (fontified t) 74 84 (face font-lock-keyword-face fontified t) 84 86 (fontified t) 86 105 (face font-lock-builtin-face fontified t) 105 107 (fontified t) 107 108 (fontified t) 108 117 (face font-lock-keyword-face fontified t) 117 180 (fontified t) 180 184 (face font-lock-keyword-face fontified t) 184 185 (fontified t latex-env-pair t) 185 191 (face font-lock-function-name-face fontified t latex-env-pair t) 191 192 (fontified t latex-env-pair t) 192 193 (fontified t)) . 21999) (undo-tree-id668 . -192) (undo-tree-id669 . -192) (undo-tree-id670 . -14) (undo-tree-id671 . -192) (undo-tree-id672 . -180) (undo-tree-id673 . -45) (undo-tree-id674 . -45) (undo-tree-id675 . -17) (undo-tree-id676 . -17) (undo-tree-id677 . -180) (undo-tree-id678 . -192) 22191 (t 26712 63952 16979 886000)) nil (26712 63965 176315 19000) 0 nil])
([nil nil ((nil rear-nonsticky nil 21309 . 21310) (#("
" 0 1 (fontified nil)) . -21502) (21309 . 21503) 21297) nil (26712 63965 176309 649000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 21310) (undo-tree-id666 . -15) (undo-tree-id667 . -16)) nil (26712 63965 176308 617000) 0 nil])
([nil nil ((#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 21 (fontified t)) . 22177) (undo-tree-id664 . -20) (undo-tree-id665 . -21)) nil (26712 63965 176303 938000) 0 nil])
([nil nil ((nil fontified t 21367 . 21368) (t 26712 63965 179046 784000) (#("6" 0 1 (fontified t)) . 21367) (t 26712 63965 179046 784000) (21368 . 21369) 21367 (t 26712 63965 179046 784000)) nil (26712 63987 974656 322000) 0 nil])
([nil nil ((nil fontified t 21210 . 21211) (#("6" 0 1 (fontified t)) . 21210) (21211 . 21212) 21210) nil (26712 63987 974651 113000) 0 nil])
([nil nil ((21211 . 21212) (t 26712 63987 978162 540000)) nil (26712 63997 671072 462000) 0 nil])
([nil nil ((21369 . 21370)) nil (26712 63997 671067 292000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 21369) (t 26712 63997 675211 728000)) nil (26712 64018 695357 752000) 0 nil])
([nil nil ((nil fontified t 21368 . 21369) (#("7" 0 1 (fontified t)) . 21368) (21369 . 21370) 21368) nil (26712 64018 695356 900000) 0 nil])
([nil nil ((20920 . 20922) (#("6" 0 1 (fontified t)) . 20920) (undo-tree-id679 . -1) (undo-tree-id680 . -1)) nil (26712 64018 695352 983000) 0 nil])
([nil nil ((nil fontified t 21369 . 21370) (t 26712 64018 711318 339000) (#("6" 0 1 (fontified t)) . 21369) (t 26712 64018 711318 339000) (21370 . 21371) 21369 (t 26712 64018 711318 339000)) nil (26712 64034 601035 573000) 0 nil])
([nil nil ((22590 . 22611) (23960 . 23976) (t 26712 64034 604398 806000)) nil (26712 64089 198266 428000) 0 nil])
([nil nil ((apply 15 23998 24160 undo--wrap-and-run-primitive-undo 23998 24160 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -24147) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -24092) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -24028) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -24016) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -23998) 24175))) nil (26712 64089 198266 58000) 0 nil])
([nil nil ((24161 . 24182) (24739 . 24755)) nil (26712 64089 198265 877000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-builtin-face fontified t)) . 24086) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1)) nil (26712 64089 198265 437000) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-builtin-face fontified t)) . 24086) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1)) nil (26712 64089 198262 902000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-builtin-face fontified t)) . 24086) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1)) nil (26712 64089 198258 704000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-builtin-face fontified t)) . 24086) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1)) nil (26712 64089 198244 347000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 24054) (t 26712 64089 208674 769000) (24055 . 24056) 24054 (t 26712 64089 208674 769000)) nil (26712 64129 942317 568000) 0 nil])
([nil nil ((nil fontified t 24054 . 24055) (#("7" 0 1 (fontified t)) . 24054) (24055 . 24056) 24054) nil (26712 64133 93519 917000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 23981) (undo-tree-id750 . -15) (undo-tree-id751 . -14) 23995 (t 26712 64133 446897 815000)) nil (26712 64171 338539 606000) 0 nil] [nil nil ((#("8" 0 1 (fontified t)) . 24829) (24830 . 24831) 24829) ((#("7" 0 1 (fontified nil)) . 24830) (24829 . 24830)) (26712 64132 935465 432000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.6\\textwidth]{media/ict2/image180}
	\\caption*{12 - сурет. Контур қисығын анықтау процесі}
\\end{figure}

\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 18 (fontified t) 18 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 54 (fontified t) 54 56 (fontified t) 56 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 88 (face font-lock-builtin-face fontified t) 88 90 (fontified t) 90 91 (fontified t) 91 100 (face font-lock-keyword-face fontified t) 100 145 (fontified t) 145 149 (face font-lock-keyword-face fontified t) 149 150 (fontified t latex-env-pair t) 150 156 (face font-lock-function-name-face fontified t latex-env-pair t) 156 157 (fontified t latex-env-pair t) 157 158 (fontified t) 158 159 (fontified t) 159 165 (face font-lock-keyword-face fontified t) 165 166 (fontified t latex-env-pair t) 166 175 (face font-lock-function-name-face fontified t latex-env-pair t) 175 176 (fontified t latex-env-pair t) 176 180 (fontified t)) . 23982) (undo-tree-id744 . -159) (undo-tree-id745 . -179) (undo-tree-id746 . -159) (undo-tree-id747 . -158) (undo-tree-id748 . -159) (undo-tree-id749 . -159) 24141) nil (26712 64171 338538 163000) 0 nil])
([nil nil ((nil fontified t 24829 . 24830) (#("7" 0 1 (fontified t)) . 24829) (24830 . 24831) 24829) ((#("6" 0 1 (fontified nil)) . 24830) (24829 . 24830) (t 26712 64129 946880 184000)) (26712 64129 942311 777000) 0 nil])
([nil nil ((22590 . 22770) (#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 16 (face font-lock-function-name-face latex-env-pair t fontified t) 16 17 (latex-env-pair t fontified t) 17 21 (fontified t)) . 22590) (undo-tree-id734 . -21) (undo-tree-id735 . -20) (undo-tree-id736 . -21) (undo-tree-id737 . -21) (undo-tree-id738 . -21) (undo-tree-id739 . -21) (undo-tree-id740 . -21) (undo-tree-id741 . -21) (undo-tree-id742 . -21) (undo-tree-id743 . -21) 22611) nil (26712 64171 338532 242000) 0 nil])
nil
([nil nil ((nil fontified t 24792 . 24793) (t 26712 64171 342088 536000) (#("8" 0 1 (fontified t)) . 24792) (t 26712 64171 342088 536000) (24793 . 24794) 24792 (t 26712 64171 342088 536000)) nil (26712 64193 43427 274000) 0 nil])
([nil nil ((24894 . 24915) (25109 . 25125)) nil (26712 64193 43423 357000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict2/image183}
	\\caption*{}
\\end{figure}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict2/image184}
	\\caption*{}
\\end{figure}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict2/image185}
	\\caption*{}
\\end{figure}

{\\bfseries 15 сурет. IMAQ Extract Contour VI, IMAQ Fit Contour VI, IMAQ Compute Contour Distances VI қосалқы құралдардың блок- сұлбалары}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 88 (face font-lock-builtin-face fontified t) 88 91 (fontified t) 91 100 (face font-lock-keyword-face fontified t) 100 103 (fontified t) 103 107 (face font-lock-keyword-face fontified t) 107 108 (fontified t latex-env-pair t) 108 114 (face font-lock-function-name-face fontified t latex-env-pair t) 114 115 (fontified t latex-env-pair t) 115 117 (fontified t) 117 123 (face font-lock-keyword-face fontified t) 123 124 (fontified t latex-env-pair t) 124 130 (face font-lock-function-name-face fontified t latex-env-pair t) 130 131 (fontified t latex-env-pair t) 131 136 (fontified t) 136 146 (face font-lock-keyword-face fontified t) 146 148 (fontified t) 148 164 (face font-lock-keyword-face fontified t) 164 174 (fontified t) 174 184 (face font-lock-keyword-face fontified t) 184 186 (fontified t) 186 205 (face font-lock-builtin-face fontified t) 205 208 (fontified t) 208 217 (face font-lock-keyword-face fontified t) 217 220 (fontified t) 220 224 (face font-lock-keyword-face fontified t) 224 225 (fontified t latex-env-pair t) 225 231 (face font-lock-function-name-face fontified t latex-env-pair t) 231 232 (fontified t latex-env-pair t) 232 234 (fontified t) 234 240 (face font-lock-keyword-face fontified t) 240 241 (fontified t latex-env-pair t) 241 247 (face font-lock-function-name-face fontified t latex-env-pair t) 247 248 (fontified t latex-env-pair t) 248 253 (fontified t) 253 263 (face font-lock-keyword-face fontified t) 263 265 (fontified t) 265 281 (face font-lock-keyword-face fontified t) 281 283 (fontified t) 283 291 (fontified t) 291 301 (face font-lock-keyword-face fontified t) 301 303 (fontified t) 303 322 (face font-lock-builtin-face fontified t) 322 324 (fontified t) 324 325 (fontified t) 325 334 (face font-lock-keyword-face fontified t) 334 337 (fontified t) 337 338 (face font-lock-keyword-face fontified t) 338 341 (face font-lock-keyword-face fontified t) 341 342 (fontified t latex-env-pair t) 342 348 (face font-lock-function-name-face fontified t latex-env-pair t) 348 349 (fontified t latex-env-pair t) 349 350 (fontified t) 350 352 (fontified t) 352 361 (face font-lock-keyword-face fontified t) 361 388 (face (bold) fontified t) 388 487 (face (bold) fontified t) 487 489 (fontified t)) . 25305) (undo-tree-id818 . -450) (undo-tree-id819 . -488) (undo-tree-id820 . -450) (undo-tree-id821 . -116) (undo-tree-id822 . -450) 25755 (t 26712 64193 54197 676000)) nil (26712 64315 791515 150000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25998 . 25999) (nil fontified nil 25305 . 25999) (25305 . 25999)) nil (26712 64315 791511 603000) 0 nil])
([nil nil ((25999 . 26000) 25998) nil (26712 64315 791511 42000) 0 nil])
([nil nil ((#("    \\\\
" 0 4 (fontified t) 4 6 (face font-lock-warning-face fontified t) 6 7 (fontified t)) . 25664) (undo-tree-id811 . -6) (undo-tree-id812 . -7) (undo-tree-id813 . -7) (undo-tree-id814 . -7) (undo-tree-id815 . -7) (undo-tree-id816 . -7) (undo-tree-id817 . -7)) nil (26712 64315 791510 271000) 0 nil])
([nil nil ((25528 . 25529)) nil (26712 64315 791507 425000) 0 nil])
([nil nil ((25365 . 25366)) nil (26712 64315 791507 215000) 0 nil])
([nil nil ((25693 . 25694)) nil (26712 64315 791506 764000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 25844) (undo-tree-id754 . -10) (undo-tree-id755 . -11) (undo-tree-id756 . -11) (undo-tree-id757 . -11) (undo-tree-id758 . -11) (undo-tree-id759 . -11) (undo-tree-id760 . -10) (undo-tree-id761 . -10) (undo-tree-id762 . -10) (undo-tree-id763 . -10) (undo-tree-id764 . -10) (undo-tree-id765 . -9) (undo-tree-id766 . -9) (undo-tree-id767 . -9) (undo-tree-id768 . -9) (undo-tree-id769 . -9) (undo-tree-id770 . -8) (undo-tree-id771 . -8) (undo-tree-id772 . -8) (undo-tree-id773 . -8) (undo-tree-id774 . -8) (undo-tree-id775 . -7) (undo-tree-id776 . -7) (undo-tree-id777 . -7) (undo-tree-id778 . -7) (undo-tree-id779 . -7) (undo-tree-id780 . -6) (undo-tree-id781 . -6) (undo-tree-id782 . -6) (undo-tree-id783 . -6) (undo-tree-id784 . -6) (undo-tree-id785 . -5) (undo-tree-id786 . -5) (undo-tree-id787 . -5) (undo-tree-id788 . -5) (undo-tree-id789 . -5) (undo-tree-id790 . -4) (undo-tree-id791 . -4) (undo-tree-id792 . -4) (undo-tree-id793 . -4) (undo-tree-id794 . -4) (undo-tree-id795 . -3) (undo-tree-id796 . -3) (undo-tree-id797 . -3) (undo-tree-id798 . -3) (undo-tree-id799 . -3) (undo-tree-id800 . -2) (undo-tree-id801 . -2) (undo-tree-id802 . -2) (undo-tree-id803 . -2) (undo-tree-id804 . -2) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -11)) nil (26712 64315 791505 251000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 25970) (undo-tree-id752 . -1) (undo-tree-id753 . -1)) nil (26712 64315 791464 855000) 0 nil])
([nil nil ((25985 . 26006) (26810 . 26826) (t 26712 64315 796813 25000)) nil (26712 64338 551821 908000) 0 nil])
([nil nil ((29190 . 29192) (t 26712 64338 554926 840000)) nil (26712 64359 76029 89000) 0 nil])
([nil nil ((29310 . 29311) (#("
" 0 1 (fontified t)) . -29310) (undo-tree-id823 . -1) 29309 (t 26712 64359 80029 436000)) nil (26712 64361 657501 225000) 0 nil])
([nil nil ((31054 . 31056) (t 26712 64361 661042 332000)) nil (26712 64383 778715 500000) 0 nil])
([nil nil ((31174 . 31175) (#("
" 0 1 (fontified t)) . -31174) (undo-tree-id824 . -1) 31173) nil (26712 64383 778712 394000) 0 nil])
([nil nil ((31416 . 31418) (t 26712 64383 782152 826000)) nil (26712 64407 482867 653000) 0 nil])
([nil nil ((33062 . 33064) (t 26712 64407 486271 151000)) nil (26712 64810 255330 179000) 0 nil])
([nil nil ((33188 . 33190)) nil (26712 64810 255329 888000) 0 nil])
([nil nil ((33382 . 33383) (#("
" 0 1 (fontified t)) . -33382) (undo-tree-id871 . -1) 33381) nil (26712 64813 429294 129000) 0 nil])
([nil nil ((33517 . 33519)) nil (26712 64815 787765 62000) 0 nil] [nil nil ((#("t" 0 1 (fontified t)) . -33385) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (#("t" 0 1 (fontified t)) . -33386) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) 33387 (33383 . 33387)) ((#("\\\\tt" 0 2 (face font-lock-warning-face fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 33383) (undo-tree-id872 . -1) (undo-tree-id873 . -3) (undo-tree-id874 . -4) (undo-tree-id875 . -4) (undo-tree-id876 . -4) (undo-tree-id877 . -4) (undo-tree-id878 . -4) (undo-tree-id879 . -4) (undo-tree-id880 . -4) (undo-tree-id881 . -4) (undo-tree-id882 . -4) (undo-tree-id883 . -4) (undo-tree-id884 . -4) (undo-tree-id885 . -4) (undo-tree-id886 . -4) (undo-tree-id887 . -4) (undo-tree-id888 . -4) (undo-tree-id889 . -3) (undo-tree-id890 . -3) (undo-tree-id891 . -3) (undo-tree-id892 . -3) (undo-tree-id893 . -3) (undo-tree-id894 . -3) (undo-tree-id895 . -3) (undo-tree-id896 . -3) (undo-tree-id897 . -3) (undo-tree-id898 . -3) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (33385 . 33387) (t 26712 64810 259272 835000)) (26712 64810 255325 289000) 0 nil])
([nil current ((#("\\" 0 1 (fontified t)) . 33586) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (t 26712 64815 793300 250000)) nil (26712 64817 809293 525000) 0 nil])
nil
nil
