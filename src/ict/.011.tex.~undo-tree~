(undo-tree-save-format-version . 1)
"acd023439cc9efd0a1a5ec47d2e2ec612e653be4"
[nil nil nil nil (26716 55852 225257 271000) 0 nil]
([nil nil ((310 . 355) 309 (t 26715 40779 234977 582000)) nil (26716 55852 225256 590000) 0 nil])
([nil nil ((416 . 461)) nil (26716 55852 225255 788000) 0 nil])
([nil nil ((496 . 540)) nil (26716 55852 225255 327000) 0 nil])
([nil nil ((575 . 620) 574) nil (26716 55852 225251 630000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16756 . 16757) (#("
" 0 1 (fontified nil)) . -16871) (16756 . 16872) (t 26716 55852 226528 36000)) nil (26716 55996 18495 946000) 0 nil])
([nil nil ((#("{\\bfseries Fig.1 - Data from the database \\url{https://vuldb.com/?archive}}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 42 (face (bold) fontified t) 42 46 (face (font-lock-keyword-face bold) fontified t) 46 47 (face (bold) fontified t) 47 73 (face (tex-verbatim bold) fontified t) 73 74 (face (bold) fontified t) 74 75 (fontified t)) . -16872) 16948) nil (26716 55996 18495 576000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16919 . 16920) (nil fontified nil 16857 . 16920) (16857 . 16920)) nil (26716 55996 18495 245000) 0 nil])
([nil nil ((nil fontified t 16843 . 16844) (nil face font-lock-builtin-face 16843 . 16844) (#("1" 0 1 (face font-lock-builtin-face fontified t)) . 16843) (16844 . 16845) 16843) nil (26716 55996 18494 754000) 0 nil])
([nil nil ((nil fontified t 16843 . 16844) (nil face font-lock-builtin-face 16843 . 16844) (#("2" 0 1 (face font-lock-builtin-face fontified t)) . 16843) (16844 . 16845) 16843) nil (26716 56027 417691 953000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 16757) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1)) nil (26716 56032 694592 677000) 0 nil] [nil nil ((#("
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict4/image3}
	\\caption*{Fig.1 - Data from the database \\url{https://vuldb.com/?archive}}
\\end{figure}
" 0 1 (fontified t rear-nonsticky t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t latex-env-pair t) 8 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 20 (fontified t) 20 30 (face font-lock-keyword-face fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 48 (face font-lock-keyword-face fontified t) 48 57 (fontified t) 57 58 (fontified t) 58 68 (face font-lock-keyword-face fontified t) 68 70 (fontified t) 70 86 (face font-lock-builtin-face fontified t) 86 87 (face font-lock-builtin-face fontified t) 87 89 (fontified t) 89 90 (fontified t) 90 99 (face font-lock-keyword-face fontified t) 99 100 (fontified t) 100 131 (fontified t) 131 135 (face font-lock-keyword-face fontified t) 135 136 (fontified t) 136 162 (face tex-verbatim fontified t) 162 163 (fontified t rear-nonsticky t) 163 165 (fontified t) 165 169 (face font-lock-keyword-face fontified t) 169 170 (fontified t latex-env-pair t) 170 176 (face font-lock-function-name-face fontified t latex-env-pair t) 176 177 (fontified t latex-env-pair t) 177 178 (fontified t)) . 16757) (undo-tree-id0 . -165) (undo-tree-id1 . -177) (undo-tree-id2 . -165) (undo-tree-id4 . -178) (undo-tree-id6 . -100) (undo-tree-id8 . -86) (undo-tree-id10 . -86) (undo-tree-id12 . -86) (undo-tree-id14 . -86) (undo-tree-id16 . -86) (undo-tree-id18 . -86) (undo-tree-id20 . -86) (undo-tree-id22 . -86) (undo-tree-id24 . -86) (undo-tree-id26 . -86) (undo-tree-id28 . -86) (undo-tree-id30 . -86) (undo-tree-id32 . -86) (undo-tree-id34 . -86) (undo-tree-id36 . -86) (undo-tree-id38 . -86) (undo-tree-id40 . -86) (undo-tree-id42 . -29) (undo-tree-id44 . -29) (undo-tree-id46 . -29) (undo-tree-id48 . -29) (undo-tree-id50 . -29) (undo-tree-id52 . -29) (undo-tree-id54 . -17) (undo-tree-id56 . -17) (undo-tree-id58 . -1) (undo-tree-id60 . -1) (undo-tree-id62 . -1) (undo-tree-id64 . -1) (undo-tree-id66 . -1) (undo-tree-id68 . -1) (undo-tree-id70 . -1) (undo-tree-id72 . -1) (undo-tree-id74 . -1) (undo-tree-id76 . -1) (undo-tree-id78 . -1) (undo-tree-id80 . -19) (undo-tree-id82 . -19) (undo-tree-id84 . -19) (undo-tree-id86 . -31) (undo-tree-id88 . -31) (undo-tree-id90 . -89) (undo-tree-id92 . -89) (undo-tree-id94 . -89) (undo-tree-id96 . -89) (undo-tree-id98 . -89) (undo-tree-id100 . -89) (undo-tree-id102 . -89) (undo-tree-id104 . -89) (undo-tree-id106 . -89) (undo-tree-id108 . -89) (undo-tree-id110 . -165) (undo-tree-id112 . -165) (undo-tree-id114 . -165) (undo-tree-id116 . -165) (undo-tree-id118 . -165) (undo-tree-id120 . -165) (undo-tree-id122 . -165) (undo-tree-id124 . -165) (undo-tree-id126 . -165) (undo-tree-id128 . -165) (undo-tree-id129 . -178) (undo-tree-id130 . -165) (undo-tree-id132 . -165) (undo-tree-id134 . -178) 16922) ((16757 . 16935)) (26716 56026 588779 489000) 0 nil] [nil nil ((nil fontified t 16843 . 16844) (nil face font-lock-builtin-face 16843 . 16844) (#("3" 0 1 (face font-lock-builtin-face fontified t)) . 16843) (16844 . 16845) 16843) ((#("4" 0 1 (face font-lock-builtin-face fontified nil)) . 16844) (16843 . 16844)) (26716 55996 18489 865000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 16934) (undo-tree-id146 . 1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1)) nil (26716 56109 664375 306000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11173 . 11174) (#("
" 0 1 (fontified nil)) . -11351) (11173 . 11352) 11158) ((#("

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict4/image3}
	\\caption*{Fig.1 - Data from the database \\url{https://vuldb.com/?archive}}
\\end{figure}
" 0 1 (rear-nonsticky nil fontified nil) 1 2 (fontified nil rear-nonsticky t) 2 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t latex-env-pair t) 9 15 (face font-lock-function-name-face fontified t latex-env-pair t) 15 16 (fontified t latex-env-pair t) 16 21 (fontified t) 21 31 (face font-lock-keyword-face fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 49 (face font-lock-keyword-face fontified t) 49 58 (fontified t) 58 59 (fontified t) 59 69 (face font-lock-keyword-face fontified t) 69 71 (fontified t) 71 87 (face font-lock-builtin-face fontified t) 87 88 (face font-lock-builtin-face fontified t) 88 90 (fontified t) 90 91 (fontified t) 91 100 (face font-lock-keyword-face fontified t) 100 101 (fontified t) 101 132 (fontified t) 132 136 (face font-lock-keyword-face fontified t) 136 137 (fontified t) 137 163 (face tex-verbatim fontified t) 163 164 (fontified t rear-nonsticky t) 164 166 (fontified t) 166 170 (face font-lock-keyword-face fontified nil) 170 171 (fontified nil latex-env-pair t) 171 177 (face font-lock-function-name-face fontified nil latex-env-pair t) 177 178 (fontified nil latex-env-pair t) 178 179 (fontified nil)) . 11173) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -166) (undo-tree-id145 . -166) (11351 . 11352) (nil rear-nonsticky t 11173 . 11174)) (26716 56026 185270 637000) 0 nil])
nil
([nil nil ((#("- Type of vulnerability (remote access, code execution, etc.).

- Software that is affected by the vulnerability.
" 0 114 (fontified t)) . 11044) (undo-tree-id834 . -64) (undo-tree-id835 . -113) (undo-tree-id836 . -64) (undo-tree-id837 . -114) (undo-tree-id838 . -114) (undo-tree-id839 . -63) (undo-tree-id840 . -63) (undo-tree-id841 . -63) (undo-tree-id842 . -63) (undo-tree-id843 . -63) (undo-tree-id844 . -63) (undo-tree-id845 . -63) (undo-tree-id846 . -63) (undo-tree-id847 . -63) (undo-tree-id848 . -63) (undo-tree-id849 . -63) (undo-tree-id850 . -63) (undo-tree-id851 . -63) (undo-tree-id852 . -63) (undo-tree-id853 . -63) (undo-tree-id854 . -63) (undo-tree-id855 . -63) (undo-tree-id856 . -63) (undo-tree-id857 . -64) (undo-tree-id858 . -64) (undo-tree-id859 . -64) (undo-tree-id860 . -64) (undo-tree-id861 . -64) (undo-tree-id862 . -64) (undo-tree-id863 . -64) (undo-tree-id864 . -64) (undo-tree-id865 . -64) (undo-tree-id866 . -64) (undo-tree-id867 . -64) (undo-tree-id868 . -64) (undo-tree-id869 . -64) (undo-tree-id870 . -64) (undo-tree-id871 . -64) (undo-tree-id872 . -64) (undo-tree-id873 . -64) (undo-tree-id874 . -64) (undo-tree-id875 . -64) (undo-tree-id876 . -64) (undo-tree-id877 . -64) (undo-tree-id878 . -64) (undo-tree-id879 . -64) (undo-tree-id880 . -64) (undo-tree-id881 . -64) (undo-tree-id882 . -64) (undo-tree-id883 . -64) (undo-tree-id884 . -64) (undo-tree-id885 . -64) (undo-tree-id886 . -64) (undo-tree-id887 . -64) (undo-tree-id888 . -64) (undo-tree-id889 . -64) (undo-tree-id890 . -64) (undo-tree-id891 . -64) (undo-tree-id892 . -64) (undo-tree-id893 . -64) (undo-tree-id894 . -64) (undo-tree-id895 . -64) (undo-tree-id896 . -64) (undo-tree-id897 . -64) (undo-tree-id898 . -64) (undo-tree-id899 . -64) (undo-tree-id900 . -64) (undo-tree-id901 . -64) (undo-tree-id902 . -64) (undo-tree-id903 . -64) (undo-tree-id904 . -64) (undo-tree-id905 . -64) (undo-tree-id906 . -64) (undo-tree-id907 . -64) (undo-tree-id908 . -64) (undo-tree-id909 . -64) (undo-tree-id910 . -64) (undo-tree-id911 . -64) (undo-tree-id912 . -64) (undo-tree-id913 . -64) (undo-tree-id914 . -64) (undo-tree-id915 . -63) (undo-tree-id916 . -63) (undo-tree-id917 . -63) (undo-tree-id918 . -63) (undo-tree-id919 . -63) (undo-tree-id920 . -63) (undo-tree-id921 . -63) (undo-tree-id922 . -63) (undo-tree-id923 . -63) (undo-tree-id924 . -63) (undo-tree-id925 . -63) (undo-tree-id926 . -63) (undo-tree-id927 . -63) (undo-tree-id928 . -63) (undo-tree-id929 . -63) (undo-tree-id930 . -63) (undo-tree-id931 . -63) (undo-tree-id932 . -63) (undo-tree-id933 . -63) (undo-tree-id934 . -63) (undo-tree-id935 . -63) (undo-tree-id936 . -63) (undo-tree-id937 . -63) (undo-tree-id938 . -63) (undo-tree-id939 . -63) (undo-tree-id940 . -63) (undo-tree-id941 . -63) (undo-tree-id942 . -64) (undo-tree-id943 . -64) (undo-tree-id944 . -64) (undo-tree-id945 . -64) (undo-tree-id946 . -64) (undo-tree-id947 . -64) (undo-tree-id948 . -64) (undo-tree-id949 . -64) (undo-tree-id950 . -64) (undo-tree-id951 . -64) (undo-tree-id952 . -64) (undo-tree-id953 . -64) (undo-tree-id954 . -64) (undo-tree-id955 . -64) (undo-tree-id956 . -64) (undo-tree-id957 . -64) (undo-tree-id958 . -64) (undo-tree-id959 . -64) (undo-tree-id960 . -64) (undo-tree-id961 . -64) (undo-tree-id962 . -64) (undo-tree-id963 . -64) (undo-tree-id964 . -64) (undo-tree-id965 . -64) (undo-tree-id966 . -64) (undo-tree-id967 . -64) (undo-tree-id968 . -64) (undo-tree-id969 . -64) (undo-tree-id970 . -64) (undo-tree-id971 . -64) (undo-tree-id972 . -64) (undo-tree-id973 . -64) (undo-tree-id974 . -64) (undo-tree-id975 . -64) (undo-tree-id976 . -64) (undo-tree-id977 . -64) (undo-tree-id978 . -64) (undo-tree-id979 . -64) (undo-tree-id980 . -64) (undo-tree-id981 . -64) (undo-tree-id982 . -64) (undo-tree-id983 . -64) (undo-tree-id984 . -64) (undo-tree-id985 . -64) (undo-tree-id986 . -64) (undo-tree-id987 . -64) (undo-tree-id988 . -64) (undo-tree-id989 . -64) (undo-tree-id990 . -64) (undo-tree-id991 . -64) (undo-tree-id992 . -64) (undo-tree-id993 . -64) (undo-tree-id994 . -64) (undo-tree-id995 . -64) (undo-tree-id996 . -64) (undo-tree-id997 . -64) (undo-tree-id998 . -64) (undo-tree-id999 . -63) (undo-tree-id1000 . -63) (undo-tree-id1001 . -63) (undo-tree-id1002 . -63) (undo-tree-id1003 . -63) (undo-tree-id1004 . -63) (undo-tree-id1005 . -63) (undo-tree-id1006 . -63) (undo-tree-id1007 . -63) (undo-tree-id1008 . -63) (undo-tree-id1009 . -63) (undo-tree-id1010 . -63) (undo-tree-id1011 . -63) (undo-tree-id1012 . -63) (undo-tree-id1013 . -63) (undo-tree-id1014 . -63) (undo-tree-id1015 . -63) (undo-tree-id1016 . -64) (undo-tree-id1017 . -64) (undo-tree-id1018 . -64) (undo-tree-id1019 . -64) (undo-tree-id1020 . -64) (undo-tree-id1021 . -64) (undo-tree-id1022 . -64) (undo-tree-id1023 . -64) (undo-tree-id1024 . -64) (undo-tree-id1025 . -64) (undo-tree-id1026 . -64) (undo-tree-id1027 . -64) (undo-tree-id1028 . -64) (undo-tree-id1029 . -64) (undo-tree-id1030 . -64) (undo-tree-id1031 . -64) (undo-tree-id1032 . -64) (undo-tree-id1033 . -64) (undo-tree-id1034 . -64) (undo-tree-id1035 . -64) (undo-tree-id1036 . -64) (undo-tree-id1037 . -64) (undo-tree-id1038 . -64) (undo-tree-id1039 . -64) (undo-tree-id1040 . -64) (undo-tree-id1041 . -64) (undo-tree-id1042 . -64) (undo-tree-id1043 . -64) (undo-tree-id1044 . -64) (undo-tree-id1045 . -64) (undo-tree-id1046 . -64) (undo-tree-id1047 . -64) (undo-tree-id1048 . -64) (undo-tree-id1049 . -64) (undo-tree-id1050 . -64) (undo-tree-id1051 . -64) (undo-tree-id1052 . -64) (undo-tree-id1053 . -64) (undo-tree-id1054 . -64) (undo-tree-id1055 . -64) (undo-tree-id1056 . -64) (undo-tree-id1057 . -64) (undo-tree-id1058 . -64) (undo-tree-id1059 . -64) (undo-tree-id1060 . -64) (undo-tree-id1061 . -64) (undo-tree-id1062 . -64) (undo-tree-id1063 . -64) (undo-tree-id1064 . -64) (undo-tree-id1065 . -64) (undo-tree-id1066 . -64) (undo-tree-id1067 . -64) (undo-tree-id1068 . -64) (undo-tree-id1069 . -64) (undo-tree-id1070 . -64) (undo-tree-id1071 . -64) (undo-tree-id1072 . -64) (undo-tree-id1073 . -64) (undo-tree-id1074 . -64) (undo-tree-id1075 . -64) (undo-tree-id1076 . -64) (undo-tree-id1077 . -64) (undo-tree-id1078 . -64) (undo-tree-id1079 . -64) (undo-tree-id1080 . -64) (undo-tree-id1081 . -64) (undo-tree-id1082 . -64) (undo-tree-id1083 . -64) (undo-tree-id1084 . -64) (undo-tree-id1085 . -64) (undo-tree-id1086 . -64) (undo-tree-id1087 . -64) (undo-tree-id1088 . -64) (undo-tree-id1089 . -64) (undo-tree-id1090 . -64) (undo-tree-id1091 . -64) (undo-tree-id1092 . -64) (undo-tree-id1093 . -64) (undo-tree-id1094 . -64) (undo-tree-id1095 . -64) (undo-tree-id1096 . -64) (undo-tree-id1097 . -64) (undo-tree-id1098 . -64) (undo-tree-id1099 . -64) (undo-tree-id1100 . -64) (undo-tree-id1101 . -64) (undo-tree-id1102 . -64) (undo-tree-id1103 . -64) (undo-tree-id1104 . -64) (undo-tree-id1105 . -64) (undo-tree-id1106 . -64) (undo-tree-id1107 . -64) (undo-tree-id1108 . -64) (undo-tree-id1109 . -64) (undo-tree-id1110 . -64) (undo-tree-id1111 . -64) (undo-tree-id1112 . -64) (undo-tree-id1113 . -64) (undo-tree-id1114 . -64) (undo-tree-id1115 . -64) (undo-tree-id1116 . -64) (undo-tree-id1117 . -64) (undo-tree-id1118 . -64) (undo-tree-id1119 . -64) (undo-tree-id1120 . -64) (undo-tree-id1121 . -64) (undo-tree-id1122 . -64) (undo-tree-id1123 . -64) (undo-tree-id1124 . -64) (undo-tree-id1125 . -64) (undo-tree-id1126 . -64) (undo-tree-id1127 . -64) (undo-tree-id1128 . -64) (undo-tree-id1129 . -64) (undo-tree-id1130 . -64) (undo-tree-id1131 . -64) (undo-tree-id1132 . -64) (undo-tree-id1133 . -64) (undo-tree-id1134 . -64) (undo-tree-id1135 . -64) (undo-tree-id1136 . -64) (undo-tree-id1137 . -64) (undo-tree-id1138 . -64) (undo-tree-id1139 . -64) (undo-tree-id1140 . -64) (undo-tree-id1141 . -64) (undo-tree-id1142 . -64) (undo-tree-id1143 . -64) (undo-tree-id1144 . -64) (undo-tree-id1145 . -64) (undo-tree-id1146 . -64) (undo-tree-id1147 . -64) (undo-tree-id1148 . -64) (undo-tree-id1149 . -64) (undo-tree-id1150 . -64) (undo-tree-id1151 . -64) (undo-tree-id1152 . -64) (undo-tree-id1153 . -64) (undo-tree-id1154 . -64) (undo-tree-id1155 . -64) (undo-tree-id1156 . -64) (undo-tree-id1157 . -64) (undo-tree-id1158 . -64) (undo-tree-id1159 . -64) (undo-tree-id1160 . -64) (undo-tree-id1161 . -64) (undo-tree-id1162 . -64) (undo-tree-id1163 . -64) (undo-tree-id1164 . -64) (undo-tree-id1165 . -64) (undo-tree-id1166 . -64) (undo-tree-id1167 . -64) (undo-tree-id1168 . -64) (undo-tree-id1169 . -64) (undo-tree-id1170 . -64) (undo-tree-id1171 . -64) (undo-tree-id1172 . -64) (undo-tree-id1173 . -64) (undo-tree-id1174 . -64) (undo-tree-id1175 . -64) (undo-tree-id1176 . -64) (undo-tree-id1177 . -64) (undo-tree-id1178 . -64) (undo-tree-id1179 . -64) (undo-tree-id1180 . -64) (undo-tree-id1181 . -64) (undo-tree-id1182 . -64) (undo-tree-id1183 . -64) (undo-tree-id1184 . -64) (undo-tree-id1185 . -64) (undo-tree-id1186 . -63) (undo-tree-id1187 . -63) (undo-tree-id1188 . -63) (undo-tree-id1189 . -63) (undo-tree-id1190 . -63) (undo-tree-id1191 . -63) (undo-tree-id1192 . -63) (undo-tree-id1193 . -63) (undo-tree-id1194 . -63) (undo-tree-id1195 . -63) (undo-tree-id1196 . -63) (undo-tree-id1197 . -63) (undo-tree-id1198 . -63) (undo-tree-id1199 . -63) (undo-tree-id1200 . -63) (undo-tree-id1201 . -63) (undo-tree-id1202 . -63) (undo-tree-id1203 . -63) (undo-tree-id1204 . -63) (undo-tree-id1205 . -63) (undo-tree-id1206 . -63) (undo-tree-id1207 . -63) (undo-tree-id1208 . -63) (undo-tree-id1209 . -63) (undo-tree-id1210 . -63) (undo-tree-id1211 . -63) (undo-tree-id1212 . -63) (undo-tree-id1213 . -63) (undo-tree-id1214 . -63) (undo-tree-id1215 . -63) (undo-tree-id1216 . -63) (undo-tree-id1217 . -63) (undo-tree-id1218 . -63) (undo-tree-id1219 . -63) (undo-tree-id1220 . -63) (undo-tree-id1221 . -63) (undo-tree-id1222 . -63) (undo-tree-id1223 . -63) (undo-tree-id1224 . -63) (undo-tree-id1225 . -64) (undo-tree-id1226 . -64) (undo-tree-id1227 . -64) (undo-tree-id1228 . -64) (undo-tree-id1229 . -64) (undo-tree-id1230 . -64) (undo-tree-id1231 . -64) (undo-tree-id1232 . -64) (undo-tree-id1233 . -64) (undo-tree-id1234 . -64) (undo-tree-id1235 . -64) (undo-tree-id1236 . -64) (undo-tree-id1237 . -64) (undo-tree-id1238 . -64) (undo-tree-id1239 . -64) (undo-tree-id1240 . -64) (undo-tree-id1241 . -64) (undo-tree-id1242 . -64) (undo-tree-id1243 . -64) (undo-tree-id1244 . -64) (undo-tree-id1245 . -64) (undo-tree-id1246 . -64) (undo-tree-id1247 . -64) (undo-tree-id1248 . -64) (undo-tree-id1249 . -114) 11108 (t 26716 56112 207591 848000)) nil (26716 56124 315450 255000) 0 nil] [nil nil ((#("
- Year the vulnerability was discovered.

- Criticality level (CVSS score).

- Type of vulnerability (remote access, code execution, etc.).

- Software that is affected by the vulnerability.
" 0 192 (fontified t)) . 10966) (undo-tree-id496 . -142) (undo-tree-id497 . -191) (undo-tree-id498 . -142) (undo-tree-id499 . -192) (undo-tree-id500 . -192) (undo-tree-id501 . -141) (undo-tree-id502 . -141) (undo-tree-id503 . -77) (undo-tree-id504 . -77) (undo-tree-id505 . -42) (undo-tree-id506 . -42) (undo-tree-id507 . -78) (undo-tree-id508 . -78) (undo-tree-id509 . -78) (undo-tree-id510 . -78) (undo-tree-id511 . -78) (undo-tree-id512 . -78) (undo-tree-id513 . -78) (undo-tree-id514 . -78) (undo-tree-id515 . -78) (undo-tree-id516 . -78) (undo-tree-id517 . -78) (undo-tree-id518 . -78) (undo-tree-id519 . -78) (undo-tree-id520 . -78) (undo-tree-id521 . -78) (undo-tree-id522 . -78) (undo-tree-id523 . -141) (undo-tree-id524 . -141) (undo-tree-id525 . -141) (undo-tree-id526 . -141) (undo-tree-id527 . -141) (undo-tree-id528 . -141) (undo-tree-id529 . -141) (undo-tree-id530 . -141) (undo-tree-id531 . -141) (undo-tree-id532 . -141) (undo-tree-id533 . -141) (undo-tree-id534 . -141) (undo-tree-id535 . -141) (undo-tree-id536 . -141) (undo-tree-id537 . -141) (undo-tree-id538 . -141) (undo-tree-id539 . -142) (undo-tree-id540 . -142) (undo-tree-id541 . -142) (undo-tree-id542 . -142) (undo-tree-id543 . -142) (undo-tree-id544 . -142) (undo-tree-id545 . -142) (undo-tree-id546 . -142) (undo-tree-id547 . -142) (undo-tree-id548 . -142) (undo-tree-id549 . -142) (undo-tree-id550 . -142) (undo-tree-id551 . -142) (undo-tree-id552 . -142) (undo-tree-id553 . -142) (undo-tree-id554 . -142) (undo-tree-id555 . -142) (undo-tree-id556 . -142) (undo-tree-id557 . -142) (undo-tree-id558 . -142) (undo-tree-id559 . -142) (undo-tree-id560 . -142) (undo-tree-id561 . -142) (undo-tree-id562 . -142) (undo-tree-id563 . -142) (undo-tree-id564 . -142) (undo-tree-id565 . -142) (undo-tree-id566 . -142) (undo-tree-id567 . -142) (undo-tree-id568 . -142) (undo-tree-id569 . -142) (undo-tree-id570 . -142) (undo-tree-id571 . -142) (undo-tree-id572 . -142) (undo-tree-id573 . -142) (undo-tree-id574 . -142) (undo-tree-id575 . -142) (undo-tree-id576 . -142) (undo-tree-id577 . -142) (undo-tree-id578 . -142) (undo-tree-id579 . -142) (undo-tree-id580 . -142) (undo-tree-id581 . -142) (undo-tree-id582 . -142) (undo-tree-id583 . -142) (undo-tree-id584 . -142) (undo-tree-id585 . -142) (undo-tree-id586 . -142) (undo-tree-id587 . -142) (undo-tree-id588 . -142) (undo-tree-id589 . -142) (undo-tree-id590 . -142) (undo-tree-id591 . -142) (undo-tree-id592 . -142) (undo-tree-id593 . -142) (undo-tree-id594 . -142) (undo-tree-id595 . -142) (undo-tree-id596 . -142) (undo-tree-id597 . -141) (undo-tree-id598 . -141) (undo-tree-id599 . -141) (undo-tree-id600 . -141) (undo-tree-id601 . -141) (undo-tree-id602 . -141) (undo-tree-id603 . -141) (undo-tree-id604 . -141) (undo-tree-id605 . -141) (undo-tree-id606 . -141) (undo-tree-id607 . -141) (undo-tree-id608 . -141) (undo-tree-id609 . -78) (undo-tree-id610 . -78) (undo-tree-id611 . -78) (undo-tree-id612 . -78) (undo-tree-id613 . -78) (undo-tree-id614 . -77) (undo-tree-id615 . -77) (undo-tree-id616 . -77) (undo-tree-id617 . -77) (undo-tree-id618 . -77) (undo-tree-id619 . -43) (undo-tree-id620 . -43) (undo-tree-id621 . -43) (undo-tree-id622 . -43) (undo-tree-id623 . -43) (undo-tree-id624 . -42) (undo-tree-id625 . -42) (undo-tree-id626 . -42) (undo-tree-id627 . -42) (undo-tree-id628 . -42) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -42) (undo-tree-id640 . -42) (undo-tree-id641 . -42) (undo-tree-id642 . -42) (undo-tree-id643 . -42) (undo-tree-id644 . -43) (undo-tree-id645 . -43) (undo-tree-id646 . -43) (undo-tree-id647 . -43) (undo-tree-id648 . -43) (undo-tree-id649 . -77) (undo-tree-id650 . -77) (undo-tree-id651 . -77) (undo-tree-id652 . -77) (undo-tree-id653 . -77) (undo-tree-id654 . -78) (undo-tree-id655 . -78) (undo-tree-id656 . -78) (undo-tree-id657 . -78) (undo-tree-id658 . -78) (undo-tree-id659 . -141) (undo-tree-id660 . -141) (undo-tree-id661 . -141) (undo-tree-id662 . -141) (undo-tree-id663 . -141) (undo-tree-id664 . -141) (undo-tree-id665 . -141) (undo-tree-id666 . -141) (undo-tree-id667 . -141) (undo-tree-id668 . -141) (undo-tree-id669 . -141) (undo-tree-id670 . -141) (undo-tree-id671 . -141) (undo-tree-id672 . -141) (undo-tree-id673 . -141) (undo-tree-id674 . -142) (undo-tree-id675 . -142) (undo-tree-id676 . -142) (undo-tree-id677 . -142) (undo-tree-id678 . -142) (undo-tree-id679 . -142) (undo-tree-id680 . -142) (undo-tree-id681 . -142) (undo-tree-id682 . -142) (undo-tree-id683 . -142) (undo-tree-id684 . -142) (undo-tree-id685 . -142) (undo-tree-id686 . -142) (undo-tree-id687 . -142) (undo-tree-id688 . -142) (undo-tree-id689 . -142) (undo-tree-id690 . -142) (undo-tree-id691 . -142) (undo-tree-id692 . -142) (undo-tree-id693 . -142) (undo-tree-id694 . -142) (undo-tree-id695 . -142) (undo-tree-id696 . -142) (undo-tree-id697 . -142) (undo-tree-id698 . -142) (undo-tree-id699 . -142) (undo-tree-id700 . -142) (undo-tree-id701 . -142) (undo-tree-id702 . -142) (undo-tree-id703 . -142) (undo-tree-id704 . -142) (undo-tree-id705 . -142) (undo-tree-id706 . -142) (undo-tree-id707 . -142) (undo-tree-id708 . -142) (undo-tree-id709 . -142) (undo-tree-id710 . -142) (undo-tree-id711 . -142) (undo-tree-id712 . -142) (undo-tree-id713 . -142) (undo-tree-id714 . -142) (undo-tree-id715 . -142) (undo-tree-id716 . -142) (undo-tree-id717 . -142) (undo-tree-id718 . -142) (undo-tree-id719 . -142) (undo-tree-id720 . -142) (undo-tree-id721 . -142) (undo-tree-id722 . -142) (undo-tree-id723 . -142) (undo-tree-id724 . -142) (undo-tree-id725 . -142) (undo-tree-id726 . -142) (undo-tree-id727 . -142) (undo-tree-id728 . -142) (undo-tree-id729 . -142) (undo-tree-id730 . -142) (undo-tree-id731 . -141) (undo-tree-id732 . -141) (undo-tree-id733 . -141) (undo-tree-id734 . -141) (undo-tree-id735 . -141) (undo-tree-id736 . -141) (undo-tree-id737 . -141) (undo-tree-id738 . -141) (undo-tree-id739 . -141) (undo-tree-id740 . -141) (undo-tree-id741 . -141) (undo-tree-id742 . -141) (undo-tree-id743 . -78) (undo-tree-id744 . -78) (undo-tree-id745 . -78) (undo-tree-id746 . -78) (undo-tree-id747 . -78) (undo-tree-id748 . -77) (undo-tree-id749 . -77) (undo-tree-id750 . -77) (undo-tree-id751 . -77) (undo-tree-id752 . -77) (undo-tree-id753 . -43) (undo-tree-id754 . -43) (undo-tree-id755 . -43) (undo-tree-id756 . -43) (undo-tree-id757 . -43) (undo-tree-id758 . -42) (undo-tree-id759 . -42) (undo-tree-id760 . -42) (undo-tree-id761 . -42) (undo-tree-id762 . -42) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -42) (undo-tree-id786 . -42) (undo-tree-id787 . -42) (undo-tree-id788 . -42) (undo-tree-id789 . -42) (undo-tree-id790 . -43) (undo-tree-id791 . -43) (undo-tree-id792 . -43) (undo-tree-id793 . -43) (undo-tree-id794 . -43) (undo-tree-id795 . -77) (undo-tree-id796 . -77) (undo-tree-id797 . -77) (undo-tree-id798 . -77) (undo-tree-id799 . -77) (undo-tree-id800 . -78) (undo-tree-id801 . -78) (undo-tree-id802 . -78) (undo-tree-id803 . -78) (undo-tree-id804 . -78) (undo-tree-id805 . -141) (undo-tree-id806 . -141) (undo-tree-id807 . -141) (undo-tree-id808 . -141) (undo-tree-id809 . -141) (undo-tree-id810 . -142) (undo-tree-id811 . -142) (undo-tree-id812 . -142) (undo-tree-id813 . -142) (undo-tree-id814 . -142) (undo-tree-id815 . -142) (undo-tree-id816 . -142) (undo-tree-id817 . -142) (undo-tree-id818 . -142) (undo-tree-id819 . -142) (undo-tree-id820 . -142) (undo-tree-id821 . -142) (undo-tree-id822 . -142) (undo-tree-id823 . -142) (undo-tree-id824 . -142) (undo-tree-id825 . -142) (undo-tree-id826 . -142) (undo-tree-id827 . -142) (undo-tree-id828 . -142) (undo-tree-id829 . -142) (undo-tree-id830 . -142) (undo-tree-id831 . -142) (undo-tree-id832 . -142) (undo-tree-id833 . -192) 11108) ((10966 . 11158) (t 26716 56098 843405 83000)) (26716 56098 841972 325000) 0 nil] [nil nil ((#("
All vulnerability data was taken from the CVE database and
\\url{https://vuldb.com/?archive} {[}7{]}, it contains information about
the identified vulnerabilities, including the following key parameters:

- Year the vulnerability was discovered.

- Criticality level (CVSS score).

- Type of vulnerability (remote access, code execution, etc.).

- Software that is affected by the vulnerability.
" 0 60 (fontified t) 60 64 (face font-lock-keyword-face fontified t) 64 65 (fontified t) 65 91 (face tex-verbatim fontified t) 91 396 (fontified t)) . 10762) (undo-tree-id242 . -346) (undo-tree-id243 . -395) (undo-tree-id244 . -346) (undo-tree-id245 . -396) (undo-tree-id246 . -396) (undo-tree-id247 . -345) (undo-tree-id248 . -345) (undo-tree-id249 . -281) (undo-tree-id250 . -281) (undo-tree-id251 . -246) (undo-tree-id252 . -246) (undo-tree-id253 . -282) (undo-tree-id254 . -282) (undo-tree-id255 . -282) (undo-tree-id256 . -282) (undo-tree-id257 . -282) (undo-tree-id258 . -282) (undo-tree-id259 . -282) (undo-tree-id260 . -282) (undo-tree-id261 . -282) (undo-tree-id262 . -282) (undo-tree-id263 . -282) (undo-tree-id264 . -282) (undo-tree-id265 . -282) (undo-tree-id266 . -282) (undo-tree-id267 . -282) (undo-tree-id268 . -282) (undo-tree-id269 . -345) (undo-tree-id270 . -345) (undo-tree-id271 . -345) (undo-tree-id272 . -345) (undo-tree-id273 . -345) (undo-tree-id274 . -345) (undo-tree-id275 . -345) (undo-tree-id276 . -345) (undo-tree-id277 . -345) (undo-tree-id278 . -345) (undo-tree-id279 . -345) (undo-tree-id280 . -345) (undo-tree-id281 . -345) (undo-tree-id282 . -345) (undo-tree-id283 . -345) (undo-tree-id284 . -345) (undo-tree-id285 . -346) (undo-tree-id286 . -346) (undo-tree-id287 . -346) (undo-tree-id288 . -346) (undo-tree-id289 . -346) (undo-tree-id290 . -346) (undo-tree-id291 . -346) (undo-tree-id292 . -346) (undo-tree-id293 . -346) (undo-tree-id294 . -346) (undo-tree-id295 . -346) (undo-tree-id296 . -346) (undo-tree-id297 . -346) (undo-tree-id298 . -346) (undo-tree-id299 . -346) (undo-tree-id300 . -346) (undo-tree-id301 . -346) (undo-tree-id302 . -346) (undo-tree-id303 . -346) (undo-tree-id304 . -346) (undo-tree-id305 . -346) (undo-tree-id306 . -346) (undo-tree-id307 . -346) (undo-tree-id308 . -346) (undo-tree-id309 . -346) (undo-tree-id310 . -346) (undo-tree-id311 . -346) (undo-tree-id312 . -346) (undo-tree-id313 . -346) (undo-tree-id314 . -346) (undo-tree-id315 . -346) (undo-tree-id316 . -346) (undo-tree-id317 . -346) (undo-tree-id318 . -346) (undo-tree-id319 . -346) (undo-tree-id320 . -346) (undo-tree-id321 . -346) (undo-tree-id322 . -346) (undo-tree-id323 . -346) (undo-tree-id324 . -346) (undo-tree-id325 . -346) (undo-tree-id326 . -346) (undo-tree-id327 . -346) (undo-tree-id328 . -346) (undo-tree-id329 . -346) (undo-tree-id330 . -346) (undo-tree-id331 . -346) (undo-tree-id332 . -346) (undo-tree-id333 . -346) (undo-tree-id334 . -346) (undo-tree-id335 . -346) (undo-tree-id336 . -346) (undo-tree-id337 . -346) (undo-tree-id338 . -346) (undo-tree-id339 . -346) (undo-tree-id340 . -346) (undo-tree-id341 . -346) (undo-tree-id342 . -346) (undo-tree-id343 . -345) (undo-tree-id344 . -345) (undo-tree-id345 . -345) (undo-tree-id346 . -345) (undo-tree-id347 . -345) (undo-tree-id348 . -345) (undo-tree-id349 . -345) (undo-tree-id350 . -345) (undo-tree-id351 . -345) (undo-tree-id352 . -345) (undo-tree-id353 . -345) (undo-tree-id354 . -345) (undo-tree-id355 . -282) (undo-tree-id356 . -282) (undo-tree-id357 . -282) (undo-tree-id358 . -282) (undo-tree-id359 . -282) (undo-tree-id360 . -281) (undo-tree-id361 . -281) (undo-tree-id362 . -281) (undo-tree-id363 . -281) (undo-tree-id364 . -281) (undo-tree-id365 . -247) (undo-tree-id366 . -247) (undo-tree-id367 . -247) (undo-tree-id368 . -247) (undo-tree-id369 . -247) (undo-tree-id370 . -246) (undo-tree-id371 . -246) (undo-tree-id372 . -246) (undo-tree-id373 . -246) (undo-tree-id374 . -246) (undo-tree-id375 . -205) (undo-tree-id376 . -205) (undo-tree-id377 . -205) (undo-tree-id378 . -205) (undo-tree-id379 . -205) (undo-tree-id380 . -204) (undo-tree-id381 . -204) (undo-tree-id382 . -204) (undo-tree-id383 . -204) (undo-tree-id384 . -204) (undo-tree-id385 . -132) (undo-tree-id386 . -132) (undo-tree-id387 . -132) (undo-tree-id388 . -132) (undo-tree-id389 . -132) (undo-tree-id390 . -60) (undo-tree-id391 . -60) (undo-tree-id392 . -60) (undo-tree-id393 . -60) (undo-tree-id394 . -60) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -60) (undo-tree-id418 . -60) (undo-tree-id419 . -60) (undo-tree-id420 . -60) (undo-tree-id421 . -60) (undo-tree-id422 . -132) (undo-tree-id423 . -132) (undo-tree-id424 . -132) (undo-tree-id425 . -132) (undo-tree-id426 . -132) (undo-tree-id427 . -204) (undo-tree-id428 . -204) (undo-tree-id429 . -204) (undo-tree-id430 . -204) (undo-tree-id431 . -204) (undo-tree-id432 . -205) (undo-tree-id433 . -205) (undo-tree-id434 . -205) (undo-tree-id435 . -205) (undo-tree-id436 . -205) (undo-tree-id437 . -246) (undo-tree-id438 . -246) (undo-tree-id439 . -246) (undo-tree-id440 . -246) (undo-tree-id441 . -246) (undo-tree-id442 . -247) (undo-tree-id443 . -247) (undo-tree-id444 . -247) (undo-tree-id445 . -247) (undo-tree-id446 . -247) (undo-tree-id447 . -281) (undo-tree-id448 . -281) (undo-tree-id449 . -281) (undo-tree-id450 . -281) (undo-tree-id451 . -281) (undo-tree-id452 . -282) (undo-tree-id453 . -282) (undo-tree-id454 . -282) (undo-tree-id455 . -282) (undo-tree-id456 . -282) (undo-tree-id457 . -345) (undo-tree-id458 . -345) (undo-tree-id459 . -345) (undo-tree-id460 . -345) (undo-tree-id461 . -345) (undo-tree-id462 . -345) (undo-tree-id463 . -345) (undo-tree-id464 . -345) (undo-tree-id465 . -345) (undo-tree-id466 . -345) (undo-tree-id467 . -345) (undo-tree-id468 . -345) (undo-tree-id469 . -345) (undo-tree-id470 . -345) (undo-tree-id471 . -345) (undo-tree-id472 . -346) (undo-tree-id473 . -346) (undo-tree-id474 . -346) (undo-tree-id475 . -346) (undo-tree-id476 . -346) (undo-tree-id477 . -346) (undo-tree-id478 . -346) (undo-tree-id479 . -346) (undo-tree-id480 . -346) (undo-tree-id481 . -346) (undo-tree-id482 . -346) (undo-tree-id483 . -346) (undo-tree-id484 . -346) (undo-tree-id485 . -346) (undo-tree-id486 . -346) (undo-tree-id487 . -346) (undo-tree-id488 . -346) (undo-tree-id489 . -346) (undo-tree-id490 . -346) (undo-tree-id491 . -346) (undo-tree-id492 . -346) (undo-tree-id493 . -346) (undo-tree-id494 . -346) (undo-tree-id495 . -396) 11108) ((10762 . 11158) (t 26716 56085 821221 131000)) (26716 56085 820168 689000) 0 nil] [nil nil ((#("
Among these methods, we focused on the use of machine learning
techniques, in particular Random Forests, as they allow for efficient
handling of large amounts of data and can be applied to predict
categorical variables such as vulnerability type. This makes them
particularly suitable for our task (Table 1). Machine learning is a type
of artificial intelligence technique that can automatically discover
useful information from massive datasets {[}6{]}.

All vulnerability data was taken from the CVE database and
\\url{https://vuldb.com/?archive} {[}7{]}, it contains information about
the identified vulnerabilities, including the following key parameters:

- Year the vulnerability was discovered.

- Criticality level (CVSS score).

- Type of vulnerability (remote access, code execution, etc.).

- Software that is affected by the vulnerability.
" 0 516 (fontified t) 516 520 (face font-lock-keyword-face fontified t) 520 521 (fontified t) 521 547 (face tex-verbatim fontified t) 547 852 (fontified t)) . 10306) (undo-tree-id169 . -802) (undo-tree-id170 . -851) (undo-tree-id171 . -802) (undo-tree-id172 . -852) (undo-tree-id173 . -852) (undo-tree-id174 . -801) (undo-tree-id175 . -801) (undo-tree-id176 . -737) (undo-tree-id177 . -737) (undo-tree-id178 . -702) (undo-tree-id179 . -702) (undo-tree-id180 . -738) (undo-tree-id181 . -738) (undo-tree-id182 . -738) (undo-tree-id183 . -738) (undo-tree-id184 . -738) (undo-tree-id185 . -738) (undo-tree-id186 . -738) (undo-tree-id187 . -738) (undo-tree-id188 . -738) (undo-tree-id189 . -738) (undo-tree-id190 . -738) (undo-tree-id191 . -738) (undo-tree-id192 . -738) (undo-tree-id193 . -738) (undo-tree-id194 . -738) (undo-tree-id195 . -738) (undo-tree-id196 . -801) (undo-tree-id197 . -801) (undo-tree-id198 . -801) (undo-tree-id199 . -801) (undo-tree-id200 . -801) (undo-tree-id201 . -801) (undo-tree-id202 . -801) (undo-tree-id203 . -801) (undo-tree-id204 . -801) (undo-tree-id205 . -801) (undo-tree-id206 . -801) (undo-tree-id207 . -801) (undo-tree-id208 . -801) (undo-tree-id209 . -801) (undo-tree-id210 . -801) (undo-tree-id211 . -801) (undo-tree-id212 . -802) (undo-tree-id213 . -802) (undo-tree-id214 . -802) (undo-tree-id215 . -802) (undo-tree-id216 . -802) (undo-tree-id217 . -802) (undo-tree-id218 . -802) (undo-tree-id219 . -802) (undo-tree-id220 . -802) (undo-tree-id221 . -802) (undo-tree-id222 . -802) (undo-tree-id223 . -802) (undo-tree-id224 . -802) (undo-tree-id225 . -802) (undo-tree-id226 . -802) (undo-tree-id227 . -802) (undo-tree-id228 . -802) (undo-tree-id229 . -802) (undo-tree-id230 . -802) (undo-tree-id231 . -802) (undo-tree-id232 . -802) (undo-tree-id233 . -802) (undo-tree-id234 . -802) (undo-tree-id235 . -802) (undo-tree-id236 . -802) (undo-tree-id237 . -802) (undo-tree-id238 . -802) (undo-tree-id239 . -802) (undo-tree-id240 . -802) (undo-tree-id241 . -852) 11108 (t 26716 56032 695449 459000)) ((10306 . 11158) (t 26716 56069 720990 934000)) (26716 56069 719717 895000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 16935) (undo-tree-id135 . 1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (t 26716 56001 570980 509000)) ((16935 . 16936) (t 26716 56004 476024 835000)) (26716 56004 474710 2000) 0 nil])
([nil nil ((11060 . 11073) (t 26716 56124 316759 340000)) nil (26716 56143 516632 471000) 0 nil])
nil
nil
nil
nil
([nil nil ((nil rear-nonsticky nil 11043 . 11044) (#("
" 0 1 (fontified nil)) . -11157) (11043 . 11158) (t 26716 56143 518021 683000)) nil (26716 56167 138139 666000) 0 nil])
([nil nil ((11183 . 11184) (#("1" 0 1 (fontified t)) . 11183) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (t 26716 56167 139339 112000)) nil (26716 56182 507969 785000) 0 nil])
([nil nil ((#("For our study we used a set of vulnerability data for further analysis
(see Graph 1).

We study the period from 2010 to 2025, we want to record and analyze the
largest number of network vulnerabilities, as well as assess the
dynamics of vulnerability growth.

As a result of analyzing the data, the main patterns have been
highlighted:

- the highest number of vulnerabilities occurs between 2010 and 2025;

- vulnerabilities related to remote code execution occupy a significant
part among all types of vulnerabilities;

- the degree of vulnerability criticality varies, but vulnerabilities
with high or critical CVSS score remain the most dangerous.

" 0 264 (fontified t) 264 266 (fontified t) 266 323 (fontified t) 323 442 (fontified t) 442 480 (fontified t) 480 510 (fontified t) 510 521 (fontified t) 521 653 (fontified t)) . 16969) (undo-tree-id1252 . -652) (undo-tree-id1253 . -652) (undo-tree-id1254 . -652) (undo-tree-id1255 . -652) 17621 (t 26716 56182 510542 659000)) nil (26716 56214 945625 878000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16769 . 16770) (#("
" 0 1 (fontified nil)) . -17422) (16769 . 17423)) nil (26716 56214 945587 425000) 0 nil])
([nil nil ((16770 . 16791) (17422 . 17438)) nil (26716 56214 945582 827000) 0 nil])
([nil nil ((#("\\end{multicols}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict2/image165}
	\\caption*{Fig.1 - Vulnerability prediction program codes}
\\end{figure}

\\begin{multicols}{2}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 17 (fontified t) 17 23 (face font-lock-keyword-face fontified t) 23 24 (fontified t latex-env-pair t) 24 30 (face font-lock-function-name-face fontified t latex-env-pair t) 30 31 (fontified t latex-env-pair t) 31 36 (fontified t) 36 46 (face font-lock-keyword-face fontified t) 46 48 (fontified t) 48 64 (face font-lock-keyword-face fontified t) 64 74 (fontified t) 74 84 (face font-lock-keyword-face fontified t) 84 86 (fontified t) 86 87 (face font-lock-builtin-face fontified t) 87 105 (face font-lock-builtin-face fontified t) 105 107 (fontified t) 107 108 (fontified t) 108 117 (face font-lock-keyword-face fontified t) 117 166 (fontified t) 166 170 (face font-lock-keyword-face fontified t) 170 171 (fontified t latex-env-pair t) 171 177 (face font-lock-function-name-face fontified t latex-env-pair t) 177 178 (fontified t latex-env-pair t) 178 180 (fontified t) 180 186 (face font-lock-keyword-face fontified t) 186 187 (fontified t latex-env-pair t) 187 196 (face font-lock-function-name-face fontified t latex-env-pair t) 196 197 (fontified t latex-env-pair t) 197 201 (fontified t)) . 18742) (undo-tree-id1261 . -180) (undo-tree-id1262 . -200) (undo-tree-id1263 . -180) (undo-tree-id1264 . -180) 18922 (t 26716 56214 946964 715000)) nil (26716 56244 863290 775000) 0 nil])
([nil nil ((18741 . 18742) 18690) nil (26716 56244 863288 431000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17636 . 17637) (#("
" 0 1 (fontified nil)) . -17837) (17636 . 17838) 17624) nil (26716 56244 863287 609000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 17637) (undo-tree-id1260 . -15)) nil (26716 56244 863286 16000) 0 nil])
([nil nil ((#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 20 (fontified t) 20 21 (fontified t)) . 17801) (undo-tree-id1257 . -20) (undo-tree-id1258 . -21) (undo-tree-id1259 . -21)) nil (26716 56244 863284 603000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 17801) (undo-tree-id1256 . -1)) nil (26716 56244 863279 714000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 17743) (t 26716 56244 864345 463000) (17744 . 17745) 17743 (t 26716 56244 864345 463000)) nil (26716 56274 20299 92000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -16869) (undo-tree-id1270 . -1) (#("p" 0 1 (fontified t)) . -16870) (undo-tree-id1271 . -1) (#("h" 0 1 (fontified t)) . -16871) (undo-tree-id1272 . -1) 16872 (t 26716 56274 22709 131000)) nil (26716 56287 301214 322000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t)) . -16867) (undo-tree-id1268 . -1) (#("r" 0 1 (fontified t)) . -16868) (undo-tree-id1269 . -1) 16869) nil (26716 56287 301211 186000) 0 nil])
([nil nil ((16867 . 16871)) nil (26716 56287 301209 162000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16871) (undo-tree-id1265 . 1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1)) nil (26716 56287 301205 856000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -16870) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) 16871 (t 26716 56287 302872 450000)) nil (26716 56366 915739 332000) 0 nil])
([nil nil ((16870 . 16874)) nil (26716 56366 915728 913000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 16874) (16875 . 16876) 16874) nil (26716 56366 915723 352000) 0 nil])
([nil nil ((nil rear-nonsticky nil 21170 . 21171) (#("
" 0 1 (fontified nil)) . -21285) (21170 . 21286) (t 26716 56366 918823 452000)) nil (26716 56606 266513 329000) 0 nil])
([nil nil ((#("{\\bfseries Graph 2 - Result of distribution of vulnerabilities by years}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 71 (face (bold) fontified t) 71 72 (fontified t)) . -21286) 21359) nil (26716 56606 266512 647000) 0 nil])
([nil nil ((nil rear-nonsticky nil 21330 . 21331) (nil fontified nil 21271 . 21331) (21271 . 21331)) nil (26716 56606 266512 217000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 21171)) nil (26716 56606 266511 666000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21345)) nil (26716 56606 266511 205000) 0 nil])
([nil nil ((nil fontified t 21256 . 21257) (nil face font-lock-builtin-face 21256 . 21257) (#("1" 0 1 (face font-lock-builtin-face fontified t)) . 21256) (21257 . 21258) 21256) nil (26716 56606 266510 483000) 0 nil])
([nil nil ((nil fontified t 21256 . 21257) (nil face font-lock-builtin-face 21256 . 21257) (#("2" 0 1 (face font-lock-builtin-face fontified t)) . 21256) (21257 . 21258) 21256) nil (26716 56606 266509 321000) 0 nil])
([nil nil ((nil fontified t 21256 . 21257) (nil face font-lock-builtin-face 21256 . 21257) (#("3" 0 1 (face font-lock-builtin-face fontified t)) . 21256) (21257 . 21258) 21256) nil (26716 56606 266507 458000) 0 nil])
([nil nil ((nil fontified t 21256 . 21257) (nil face font-lock-builtin-face 21256 . 21257) (#("4" 0 1 (face font-lock-builtin-face fontified t)) . 21256) (21257 . 21258) 21256) nil (26716 56606 266505 644000) 0 nil])
([nil nil ((21346 . 21367) (22137 . 22153)) nil (26716 56606 266500 44000) 0 nil])
([nil nil ((nil fontified t 21256 . 21257) (t 26716 56606 268447 22000) (nil face font-lock-builtin-face 21256 . 21257) (t 26716 56606 268447 22000) (#("5" 0 1 (face font-lock-builtin-face fontified t)) . 21256) (t 26716 56606 268447 22000) (21257 . 21258) 21256 (t 26716 56606 268447 22000)) nil (26716 56627 930112 610000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t)) . -20057) (undo-tree-id1276 . -1) (#("i" 0 1 (fontified t)) . -20058) (undo-tree-id1277 . -1) (#("g" 0 1 (fontified t)) . -20059) (undo-tree-id1278 . -1) (#("u" 0 1 (fontified t)) . -20060) (undo-tree-id1279 . -1) (#("r" 0 1 (fontified t)) . -20061) (undo-tree-id1280 . -1) (#("e" 0 1 (fontified t)) . -20062) (undo-tree-id1281 . -1) 20063 (t 26716 56627 931670 547000)) nil (26716 56700 612418 519000) 0 nil])
([nil nil ((20057 . 20063)) nil (26716 56729 603883 550000) 0 nil] [nil nil ((20057 . 20062)) ((#("Graph" 0 5 (fontified t)) . 20057) (undo-tree-id1282 . -4) (undo-tree-id1283 . -5) (undo-tree-id1284 . -5) (undo-tree-id1285 . -4) (undo-tree-id1286 . -4) (undo-tree-id1287 . -4)) (26716 56700 612307 510000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -16868) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (#("g" 0 1 (fontified t)) . -16869) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (#("u" 0 1 (fontified t)) . -16870) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (#("r" 0 1 (fontified t)) . -16871) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (#("e" 0 1 (fontified t)) . -16872) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (#(" " 0 1 (fontified t)) . -16873) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) 16874) nil (26716 56729 603882 648000) 0 nil])
nil
([nil nil ((16868 . 16869)) nil (26716 56729 603877 889000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -16868) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) 16869) nil (26716 56746 26277 499000) 0 nil])
([nil nil ((#("F2" 0 1 (fontified t) 1 2 (fontified t)) . 16867) (undo-tree-id1413 . -1) (undo-tree-id1414 . 1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -2) (undo-tree-id1417 . -2) (undo-tree-id1418 . -2) (undo-tree-id1419 . -2) (undo-tree-id1420 . -2) (undo-tree-id1421 . -2) (undo-tree-id1422 . -2) (undo-tree-id1423 . -2) (undo-tree-id1424 . -2) (undo-tree-id1425 . -2) (undo-tree-id1426 . -2) (undo-tree-id1427 . -2) (undo-tree-id1428 . -2) (undo-tree-id1429 . -2) (undo-tree-id1430 . -2) (undo-tree-id1431 . -2) (undo-tree-id1432 . -2) (undo-tree-id1433 . -2) (undo-tree-id1434 . -2) (undo-tree-id1435 . -2) (undo-tree-id1436 . -2) (undo-tree-id1437 . -2) (undo-tree-id1438 . -2) (undo-tree-id1439 . -2) (undo-tree-id1440 . -2) (undo-tree-id1441 . -2) (undo-tree-id1442 . -2) (undo-tree-id1443 . -2) (undo-tree-id1444 . -2) (undo-tree-id1445 . -2) (undo-tree-id1446 . -2) (undo-tree-id1447 . -2) (undo-tree-id1448 . -2) (undo-tree-id1449 . -2) (undo-tree-id1450 . -2) (undo-tree-id1451 . -2) (undo-tree-id1452 . -2) (undo-tree-id1453 . -2) (undo-tree-id1454 . -2) (undo-tree-id1455 . -2) (undo-tree-id1456 . -2) (undo-tree-id1457 . -2) (undo-tree-id1458 . -2) (undo-tree-id1459 . -2) (undo-tree-id1460 . -2) (undo-tree-id1461 . -2) (undo-tree-id1462 . -2) (undo-tree-id1463 . -2) (undo-tree-id1464 . -2) (undo-tree-id1465 . -2) (undo-tree-id1466 . -2) (undo-tree-id1467 . -2) (undo-tree-id1468 . -2) (undo-tree-id1469 . -2) (undo-tree-id1470 . -2) (undo-tree-id1471 . -2) (undo-tree-id1472 . -2) (undo-tree-id1473 . -2) (undo-tree-id1474 . -2) (undo-tree-id1475 . -2) (undo-tree-id1476 . -2) (undo-tree-id1477 . -2) (undo-tree-id1478 . -2) (undo-tree-id1479 . -2) (undo-tree-id1480 . -2) (undo-tree-id1481 . -1) (undo-tree-id1482 . -2) (undo-tree-id1483 . -2) (undo-tree-id1484 . -2) (undo-tree-id1485 . -2)) ((16867 . 16869)) (26716 56749 569184 801000) 0 nil])
([nil nil ((16867 . 16874)) ((#("Graph 1" 0 7 (fontified t)) . 16867) (undo-tree-id1309 . -6) (undo-tree-id1310 . -7) (undo-tree-id1311 . -6) (undo-tree-id1312 . -6) (undo-tree-id1313 . -6) (undo-tree-id1314 . -6) (undo-tree-id1315 . -6) (undo-tree-id1316 . -6) (undo-tree-id1317 . -6) (undo-tree-id1318 . -6) (undo-tree-id1319 . -6) (undo-tree-id1320 . -6) (undo-tree-id1321 . -6) (undo-tree-id1322 . -6) (undo-tree-id1323 . -6) (undo-tree-id1324 . -6) (undo-tree-id1325 . -6) (undo-tree-id1326 . -6) (undo-tree-id1327 . -6) (undo-tree-id1328 . -6) (undo-tree-id1329 . -6) (undo-tree-id1330 . -6) (undo-tree-id1331 . -6) (undo-tree-id1332 . -6) (undo-tree-id1333 . -6) (undo-tree-id1334 . -6) (undo-tree-id1335 . -6) (undo-tree-id1336 . -6) (undo-tree-id1337 . -6) (undo-tree-id1338 . -6) (undo-tree-id1339 . -6) (undo-tree-id1340 . -6) (undo-tree-id1341 . -6) (undo-tree-id1342 . -6) (undo-tree-id1343 . -6) (undo-tree-id1344 . -6) (undo-tree-id1345 . -6) (undo-tree-id1346 . -6) (undo-tree-id1347 . -6) (undo-tree-id1348 . -6) (undo-tree-id1349 . -6) (undo-tree-id1350 . -6) (undo-tree-id1351 . -6) (undo-tree-id1352 . -6) (undo-tree-id1353 . -6) (undo-tree-id1354 . -6) (undo-tree-id1355 . -6) (undo-tree-id1356 . -6) (undo-tree-id1357 . -6) (undo-tree-id1358 . -6) (undo-tree-id1359 . -6) (undo-tree-id1360 . -6) (undo-tree-id1361 . -6) (undo-tree-id1362 . -6) (undo-tree-id1363 . -6) (undo-tree-id1364 . -6) (undo-tree-id1365 . -6) (undo-tree-id1366 . -6) (undo-tree-id1367 . -6) (undo-tree-id1368 . -6) (undo-tree-id1369 . -6) (undo-tree-id1370 . -6) (undo-tree-id1371 . -6) (undo-tree-id1372 . -6) (undo-tree-id1373 . -6) (undo-tree-id1374 . -6) (undo-tree-id1375 . -6) (undo-tree-id1376 . -6) (undo-tree-id1377 . -6) (undo-tree-id1378 . -6) (undo-tree-id1379 . -6) (undo-tree-id1380 . -6) (undo-tree-id1381 . -6) (undo-tree-id1382 . -6) (undo-tree-id1383 . -6) (undo-tree-id1384 . -6) (undo-tree-id1385 . -6) (undo-tree-id1386 . -6) (undo-tree-id1387 . -6) (undo-tree-id1388 . -6) (undo-tree-id1389 . -6) (undo-tree-id1390 . -6) (undo-tree-id1391 . -6) (undo-tree-id1392 . -6) (undo-tree-id1393 . -6) (undo-tree-id1394 . -6) (undo-tree-id1395 . -6) (undo-tree-id1396 . -6) (undo-tree-id1397 . -6) (undo-tree-id1398 . -6) (undo-tree-id1399 . -6) (undo-tree-id1400 . -6) (undo-tree-id1401 . -6) (undo-tree-id1402 . -6) (undo-tree-id1403 . -6) (undo-tree-id1404 . -6) (undo-tree-id1405 . -6) (undo-tree-id1406 . -6) (undo-tree-id1407 . -6) (undo-tree-id1408 . -6) (undo-tree-id1409 . -6) (undo-tree-id1410 . -6) (undo-tree-id1411 . -6) (undo-tree-id1412 . -6) (t 26716 56729 605695 327000)) (26716 56750 548901 141000) 0 nil])
([nil nil ((#("Graph" 0 5 (fontified t)) . 16867) (undo-tree-id1486 . -4) (t 26716 56729 605695 327000)) nil (26716 56755 283795 668000) 0 nil])
([nil nil ((16867 . 16873)) nil (26716 56755 283783 114000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 20064) (t 26716 56755 284948 408000) (20065 . 20066) 20064 (t 26716 56755 284948 408000)) nil (26716 56765 445702 926000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t)) . -21270) (undo-tree-id1488 . -1) (#("r" 0 1 (fontified t)) . -21271) (undo-tree-id1489 . -1) (#("a" 0 1 (fontified t)) . -21272) (undo-tree-id1490 . -1) (#("p" 0 1 (fontified t)) . -21273) (undo-tree-id1491 . -1) (#("h" 0 1 (fontified t)) . -21274) (undo-tree-id1492 . -1) (#(" " 0 1 (fontified t)) . -21275) (undo-tree-id1493 . -1) (#("2" 0 1 (fontified t)) . -21276) (undo-tree-id1494 . -1) 21277 (t 26716 56765 447047 977000)) nil (26716 56786 447487 610000) 0 nil])
([nil nil ((21270 . 21275)) nil (26716 56786 447482 761000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -21274) (undo-tree-id1487 . -1) 21275) nil (26716 56786 447481 929000) 0 nil])
([nil nil ((21274 . 21275)) nil (26716 56786 447468 674000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t)) . -21938) (undo-tree-id1495 . -1) (#("r" 0 1 (fontified t)) . -21939) (undo-tree-id1496 . -1) (#("a" 0 1 (fontified t)) . -21940) (undo-tree-id1497 . -1) (#("p" 0 1 (fontified t)) . -21941) (undo-tree-id1498 . -1) (#("h" 0 1 (fontified t)) . -21942) (undo-tree-id1499 . -1) (#(" " 0 1 (fontified t)) . -21943) (undo-tree-id1500 . -1) (#("2" 0 1 (fontified t)) . -21944) (undo-tree-id1501 . -1) 21945 (t 26716 56786 450252 760000)) nil (26716 56807 358458 61000) 0 nil])
([nil nil ((21938 . 21946)) nil (26716 56807 358441 740000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . 25474) (t 26716 56807 360455 323000) (25475 . 25476) 25474 (t 26716 56807 360455 323000)) nil (26716 56822 223010 579000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . 26199) (t 26716 56822 224598 555000) (26200 . 26201) 26199 (t 26716 56822 224598 555000)) nil (26716 56826 983612 595000) 0 nil])
([nil nil ((nil fontified t 26199 . 26200) (t 26716 56826 985644 302000) (#("4" 0 1 (fontified t)) . 26199) (t 26716 56826 985644 302000) (26200 . 26201) 26199 (t 26716 56826 985644 302000)) nil (26716 56829 593214 879000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . 27643) (t 26716 56829 595669 353000) (27644 . 27645) 27643 (t 26716 56829 595669 353000)) nil (26716 56865 574288 674000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t)) . 28585)) nil (26716 56865 574288 173000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 28585)) nil (26716 56865 574287 782000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 28585)) nil (26716 56865 574287 582000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 28585)) nil (26716 56865 574287 312000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 28585)) nil (26716 56865 574286 560000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 28585)) nil (26716 56865 574286 250000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . 28585)) nil (26716 56865 574285 829000) 0 nil])
([nil nil ((28585 . 28593)) nil (26716 56865 574285 438000) 0 nil])
([nil nil ((#("chart" 0 5 (fontified t)) . 26193) (undo-tree-id1502 . -4)) nil (26716 56865 574284 586000) 0 nil])
([nil nil ((26193 . 26199)) nil (26716 56865 574272 464000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . 27766) (t 26716 56865 576012 831000) (27767 . 27768) 27766 (t 26716 56865 576012 831000)) nil (26716 56881 593889 958000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . 28593) (t 26716 56881 595164 673000) (28594 . 28595) 28593 (t 26716 56881 595164 673000)) nil (26716 56947 262297 330000) 0 nil])
([nil nil ((#("{}" 0 2 (fontified t)) . -20) (t 26717 10309 624956 286000) (22 . 67) 2205 (t 26717 10309 624956 286000)) nil (26718 30123 641792 926000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 824) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (t 26718 30123 644829 740000)) nil (26718 35957 691180 294000) 0 nil])
([nil nil ((2218 . 2220) (t 26718 35957 692542 643000)) nil (26718 35981 159467 207000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . 11245) (t 26718 35981 161392 640000)) nil (26718 36007 412822 425000) 0 nil])
([nil nil ((11245 . 11247)) nil (26718 36007 412818 197000) 0 nil])
([nil current ((33340 . 33352) (32756 . 32768) 32736 (t 26718 36007 414224 843000)) nil (26718 37235 216756 90000) 0 nil])
nil
