(undo-tree-save-format-version . 1)
"2cb08c178d8f760899ae506e85c00ad162547666"
[nil nil nil nil (26712 58031 207899 878000) 0 nil]
([nil nil ((#("
{\\bfseries \\textsuperscript{1}А.Тулегулов}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict2/image1}
	\\caption*{}
\\end{figure}
{\\bfseries \\textsuperscript{\\envelope },
\\textsuperscript{1}К.Акишев}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict2/image1}
	\\caption*{}
\\end{figure}
{\\bfseries \\textsuperscript{1}А.Джумагалиева}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict2/image1}
	\\caption*{}
\\end{figure}
{\\bfseries ,\\textsuperscript{2}И.Дюсебаев}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict2/image1}
	\\caption*{}
\\end{figure}
" 0 2 (fontified t) 2 11 (face font-lock-keyword-face fontified t) 11 12 (face (bold) fontified t) 12 28 (face (font-lock-keyword-face bold) fontified t) 28 42 (face (bold) fontified t) 42 44 (fontified t) 44 50 (face font-lock-keyword-face fontified t) 50 51 (latex-env-pair t fontified t) 51 57 (face font-lock-function-name-face latex-env-pair t fontified t) 57 58 (latex-env-pair t fontified t) 58 63 (fontified t) 63 73 (face font-lock-keyword-face fontified t) 73 75 (fontified t) 75 91 (face font-lock-keyword-face fontified t) 91 101 (fontified t) 101 111 (face font-lock-keyword-face fontified t) 111 113 (fontified t) 113 130 (face font-lock-builtin-face fontified t) 130 133 (fontified t) 133 142 (face font-lock-keyword-face fontified t) 142 145 (fontified t) 145 149 (face font-lock-keyword-face fontified t) 149 150 (latex-env-pair t fontified t) 150 156 (face font-lock-function-name-face latex-env-pair t fontified t) 156 157 (latex-env-pair t fontified t) 157 159 (fontified t) 159 168 (face font-lock-keyword-face fontified t) 168 169 (face (bold) fontified t) 169 185 (face (font-lock-keyword-face bold) fontified t) 185 186 (face (bold) fontified t) 186 195 (face (font-lock-keyword-face bold) fontified t) 195 199 (face (bold) fontified t) 199 215 (face (font-lock-keyword-face bold) fontified t) 215 226 (face (bold) fontified t) 226 229 (fontified t) 229 235 (face font-lock-keyword-face fontified t) 235 236 (latex-env-pair t fontified t) 236 242 (face font-lock-function-name-face latex-env-pair t fontified t) 242 243 (latex-env-pair t fontified t) 243 248 (fontified t) 248 258 (face font-lock-keyword-face fontified t) 258 260 (fontified t) 260 276 (face font-lock-keyword-face fontified t) 276 286 (fontified t) 286 296 (face font-lock-keyword-face fontified t) 296 298 (fontified t) 298 315 (face font-lock-builtin-face fontified t) 315 318 (fontified t) 318 327 (face font-lock-keyword-face fontified t) 327 330 (fontified t) 330 334 (face font-lock-keyword-face fontified t) 334 335 (latex-env-pair t fontified t) 335 341 (face font-lock-function-name-face latex-env-pair t fontified t) 341 342 (latex-env-pair t fontified t) 342 344 (fontified t) 344 353 (face font-lock-keyword-face fontified t) 353 354 (face (bold) fontified t) 354 370 (face (font-lock-keyword-face bold) fontified t) 370 387 (face (bold) fontified t) 387 390 (fontified t) 390 396 (face font-lock-keyword-face fontified t) 396 397 (latex-env-pair t fontified t) 397 403 (face font-lock-function-name-face latex-env-pair t fontified t) 403 404 (latex-env-pair t fontified t) 404 409 (fontified t) 409 419 (face font-lock-keyword-face fontified t) 419 421 (fontified t) 421 437 (face font-lock-keyword-face fontified t) 437 447 (fontified t) 447 457 (face font-lock-keyword-face fontified t) 457 459 (fontified t) 459 476 (face font-lock-builtin-face fontified t) 476 479 (fontified t) 479 488 (face font-lock-keyword-face fontified t) 488 491 (fontified t) 491 495 (face font-lock-keyword-face fontified t) 495 496 (latex-env-pair t fontified t) 496 502 (face font-lock-function-name-face latex-env-pair t fontified t) 502 503 (latex-env-pair t fontified t) 503 505 (fontified t) 505 514 (face font-lock-keyword-face fontified t) 514 516 (face (bold) fontified t) 516 532 (face (font-lock-keyword-face bold) fontified t) 532 545 (face (bold) fontified t) 545 548 (fontified t) 548 554 (face font-lock-keyword-face fontified t) 554 555 (latex-env-pair t fontified t) 555 561 (face font-lock-function-name-face latex-env-pair t fontified t) 561 562 (latex-env-pair t fontified t) 562 567 (fontified t) 567 577 (face font-lock-keyword-face fontified t) 577 579 (fontified t) 579 595 (face font-lock-keyword-face fontified t) 595 605 (fontified t) 605 615 (face font-lock-keyword-face fontified t) 615 617 (fontified t) 617 634 (face font-lock-builtin-face fontified t) 634 637 (fontified t) 637 646 (face font-lock-keyword-face fontified t) 646 649 (fontified t) 649 653 (face font-lock-keyword-face fontified t) 653 654 (latex-env-pair t fontified t) 654 660 (face font-lock-function-name-face latex-env-pair t fontified t) 660 661 (latex-env-pair t fontified t) 661 662 (fontified t)) . 104) (undo-tree-id32 . -74) (undo-tree-id33 . -649) (undo-tree-id34 . -649) (undo-tree-id35 . -44) (undo-tree-id36 . -145) (undo-tree-id37 . -199) (undo-tree-id38 . -330) (undo-tree-id39 . -389) (undo-tree-id40 . -491) (undo-tree-id41 . -547) (undo-tree-id42 . -649) (undo-tree-id43 . -649) (undo-tree-id44 . -661) 753 (t 26712 55164 244309 929000)) nil (26712 58031 207897 273000) 0 nil])
([nil nil ((94 . 95) (#("
" 0 1 (face (bold) fontified t)) . -94) 24) nil (26712 58031 207877 887000) 0 nil])
([nil nil ((#("\\bfseries " 0 9 (face font-lock-keyword-face fontified t) 9 10 (face (bold) fontified t)) . 25) (undo-tree-id31 . -9)) nil (26712 58031 207876 644000) 0 nil])
([nil nil (25) nil (26712 58031 207874 861000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -45) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 46 (43 . 46) (25 . 43) (#("section" 0 7 (face font-lock-keyword-face fontified t)) . -25) (undo-tree-id19 . -7) (undo-tree-id20 . -7) (undo-tree-id21 . -7) 32 (29 . 32) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -29) (undo-tree-id22 . -1) (29 . 30) (#("o" 0 1 (face font-lock-keyword-face fontified t)) . -29) (undo-tree-id23 . -1) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -30) (undo-tree-id24 . -1) (#("o" 0 1 (face font-lock-keyword-face fontified t)) . -31) (undo-tree-id25 . -1) 32 (30 . 32) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -30) (undo-tree-id26 . -1) (30 . 31) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -30) (undo-tree-id27 . -1) (#(" " 0 1 (fontified t)) . -31) (undo-tree-id28 . -1) (#(" " 0 1 (fontified t)) . -32) (undo-tree-id29 . -1) (#(" " 0 1 (fontified t)) . -33) (undo-tree-id30 . -1) 34 (31 . 34) (24 . 31)) nil (26712 58031 207870 894000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 115) (undo-tree-id14 . 1) (undo-tree-id15 . -1)) nil (26712 58031 207804 699000) 0 nil])
([nil nil ((185 . 186) (#("
" 0 1 (fontified t)) . -185) (undo-tree-id13 . -1) 116) nil (26712 58031 207696 867000) 0 nil])
([nil nil ((292 . 293) (#("
" 0 1 (fontified t)) . -292) (undo-tree-id12 . -1) 289) nil (26712 58031 207693 671000) 0 nil])
([nil nil ((386 . 387) (#("
" 0 1 (fontified t)) . -386) 385) nil (26712 58031 207691 346000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 365)) nil (26712 58031 207689 733000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 326) (undo-tree-id11 . -10)) nil (26712 58031 207688 751000) 0 nil])
([nil nil (326) nil (26712 58031 207687 268000) 0 nil])
([nil nil ((333 . 339) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -333) (undo-tree-id7 . -1) (327 . 334) (#("a" 0 1 (face font-lock-keyword-face fontified t)) . -327) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 328 (326 . 328)) nil (26712 58031 207685 385000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -338) (undo-tree-id4 . -1) 339 (334 . 339) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -334) (undo-tree-id5 . -1) (333 . 335) (#("irght" 0 5 (face font-lock-keyword-face fontified t)) . 333) (undo-tree-id6 . -4)) nil (26712 58031 207679 664000) 0 nil])
([nil nil ((116 . 136) (439 . 457) 116) nil (26712 58031 207675 136000) 0 nil])
([nil nil ((2543 . 2544) (#("
" 0 1 (face (bold) fontified t)) . -2543) 2470) nil (26712 58031 207674 444000) 0 nil])
([nil nil ((2569 . 2570) (#(" " 0 1 (face (bold) fontified t)) . 2569)) nil (26712 58031 207673 533000) 0 nil])
([nil nil ((2660 . 2661) (#(" " 0 1 (fontified t)) . 2660)) nil (26712 58031 207671 819000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 2730)) nil (26712 58031 207670 848000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2731)) nil (26712 58031 207670 26000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 2731) (undo-tree-id3 . -10)) nil (26712 58031 207669 164000) 0 nil])
([nil nil ((2766 . 2767) (#(" " 0 1 (fontified t)) . 2766)) nil (26712 58031 207666 700000) 0 nil])
([nil nil ((2788 . 2789) (#("
" 0 1 (fontified t)) . -2788) 2767) nil (26712 58031 207665 708000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -2798) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 2799 (2798 . 2799) (2797 . 2798)) nil (26712 58031 207663 524000) 0 nil])
([nil nil ((nil rear-nonsticky nil 114 . 115) (#("
" 0 1 (fontified nil)) . -355) (114 . 356) 24) nil (26712 58031 207622 266000) 0 nil])
([nil nil ((114 . 115) 24) nil (26712 58031 207620 383000) 0 nil])
([nil nil ((24 . 46) (357 . 377)) nil (26712 58031 207619 170000) 0 nil])
([nil nil ((137 . 138) (136 . 137) 65) nil (26712 58031 208303 176000) 0 nil])
([nil nil ((137 . 139) (136 . 137) 46) nil (26712 58034 269450 795000) 0 nil] [nil nil ((320 . 337) (273 . 290) (195 . 212) (167 . 184) (156 . 166) (138 . 155)) ((#("А. Тулегулов\\text" 0 12 (fontified t) 12 17 (face font-lock-keyword-face fontified t)) . 138) (#("К. Акишев," 0 10 (fontified t)) . 156) (#("Ж. Жантлесов,    " 0 13 (fontified t) 13 17 (fontified t)) . 167) (#("М. Нурмагамбетов," 0 17 (face (bold) fontified t)) . 195) (#("А. Джумагалиева, " 0 16 (face (bold) fontified t) 16 17 (face (bold) fontified t)) . 273) (#("И. Дюсебаев      " 0 2 (face (bold) fontified t) 2 3 (face (bold) fontified t) 3 11 (face (bold) fontified t) 11 17 (face (bold) fontified t)) . 320) (undo-tree-id45 . -16)) (26712 58031 207608 60000) 0 nil])
([nil nil ((215 . 226) (198 . 214) (180 . 197) (166 . 179) (155 . 165) (137 . 154)) nil (26712 58044 148286 204000) 0 nil] [nil nil ((216 . 233) (199 . 215) (181 . 198) (167 . 180) (156 . 166) (138 . 155)) ((#("А. Тулегулов\\text" 0 12 (fontified t) 12 17 (face font-lock-keyword-face fontified t)) . 138) (#("К. Акишев," 0 10 (fontified t)) . 156) (#("Ж. Жантлесов," 0 13 (fontified t)) . 167) (#("М. Нурмагамбетов," 0 17 (fontified t)) . 181) (#("А. Джумагалиева," 0 16 (fontified t)) . 199) (#("И. Дюсебаев      " 0 2 (fontified t) 2 3 (fontified t) 3 11 (fontified t) 11 17 (fontified t)) . 216) (undo-tree-id46 . -16)) (26712 58034 269126 856000) 0 nil])
nil
([nil nil ((#("t" 0 1 (face font-lock-keyword-face fontified t)) . 153)) nil (26712 58044 148284 110000) 0 nil])
nil
([nil nil ((#("x" 0 1 (face font-lock-keyword-face fontified t)) . 152)) nil (26712 58044 148283 148000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t)) . 151)) nil (26712 58044 148282 317000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-keyword-face fontified t)) . 150)) nil (26712 58044 148281 154000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 149)) nil (26712 58044 148279 331000) 0 nil])
([nil nil ((149 . 150)) nil (26712 58044 148278 399000) 0 nil])
([nil nil ((210 . 211) (#("
" 0 1 (fontified t)) . -210) (193 . 194) (#("
" 0 1 (fontified t)) . -193) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (175 . 176) (#("
" 0 1 (fontified t)) . -175) (161 . 162) (#("
" 0 1 (fontified t)) . -161) (150 . 151) (#("
" 0 1 (fontified t)) . -150) (undo-tree-id55 . -1) (undo-tree-id56 . 1) (undo-tree-id57 . -1) 149) nil (26712 58044 148274 632000) 0 nil])
([nil nil ((#("А. Тулегулов, К. Акишев, Ж. Жантлесов, М. Нурмагамбетов, А. Джумагалиева, И. Дюсебаев" 0 13 (fontified t) 13 14 (fontified t) 14 24 (fontified t) 24 25 (fontified t) 25 38 (fontified t) 38 39 (fontified t) 39 56 (fontified t) 56 57 (fontified t) 57 73 (fontified t) 73 74 (fontified t) 74 76 (fontified t) 76 77 (fontified t) 77 85 (fontified t)) . 137) (undo-tree-id47 . -13) (undo-tree-id48 . -84) (undo-tree-id49 . 71) (undo-tree-id50 . -56) (undo-tree-id51 . -56) (undo-tree-id52 . -13)) nil (26712 58044 148265 24000) 0 nil])
([nil nil ((nil rear-nonsticky nil 150 . 151) (nil fontified nil 66 . 151) (66 . 151) 65) nil (26712 58044 148233 785000) 0 nil])
([nil nil ((24603 . 24604) 490) nil (26712 58044 148223 516000) 0 nil])
([nil nil ((2839 . 2861) (3169 . 3189) 2839 (t 26712 58044 155172 73000)) nil (26712 58083 692139 775000) 0 nil])
([nil nil ((3277 . 3278) (#("
" 0 1 (fontified t)) . -3277) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) 3212) nil (26712 58083 692136 308000) 0 nil])
([nil nil ((3381 . 3382) (#("
" 0 1 (fontified t)) . -3381) 3375) nil (26712 58083 692111 792000) 0 nil])
([nil nil ((3212 . 3232) (3451 . 3469) 3212) nil (26712 58083 692110 620000) 0 nil])
([nil nil ((5620 . 5621) (#("
" 0 1 (face (bold) fontified t)) . -5620) 5550) nil (26712 58083 692108 15000) 0 nil])
([nil nil ((5647 . 5648) (#(" " 0 1 (face (bold) fontified t)) . 5647)) nil (26712 58083 692106 292000) 0 nil])
([nil nil ((5739 . 5740) (#(" " 0 1 (face (bold) fontified t)) . 5739)) nil (26712 58083 692105 340000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 5810)) nil (26712 58083 692103 807000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5811)) nil (26712 58083 692102 214000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 5811) (undo-tree-id59 . -10)) nil (26712 58083 692100 801000) 0 nil])
([nil nil ((5847 . 5848) (#(" " 0 1 (fontified t)) . 5847)) nil (26712 58083 692096 183000) 0 nil])
([nil nil ((5869 . 5870) (#("
" 0 1 (fontified t)) . -5869) 5848) nil (26712 58083 692094 580000) 0 nil])
([nil nil ((5879 . 5880)) nil (26712 58083 692093 738000) 0 nil])
([nil nil ((5550 . 5572) (5882 . 5902) 5550) nil (26712 58083 692092 335000) 0 nil])
([nil nil ((5994 . 5995) (#("
" 0 1 (fontified t)) . -5994) (undo-tree-id58 . -1) 5925) nil (26712 58083 692088 789000) 0 nil])
([nil nil ((6105 . 6106) (#("
" 0 1 (fontified t)) . -6105) 6104) nil (26712 58083 692065 375000) 0 nil])
([nil nil ((5925 . 5944) (6166 . 6183) 5925) nil (26712 58083 692054 404000) 0 nil])
([nil nil ((#("\\end{authorinfo}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 15 (face font-lock-function-name-face fontified t latex-env-pair t) 15 16 (fontified t latex-env-pair t) 16 17 (fontified t)) . 6185) (undo-tree-id79 . -17) (undo-tree-id80 . 17) (undo-tree-id81 . -16) (undo-tree-id82 . -17) (t 26712 58083 700341 760000)) nil (26712 58095 391312 982000) 0 nil])
([nil nil ((#("\\begin{authorinfo}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 17 (face font-lock-function-name-face latex-env-pair t fontified t) 17 18 (latex-env-pair t fontified t) 18 19 (fontified t)) . 5925) (undo-tree-id77 . -19) (undo-tree-id78 . -18)) nil (26712 58095 391304 566000) 0 nil])
([nil nil ((5925 . 5945) (6166 . 6184)) nil (26712 58095 391276 904000) 0 nil])
([nil nil ((8216 . 8237) (11563 . 11579) (t 26712 58095 398391 787000)) nil (26712 58126 959268 176000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11600)) nil (26712 58126 959267 244000) 0 nil])
([nil nil ((#("{\\bfseries 1 - сурет. Лазерлік селективті балқыту}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 49 (face (bold) fontified t) 49 50 (fontified t)) . -11719) 11770) nil (26712 58126 959266 533000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11739 . 11740) (nil fontified nil 11702 . 11740) (11702 . 11740)) nil (26712 58126 959265 651000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11756) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1)) nil (26712 58126 959260 682000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11756) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1)) nil (26712 58126 959118 274000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11756) (undo-tree-id83 . 1)) nil (26712 58126 959092 626000) 0 nil])
([nil nil ((11756 . 11777) (13001 . 13017)) nil (26712 58126 959074 372000) 0 nil])
([nil nil ((#("{\\bfseries 1 - сурет. Субстраттың қозғалыс механизмі}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 52 (face (bold) fontified t) 52 53 (fontified t)) . -14998) 15052 (t 26712 58126 967526 429000)) nil (26712 58146 786623 265000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15021 . 15022) (nil fontified nil 14981 . 15022) (14981 . 15022)) nil (26712 58146 786622 123000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15037) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1)) nil (26712 58146 786620 840000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15037) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1)) nil (26712 58146 786614 87000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15037)) nil (26712 58146 786599 941000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15084) (undo-tree-id245 . -1)) nil (26712 58146 786599 99000) 0 nil])
([nil nil ((#("{\\bfseries 3 - сурет. Басып шығару механизмі}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 44 (face (bold) fontified t) 44 45 (fontified t)) . -15203) 15249) nil (26712 58146 786594 270000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15218 . 15219) (nil fontified nil 15186 . 15219) (15186 . 15219)) nil (26712 58146 786593 28000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15234) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1)) nil (26712 58146 786591 415000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15234) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1)) nil (26712 58146 786569 684000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15234) (undo-tree-id219 . -1)) nil (26712 58146 786837 708000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15486)) nil (26712 58155 602754 161000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . 15234) (undo-tree-id217 . 1) (undo-tree-id218 . -1)) ((15234 . 15235)) (26712 58146 786551 99000) 0 nil])
([nil nil ((15671 . 15672) (#("
" 0 1 (face (bold) fontified t)) . -15671) 15604) nil (26712 58155 602752 17000) 0 nil])
nil
([nil nil ((#("{\\bfseries 4 - сурет. Токтың номиналды мәні бойынша алынған үлгінің үзіндісі}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 67 (face (bold) fontified t) 67 68 (face (bold) fontified t) 68 76 (face (bold) fontified t) 76 77 (fontified t)) . -15604) (undo-tree-id274 . -67) (undo-tree-id275 . -67) (undo-tree-id276 . -66) (undo-tree-id277 . -67) (undo-tree-id278 . -67) 15682) nil (26712 58155 602749 893000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15651 . 15652) (nil fontified nil 15587 . 15652) (15587 . 15652)) nil (26712 58155 602740 655000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15667) (undo-tree-id273 . -1)) nil (26712 58155 602738 662000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15667) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1)) nil (26712 58155 602735 526000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15667) (undo-tree-id264 . -1)) nil (26712 58155 602712 532000) 0 nil])
([nil nil ((#("{\\bfseries 5 - сурет. Басып шығару жылдамдығының диаграммасы}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 60 (face (bold) fontified t) 60 61 (fontified t)) . -17375) 17437 (t 26712 58155 610648 152000)) nil (26712 58180 936124 915000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17406 . 17407) (nil fontified nil 17358 . 17407) (17358 . 17407)) nil (26712 58180 936124 84000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 17423) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1)) nil (26712 58180 936119 325000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 17423) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1)) nil (26712 58180 935986 786000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 17423) (undo-tree-id439 . 1) (undo-tree-id440 . -1)) nil (26712 58180 935951 609000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 17423) (undo-tree-id438 . 1)) nil (26712 58180 935948 524000) 0 nil])
([nil nil ((#("{\\bfseries 6 - сурет. Басып шығару траекториясының схемасы}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 58 (face (bold) fontified t) 58 59 (fontified t)) . -17541) 17601) nil (26712 58180 935946 560000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17570 . 17571) (nil fontified nil 17524 . 17571) (17524 . 17571)) nil (26712 58180 935944 847000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 17586) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1)) nil (26712 58180 935941 831000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 17586) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1)) nil (26712 58180 935702 742000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 17586)) nil (26712 58180 935582 816000) 0 nil])
([nil nil ((18299 . 18300) (#("
" 0 1 (face (bold) fontified t)) . -18299) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) 18230) nil (26712 58180 935575 593000) 0 nil])
([nil nil ((18332 . 18353) (19580 . 19596) 18332 (t 26712 58180 943755 479000)) nil (26712 58187 155599 515000) 0 nil])
([nil nil ((19618 . 19633) (19641 . 19654) (t 26712 58187 158781 765000)) nil (26712 58190 806901 277000) 0 nil])
([nil nil ((19670 . 19691) (21484 . 21500) (t 26712 58190 810797 203000)) nil (26712 58207 950209 32000) 0 nil])
([nil nil ((21522 . 21537) (21545 . 21558)) nil (26712 58207 950208 651000) 0 nil])
([nil nil ((21574 . 21593) (23546 . 23563)) nil (26712 58207 950208 60000) 0 nil])
([nil nil ((23583 . 23602) (24898 . 24915)) nil (26712 58207 950203 762000) 0 nil])
([nil nil ((#("Ж. Жантлесов, М. Нурмагамбетов, " 0 32 (fontified t)) . 91) (undo-tree-id0 . -31) (undo-tree-id1 . -31) (undo-tree-id2 . -31) (undo-tree-id3 . -31) 122 (t 26712 58207 952869 585000)) nil (26712 65411 762155 241000) 0 nil])
([nil nil ((#("\\textsuperscript{1}Ж. Жантлесов,
" 0 16 (face (font-lock-keyword-face bold) fontified t) 16 33 (face (bold) fontified t)) . 293) (undo-tree-id43 . -32) (undo-tree-id44 . -28) (undo-tree-id45 . -28) (undo-tree-id46 . -28) (undo-tree-id47 . -28) (undo-tree-id48 . -28) (undo-tree-id49 . -28) (undo-tree-id50 . -28) (undo-tree-id51 . -28) (undo-tree-id52 . -28) (undo-tree-id53 . -28) (undo-tree-id54 . -28) (undo-tree-id55 . -28) (undo-tree-id56 . -28) (undo-tree-id57 . -28) (undo-tree-id58 . -28) (undo-tree-id59 . -28) (undo-tree-id60 . -28) (undo-tree-id61 . -28) (undo-tree-id62 . -28) (undo-tree-id63 . -28) (undo-tree-id64 . -28) (undo-tree-id65 . -28) (undo-tree-id66 . -28) (undo-tree-id67 . -28) (undo-tree-id68 . -28) (undo-tree-id69 . -28) (undo-tree-id70 . -28) (undo-tree-id71 . -28) (undo-tree-id72 . -28) (undo-tree-id73 . -28) (undo-tree-id74 . -28) (undo-tree-id75 . -28) (undo-tree-id76 . -28) (undo-tree-id77 . -28) (undo-tree-id78 . -28) (undo-tree-id79 . -28) (undo-tree-id80 . -28) (undo-tree-id81 . -28) (undo-tree-id82 . -28) (undo-tree-id83 . -28) (undo-tree-id84 . -28) (undo-tree-id85 . -28) (undo-tree-id86 . -28) (undo-tree-id87 . -28) (undo-tree-id88 . -28) (undo-tree-id89 . -28) (undo-tree-id90 . -28) (undo-tree-id91 . -28) (undo-tree-id92 . -28) (undo-tree-id93 . -28) (undo-tree-id94 . -28) (undo-tree-id95 . -33) 321 (t 26712 65411 764287 291000)) nil (26712 65420 126853 577000) 0 nil])
([nil nil ((#("\\textsuperscript{1}М. Нурмагамбетов,
" 0 16 (face font-lock-keyword-face fontified t) 16 36 (fontified t) 36 37 (fontified t)) . 293) (undo-tree-id4 . -36) (undo-tree-id5 . -36) (undo-tree-id6 . -28) (undo-tree-id7 . -28) (undo-tree-id8 . -28) (undo-tree-id9 . -28) (undo-tree-id10 . -28) (undo-tree-id11 . -28) (undo-tree-id12 . -28) (undo-tree-id13 . -28) (undo-tree-id14 . -28) (undo-tree-id15 . -28) (undo-tree-id16 . -28) (undo-tree-id17 . -28) (undo-tree-id18 . -28) (undo-tree-id19 . -28) (undo-tree-id20 . -28) (undo-tree-id21 . -28) (undo-tree-id22 . -28) (undo-tree-id23 . -28) (undo-tree-id24 . -28) (undo-tree-id25 . -28) (undo-tree-id26 . -28) (undo-tree-id27 . -28) (undo-tree-id28 . -28) (undo-tree-id29 . -28) (undo-tree-id30 . -28) (undo-tree-id31 . -28) (undo-tree-id32 . -28) (undo-tree-id33 . -28) (undo-tree-id34 . -28) (undo-tree-id35 . -28) (undo-tree-id36 . -28) (undo-tree-id37 . -28) (undo-tree-id38 . -28) (undo-tree-id39 . -28) (undo-tree-id40 . -28) (undo-tree-id41 . -28) (undo-tree-id42 . -37) 321) nil (26712 65426 947192 402000) 0 nil])
([nil nil ((#("\\textsuperscript{1}Ж. Жантлесов,
" 0 16 (face (font-lock-keyword-face bold) fontified t) 16 33 (face (bold) fontified t)) . 2950) (undo-tree-id197 . -32) (undo-tree-id198 . -28) (undo-tree-id199 . -28) (undo-tree-id200 . -28) (undo-tree-id201 . -28) (undo-tree-id202 . -28) (undo-tree-id203 . -28) (undo-tree-id204 . -28) (undo-tree-id205 . -28) (undo-tree-id206 . -28) (undo-tree-id207 . -28) (undo-tree-id208 . -28) (undo-tree-id209 . -28) (undo-tree-id210 . -28) (undo-tree-id211 . -28) (undo-tree-id212 . -28) (undo-tree-id213 . -28) (undo-tree-id214 . -28) (undo-tree-id215 . -28) (undo-tree-id216 . -28) (undo-tree-id217 . -33) 2978 (t 26712 65420 128335 9000)) nil (26712 65434 360418 706000) 0 nil] [nil nil ((#("\\textsuperscript{1}М. Нурмагамбетов,
" 0 16 (face (font-lock-keyword-face bold) fontified t) 16 37 (face (bold) fontified t)) . 2983) (undo-tree-id118 . -36) (undo-tree-id119 . -28) (undo-tree-id120 . -28) (undo-tree-id121 . -28) (undo-tree-id122 . -28) (undo-tree-id123 . -28) (undo-tree-id124 . -28) (undo-tree-id125 . -28) (undo-tree-id126 . -28) (undo-tree-id127 . -28) (undo-tree-id128 . -28) (undo-tree-id129 . -28) (undo-tree-id130 . -28) (undo-tree-id131 . -28) (undo-tree-id132 . -28) (undo-tree-id133 . -28) (undo-tree-id134 . -28) (undo-tree-id135 . -28) (undo-tree-id136 . -28) (undo-tree-id137 . -28) (undo-tree-id138 . -28) (undo-tree-id139 . -28) (undo-tree-id140 . -28) (undo-tree-id141 . -28) (undo-tree-id142 . -37) 3011 (t 26712 65420 128335 9000)) ((2983 . 3020)) (26712 65426 838754 958000) 0 nil])
([nil nil ((#("\\textsuperscript{1}М. Нурмагамбетов,
" 0 16 (face font-lock-keyword-face fontified t) 16 36 (fontified t) 36 37 (fontified t)) . 2950) (undo-tree-id195 . -36) (undo-tree-id196 . -28) 2978) nil (26712 65434 360411 302000) 0 nil])
([nil nil ((#("\\textsuperscript{1}А. Джумагалиева,
" 0 16 (face font-lock-keyword-face fontified t) 16 35 (fontified t) 35 36 (fontified t)) . 2983) (undo-tree-id96 . -35) (undo-tree-id97 . -35) (undo-tree-id98 . -28) (undo-tree-id99 . -28) (undo-tree-id100 . -28) (undo-tree-id101 . -28) (undo-tree-id102 . -28) (undo-tree-id103 . -28) (undo-tree-id104 . -28) (undo-tree-id105 . -28) (undo-tree-id106 . -28) (undo-tree-id107 . -28) (undo-tree-id108 . -28) (undo-tree-id109 . -28) (undo-tree-id110 . -28) (undo-tree-id111 . -28) (undo-tree-id112 . -28) (undo-tree-id113 . -28) (undo-tree-id114 . -28) (undo-tree-id115 . -28) (undo-tree-id116 . -28) (undo-tree-id117 . -36) 3011) ((2983 . 3019)) (26712 65426 838609 254000) 0 nil])
([nil nil ((#("\\textsuperscript{1}J. Zhantlesov,
" 0 16 (face (font-lock-keyword-face bold) fontified t) 16 34 (face (bold) fontified t)) . 5590) (undo-tree-id160 . -33) (undo-tree-id161 . -28) (undo-tree-id162 . -28) (undo-tree-id163 . -28) (undo-tree-id164 . -28) (undo-tree-id165 . -28) (undo-tree-id166 . -28) (undo-tree-id167 . -28) (undo-tree-id168 . -28) (undo-tree-id169 . -28) (undo-tree-id170 . -28) (undo-tree-id171 . -28) (undo-tree-id172 . -28) (undo-tree-id173 . -28) (undo-tree-id174 . -28) (undo-tree-id175 . -28) (undo-tree-id176 . -28) (undo-tree-id177 . -28) (undo-tree-id178 . -28) (undo-tree-id179 . -28) (undo-tree-id180 . -28) (undo-tree-id181 . -28) (undo-tree-id182 . -28) (undo-tree-id183 . -28) (undo-tree-id184 . -28) (undo-tree-id185 . -28) (undo-tree-id186 . -28) (undo-tree-id187 . -28) (undo-tree-id188 . -28) (undo-tree-id189 . -28) (undo-tree-id190 . -28) (undo-tree-id191 . -28) (undo-tree-id192 . -28) (undo-tree-id193 . -28) (undo-tree-id194 . -34) 5618) nil (26712 65434 360409 870000) 0 nil])
nil
([nil nil ((#("\\textsuperscript{1}M. Nurmagambetov,
" 0 16 (face font-lock-keyword-face fontified t) 16 36 (fontified t) 36 37 (fontified t)) . 5590) (undo-tree-id143 . -36) (undo-tree-id144 . -36) (undo-tree-id145 . -28) (undo-tree-id146 . -28) (undo-tree-id147 . -28) (undo-tree-id148 . -28) (undo-tree-id149 . -28) (undo-tree-id150 . -28) (undo-tree-id151 . -28) (undo-tree-id152 . -28) (undo-tree-id153 . -28) (undo-tree-id154 . -28) (undo-tree-id155 . -28) (undo-tree-id156 . -28) (undo-tree-id157 . -28) (undo-tree-id158 . -28) (undo-tree-id159 . -37) 5618) nil (26712 65434 360394 801000) 0 nil])
([nil nil ((6777 . 6779) (t 26712 65434 362416 5000)) nil (26712 65490 533431 803000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -6779) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (#("t" 0 1 (fontified t)) . -6780) (undo-tree-id221 . -1) (#("t" 0 1 (fontified t)) . -6781) (undo-tree-id222 . -1) (#("t" 0 1 (fontified t)) . -6782) (undo-tree-id223 . -1) (#("t" 0 1 (fontified t)) . -6783) (undo-tree-id224 . -1) 6784 (6779 . 6784) (t 26712 65490 535733 165000)) nil (26712 65503 22100 205000) 0 nil])
([nil nil ((7963 . 7965)) nil (26712 65532 378349 688000) 0 nil])
([nil nil ((7976 . 7988) (t 26712 65503 24803 178000)) nil (26713 3 786425 837000) 0 nil] [nil nil ((7576 . 7579) (7976 . 7985) (t 26712 65503 24803 178000)) ((#("\\vspace{1" 0 7 (face font-lock-keyword-face fontified t) 7 9 (fontified t)) . 7976) (#("em}" 0 3 (fontified t)) . 7576) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -3) (undo-tree-id228 . -2) (undo-tree-id229 . -2)) (26712 65532 378069 501000) 0 nil])
([nil nil ((7984 . 7985)) nil (26713 3 786420 758000) 0 nil])
nil
([nil nil ((#("-" 0 1 (fontified t)) . 7984) (t 26713 3 788008 245000)) nil (26713 24 788870 414000) 0 nil])
([nil nil ((#("\\vspace{1em}" 0 7 (face font-lock-keyword-face fontified t) 7 12 (fontified t)) . 7976) (undo-tree-id230 . -9) (undo-tree-id231 . -11) (undo-tree-id232 . 4) (undo-tree-id233 . -8)) nil (26713 24 788869 883000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5388 . 5389) (nil fontified nil 5377 . 5389) (5377 . 5389)) nil (26713 24 788855 756000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2747 . 2748) (nil fontified nil 2736 . 2748) (2736 . 2748) (t 26713 24 790124 732000)) nil (26713 37 237514 162000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2870 . 2871) (nil fontified nil 2859 . 2871) (2859 . 2871) (t 26713 37 239193 566000)) nil (26713 57 732285 323000) 0 nil])
([nil nil ((2867 . 2870) (#("1" 0 1 (fontified t)) . -2867) (undo-tree-id234 . -1) 2868) nil (26713 57 732283 750000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3065 . 3066) (#("
" 0 1 (fontified nil)) . -3080) (3065 . 3081)) nil (26713 57 732270 896000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 3065) (undo-tree-id239 . -1) (t 26713 57 734306 570000)) nil (26713 80 936190 675000) 0 nil])
([nil nil ((#("\\vspace{0.5em}" 0 7 (face font-lock-keyword-face fontified t) 7 13 (fontified t) 13 14 (fontified t rear-nonsticky t)) . 3065) (undo-tree-id238 . -13)) nil (26713 80 936188 781000) 0 nil])
([nil nil ((#("\\vspace{0.5em}" 0 7 (face font-lock-keyword-face fontified t) 7 13 (fontified t) 13 14 (rear-nonsticky t fontified t)) . 2859) (undo-tree-id235 . -11) (undo-tree-id236 . -13) (undo-tree-id237 . 3)) nil (26713 80 936187 299000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5523 . 5524) (nil fontified nil 5510 . 5524) (5510 . 5524)) nil (26713 80 936177 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5732 . 5733) (nil fontified nil 5719 . 5733) (5719 . 5733)) nil (26713 80 936172 811000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7922 . 7923) (nil fontified nil 7909 . 7923) (7909 . 7923) (t 26713 80 945434 74000)) nil (26713 91 417357 248000) 0 nil])
([nil nil ((7908 . 7909) (t 26713 91 419491 447000) 7858) nil (26713 100 351085 297000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 11485) (t 26713 100 360540 344000) (11486 . 11487) 11485 (t 26713 100 360540 344000)) nil (26713 135 824671 645000) 0 nil])
([nil nil ((nil fontified t 11485 . 11486) (#("7" 0 1 (fontified t)) . 11485) (11486 . 11487) 11485) nil (26713 159 601082 556000) 0 nil])
([nil nil ((#("Лазерлік балқыту (SLM) - дайындау технологиясы көмегімен күрделі
кеңістіктік пішіндегі металл бұйымдарын ұнтақ құрамдарын лазермен
балқыту. Жұмыстар математикалық модель негізінде орындалады. Металл
ұнтақтарының тез балқуын қамтамасыз ету үшін SLM технологиясы
қолданылады. Қазіргі уақытта жоғары энергия тығыздығы бар лазерлерді
қолданады. Жылу көзі ретінде қуаты 50-400 Вт және дақ мөлшері 20-100 мкм
болатын лазер қолданылады. Бұл іс жүзінде бөлшектерді тікелей алуға
мүмкіндік береді {[}7-8{]}. Алынған бөлшектерде пішіні ұсақ түйіршікті,
біртекті құрылым, бетінің кедір-бұдырлығы 20-50 мкм жетуі мүмкін. Бұл
әртүрлі дайындамаларды өңдеуге жарамды технологияның күрделі түрі. SLM
жоғары дәлдікке ие болғанымен, ол қалыптау процесінде сфероидизация
құбылысына тап болады {[}9-10{]}

" 0 65 (fontified t) 65 786 (fontified t)) . 11605) (undo-tree-id385 . -785) (undo-tree-id386 . -785) (undo-tree-id387 . -785) (undo-tree-id388 . -785) 12390) nil (26713 168 78507 715000) 0 nil] [nil nil ((#("
\\emph{Лазерлік селективті балқыту}

Лазерлік селективті балқыту 1-суретте көрсетілген. Өнімді жасау процесі
ұнтақ түріне байланысты инертті газ аргон немесе азотпен толтырылған
машинаның SLM камерасында жүреді. Инертті газдың негізгі шығыны
вакуумдық камераны Үрлеу кезінде, одан ауа толығымен шығарылған кезде
пайда болады (оттегінің рұқсат етілген мөлшері 0,15\\% - дан аз). Осыдан
кейін өнім пластинамен бірге SLM машинасының камерасынан шығарылады,
содан кейін өнім пештен механикалық түрде бөлінеді. Әрі қарай, салынған
өнімді әрлеу жұмыстары жүреді. Оттегінің толық болмауы титан сияқты
материалдармен жұмыс істеуге мүмкіндік беретін шығын материалының
тотығуын болдырмайды {[}5-6{]}.
" 0 1 (fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 34 (face (italic) fontified t) 34 241 (fontified t) 241 242 (fontified t) 242 363 (fontified t) 363 365 (face font-lock-keyword-face fontified t) 365 691 (fontified t)) . 10721) (undo-tree-id240 . -688) (undo-tree-id241 . -688) (undo-tree-id242 . -690) (undo-tree-id244 . -688) (undo-tree-id246 . -688) (undo-tree-id248 . -688) (undo-tree-id250 . -688) (undo-tree-id252 . -688) (undo-tree-id254 . -688) (undo-tree-id256 . -688) (undo-tree-id258 . -688) (undo-tree-id260 . -688) (undo-tree-id262 . -688) (undo-tree-id264 . -688) (undo-tree-id266 . -688) (undo-tree-id268 . -688) (undo-tree-id270 . -688) (undo-tree-id272 . -688) (undo-tree-id274 . -688) (undo-tree-id276 . -688) (undo-tree-id278 . -688) (undo-tree-id280 . -688) (undo-tree-id282 . -688) (undo-tree-id284 . -688) (undo-tree-id286 . -688) (undo-tree-id288 . -688) (undo-tree-id290 . -688) (undo-tree-id292 . -622) (undo-tree-id294 . -622) (undo-tree-id296 . -622) (undo-tree-id298 . -622) (undo-tree-id300 . -622) (undo-tree-id302 . -622) (undo-tree-id304 . -622) (undo-tree-id306 . -622) (undo-tree-id308 . -554) (undo-tree-id310 . -554) (undo-tree-id312 . -554) (undo-tree-id314 . -482) (undo-tree-id316 . -482) (undo-tree-id318 . -413) (undo-tree-id320 . -413) (undo-tree-id322 . -413) (undo-tree-id324 . -341) (undo-tree-id326 . -341) (undo-tree-id328 . -271) (undo-tree-id330 . -271) (undo-tree-id332 . -271) (undo-tree-id334 . -207) (undo-tree-id336 . -207) (undo-tree-id338 . -138) (undo-tree-id340 . -138) (undo-tree-id342 . -138) (undo-tree-id344 . -66) (undo-tree-id346 . -66) (undo-tree-id348 . -36) (undo-tree-id350 . -36) (undo-tree-id352 . -36) (undo-tree-id354 . -30) (undo-tree-id356 . -30) (undo-tree-id358 . -691)) ((10721 . 11412)) (26713 159 565594 709000) 0 nil])
([nil nil ((11411 . 11412) 11380) nil (26713 168 78505 651000) 0 nil])
([nil nil ((10913 . 10914) (t 26713 135 826733 606000) 10893) ((#("
" 0 1 (fontified t)) . 10913)) (26713 158 771541 805000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11412 . 11413) (#("
" 0 1 (fontified nil)) . -12198) (11412 . 12199)) nil (26713 168 78505 120000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10913 . 10914) (#("
" 0 1 (fontified nil)) . -11604) (10913 . 11605) 10893) ((#("

\\emph{Лазерлік селективті балқыту}

Лазерлік селективті балқыту 1-суретте көрсетілген. Өнімді жасау процесі
ұнтақ түріне байланысты инертті газ аргон немесе азотпен толтырылған
машинаның SLM камерасында жүреді. Инертті газдың негізгі шығыны
вакуумдық камераны Үрлеу кезінде, одан ауа толығымен шығарылған кезде
пайда болады (оттегінің рұқсат етілген мөлшері 0,15\\% - дан аз). Осыдан
кейін өнім пластинамен бірге SLM машинасының камерасынан шығарылады,
содан кейін өнім пештен механикалық түрде бөлінеді. Әрі қарай, салынған
өнімді әрлеу жұмыстары жүреді. Оттегінің толық болмауы титан сияқты
материалдармен жұмыс істеуге мүмкіндік беретін шығын материалының
тотығуын болдырмайды {[}5-6{]}.
" 0 1 (rear-nonsticky nil fontified nil) 1 2 (fontified nil) 2 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 35 (face (italic) fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 242 (fontified t) 242 243 (fontified t) 243 364 (fontified t) 364 366 (face font-lock-keyword-face fontified t) 366 660 (fontified t) 660 691 (fontified nil) 691 692 (fontified nil)) . 10913) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (11604 . 11605) (nil rear-nonsticky t 10913 . 10914)) (26713 158 591298 463000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12198) (undo-tree-id383 . 1) (undo-tree-id384 . -1)) nil (26713 168 78502 14000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 10914)) ((10914 . 10915) (t 26713 145 28783 578000)) (26713 145 19161 846000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13283 . 13284) (nil fontified nil 12931 . 13284) (12931 . 13284) (#("
%% \\begin{longtable}[]{@{}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 18\\tabcolsep) * \\real{0.1773}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 18\\tabcolsep) * \\real{0.0814}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 18\\tabcolsep) * \\real{0.0805}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 18\\tabcolsep) * \\real{0.0806}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 18\\tabcolsep) * \\real{0.0968}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 18\\tabcolsep) * \\real{0.0890}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 18\\tabcolsep) * \\real{0.1019}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 18\\tabcolsep) * \\real{0.0830}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 18\\tabcolsep) * \\real{0.0968}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 18\\tabcolsep) * \\real{0.1128}}@{}}
%% \\toprule\\noalign{}
%% \\begin{minipage}[b]{\\linewidth}\\centering
%% Элемент
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% С
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% Si
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% Mn
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% Cr
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% S
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% P
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% Ti
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% Cu
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% Ni
%% \\end{minipage} \\\\
%% \\midrule\\noalign{}
%% \\endhead
%% \\bottomrule\\noalign{}
%% \\endlastfoot
%% \\% & 0.36- & ≤0.8 & ≤0.8 & 12.0- & ≤0.03 & ≤0.025 ≤0.2 & ≤0.3 & ≤0.6 &
%% 0.36- \\\\
%% \\end{longtable}" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 10 (face font-lock-comment-face fontified t) 10 21 (face font-lock-comment-face fontified t latex-env-pair t) 21 28 (face font-lock-comment-face fontified t) 28 33 (face font-lock-comment-delimiter-face fontified t) 33 108 (face font-lock-comment-face fontified t) 108 113 (face font-lock-comment-delimiter-face fontified t) 113 152 (face font-lock-comment-face fontified t) 152 173 (face font-lock-comment-face fontified t) 173 188 (face font-lock-comment-face fontified t) 188 193 (face font-lock-comment-delimiter-face fontified t) 193 239 (face font-lock-comment-face fontified t) 239 268 (face font-lock-comment-face fontified t) 268 273 (face font-lock-comment-delimiter-face fontified t) 273 348 (face font-lock-comment-face fontified t) 348 353 (face font-lock-comment-delimiter-face fontified t) 353 428 (face font-lock-comment-face fontified t) 428 433 (face font-lock-comment-delimiter-face fontified t) 433 508 (face font-lock-comment-face fontified t) 508 513 (face font-lock-comment-delimiter-face fontified t) 513 588 (face font-lock-comment-face fontified t) 588 593 (face font-lock-comment-delimiter-face fontified t) 593 668 (face font-lock-comment-face fontified t) 668 673 (face font-lock-comment-delimiter-face fontified t) 673 748 (face font-lock-comment-face fontified t) 748 753 (face font-lock-comment-delimiter-face fontified t) 753 783 (face font-lock-comment-face fontified t) 783 832 (fontified t face font-lock-comment-face) 832 835 (face font-lock-comment-delimiter-face fontified t) 835 854 (face font-lock-comment-face fontified t) 854 857 (face font-lock-comment-delimiter-face fontified t) 857 863 (face font-lock-comment-face fontified t) 863 873 (face font-lock-comment-face fontified t latex-env-pair t) 873 899 (face font-lock-comment-face fontified t) 899 902 (face font-lock-comment-delimiter-face fontified t) 902 910 (face font-lock-comment-face fontified t) 910 913 (face font-lock-comment-delimiter-face fontified t) 913 917 (face font-lock-comment-face fontified t) 917 927 (face font-lock-comment-face fontified t latex-env-pair t) 927 936 (face font-lock-comment-face fontified t) 936 946 (face font-lock-comment-face fontified t latex-env-pair t) 946 972 (face font-lock-comment-face fontified t) 972 975 (face font-lock-comment-delimiter-face fontified t) 975 977 (face font-lock-comment-face fontified t) 977 980 (face font-lock-comment-delimiter-face fontified t) 980 984 (face font-lock-comment-face fontified t) 984 994 (face font-lock-comment-face fontified t latex-env-pair t) 994 1003 (face font-lock-comment-face fontified t) 1003 1013 (face font-lock-comment-face fontified t latex-env-pair t) 1013 1033 (face font-lock-comment-face fontified t) 1033 1039 (face font-lock-comment-face fontified t) 1039 1042 (face font-lock-comment-delimiter-face fontified t) 1042 1045 (face font-lock-comment-face fontified t) 1045 1048 (face font-lock-comment-delimiter-face fontified t) 1048 1052 (face font-lock-comment-face fontified t) 1052 1062 (face font-lock-comment-face fontified t latex-env-pair t) 1062 1071 (face font-lock-comment-face fontified t) 1071 1081 (face font-lock-comment-face fontified t latex-env-pair t) 1081 1107 (face font-lock-comment-face fontified t) 1107 1110 (face font-lock-comment-delimiter-face fontified t) 1110 1113 (face font-lock-comment-face fontified t) 1113 1116 (face font-lock-comment-delimiter-face fontified t) 1116 1120 (face font-lock-comment-face fontified t) 1120 1130 (face font-lock-comment-face fontified t latex-env-pair t) 1130 1139 (face font-lock-comment-face fontified t) 1139 1149 (face font-lock-comment-face fontified t latex-env-pair t) 1149 1175 (face font-lock-comment-face fontified t) 1175 1178 (face font-lock-comment-delimiter-face fontified t) 1178 1181 (face font-lock-comment-face fontified t) 1181 1184 (face font-lock-comment-delimiter-face fontified t) 1184 1188 (face font-lock-comment-face fontified t) 1188 1198 (face font-lock-comment-face fontified t latex-env-pair t) 1198 1207 (face font-lock-comment-face fontified t) 1207 1217 (face font-lock-comment-face fontified t latex-env-pair t) 1217 1243 (face font-lock-comment-face fontified t) 1243 1246 (face font-lock-comment-delimiter-face fontified t) 1246 1248 (face font-lock-comment-face fontified t) 1248 1251 (face font-lock-comment-delimiter-face fontified t) 1251 1255 (face font-lock-comment-face fontified t) 1255 1265 (face font-lock-comment-face fontified t latex-env-pair t) 1265 1274 (face font-lock-comment-face fontified t) 1274 1284 (face font-lock-comment-face fontified t latex-env-pair t) 1284 1310 (face font-lock-comment-face fontified t) 1310 1313 (face font-lock-comment-delimiter-face fontified t) 1313 1315 (face font-lock-comment-face fontified t) 1315 1318 (face font-lock-comment-delimiter-face fontified t) 1318 1322 (face font-lock-comment-face fontified t) 1322 1332 (face font-lock-comment-face fontified t latex-env-pair t) 1332 1341 (face font-lock-comment-face fontified t) 1341 1351 (face font-lock-comment-face fontified t latex-env-pair t) 1351 1377 (face font-lock-comment-face fontified t) 1377 1380 (face font-lock-comment-delimiter-face fontified t) 1380 1383 (face font-lock-comment-face fontified t) 1383 1386 (face font-lock-comment-delimiter-face fontified t) 1386 1390 (face font-lock-comment-face fontified t) 1390 1400 (face font-lock-comment-face fontified t latex-env-pair t) 1400 1409 (face font-lock-comment-face fontified t) 1409 1419 (face font-lock-comment-face fontified t latex-env-pair t) 1419 1445 (face font-lock-comment-face fontified t) 1445 1448 (face font-lock-comment-delimiter-face fontified t) 1448 1451 (face font-lock-comment-face fontified t) 1451 1454 (face font-lock-comment-delimiter-face fontified t) 1454 1458 (face font-lock-comment-face fontified t) 1458 1468 (face font-lock-comment-face fontified t latex-env-pair t) 1468 1477 (face font-lock-comment-face fontified t) 1477 1487 (face font-lock-comment-face fontified t latex-env-pair t) 1487 1513 (face font-lock-comment-face fontified t) 1513 1516 (face font-lock-comment-delimiter-face fontified t) 1516 1519 (face font-lock-comment-face fontified t) 1519 1522 (face font-lock-comment-delimiter-face fontified t) 1522 1526 (face font-lock-comment-face fontified t) 1526 1536 (face font-lock-comment-face fontified t latex-env-pair t) 1536 1540 (face font-lock-comment-face fontified t) 1540 1543 (face font-lock-comment-delimiter-face fontified t) 1543 1562 (face font-lock-comment-face fontified t) 1562 1565 (face font-lock-comment-delimiter-face fontified t) 1565 1574 (face font-lock-comment-face fontified t) 1574 1577 (face font-lock-comment-delimiter-face fontified t) 1577 1599 (face font-lock-comment-face fontified t) 1599 1602 (face font-lock-comment-delimiter-face fontified t) 1602 1615 (face font-lock-comment-face fontified t) 1615 1618 (face font-lock-comment-delimiter-face fontified t) 1618 1688 (face font-lock-comment-face fontified t) 1688 1689 (face font-lock-comment-face fontified t) 1689 1692 (face font-lock-comment-delimiter-face fontified t) 1692 1701 (face font-lock-comment-face fontified t) 1701 1704 (face font-lock-comment-delimiter-face fontified t) 1704 1708 (face font-lock-comment-face fontified t) 1708 1719 (face font-lock-comment-face fontified t latex-env-pair t)) . 12931) (undo-tree-id498 . -1701) (undo-tree-id499 . -1718) (undo-tree-id500 . -899) (undo-tree-id501 . -268) (undo-tree-id502 . -268) (undo-tree-id503 . -1701) (undo-tree-id504 . -1701) (undo-tree-id505 . -1701) (undo-tree-id506 . -1701) (undo-tree-id507 . -1701) (undo-tree-id508 . -1701) (undo-tree-id509 . -1701) (undo-tree-id510 . -1701) (undo-tree-id511 . -1701) (undo-tree-id512 . -1701) (undo-tree-id513 . -1701) (undo-tree-id514 . -1701) (undo-tree-id515 . -1701) (undo-tree-id516 . -1701) (undo-tree-id517 . -1701) (undo-tree-id518 . -1701) (undo-tree-id519 . -1701) (undo-tree-id520 . -1701) (undo-tree-id521 . -1701) (undo-tree-id522 . -1701) (undo-tree-id523 . -1701) (undo-tree-id524 . -1701) (undo-tree-id525 . -1719) 14651 (t 26713 168 79908 464000)) nil (26713 212 133097 994000) 0 nil])
nil
([nil nil ((#("% \\usepackage{tabularray}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 26 (face font-lock-comment-face fontified t)) . 12931) (undo-tree-id478 . -26) (undo-tree-id479 . -25) (undo-tree-id480 . -26) (undo-tree-id481 . -26) (undo-tree-id482 . -26) (undo-tree-id483 . -26) (undo-tree-id484 . -26) (undo-tree-id485 . -26) (undo-tree-id486 . -26) (undo-tree-id487 . -26) (undo-tree-id488 . -26) (undo-tree-id489 . -26) (undo-tree-id490 . -26) (undo-tree-id491 . -26) (undo-tree-id492 . -26) (undo-tree-id493 . -26) (undo-tree-id494 . -26) (undo-tree-id495 . -26) (undo-tree-id496 . -26) (undo-tree-id497 . -26)) nil (26713 212 133088 467000) 0 nil])
([nil nil ((#("{\\bfseries 1 кесте - 40x13 тот баспайтын болаттан жасалған сым}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 61 (face (bold) fontified t) 61 62 (face (bold) fontified t) 62 64 (fontified t)) . -12867) (undo-tree-id389 . -64) (undo-tree-id390 . -64) (undo-tree-id391 . -64) (undo-tree-id392 . -64) (undo-tree-id393 . -64) (undo-tree-id394 . -64) (undo-tree-id395 . -64) (undo-tree-id396 . -64) (undo-tree-id397 . -64) (undo-tree-id398 . -64) (undo-tree-id399 . -64) (undo-tree-id400 . -64) (undo-tree-id401 . -64) (undo-tree-id402 . -64) (undo-tree-id403 . -64) (undo-tree-id404 . -64) (undo-tree-id405 . -64) (undo-tree-id406 . -64) (undo-tree-id407 . -64) (undo-tree-id408 . -64) (undo-tree-id409 . -64) (undo-tree-id410 . -64) (undo-tree-id411 . -64) (undo-tree-id412 . -64) (undo-tree-id413 . -64) (undo-tree-id414 . -64) (undo-tree-id415 . -64) (undo-tree-id416 . -64) (undo-tree-id417 . -64) (undo-tree-id418 . -64) (undo-tree-id419 . -64) (undo-tree-id420 . -64) (undo-tree-id421 . -64) (undo-tree-id422 . -64) (undo-tree-id423 . -64) (undo-tree-id424 . -64) (undo-tree-id425 . -64) (undo-tree-id426 . -64) (undo-tree-id427 . -64) (undo-tree-id428 . -64) (undo-tree-id429 . -64) (undo-tree-id430 . -64) (undo-tree-id431 . -64) (undo-tree-id432 . -64) (undo-tree-id433 . -64) (undo-tree-id434 . -64) (undo-tree-id435 . -64) (undo-tree-id436 . -64) (undo-tree-id437 . -64) (undo-tree-id438 . -64) (undo-tree-id439 . -64) (undo-tree-id440 . -64) (undo-tree-id441 . -64) (undo-tree-id442 . -64) (undo-tree-id443 . -64) (undo-tree-id444 . -64) (undo-tree-id445 . -64) (undo-tree-id446 . -64) (undo-tree-id447 . -64) (undo-tree-id448 . -64) (undo-tree-id449 . -64) (undo-tree-id450 . -64) (undo-tree-id451 . -64) (undo-tree-id452 . -64) (undo-tree-id453 . -64) (undo-tree-id454 . -64) (undo-tree-id455 . -64) (undo-tree-id456 . -64) (undo-tree-id457 . -64) (undo-tree-id458 . -64) (undo-tree-id459 . -64) (undo-tree-id460 . -64) (undo-tree-id461 . -64) (undo-tree-id462 . -64) (undo-tree-id463 . -64) (undo-tree-id464 . -64) (undo-tree-id465 . -64) (undo-tree-id466 . -64) (undo-tree-id467 . -64) (undo-tree-id468 . -64) (undo-tree-id469 . -64) (undo-tree-id470 . -64) (undo-tree-id471 . -64) (undo-tree-id472 . -64) (undo-tree-id473 . -64) (undo-tree-id474 . -64) (undo-tree-id475 . -64) (undo-tree-id476 . -64) (undo-tree-id477 . -64) 12931) nil (26713 212 133081 473000) 0 nil])
([nil nil ((12884 . 12885) 12867) nil (26713 212 133042 931000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12960 . 12961) (nil fontified nil 12885 . 12961) (12885 . 12961)) nil (26713 212 133038 693000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 13385) (t 26713 212 135146 72000) (13386 . 13387) 13385 (t 26713 212 135146 72000)) nil (26713 229 469279 576000) 0 nil])
([nil nil ((nil fontified t 13385 . 13386) (#("7" 0 1 (fontified t)) . 13385) (13386 . 13387) 13385) nil (26713 229 469277 752000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 13590) (13591 . 13592) 13590) nil (26713 229 469276 239000) 0 nil])
([nil nil ((nil fontified t 13590 . 13591) (#("7" 0 1 (fontified t)) . 13590) (13591 . 13592) 13590) nil (26713 229 469271 611000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 13991) (t 26713 229 471239 191000) (13992 . 13993) 13991 (t 26713 229 471239 191000)) nil (26713 231 466115 293000) 0 nil])
([nil nil ((nil fontified t 13991 . 13992) (#("7" 0 1 (fontified t)) . 13991) (13992 . 13993) 13991) nil (26713 231 466109 792000) 0 nil])
([nil nil ((13684 . 13705) (13934 . 13950) (t 26713 231 468249 905000)) nil (26713 264 478547 116000) 0 nil])
([nil nil ((14154 . 14175) (14481 . 14497) (t 26713 264 480426 636000)) nil (26713 271 959797 882000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15417 . 15418) (nil fontified nil 14576 . 15418) (14576 . 15418) (#("
%% \\begin{longtable}[]{@{}
%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 2\\tabcolsep) * \\real{0.4394}}
%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 2\\tabcolsep) * \\real{0.5606}}@{}}
%% \\toprule\\noalign{}
%% \\begin{minipage}[b]{\\linewidth}\\raggedright
%% Сым диаметрі: 1,2 мм
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\raggedright
%% Сәулелік шеңбер: 3-5мм
%% \\end{minipage} \\\\
%% \\midrule\\noalign{}
%% \\endhead
%% \\bottomrule\\noalign{}
%% \\endlastfoot
%% Үдеткіш кернеу: 400 В & Сым беру бұрышы: 45° \\\\
%% Сәулелік Ток: 21ма & Электронды сәуленің тиімділігі: 0.85-0.95 \\\\
%% Қабаттың қалыңдығы: 0, 877мм & Қабат саны: 100 \\\\
%% \\multicolumn{2}{@{}>{\\raggedright\\arraybackslash}p{(\\linewidth - 2\\tabcolsep) * \\real{1.0000} + 2\\tabcolsep}@{}}{%
%% ұзындығы: 21мм ені: 21мм биіктігі: 76мм (шамамен) субстратты біртіндеп
%% қыздыру температура-Жоқ, жоғары қуатпен(+5-10мА) бірінші қабатта} \\\\
%% \\multicolumn{2}{@{}>{\\raggedright\\arraybackslash}p{(\\linewidth - 2\\tabcolsep) * \\real{1.0000} + 2\\tabcolsep}@{}}{%
%% Жылдамдық сканерлеу (5-сурет) сым беру (6-сурет)
%% 
%% Қалыптасу жылдамдығы (м\\textsuperscript{3}/сағ) 6.9×10\\^{}-5 бір қабат
%% үшін уақыт 20.8 s} \\\\
%% \\end{longtable}" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 10 (face font-lock-comment-face fontified t) 10 21 (face font-lock-comment-face fontified t latex-env-pair t) 21 28 (face font-lock-comment-face fontified t) 28 33 (face font-lock-comment-delimiter-face fontified t) 33 109 (face font-lock-comment-face fontified t) 109 114 (face font-lock-comment-delimiter-face fontified t) 114 194 (face font-lock-comment-face fontified t) 194 197 (face font-lock-comment-delimiter-face fontified t) 197 216 (face font-lock-comment-face fontified t) 216 219 (face font-lock-comment-delimiter-face fontified t) 219 225 (face font-lock-comment-face fontified t) 225 235 (face font-lock-comment-face fontified t latex-env-pair t) 235 263 (face font-lock-comment-face fontified t) 263 266 (face font-lock-comment-delimiter-face fontified t) 266 270 (face font-lock-comment-face fontified t) 270 287 (face font-lock-comment-face fontified t) 287 290 (face font-lock-comment-delimiter-face fontified t) 290 294 (face font-lock-comment-face fontified t) 294 304 (face font-lock-comment-face fontified t latex-env-pair t) 304 313 (face font-lock-comment-face fontified t) 313 323 (face font-lock-comment-face fontified t latex-env-pair t) 323 351 (face font-lock-comment-face fontified t) 351 354 (face font-lock-comment-delimiter-face fontified t) 354 357 (face font-lock-comment-face fontified t) 357 377 (face font-lock-comment-face fontified t) 377 380 (face font-lock-comment-delimiter-face fontified t) 380 384 (face font-lock-comment-face fontified t) 384 394 (face font-lock-comment-face fontified t latex-env-pair t) 394 398 (face font-lock-comment-face fontified t) 398 401 (face font-lock-comment-delimiter-face fontified t) 401 417 (face font-lock-comment-face fontified t) 417 420 (face font-lock-comment-face fontified t) 420 423 (face font-lock-comment-delimiter-face fontified t) 423 432 (face font-lock-comment-face fontified t) 432 435 (face font-lock-comment-delimiter-face fontified t) 435 457 (face font-lock-comment-face fontified t) 457 460 (face font-lock-comment-delimiter-face fontified t) 460 473 (face font-lock-comment-face fontified t) 473 476 (face font-lock-comment-delimiter-face fontified t) 476 524 (face font-lock-comment-face fontified t) 524 527 (face font-lock-comment-delimiter-face fontified t) 527 562 (face font-lock-comment-face fontified t) 562 593 (face font-lock-comment-face fontified t) 593 596 (face font-lock-comment-delimiter-face fontified t) 596 645 (face font-lock-comment-face fontified t) 645 646 (face font-lock-comment-face fontified t) 646 649 (face font-lock-comment-delimiter-face fontified t) 649 738 (face font-lock-comment-face fontified t) 738 764 (face font-lock-comment-face fontified t) 764 767 (face font-lock-comment-delimiter-face fontified t) 767 838 (face font-lock-comment-face fontified t) 838 841 (face font-lock-comment-delimiter-face fontified t) 841 910 (face font-lock-comment-face fontified t) 910 913 (face font-lock-comment-delimiter-face fontified t) 913 963 (face font-lock-comment-face fontified t) 963 1028 (face font-lock-comment-face fontified t) 1028 1031 (face font-lock-comment-delimiter-face fontified t) 1031 1078 (face font-lock-comment-face fontified t) 1078 1080 (face font-lock-comment-face fontified t) 1080 1083 (face font-lock-comment-delimiter-face fontified t) 1083 1084 (face font-lock-comment-face fontified t) 1084 1087 (face font-lock-comment-delimiter-face fontified t) 1087 1158 (face font-lock-comment-face fontified t) 1158 1161 (face font-lock-comment-delimiter-face fontified t) 1161 1172 (face font-lock-comment-face fontified t) 1172 1183 (fontified t face font-lock-comment-face) 1183 1186 (face font-lock-comment-delimiter-face fontified t) 1186 1190 (face font-lock-comment-face fontified t) 1190 1201 (face font-lock-comment-face fontified t latex-env-pair t)) . 14576) (undo-tree-id618 . -1183) (undo-tree-id619 . -1200) (undo-tree-id620 . -216) (undo-tree-id621 . -1183) 15778 (t 26713 271 962466 595000)) nil (26713 360 801875 397000) 0 nil])
([nil nil ((#("% \\usepackage{tabularray}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 26 (face font-lock-comment-face fontified t)) . 14576) (undo-tree-id596 . -26) (undo-tree-id597 . -25) (undo-tree-id598 . -26) (undo-tree-id599 . -26) (undo-tree-id600 . -26) (undo-tree-id601 . -26) (undo-tree-id602 . -26) (undo-tree-id603 . -26) (undo-tree-id604 . -26) (undo-tree-id605 . -26) (undo-tree-id606 . -26) (undo-tree-id607 . -26) (undo-tree-id608 . -26) (undo-tree-id609 . -26) (undo-tree-id610 . -26) (undo-tree-id611 . -26) (undo-tree-id612 . -26) (undo-tree-id613 . -26) (undo-tree-id614 . -26) (undo-tree-id615 . -26) (undo-tree-id616 . -26) (undo-tree-id617 . -26)) nil (26713 360 801873 72000) 0 nil])
([nil nil ((#("{\\bfseries 2-кесте. А үлгісін басып шығару параметрлері}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 17 (face (bold) fontified t) 17 55 (face (bold) fontified t) 55 57 (fontified t)) . -14519) (undo-tree-id526 . -57) (undo-tree-id527 . -57) (undo-tree-id528 . -57) (undo-tree-id529 . -57) (undo-tree-id530 . -57) (undo-tree-id531 . -57) (undo-tree-id532 . -57) (undo-tree-id533 . -57) (undo-tree-id534 . -57) (undo-tree-id535 . -57) (undo-tree-id536 . -57) (undo-tree-id537 . -57) (undo-tree-id538 . -57) (undo-tree-id539 . -57) (undo-tree-id540 . -57) (undo-tree-id541 . -57) (undo-tree-id542 . -57) (undo-tree-id543 . -57) (undo-tree-id544 . -57) (undo-tree-id545 . -57) (undo-tree-id546 . -57) (undo-tree-id547 . -57) (undo-tree-id548 . -57) (undo-tree-id549 . -57) (undo-tree-id550 . -57) (undo-tree-id551 . -57) (undo-tree-id552 . -57) (undo-tree-id553 . -57) (undo-tree-id554 . -57) (undo-tree-id555 . -57) (undo-tree-id556 . -57) (undo-tree-id557 . -57) (undo-tree-id558 . -57) (undo-tree-id559 . -57) (undo-tree-id560 . -57) (undo-tree-id561 . -57) (undo-tree-id562 . -57) (undo-tree-id563 . -57) (undo-tree-id564 . -57) (undo-tree-id565 . -57) (undo-tree-id566 . -57) (undo-tree-id567 . -57) (undo-tree-id568 . -57) (undo-tree-id569 . -57) (undo-tree-id570 . -57) (undo-tree-id571 . -57) (undo-tree-id572 . -57) (undo-tree-id573 . -57) (undo-tree-id574 . -57) (undo-tree-id575 . -57) (undo-tree-id576 . -57) (undo-tree-id577 . -57) (undo-tree-id578 . -57) (undo-tree-id579 . -57) (undo-tree-id580 . -57) (undo-tree-id581 . -57) (undo-tree-id582 . -57) (undo-tree-id583 . -57) (undo-tree-id584 . -57) (undo-tree-id585 . -57) (undo-tree-id586 . -57) (undo-tree-id587 . -57) (undo-tree-id588 . -57) (undo-tree-id589 . -57) (undo-tree-id590 . -57) (undo-tree-id591 . -57) (undo-tree-id592 . -57) (undo-tree-id593 . -57) (undo-tree-id594 . -12) (undo-tree-id595 . -57) 14576) nil (26713 360 801864 286000) 0 nil])
([nil nil ((14536 . 14537) 14519) nil (26713 360 801831 544000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14605 . 14606) (nil fontified nil 14537 . 14606) (14537 . 14606)) nil (26713 360 801826 956000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15462 . 15463) (nil fontified nil 14607 . 15463) (14607 . 15463) (#("  label = none,
  entry = none,
]{
  width = \\linewidth,
  colspec = {Q[404]Q[540]},
  row{odd} = {c},
  row{2} = {c},
  row{4} = {c},
  cell{5}{1} = {c=2}{0.944\\linewidth},
  cell{6}{1} = {c=2}{0.944\\linewidth},
  hlines,
  vlines,
}
Сым
			диаметрі: 1,2 мм & Сәулелік
			шеңбер: 3-5мм\\\\
Үдеткіш
			кернеу: 400
			В & Сым
			беру бұрышы: 45°\\\\
Сәулелік
			Ток: 21ма & Электронды
			сәуленің тиімділігі: 0.85-0.95\\\\
Қабаттың
			қалыңдығы: 0, 877мм & Қабат
			саны: 100\\\\
ұзындығы:
			21мм ені: 21мм биіктігі: 76мм (шамамен)
			субстратты біртіндеп қыздыру
			температура-Жоқ, жоғары қуатпен(+5-10мА)
			бірінші қабатта & \\\\
{
			Жылдамдық
			сканерлеу (5-сурет)
			сым беру (6-сурет)
			\\\\Қалыптасу			жылдамдығы (м\\textsuperscript{3}/сағ)			6.9×10\\^-5 бір қабат үшін уақыт 20.8 s} & 
\\end{longtblr}" 0 45 (fontified t) 45 55 (face font-lock-keyword-face fontified t) 55 161 (fontified t) 161 171 (face font-lock-keyword-face fontified t) 171 200 (fontified t) 200 210 (face font-lock-keyword-face fontified t) 210 286 (fontified t) 286 288 (face font-lock-warning-face fontified t) 288 342 (fontified t) 342 344 (face font-lock-warning-face fontified t) 344 413 (fontified t) 413 415 (face font-lock-warning-face fontified t) 415 468 (fontified t) 468 470 (face font-lock-warning-face fontified t) 470 621 (fontified t) 621 623 (face font-lock-warning-face fontified t) 623 687 (fontified t) 687 689 (face font-lock-warning-face fontified t) 689 714 (fontified t) 714 730 (face font-lock-keyword-face fontified t) 730 747 (fontified t) 747 749 (face font-lock-keyword-face fontified t) 749 784 (fontified t) 784 788 (face font-lock-keyword-face fontified t) 788 789 (fontified t latex-env-pair t) 789 797 (face font-lock-function-name-face fontified t latex-env-pair t) 797 798 (fontified t latex-env-pair t rear-nonsticky t)) . 14607) (undo-tree-id714 . -14) (undo-tree-id715 . -784) (undo-tree-id716 . -797) (undo-tree-id717 . -270) (undo-tree-id718 . -797) (undo-tree-id719 . -797) (undo-tree-id720 . -14) (undo-tree-id721 . -784) (undo-tree-id722 . -784) 15406 (t 26713 360 803938 524000)) nil (26713 402 393647 350000) 0 nil])
([nil nil ((#("\\begin{longtblr}[
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 15 (face font-lock-function-name-face latex-env-pair t fontified t) 15 16 (latex-env-pair t fontified t) 16 17 (fontified t) 17 18 (fontified t)) . 14519) (undo-tree-id699 . -17) (undo-tree-id700 . -18) (undo-tree-id701 . -18) (undo-tree-id702 . -18) (undo-tree-id703 . -18) (undo-tree-id704 . -18) (undo-tree-id705 . -18) (undo-tree-id706 . -18) (undo-tree-id707 . -18) (undo-tree-id708 . -18) (undo-tree-id709 . -18) (undo-tree-id710 . -18) (undo-tree-id711 . -18) (undo-tree-id712 . -18) (undo-tree-id713 . -18)) nil (26713 402 393644 124000) 0 nil])
([nil nil ((#("% \\usepackage{tabularray}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 26 (face font-lock-comment-face fontified t)) . 14589) (undo-tree-id695 . -26) (undo-tree-id696 . -25) (undo-tree-id697 . -26) (undo-tree-id698 . -26)) nil (26713 402 393638 103000) 0 nil])
([nil nil ((#("  caption = {\\bfseries 2-кесте. А үлгісін басып шығару параметрлері},
" 0 13 (fontified t) 13 22 (face font-lock-keyword-face fontified t) 22 67 (face (bold) fontified t) 67 68 (fontified t) 68 69 (rear-nonsticky t fontified t) 69 70 (fontified t)) . 14519) (undo-tree-id622 . -70) (undo-tree-id623 . -70) (undo-tree-id624 . -70) (undo-tree-id625 . -69) (undo-tree-id626 . 1) (undo-tree-id627 . -70) (undo-tree-id628 . -70) (undo-tree-id629 . -70) (undo-tree-id630 . -70) (undo-tree-id631 . -70) (undo-tree-id632 . -70) (undo-tree-id633 . -69) (undo-tree-id634 . -70) (undo-tree-id635 . -70) (undo-tree-id636 . -70) (undo-tree-id637 . -70) (undo-tree-id638 . -70) (undo-tree-id639 . -70) (undo-tree-id640 . -70) (undo-tree-id641 . -70) (undo-tree-id642 . -70) (undo-tree-id643 . -70) (undo-tree-id644 . -70) (undo-tree-id645 . -70) (undo-tree-id646 . -70) (undo-tree-id647 . -70) (undo-tree-id648 . -70) (undo-tree-id649 . -70) (undo-tree-id650 . -70) (undo-tree-id651 . -70) (undo-tree-id652 . -70) (undo-tree-id653 . -70) (undo-tree-id654 . -70) (undo-tree-id655 . -70) (undo-tree-id656 . -70) (undo-tree-id657 . -70) (undo-tree-id658 . -70) (undo-tree-id659 . -70) (undo-tree-id660 . -70) (undo-tree-id661 . -70) (undo-tree-id662 . -70) (undo-tree-id663 . -70) (undo-tree-id664 . -70) (undo-tree-id665 . -70) (undo-tree-id666 . -70) (undo-tree-id667 . -70) (undo-tree-id668 . -70) (undo-tree-id669 . -70) (undo-tree-id670 . -70) (undo-tree-id671 . -70) (undo-tree-id672 . -70) (undo-tree-id673 . -70) (undo-tree-id674 . -70) (undo-tree-id675 . -70) (undo-tree-id676 . -70) (undo-tree-id677 . -70) (undo-tree-id678 . -70) (undo-tree-id679 . -70) (undo-tree-id680 . -70) (undo-tree-id681 . -70) (undo-tree-id682 . -70) (undo-tree-id683 . -70) (undo-tree-id684 . -70) (undo-tree-id685 . -70) (undo-tree-id686 . -70) (undo-tree-id687 . -70) (undo-tree-id688 . -70) (undo-tree-id689 . -70) (undo-tree-id690 . -70) (undo-tree-id691 . -70) (undo-tree-id692 . -70) (undo-tree-id693 . -68) (undo-tree-id694 . -70)) nil (26713 402 393635 778000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14538 . 14539) (#("
" 0 1 (fontified nil)) . -14606) (14536 . 14607) 14519) nil (26713 402 393598 228000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict2/image191}
	\\caption*{5 - сурет. Басып шығару жылдамдығының диаграммасы}
\\end{figure}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict2/image192}
	\\caption*{6 - сурет. Басып шығару траекториясының схемасы}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 88 (face font-lock-builtin-face fontified t) 88 91 (fontified t) 91 100 (face font-lock-keyword-face fontified t) 100 152 (fontified t) 152 156 (face font-lock-keyword-face fontified t) 156 157 (fontified t latex-env-pair t) 157 163 (face font-lock-function-name-face fontified t latex-env-pair t) 163 164 (fontified t latex-env-pair t) 164 166 (fontified t) 166 172 (face font-lock-keyword-face fontified t) 172 173 (fontified t latex-env-pair t) 173 179 (face font-lock-function-name-face fontified t latex-env-pair t) 179 180 (fontified t latex-env-pair t) 180 185 (fontified t) 185 195 (face font-lock-keyword-face fontified t) 195 197 (fontified t) 197 213 (face font-lock-keyword-face fontified t) 213 223 (fontified t) 223 233 (face font-lock-keyword-face fontified t) 233 235 (fontified t) 235 254 (face font-lock-builtin-face fontified t) 254 257 (fontified t) 257 266 (face font-lock-keyword-face fontified t) 266 316 (fontified t) 316 320 (face font-lock-keyword-face fontified t) 320 321 (fontified t latex-env-pair t) 321 327 (face font-lock-function-name-face fontified t latex-env-pair t) 327 328 (fontified t latex-env-pair t) 328 329 (fontified t)) . 15422) (undo-tree-id723 . -316) (undo-tree-id724 . -316) (undo-tree-id725 . -328) (undo-tree-id726 . -316) 15738 (t 26713 402 396157 997000)) nil (26713 999 978835 750000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15887 . 15888) (nil fontified nil 15421 . 15888) (15421 . 15888)) nil (26713 999 978824 910000) 0 nil])
([nil nil ((15693 . 15694)) nil (26713 999 978824 379000) 0 nil])
([nil nil ((15481 . 15482)) nil (26713 999 978819 369000) 0 nil])
([nil nil ((15892 . 15913) (16527 . 16543) (t 26713 999 989244 684000)) nil (26713 1047 540086 943000) 0 nil])
([nil nil ((#("а в с
" 0 6 (fontified t)) . 16565) (undo-tree-id822 . -5) (undo-tree-id823 . -6) (t 26713 1048 33489 363000)) nil (26713 1117 679040 441000) 0 nil] [nil nil ((#("5" 0 1 (fontified t)) . 15695) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (t 26713 1004 211266 199000)) ((15695 . 15696) (t 26713 1030 306399 120000)) (26713 1030 303507 849000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 16565)) nil (26713 1117 679039 709000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 16564 . 16565) (#("
" 0 1 (fontified nil)) . -17034) (16564 . 17035)) nil (26713 1117 679039 309000) 0 nil])
([nil nil ((#("5 - сурет. Басып шығару жылдамдығының диаграммасы" 0 49 (fontified t)) . 16740) (undo-tree-id736 . -48) (undo-tree-id737 . -2) (undo-tree-id738 . -2) (undo-tree-id739 . -2) (undo-tree-id740 . -2) (undo-tree-id741 . -2) (undo-tree-id742 . -4) (undo-tree-id743 . -4) (undo-tree-id744 . -4) (undo-tree-id745 . -4) (undo-tree-id746 . -4) (undo-tree-id747 . -4) (undo-tree-id748 . -4) (undo-tree-id749 . -4) (undo-tree-id750 . -4) (undo-tree-id751 . -4) (undo-tree-id752 . -4) (undo-tree-id753 . -4) (undo-tree-id754 . -4) (undo-tree-id755 . -4) (undo-tree-id756 . -4) (undo-tree-id757 . -4) (undo-tree-id758 . -4) (undo-tree-id759 . -4) (undo-tree-id760 . -4) (undo-tree-id761 . -4) (undo-tree-id762 . -4) (undo-tree-id763 . -4) (undo-tree-id764 . -4) (undo-tree-id765 . -4) (undo-tree-id766 . -4) (undo-tree-id767 . -4) (undo-tree-id768 . -4) (undo-tree-id769 . -4) (undo-tree-id770 . -4) (undo-tree-id771 . -4) (undo-tree-id772 . -4) (undo-tree-id773 . -4) (undo-tree-id774 . -4) (undo-tree-id775 . -4) (undo-tree-id776 . -4) (undo-tree-id777 . -4) (undo-tree-id778 . -4) (undo-tree-id779 . -4) (undo-tree-id780 . -4) (undo-tree-id781 . -4) (undo-tree-id782 . -4) (undo-tree-id783 . -4) (undo-tree-id784 . -4) (undo-tree-id785 . -4) (undo-tree-id786 . -4) (undo-tree-id787 . -4) (undo-tree-id788 . -4) (undo-tree-id789 . -4) (undo-tree-id790 . -4) (undo-tree-id791 . -4) (undo-tree-id792 . -4) (undo-tree-id793 . -4) (undo-tree-id794 . -4) (undo-tree-id795 . -4) (undo-tree-id796 . -4) (undo-tree-id797 . -4) (undo-tree-id798 . -4) (undo-tree-id799 . -4) (undo-tree-id800 . -4) (undo-tree-id801 . -4) (undo-tree-id802 . -4) (undo-tree-id803 . -4) (undo-tree-id804 . -4) (undo-tree-id805 . -4) (undo-tree-id806 . -4) (undo-tree-id807 . -4) (undo-tree-id808 . -4) (undo-tree-id809 . -4) (undo-tree-id810 . -4) (undo-tree-id811 . -4) (undo-tree-id812 . -4) (undo-tree-id813 . -4) (undo-tree-id814 . -4) (undo-tree-id815 . -4) (undo-tree-id816 . -4) (undo-tree-id817 . -4) (undo-tree-id818 . -4) (undo-tree-id819 . -4) (undo-tree-id820 . -4) (undo-tree-id821 . -49) 16744) nil (26713 1117 679038 26000) 0 nil])
([nil nil ((#("6 - сурет. Басып шығару траекториясының схемасы" 0 47 (fontified t)) . 16904) (undo-tree-id735 . -46)) nil (26713 1117 679009 883000) 0 nil])
([nil nil ((#("191" 0 3 (face font-lock-builtin-face fontified t)) . 16717) (16720 . 16723) 16719) nil (26713 1117 679009 132000) 0 nil])
([nil nil ((nil fontified t 16717 . 16720) (nil face font-lock-builtin-face 16717 . 16720) (#("192" 0 3 (face font-lock-builtin-face fontified t)) . 16717) (16720 . 16723) 16719) nil (26713 1117 679008 641000) 0 nil])
([nil nil ((#("192" 0 3 (face font-lock-builtin-face fontified t)) . 16881) (16884 . 16887) 16883) nil (26713 1117 679007 990000) 0 nil])
([nil nil ((nil fontified t 16881 . 16884) (nil face font-lock-builtin-face 16881 . 16884) (#("193" 0 3 (face font-lock-builtin-face fontified t)) . 16881) (16884 . 16887) 16883) nil (26713 1117 679007 389000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16933 . 16934) (#("
" 0 1 (fontified nil)) . -16945) (16925 . 16946) 16924) nil (26713 1117 679006 988000) 0 nil])
([nil nil ((#("        " 0 7 (fontified nil) 7 8 (rear-nonsticky t fontified nil)) . -16930) (undo-tree-id734 . -8) (16926 . 16930) 16934) nil (26713 1117 679006 547000) 0 nil])
([nil nil ((#("{\\bfseries 6 - сурет. А-21ma металлографиялық микроскопының астындағы Микроқұрылым; B-31mA; С-33 ma}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 99 (face (bold) fontified t) 99 100 (fontified t)) . -16955) (undo-tree-id730 . -8) (undo-tree-id731 . -8) (undo-tree-id732 . -8) (undo-tree-id733 . -8) 17056) nil (26713 1117 679005 114000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17027 . 17028) (nil fontified nil 16940 . 17028) (16940 . 17028)) nil (26713 1117 679002 720000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 17043) (undo-tree-id729 . -1)) nil (26713 1117 678999 344000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16929 . 16930) (#("
" 0 1 (fontified nil)) . -17089) (16925 . 17090) 16906 (t 26713 1117 681843 536000)) nil (26713 1143 727318 168000) 0 nil])
([nil nil ((nil fontified t 17045 . 17048) (nil face font-lock-builtin-face 17045 . 17048) (#("194" 0 3 (face font-lock-builtin-face fontified t)) . 17045) (17048 . 17051) 17047) nil (26713 1143 727317 566000) 0 nil])
([nil nil ((16953 . 16954) (#("45" 0 1 (fontified t) 1 2 (fontified t)) . 16953) (undo-tree-id830 . -1) (undo-tree-id831 . -2) (undo-tree-id832 . -2) (undo-tree-id833 . -2) (undo-tree-id834 . -2) (undo-tree-id835 . -2) (undo-tree-id836 . -2) (undo-tree-id837 . -2)) nil (26713 1143 727316 705000) 0 nil])
([nil nil ((16789 . 16790) (#("45" 0 1 (fontified t) 1 2 (fontified t)) . 16789) (undo-tree-id827 . -1) (undo-tree-id828 . -2) (undo-tree-id829 . -2)) nil (26713 1143 727311 255000) 0 nil])
([nil nil ((16625 . 16626) (#("45" 0 2 (fontified t)) . 16625) (undo-tree-id824 . -1) (undo-tree-id825 . -2) (undo-tree-id826 . -2)) nil (26713 1143 727306 606000) 0 nil])
([nil nil ((16739 . 16740) (#("ф" 0 1 (fontified t)) . -16739) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) 16740 (16739 . 16740) (#("U" 0 1 (fontified t)) . -16739) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) 16740 (16739 . 16740) (t 26713 1143 729975 831000)) nil (26713 1168 540550 650000) 0 nil])
([nil nil ((16903 . 16904) (#("т" 0 1 (fontified t)) . -16903) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) 16904 (16903 . 16904)) nil (26713 1168 540546 763000) 0 nil])
([nil nil ((17067 . 17068)) nil (26713 1168 540543 827000) 0 nil])
([nil nil ((16739 . 16740) (#("а" 0 1 (fontified t)) . 16739) (undo-tree-id838 . -1)) nil (26713 1168 540539 258000) 0 nil])
([nil nil ((#("\\begin{multicols}{2}
" 0 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t) 4 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 21 (fontified t)) . 18546) (undo-tree-id872 . -20) (t 26713 1168 543101 785000)) nil (26713 1239 79111 101000) 0 nil])
([nil nil ((18546 . 18565) (20360 . 20377)) nil (26713 1239 79110 429000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (latex-env-pair t fontified t) 5 14 (face font-lock-function-name-face latex-env-pair t fontified t) 14 15 (latex-env-pair t fontified t) 15 16 (fontified t)) . 20396) (undo-tree-id871 . -15)) nil (26713 1239 79109 818000) 0 nil])
([nil nil ((#("http://www.qmed.com/mpmn/medtechpulse/fully-functional-3-d-printed-heartsooner-you-think" 0 88 (face tex-verbatim fontified t)) . 20260) (undo-tree-id869 . -87) (undo-tree-id870 . -2) 20262) nil (26713 1239 79109 177000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20342 . 20343) (nil fontified nil 20255 . 20343) (20255 . 20343) (#("\\url{}" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 20255) (undo-tree-id866 . -6) (undo-tree-id867 . -5) (undo-tree-id868 . -5)) nil (26713 1239 79107 834000) 0 nil])
([nil nil ((20255 . 20371) (#("http://www.qmed.com/mpmn/medtechpulse/fully-functional-3-d-printed-heartsooner-you-think" 0 87 (fontified t) 87 88 (rear-nonsticky t fontified t)) . 20255) (undo-tree-id863 . -88) (undo-tree-id864 . -87) (undo-tree-id865 . -87)) nil (26713 1239 79105 991000) 0 nil])
([nil nil ((#("https://ssrn.com/abstract=2501065" 0 33 (face tex-verbatim fontified t)) . 20093) (undo-tree-id861 . -32) (undo-tree-id862 . -2) 20095) nil (26713 1239 79104 117000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20120 . 20121) (nil fontified nil 20088 . 20121) (20088 . 20121) (#("\\url{}" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 20088) (undo-tree-id858 . -6) (undo-tree-id859 . -5) (undo-tree-id860 . -5)) nil (26713 1239 79102 444000) 0 nil])
([nil nil ((20088 . 20146) (#("https://ssrn.com/abstract=2501065" 0 32 (fontified t) 32 33 (rear-nonsticky t fontified t)) . 20088) (undo-tree-id855 . -33) (undo-tree-id856 . -32) (undo-tree-id857 . -32)) nil (26713 1239 79100 230000) 0 nil])
([nil nil ((20087 . 20088) (#("~" 0 1 (fontified t)) . 20087) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1)) nil (26713 1239 79094 439000) 0 nil])
([nil nil ((18314 . 18315) (t 26713 1239 89459 526000)) nil (26713 1269 644389 284000) 0 nil])
([nil nil ((19982 . 19983) (t 26713 1269 648614 348000)) nil (26713 1316 312821 590000) 0 nil])
([nil nil ((19982 . 19983)) nil (26713 1316 312816 941000) 0 nil])
([nil nil ((21186 . 21189) (t 26713 1316 315850 622000)) nil (26713 1337 756631 654000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -21188) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) 21189) nil (26713 1337 756628 7000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -21186) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (#("\\" 0 1 (face font-lock-warning-face fontified t)) . -21187) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (#("u" 0 1 (fontified t)) . -21188) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) 21189 (21188 . 21189) (t 26713 1337 758959 118000)) nil (26713 1345 232381 519000) 0 nil])
([nil nil ((21194 . 21195)) nil (26713 1345 232367 383000) 0 nil])
([nil nil ((21193 . 21194)) nil (26713 1345 232362 453000) 0 nil])
([nil nil ((21196 . 21198) (t 26713 1345 234996 939000)) nil (26713 1360 708281 45000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 21195) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (t 26713 1360 712075 220000)) nil (26713 1361 584839 583000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 21193) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (t 26713 1361 588079 650000)) nil (26713 1364 547518 294000) 0 nil])
([nil nil ((22088 . 22090) (t 26713 1364 551094 635000)) nil (26713 1372 359600 410000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-warning-face fontified nil)) . -22090) (undo-tree-id956 . -1) (22090 . 22091) (t 26713 1372 362134 134000)) nil (26713 1394 390019 990000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 22196) (t 26713 1372 362134 134000)) nil (26713 1404 564175 706000) 0 nil] [nil nil ((#("~" 0 1 (fontified t)) . 22196) (t 26713 1372 362134 134000)) ((22196 . 22197)) (26713 1394 73304 895000) 0 nil])
([nil nil ((#("https://ssrn.com/abstract=2501065" 0 33 (face tex-verbatim fontified t)) . 22201) (undo-tree-id1027 . -2) (undo-tree-id1028 . -32) (undo-tree-id1029 . -2) (undo-tree-id1030 . -1) 22202) nil (26713 1404 564175 95000) 0 nil])
([nil nil ((#("https://ssrn.com/abstract=2501065" 0 33 (face tex-verbatim fontified t)) . 22201) (undo-tree-id954 . -32) (undo-tree-id955 . -2) 22203) ((22201 . 22234)) (26713 1393 649035 393000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22228 . 22229) (nil fontified nil 22196 . 22229) (22196 . 22229) (#("\\url{}" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 22196) (undo-tree-id1022 . -6) (undo-tree-id1023 . -5) (undo-tree-id1024 . -5) (undo-tree-id1025 . -6) (undo-tree-id1026 . -5)) nil (26713 1404 564172 710000) 0 nil])
([nil nil ((22196 . 22217) (#("\\url{}" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 22196) (undo-tree-id950 . -6) (undo-tree-id951 . -5) (undo-tree-id952 . -5) (undo-tree-id953 . -5)) ((22196 . 22202) (#("\\href{\\url{}}{\\url{}}" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 12 (face tex-verbatim fontified t) 12 14 (fontified t) 14 18 (face font-lock-keyword-face fontified t) 18 21 (fontified t)) . 22196) (undo-tree-id957 . -20) (undo-tree-id958 . 21) (undo-tree-id959 . -20) (undo-tree-id960 . -12) (undo-tree-id961 . -12)) (26713 1393 308780 810000) 0 nil])
([nil nil ((22196 . 22197)) nil (26713 1404 564170 767000) 0 nil])
([nil nil ((22196 . 22197)) ((#(" " 0 1 (fontified t)) . 22196)) (26713 1393 308669 560000) 0 nil])
([nil nil ((22197 . 22255) (#("https://ssrn.com/abstract=2501065" 0 32 (fontified t) 32 33 (rear-nonsticky t fontified t)) . -22197) (undo-tree-id962 . -32) (undo-tree-id963 . -32) (undo-tree-id964 . 33) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -33) (undo-tree-id981 . -33) (undo-tree-id982 . -33) (undo-tree-id983 . -33) (undo-tree-id984 . -33) (undo-tree-id985 . -32) (undo-tree-id986 . -32) (undo-tree-id987 . -32) (undo-tree-id988 . -32) (undo-tree-id989 . -32) (undo-tree-id990 . -32) (undo-tree-id991 . -32) (undo-tree-id992 . -32) (undo-tree-id993 . -32) (undo-tree-id994 . -32) (undo-tree-id995 . -32) (undo-tree-id996 . -32) (undo-tree-id997 . -32) (undo-tree-id998 . -32) (undo-tree-id999 . -32) (undo-tree-id1000 . -32) (undo-tree-id1001 . -32) (undo-tree-id1002 . -32) (undo-tree-id1003 . -32) (undo-tree-id1004 . -32) (undo-tree-id1005 . -32) (undo-tree-id1006 . -32) (undo-tree-id1007 . -32) (undo-tree-id1008 . -32) (undo-tree-id1009 . -32) (undo-tree-id1010 . -32) (undo-tree-id1011 . -32) (undo-tree-id1012 . -32) (undo-tree-id1013 . -32) (undo-tree-id1014 . -32) (undo-tree-id1015 . -32) (undo-tree-id1016 . -32) (undo-tree-id1017 . -32) (undo-tree-id1018 . -32) (undo-tree-id1019 . -32) (undo-tree-id1020 . -32) (undo-tree-id1021 . -33) 22230) nil (26713 1404 564167 100000) 0 nil])
nil
([nil nil ((23213 . 23215) (t 26713 1404 567296 945000)) nil (26713 1428 100766 648000) 0 nil])
([nil nil ((23838 . 23840) (t 26713 1421 459382 310000)) nil (26713 1433 229120 875000) 0 nil] [nil nil ((23837 . 23912) (#(" Nomad.i.m.13@mail.ru.\\
\\end{auth" 0 24 (fontified t) 24 28 (face font-lock-keyword-face fontified t) 28 29 (fontified t latex-env-pair t) 29 33 (face font-lock-function-name-face fontified t latex-env-pair t)) . -23837) (undo-tree-id1031 . -32) (undo-tree-id1032 . -2) (undo-tree-id1033 . -2) (undo-tree-id1034 . -2) (undo-tree-id1035 . -2) (undo-tree-id1036 . -2) (undo-tree-id1037 . -2) (undo-tree-id1038 . -2) (undo-tree-id1039 . -2) (undo-tree-id1040 . -2) (undo-tree-id1041 . -2) (undo-tree-id1042 . -2) (undo-tree-id1043 . -2) (undo-tree-id1044 . -2) (undo-tree-id1045 . -2) (undo-tree-id1046 . -2) (undo-tree-id1047 . -2) (undo-tree-id1048 . -2) (undo-tree-id1049 . -2) (undo-tree-id1050 . -2) (undo-tree-id1051 . -2) (undo-tree-id1052 . -2) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -24) (undo-tree-id1069 . -33) 23870 (t 26713 1421 459382 310000)) ((23837 . 23870) (#("\\href{ Nomad.i.m.13@mail.ru.\\
\\end{auth}{ Nomad.i.m.13@mail.ru.\\
\\end{auth}" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 28 (face tex-verbatim fontified t) 28 30 (fontified t) 30 34 (face font-lock-keyword-face fontified t) 34 35 (latex-env-pair t fontified t) 35 39 (face font-lock-function-name-face latex-env-pair t fontified t) 39 40 (latex-env-pair t fontified t) 40 65 (fontified t) 65 69 (face font-lock-keyword-face fontified t) 69 70 (latex-env-pair t fontified t) 70 74 (face font-lock-function-name-face latex-env-pair t fontified t) 74 75 (latex-env-pair t fontified t)) . 23837) (undo-tree-id1070 . -74) (undo-tree-id1071 . -74) (undo-tree-id1072 . -74) (undo-tree-id1073 . -65) (undo-tree-id1074 . -74) (undo-tree-id1075 . -74)) (26713 1428 100483 796000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 23861) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1)) nil (26713 1433 229117 619000) 0 nil])
nil
([nil nil ((#("3" 0 1 (fontified t)) . 23616) (t 26713 1433 232441 800000)) nil (26713 1438 793393 458000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 23616)) nil (26713 1438 793392 316000) 0 nil])
([nil current ((#(" " 0 1 (fontified t)) . 23616)) nil (26713 1438 793386 806000) 0 nil])
nil
