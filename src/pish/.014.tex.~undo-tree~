(undo-tree-save-format-version . 1)
"7f534cd96ee7524d5cc4c099a8a9745d2632cb18"
[nil nil nil nil (26714 42954 767791 244000) 0 nil]
([nil nil ((4454 . 4455) (#(" " 0 1 (face (bold) fontified t)) . 4454) (t 26714 41038 167246 639000)) nil (26714 42954 767790 643000) 0 nil])
([nil nil ((4497 . 4498) (#(" " 0 1 (face (bold) fontified t)) . 4497) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1)) nil (26714 42954 767865 142000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4500)) nil (26714 42972 869435 959000) 0 nil] [nil nil ((#("." 0 1 (fontified t)) . 4499) (undo-tree-id0 . -1) (undo-tree-id1 . -1)) ((4499 . 4500)) (26714 42954 767781 265000) 0 nil])
([nil nil ((4512 . 4513) (#(" " 0 1 (fontified t)) . 4512)) nil (26714 42972 869435 708000) 0 nil])
nil
([nil nil ((4525 . 4526)) nil (26714 42972 869435 488000) 0 nil])
([nil nil ((4329 . 4351) (4528 . 4548) 4329) nil (26714 42972 869435 308000) 0 nil])
([nil nil ((4421 . 4422) (#("
" 0 1 (face (bold) fontified t)) . -4421) 4351) nil (26714 42972 869434 917000) 0 nil])
([nil nil ((4571 . 4591) (4724 . 4742)) nil (26714 42972 869434 496000) 0 nil])
([nil nil ((#("\\href{mailto:" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 13 (face tex-verbatim fontified t)) . 4671) (undo-tree-id207 . -12) (undo-tree-id208 . -13)) nil (26714 42972 869434 206000) 0 nil])
([nil nil ((4678 . 4679)) nil (26714 42972 869432 923000) 0 nil])
([nil nil ((4682 . 4683)) nil (26714 42972 869432 733000) 0 nil])
([nil nil ((#("}{\\nolinkurl{Gulnura\\_87\\_KZ@mail.ru}}" 0 2 (fontified t) 2 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 36 (face tex-verbatim fontified t) 36 38 (fontified t)) . 4694) (undo-tree-id201 . -37) (undo-tree-id202 . -38) (undo-tree-id203 . -38) (undo-tree-id204 . -37) (undo-tree-id205 . -38) (undo-tree-id206 . -38)) nil (26714 42972 869432 402000) 0 nil])
([nil nil ((4670 . 4671) (#("
" 0 1 (fontified t)) . -4670) (undo-tree-id200 . -1) 4669) nil (26714 42972 869595 718000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2696 . 2697) (#("
" 0 1 (fontified nil)) . -2728) (2696 . 2729)) nil (26714 42985 392277 879000) 0 nil] [nil nil ((#("e-mail: Gulnura\\_87\\_KZ@mail.ru
" 0 7 (fontified t) 7 8 (fontified t) 8 15 (fontified t) 15 17 (face font-lock-keyword-face fontified t) 17 18 (display nil fontified t) 18 19 (fontified t) 19 21 (face font-lock-keyword-face fontified t) 21 22 (display nil fontified t) 22 31 (fontified t) 31 32 (fontified t)) . 4663) (undo-tree-id18 . -31) (undo-tree-id19 . 12) (undo-tree-id20 . -31) (undo-tree-id21 . -31) (undo-tree-id22 . -22) (undo-tree-id23 . -22) (undo-tree-id24 . -23) (undo-tree-id25 . -23) (undo-tree-id26 . -23) (undo-tree-id27 . -23) (undo-tree-id28 . -23) (undo-tree-id29 . -24) (undo-tree-id30 . -24) (undo-tree-id31 . -24) (undo-tree-id32 . -24) (undo-tree-id33 . -24) (undo-tree-id34 . -24) (undo-tree-id35 . -24) (undo-tree-id36 . -24) (undo-tree-id37 . -24) (undo-tree-id38 . -24) (undo-tree-id39 . -24) (undo-tree-id40 . -24) (undo-tree-id41 . -25) (undo-tree-id42 . -25) (undo-tree-id43 . -25) (undo-tree-id44 . -25) (undo-tree-id45 . -25) (undo-tree-id46 . -25) (undo-tree-id47 . -25) (undo-tree-id48 . -25) (undo-tree-id49 . -25) (undo-tree-id50 . -25) (undo-tree-id51 . -25) (undo-tree-id52 . -25) (undo-tree-id53 . -25) (undo-tree-id54 . -25) (undo-tree-id55 . -25) (undo-tree-id56 . -25) (undo-tree-id57 . -25) (undo-tree-id58 . -26) (undo-tree-id59 . -26) (undo-tree-id60 . -26) (undo-tree-id61 . -26) (undo-tree-id62 . -26) (undo-tree-id63 . -27) (undo-tree-id64 . -27) (undo-tree-id65 . -27) (undo-tree-id66 . -27) (undo-tree-id67 . -27) (undo-tree-id68 . -28) (undo-tree-id69 . -28) (undo-tree-id70 . -28) (undo-tree-id71 . -28) (undo-tree-id72 . -28) (undo-tree-id73 . -29) (undo-tree-id74 . -29) (undo-tree-id75 . -29) (undo-tree-id76 . -29) (undo-tree-id77 . -29) (undo-tree-id78 . -30) (undo-tree-id79 . -30) (undo-tree-id80 . -30) (undo-tree-id81 . -30) (undo-tree-id82 . -30) (undo-tree-id83 . -31) (undo-tree-id84 . -31) (undo-tree-id85 . -31) (undo-tree-id86 . -31) (undo-tree-id87 . -31) (undo-tree-id88 . -31) (undo-tree-id89 . -31) (undo-tree-id90 . -31) (undo-tree-id91 . -31) (undo-tree-id92 . -31) (undo-tree-id93 . -31) (undo-tree-id94 . -31) (undo-tree-id95 . -31) (undo-tree-id96 . -31) (undo-tree-id97 . -31) (undo-tree-id98 . -31) (undo-tree-id99 . -31) (undo-tree-id100 . -31) (undo-tree-id101 . -31) (undo-tree-id102 . -31) (undo-tree-id103 . -30) (undo-tree-id104 . -30) (undo-tree-id105 . -30) (undo-tree-id106 . -30) (undo-tree-id107 . -30) (undo-tree-id108 . -30) (undo-tree-id109 . -30) (undo-tree-id110 . -30) (undo-tree-id111 . -30) (undo-tree-id112 . -30) (undo-tree-id113 . -30) (undo-tree-id114 . -30) (undo-tree-id115 . -30) (undo-tree-id116 . -30) (undo-tree-id117 . -30) (undo-tree-id118 . -30) (undo-tree-id119 . -30) (undo-tree-id120 . -30) (undo-tree-id121 . -30) (undo-tree-id122 . -30) (undo-tree-id123 . -6) (undo-tree-id124 . -6) (undo-tree-id125 . -6) (undo-tree-id126 . -6) (undo-tree-id127 . -6) (undo-tree-id128 . -6) (undo-tree-id129 . -6) (undo-tree-id130 . -6) (undo-tree-id131 . -6) (undo-tree-id132 . -6) (undo-tree-id133 . -6) (undo-tree-id134 . -6) (undo-tree-id135 . -6) (undo-tree-id136 . -6) (undo-tree-id137 . -6) (undo-tree-id138 . -6) (undo-tree-id139 . -6) (undo-tree-id140 . -7) (undo-tree-id141 . -7) (undo-tree-id142 . -7) (undo-tree-id143 . -7) (undo-tree-id144 . -7) (undo-tree-id145 . -7) (undo-tree-id146 . -7) (undo-tree-id147 . -7) (undo-tree-id148 . -7) (undo-tree-id149 . -7) (undo-tree-id150 . -7) (undo-tree-id151 . -7) (undo-tree-id152 . -7) (undo-tree-id153 . -7) (undo-tree-id154 . -7) (undo-tree-id155 . -7) (undo-tree-id156 . -7) (undo-tree-id157 . -7) (undo-tree-id158 . -7) (undo-tree-id159 . -7) (undo-tree-id160 . -7) (undo-tree-id161 . -7) (undo-tree-id162 . -7) (undo-tree-id163 . -7) (undo-tree-id164 . -7) (undo-tree-id165 . -7) (undo-tree-id166 . -7) (undo-tree-id167 . -7) (undo-tree-id168 . -7) (undo-tree-id169 . -7) (undo-tree-id170 . -7) (undo-tree-id171 . -7) (undo-tree-id172 . -7) (undo-tree-id173 . -7) (undo-tree-id174 . -7) (undo-tree-id175 . -7) (undo-tree-id176 . -7) (undo-tree-id177 . -7) (undo-tree-id178 . -7) (undo-tree-id179 . -7) (undo-tree-id180 . -7) (undo-tree-id181 . -7) (undo-tree-id182 . -7) (undo-tree-id183 . -7) (undo-tree-id184 . -7) (undo-tree-id185 . -7) (undo-tree-id186 . -7) (undo-tree-id187 . -7) (undo-tree-id188 . -7) (undo-tree-id189 . -7) (undo-tree-id190 . -7) (undo-tree-id191 . -7) (undo-tree-id192 . -7) (undo-tree-id193 . -7) (undo-tree-id194 . -7) (undo-tree-id195 . -31) (undo-tree-id196 . -7) (undo-tree-id197 . -7) (undo-tree-id198 . -7) (undo-tree-id199 . -32) 4670) ((4663 . 4695)) (26714 42972 869424 658000) 0 nil])
([nil nil ((#("e-mail:
" 0 8 (fontified t)) . 2729) (undo-tree-id212 . -8) (undo-tree-id213 . -7)) nil (26714 42985 392277 448000) 0 nil])
nil
([nil nil ((#("\\href{mailto:Gulnura_87_KZ@mail.ru}{\\nolinkurl{Gulnura\\_87\\_KZ@mail.ru}}
" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 34 (face tex-verbatim fontified t) 34 36 (fontified t) 36 46 (face font-lock-keyword-face fontified t) 46 47 (fontified t) 47 70 (face tex-verbatim fontified t) 70 72 (fontified t) 72 73 (fontified t)) . 2729) (undo-tree-id209 . -72) (undo-tree-id210 . -73) (undo-tree-id211 . -73)) nil (26714 42985 392430 525000) 0 nil])
([nil nil ((nil rear-nonsticky nil 814 . 815) (#("
" 0 1 (fontified nil)) . -846) (814 . 847) 742) nil (26714 43044 980514 498000) 0 nil] [nil nil ((nil rear-nonsticky nil 815 . 816) (#("
" 0 1 (fontified nil)) . -847) (815 . 848)) ((#("
e-mail: Gulnura\\_87\\_KZ@mail.ru
" 0 1 (rear-nonsticky nil fontified nil) 1 8 (fontified nil) 8 9 (fontified nil) 9 16 (fontified nil) 16 18 (face font-lock-keyword-face fontified nil) 18 19 (fontified nil display nil) 19 20 (fontified nil) 20 22 (face font-lock-keyword-face fontified nil) 22 23 (fontified nil display nil) 23 32 (fontified nil) 32 33 (fontified nil)) . 815) (undo-tree-id214 . -1) (undo-tree-id215 . -32) (847 . 848) (nil rear-nonsticky t 815 . 816)) (26714 42985 392263 703000) 0 nil])
([nil nil ((#("\\href{mailto:Gulnura_87_KZ@mail.ru}{\\nolinkurl{Gulnura\\_87\\_KZ@mail.ru}}
" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 34 (face tex-verbatim fontified t) 34 36 (fontified t) 36 46 (face font-lock-keyword-face fontified t) 46 47 (fontified t) 47 70 (face tex-verbatim fontified t) 70 72 (fontified t) 72 73 (rear-nonsticky t fontified t)) . 742) (undo-tree-id277 . -72)) nil (26714 43044 980514 27000) 0 nil])
nil
([nil nil ((#("e-mail: " 0 7 (fontified t) 7 8 (fontified t)) . 742) (undo-tree-id276 . -7)) nil (26714 43044 980513 506000) 0 nil])
([nil nil ((741 . 742) (#("
" 0 1 (fontified t)) . -741) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) 681) nil (26714 43044 980512 915000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 720)) nil (26714 43044 980510 721000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 681) (undo-tree-id270 . -10)) nil (26714 43044 980510 440000) 0 nil])
([nil nil ((693 . 694) (682 . 693) (#("ragge" 0 5 (face font-lock-keyword-face fontified t)) . -682) (undo-tree-id267 . -5) (undo-tree-id268 . -5) (undo-tree-id269 . -5) 687 (681 . 687)) nil (26714 43044 980509 649000) 0 nil])
([nil nil ((613 . 633) (767 . 785) 613) nil (26714 43044 980508 417000) 0 nil])
([nil nil ((2613 . 2633) (2719 . 2737) 2613) nil (26714 43044 980508 156000) 0 nil])
([nil nil ((2404 . 2426) (2612 . 2632) 2404) nil (26714 43044 980507 896000) 0 nil])
([nil nil ((#(" " 0 1 (face (bold) fontified t)) . 2561)) nil (26714 43044 980507 545000) 0 nil])
([nil nil ((2558 . 2559) (#(" " 0 1 (face (bold) fontified t)) . 2558)) nil (26714 43044 980507 214000) 0 nil])
([nil nil ((#(" " 0 1 (face (bold) fontified t)) . 2604)) nil (26714 43044 980506 944000) 0 nil])
([nil nil ((2601 . 2602) (#(" " 0 1 (fontified t)) . 2601)) nil (26714 43044 980506 643000) 0 nil])
([nil nil ((2630 . 2631)) nil (26714 43044 980506 403000) 0 nil])
([nil nil ((nil rear-nonsticky nil 151 . 152) (#("
" 0 1 (fontified nil)) . -235) (151 . 236)) nil (26714 43044 980506 92000) 0 nil])
([nil nil ((#("{\\bfseries Г.Е.
Исламова}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/pish2/image10}
	\\caption*{}
\\end{figure}
{\\bfseries \\textsuperscript{\\envelope },
А. А.
Утебаева}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/pish2/image10}
	\\caption*{}
\\end{figure}

{\\bfseries ,
А.У.Шингисов}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/pish2/image10}
	\\caption*{}
\\end{figure}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 24 (face (bold) fontified t) 24 26 (fontified t) 26 32 (face font-lock-keyword-face fontified t) 32 33 (latex-env-pair t fontified t) 33 39 (face font-lock-function-name-face latex-env-pair t fontified t) 39 40 (latex-env-pair t fontified t) 40 45 (fontified t) 45 55 (face font-lock-keyword-face fontified t) 55 57 (fontified t) 57 73 (face font-lock-keyword-face fontified t) 73 83 (fontified t) 83 93 (face font-lock-keyword-face fontified t) 93 95 (fontified t) 95 114 (face font-lock-builtin-face fontified t) 114 117 (fontified t) 117 126 (face font-lock-keyword-face fontified t) 126 129 (fontified t) 129 133 (face font-lock-keyword-face fontified t) 133 134 (latex-env-pair t fontified t) 134 140 (face font-lock-function-name-face latex-env-pair t fontified t) 140 141 (latex-env-pair t fontified t) 141 143 (fontified t) 143 152 (face font-lock-keyword-face fontified t) 152 153 (face (bold) fontified t) 153 169 (face (font-lock-keyword-face bold) fontified t) 169 170 (face (bold) fontified t) 170 179 (face (font-lock-keyword-face bold) fontified t) 179 197 (face (bold) fontified t) 197 199 (fontified t) 199 205 (face font-lock-keyword-face fontified t) 205 206 (latex-env-pair t fontified t) 206 212 (face font-lock-function-name-face latex-env-pair t fontified t) 212 213 (latex-env-pair t fontified t) 213 218 (fontified t) 218 228 (face font-lock-keyword-face fontified t) 228 230 (fontified t) 230 246 (face font-lock-keyword-face fontified t) 246 256 (fontified t) 256 266 (face font-lock-keyword-face fontified t) 266 268 (fontified t) 268 287 (face font-lock-builtin-face fontified t) 287 290 (fontified t) 290 299 (face font-lock-keyword-face fontified t) 299 302 (fontified t) 302 306 (face font-lock-keyword-face fontified t) 306 307 (latex-env-pair t fontified t) 307 313 (face font-lock-function-name-face latex-env-pair t fontified t) 313 314 (latex-env-pair t fontified t) 314 317 (fontified t) 317 326 (face font-lock-keyword-face fontified t) 326 341 (face (bold) fontified t) 341 343 (fontified t) 343 349 (face font-lock-keyword-face fontified t) 349 350 (latex-env-pair t fontified t) 350 356 (face font-lock-function-name-face latex-env-pair t fontified t) 356 357 (latex-env-pair t fontified t) 357 362 (fontified t) 362 372 (face font-lock-keyword-face fontified t) 372 374 (fontified t) 374 390 (face font-lock-keyword-face fontified t) 390 400 (fontified t) 400 410 (face font-lock-keyword-face fontified t) 410 412 (fontified t) 412 431 (face font-lock-builtin-face fontified t) 431 434 (fontified t) 434 443 (face font-lock-keyword-face fontified t) 443 446 (fontified t) 446 450 (face font-lock-keyword-face fontified t) 450 451 (latex-env-pair t fontified t) 451 457 (face font-lock-function-name-face latex-env-pair t fontified t) 457 458 (latex-env-pair t fontified t) 458 459 (fontified t)) . 236) (undo-tree-id253 . -446) (undo-tree-id254 . -26) (undo-tree-id255 . -129) (undo-tree-id256 . -199) (undo-tree-id257 . -302) (undo-tree-id258 . -343) (undo-tree-id259 . -446) (undo-tree-id260 . -458) (undo-tree-id261 . -446) (undo-tree-id262 . -302) (undo-tree-id263 . -26) (undo-tree-id264 . -129) (undo-tree-id265 . -199) (undo-tree-id266 . -446) 682) nil (26714 43044 980505 581000) 0 nil])
([nil nil ((235 . 236) 234) nil (26714 43044 980501 744000) 0 nil])
([nil nil ((266 . 278) (251 . 265) (236 . 250)) nil (26714 43044 980501 444000) 0 nil])
([nil nil ((249 . 250) (#("\\" 0 1 (fontified t)) . 249)) nil (26714 43044 980501 103000) 0 nil])
([nil nil ((265 . 266) (#("
" 0 1 (fontified t)) . -265) (250 . 251) (#("
" 0 1 (fontified t)) . -250) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . 1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) 249) nil (26714 43044 980500 502000) 0 nil])
([nil nil ((#("Г.Е. Исламова, А.А. Утебаева, А.У.Шингисов" 0 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 29 (fontified t) 29 30 (fontified t) 30 42 (fontified t)) . 236) (undo-tree-id224 . -14) (undo-tree-id225 . -14) (undo-tree-id226 . -14) (undo-tree-id227 . -14) (undo-tree-id228 . -14) (undo-tree-id229 . -14) (undo-tree-id230 . -14) (undo-tree-id231 . -14) (undo-tree-id232 . -41) (undo-tree-id233 . 27) (undo-tree-id234 . -14) (undo-tree-id235 . -14) (undo-tree-id236 . -14) (undo-tree-id237 . -14) (undo-tree-id238 . -14)) nil (26714 43044 980494 430000) 0 nil])
([nil nil ((nil rear-nonsticky nil 65 . 66) (nil fontified nil 24 . 66) (24 . 66)) nil (26714 43044 980488 509000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -44) (undo-tree-id219 . -1) 45 (43 . 45) (25 . 43) (#("section" 0 7 (face font-lock-keyword-face fontified t)) . -25) (undo-tree-id220 . -7) (undo-tree-id221 . -7) (undo-tree-id222 . -7) 32 (29 . 32) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -29) (undo-tree-id223 . -1) (24 . 30)) nil (26714 43044 980487 347000) 0 nil])
([nil nil ((86 . 87)) nil (26714 43044 980484 292000) 0 nil])
([nil nil ((#("\\bfseries " 0 9 (face font-lock-keyword-face fontified t) 9 10 (face (bold) fontified t)) . 88) (undo-tree-id217 . -9) (undo-tree-id218 . -10)) nil (26714 43044 980483 861000) 0 nil])
([nil nil ((146 . 147) (#("
" 0 1 (fontified t)) . -146) (undo-tree-id216 . -1) 88) nil (26714 43044 980482 7000) 0 nil])
([nil nil ((30878 . 30879) 146) nil (26714 43044 980470 596000) 0 nil])
([nil nil ((24 . 46) (289 . 309) (t 26714 43044 982680 675000)) nil (26714 43056 821551 61000) 0 nil])
([nil nil ((6018 . 6039) (9380 . 9396) (t 26714 43056 824618 896000)) nil (26714 43095 24293 792000) 0 nil])
([nil nil ((9490 . 9491) (#("
" 0 1 (fontified t face (bold))) . -9490) 9418) nil (26714 43095 24289 995000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10543 . 10544) (nil fontified nil 9502 . 10544) (9502 . 10544) (#("
%% \\begin{longtable}[]{@{}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 6\\tabcolsep) * \\real{0.1900}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 6\\tabcolsep) * \\real{0.3094}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 6\\tabcolsep) * \\real{0.2657}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 6\\tabcolsep) * \\real{0.2349}}@{}}
%% \\toprule\\noalign{}
%% \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Добавка}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Основные преимущества}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Ограничения}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Лучший уровень использования, (\\%)}
%% \\end{minipage} \\\\
%% \\midrule\\noalign{}
%% \\endhead
%% \\bottomrule\\noalign{}
%% \\endlastfoot
%% Порошок из томатных отходов (TWP) & Высокое содержание клетчатки,
%% антиоксидантов, удержание влаги, натуральный красный цвет & Чрезмерное
%% использование может повлиять на текстуру & 4--6\\% \\\\
%% Морковный порошок & Добавляет β-каротин и натуральную сладость & Может
%% слишком сильно смягчить текстуру & 3--5\\% \\\\
%% Свекольный порошок & Сильный натуральный красный цвет, нитраты для
%% здоровья сердца & Может перебить вкус & 2--4\\% \\\\
%% Тыквенный порошок & Высокое содержание клетчатки и витамина А & Может
%% значительно изменить текстуру мясного хлеба & 3--6\\% \\\\
%% Яблочные выжимки & Улучшает удержание влаги и придает легкую сладость &
%% Может сделать мясной рулет немного мягче & 3--7\\% \\\\
%% \\end{longtable}" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 10 (face font-lock-comment-face fontified t) 10 21 (face font-lock-comment-face fontified t latex-env-pair t) 21 28 (face font-lock-comment-face fontified t) 28 33 (face font-lock-comment-delimiter-face fontified t) 33 107 (face font-lock-comment-face fontified t) 107 112 (face font-lock-comment-delimiter-face fontified t) 112 186 (face font-lock-comment-face fontified t) 186 191 (face font-lock-comment-delimiter-face fontified t) 191 265 (face font-lock-comment-face fontified t) 265 270 (face font-lock-comment-delimiter-face fontified t) 270 348 (face font-lock-comment-face fontified t) 348 351 (face font-lock-comment-delimiter-face fontified t) 351 370 (face font-lock-comment-face fontified t) 370 373 (face font-lock-comment-delimiter-face fontified t) 373 379 (face font-lock-comment-face fontified t) 379 389 (face font-lock-comment-face fontified t latex-env-pair t) 389 415 (face font-lock-comment-face fontified t) 415 418 (face font-lock-comment-delimiter-face fontified t) 418 438 (face font-lock-comment-face fontified t) 438 441 (face font-lock-comment-delimiter-face fontified t) 441 445 (face font-lock-comment-face fontified t) 445 455 (face font-lock-comment-face fontified t latex-env-pair t) 455 464 (face font-lock-comment-face fontified t) 464 474 (face font-lock-comment-face fontified t latex-env-pair t) 474 500 (face font-lock-comment-face fontified t) 500 503 (face font-lock-comment-delimiter-face fontified t) 503 537 (face font-lock-comment-face fontified t) 537 540 (face font-lock-comment-delimiter-face fontified t) 540 544 (face font-lock-comment-face fontified t) 544 554 (face font-lock-comment-face fontified t latex-env-pair t) 554 563 (face font-lock-comment-face fontified t) 563 573 (face font-lock-comment-face fontified t latex-env-pair t) 573 599 (face font-lock-comment-face fontified t) 599 602 (face font-lock-comment-delimiter-face fontified t) 602 626 (face font-lock-comment-face fontified t) 626 629 (face font-lock-comment-delimiter-face fontified t) 629 633 (face font-lock-comment-face fontified t) 633 643 (face font-lock-comment-face fontified t latex-env-pair t) 643 652 (face font-lock-comment-face fontified t) 652 662 (face font-lock-comment-face fontified t latex-env-pair t) 662 688 (face font-lock-comment-face fontified t) 688 691 (face font-lock-comment-delimiter-face fontified t) 691 738 (face font-lock-comment-face fontified t) 738 741 (face font-lock-comment-delimiter-face fontified t) 741 745 (face font-lock-comment-face fontified t) 745 755 (face font-lock-comment-face fontified t latex-env-pair t) 755 759 (face font-lock-comment-face fontified t) 759 762 (face font-lock-comment-delimiter-face fontified t) 762 781 (face font-lock-comment-face fontified t) 781 784 (face font-lock-comment-delimiter-face fontified t) 784 793 (face font-lock-comment-face fontified t) 793 796 (face font-lock-comment-delimiter-face fontified t) 796 818 (face font-lock-comment-face fontified t) 818 821 (face font-lock-comment-delimiter-face fontified t) 821 834 (face font-lock-comment-face fontified t) 834 837 (face font-lock-comment-delimiter-face fontified t) 837 891 (face font-lock-comment-face fontified t) 891 903 (fontified t face font-lock-comment-face) 903 906 (face font-lock-comment-delimiter-face fontified t) 906 977 (face font-lock-comment-face fontified t) 977 980 (face font-lock-comment-delimiter-face fontified t) 980 1033 (face font-lock-comment-face fontified t) 1033 1036 (face font-lock-comment-delimiter-face fontified t) 1036 1107 (face font-lock-comment-face fontified t) 1107 1110 (face font-lock-comment-delimiter-face fontified t) 1110 1155 (face font-lock-comment-face fontified t) 1155 1158 (face font-lock-comment-delimiter-face fontified t) 1158 1225 (face font-lock-comment-face fontified t) 1225 1228 (face font-lock-comment-delimiter-face fontified t) 1228 1278 (face font-lock-comment-face fontified t) 1278 1281 (face font-lock-comment-delimiter-face fontified t) 1281 1351 (face font-lock-comment-face fontified t) 1351 1354 (face font-lock-comment-delimiter-face fontified t) 1354 1410 (face font-lock-comment-face fontified t) 1410 1413 (face font-lock-comment-delimiter-face fontified t) 1413 1485 (face font-lock-comment-face fontified t) 1485 1488 (face font-lock-comment-delimiter-face fontified t) 1488 1489 (face font-lock-comment-face fontified t) 1489 1541 (face font-lock-comment-face fontified t) 1541 1544 (face font-lock-comment-delimiter-face fontified t) 1544 1548 (face font-lock-comment-face fontified t) 1548 1559 (face font-lock-comment-face fontified t latex-env-pair t)) . 9502) (undo-tree-id285 . -1558) (undo-tree-id286 . -1541) (undo-tree-id287 . -1541) 11062 (t 26714 43095 26419 538000)) nil (26714 43120 805628 647000) 0 nil])
([nil nil ((#("% \\usepackage{tabularray}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 26 (face font-lock-comment-face fontified t)) . 9502) (undo-tree-id284 . -25)) nil (26714 43120 805627 144000) 0 nil])
([nil nil ((#("{\\bfseries Таблица 1 - Применение овощных порошков в производстве мясных продуктов}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 42 (face (bold) fontified t) 42 72 (face (bold) fontified t) 72 73 (face (bold) fontified t) 73 82 (face (bold) fontified t) 82 84 (fontified t)) . -9418) (undo-tree-id278 . -84) (undo-tree-id279 . -84) (undo-tree-id280 . -84) (undo-tree-id281 . -84) (undo-tree-id282 . -72) (undo-tree-id283 . -84) 9502) nil (26714 43120 805626 253000) 0 nil])
([nil nil ((9435 . 9436) 9418) nil (26714 43120 805615 893000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9531 . 9532) (nil fontified nil 9436 . 9532) (9436 . 9532)) nil (26714 43120 805612 276000) 0 nil])
([nil nil ((10533 . 10554) (15304 . 15320) (t 26714 43120 808284 950000)) nil (26714 43153 327816 572000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16219 . 16220) (nil fontified nil 15399 . 16220) (15399 . 16220) (#("
%% \\begin{longtable}[]{@{}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.0714}}
%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.2755}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.1633}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.1633}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.1633}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.1634}}@{}}
%% \\toprule\\noalign{}
%% \\begin{minipage}[b]{\\linewidth}\\centering
%% № п\\textbackslash п
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% Сырье, кг на 100 г сырья
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% №1
%% 
%% (контр)
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% Образец
%% 
%% №1
%% 
%% (10\\%)
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% Образец
%% 
%% №2
%% 
%% (15\\%)
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% Образец
%% 
%% №3
%% 
%% (20\\%)
%% \\end{minipage} \\\\
%% \\midrule\\noalign{}
%% \\endhead
%% \\bottomrule\\noalign{}
%% \\endlastfoot
%% 1 & Баранина & 315 & 310 & 307,5 & 305 \\\\
%% 2 & Индейка & 315 & 310 & 307,5 & 305 \\\\
%% 3 & Яйца куриные & 120 & 120 & 120 & 120 \\\\
%% 4 & Лук репчатый свежий & 84 & 84 & 84 & 84 \\\\
%% 5 & Хлеб из пшеничной муки & 100 & 100 & 100 & 100 \\\\
%% 6 & Вода & 60 & 60 & 60 & 60 \\\\
%% 7 & Гималайская соль & 6 & 6 & 6 & 6 \\\\
%% 8 & Черный перец & 2 & 2 & 2 & 2 \\\\
%% 9 & Порошок томатного жмыха & - & 10 & 15 & 20 \\\\
%% \\end{longtable}" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 10 (face font-lock-comment-face fontified t) 10 21 (face font-lock-comment-face fontified t latex-env-pair t) 21 28 (face font-lock-comment-face fontified t) 28 33 (face font-lock-comment-delimiter-face fontified t) 33 108 (face font-lock-comment-face fontified t) 108 113 (face font-lock-comment-delimiter-face fontified t) 113 190 (face font-lock-comment-face fontified t) 190 195 (face font-lock-comment-delimiter-face fontified t) 195 266 (face font-lock-comment-face fontified t) 266 270 (face font-lock-comment-face fontified t) 270 275 (face font-lock-comment-delimiter-face fontified t) 275 350 (face font-lock-comment-face fontified t) 350 355 (face font-lock-comment-delimiter-face fontified t) 355 430 (face font-lock-comment-face fontified t) 430 435 (face font-lock-comment-delimiter-face fontified t) 435 514 (face font-lock-comment-face fontified t) 514 517 (face font-lock-comment-delimiter-face fontified t) 517 536 (face font-lock-comment-face fontified t) 536 539 (face font-lock-comment-delimiter-face fontified t) 539 545 (face font-lock-comment-face fontified t) 545 555 (face font-lock-comment-face fontified t latex-env-pair t) 555 581 (face font-lock-comment-face fontified t) 581 584 (face font-lock-comment-delimiter-face fontified t) 584 604 (face font-lock-comment-face fontified t) 604 607 (face font-lock-comment-delimiter-face fontified t) 607 611 (face font-lock-comment-face fontified t) 611 621 (face font-lock-comment-face fontified t latex-env-pair t) 621 630 (face font-lock-comment-face fontified t) 630 640 (face font-lock-comment-face fontified t latex-env-pair t) 640 666 (face font-lock-comment-face fontified t) 666 669 (face font-lock-comment-delimiter-face fontified t) 669 694 (face font-lock-comment-face fontified t) 694 697 (face font-lock-comment-delimiter-face fontified t) 697 701 (face font-lock-comment-face fontified t) 701 711 (face font-lock-comment-face fontified t latex-env-pair t) 711 720 (face font-lock-comment-face fontified t) 720 730 (face font-lock-comment-face fontified t latex-env-pair t) 730 756 (face font-lock-comment-face fontified t) 756 759 (face font-lock-comment-delimiter-face fontified t) 759 762 (face font-lock-comment-face fontified t) 762 765 (face font-lock-comment-delimiter-face fontified t) 765 766 (face font-lock-comment-face fontified t) 766 769 (face font-lock-comment-delimiter-face fontified t) 769 777 (face font-lock-comment-face fontified t) 777 780 (face font-lock-comment-delimiter-face fontified t) 780 784 (face font-lock-comment-face fontified t) 784 794 (face font-lock-comment-face fontified t latex-env-pair t) 794 803 (face font-lock-comment-face fontified t) 803 813 (face font-lock-comment-face fontified t latex-env-pair t) 813 839 (face font-lock-comment-face fontified t) 839 842 (face font-lock-comment-delimiter-face fontified t) 842 850 (face font-lock-comment-face fontified t) 850 853 (face font-lock-comment-delimiter-face fontified t) 853 854 (face font-lock-comment-face fontified t) 854 857 (face font-lock-comment-delimiter-face fontified t) 857 860 (face font-lock-comment-face fontified t) 860 863 (face font-lock-comment-delimiter-face fontified t) 863 864 (face font-lock-comment-face fontified t) 864 867 (face font-lock-comment-delimiter-face fontified t) 867 874 (face font-lock-comment-face fontified t) 874 877 (face font-lock-comment-delimiter-face fontified t) 877 881 (fontified t face font-lock-comment-face) 881 891 (fontified t face font-lock-comment-face latex-env-pair t) 891 900 (fontified t face font-lock-comment-face) 900 910 (fontified t face font-lock-comment-face latex-env-pair t) 910 936 (fontified t face font-lock-comment-face) 936 939 (face font-lock-comment-delimiter-face fontified t) 939 947 (face font-lock-comment-face fontified t) 947 950 (face font-lock-comment-delimiter-face fontified t) 950 951 (face font-lock-comment-face fontified t) 951 954 (face font-lock-comment-delimiter-face fontified t) 954 957 (face font-lock-comment-face fontified t) 957 960 (face font-lock-comment-delimiter-face fontified t) 960 961 (face font-lock-comment-face fontified t) 961 964 (face font-lock-comment-delimiter-face fontified t) 964 971 (face font-lock-comment-face fontified t) 971 974 (face font-lock-comment-delimiter-face fontified t) 974 978 (face font-lock-comment-face fontified t) 978 988 (face font-lock-comment-face fontified t latex-env-pair t) 988 997 (face font-lock-comment-face fontified t) 997 1007 (face font-lock-comment-face fontified t latex-env-pair t) 1007 1033 (face font-lock-comment-face fontified t) 1033 1036 (face font-lock-comment-delimiter-face fontified t) 1036 1044 (face font-lock-comment-face fontified t) 1044 1047 (face font-lock-comment-delimiter-face fontified t) 1047 1048 (face font-lock-comment-face fontified t) 1048 1051 (face font-lock-comment-delimiter-face fontified t) 1051 1054 (face font-lock-comment-face fontified t) 1054 1057 (face font-lock-comment-delimiter-face fontified t) 1057 1058 (face font-lock-comment-face fontified t) 1058 1061 (face font-lock-comment-delimiter-face fontified t) 1061 1068 (face font-lock-comment-face fontified t) 1068 1071 (face font-lock-comment-delimiter-face fontified t) 1071 1075 (face font-lock-comment-face fontified t) 1075 1085 (face font-lock-comment-face fontified t latex-env-pair t) 1085 1089 (face font-lock-comment-face fontified t) 1089 1092 (face font-lock-comment-delimiter-face fontified t) 1092 1111 (face font-lock-comment-face fontified t) 1111 1114 (face font-lock-comment-delimiter-face fontified t) 1114 1123 (face font-lock-comment-face fontified t) 1123 1126 (face font-lock-comment-delimiter-face fontified t) 1126 1148 (face font-lock-comment-face fontified t) 1148 1151 (face font-lock-comment-delimiter-face fontified t) 1151 1164 (face font-lock-comment-face fontified t) 1164 1167 (face font-lock-comment-delimiter-face fontified t) 1167 1209 (face font-lock-comment-face fontified t) 1209 1212 (face font-lock-comment-delimiter-face fontified t) 1212 1253 (face font-lock-comment-face fontified t) 1253 1256 (face font-lock-comment-delimiter-face fontified t) 1256 1300 (face font-lock-comment-face fontified t) 1300 1303 (face font-lock-comment-delimiter-face fontified t) 1303 1350 (face font-lock-comment-face fontified t) 1350 1353 (face font-lock-comment-delimiter-face fontified t) 1353 1407 (face font-lock-comment-face fontified t) 1407 1410 (face font-lock-comment-delimiter-face fontified t) 1410 1442 (face font-lock-comment-face fontified t) 1442 1445 (face font-lock-comment-delimiter-face fontified t) 1445 1485 (face font-lock-comment-face fontified t) 1485 1488 (face font-lock-comment-delimiter-face fontified t) 1488 1524 (face font-lock-comment-face fontified t) 1524 1527 (face font-lock-comment-delimiter-face fontified t) 1527 1577 (face font-lock-comment-face fontified t) 1577 1580 (face font-lock-comment-delimiter-face fontified t) 1580 1584 (face font-lock-comment-face fontified t) 1584 1595 (face font-lock-comment-face fontified t latex-env-pair t)) . 15399) (undo-tree-id294 . -1594) (undo-tree-id295 . -1577) (undo-tree-id296 . -666) (undo-tree-id297 . -1577) 16995 (t 26714 43153 330136 267000)) nil (26714 43176 874534 280000) 0 nil])
([nil nil ((#("% \\usepackage{tabularray}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 26 (face font-lock-comment-face fontified t)) . 15399) (undo-tree-id293 . -25)) nil (26714 43176 874531 245000) 0 nil])
([nil nil ((#("{\\bfseries Таблица 2 - Рецептура образцов мясного хлеба}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 55 (face (bold) fontified t) 55 57 (fontified t)) . -15342) (undo-tree-id288 . -57) (undo-tree-id289 . -57) (undo-tree-id290 . -57) (undo-tree-id291 . -57) (undo-tree-id292 . -57) 15399) nil (26714 43176 874530 133000) 0 nil])
([nil nil ((15359 . 15360) 15342) nil (26714 43176 874520 945000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15428 . 15429) (nil fontified nil 15360 . 15429) (15360 . 15429)) nil (26714 43176 874517 78000) 0 nil])
([nil nil ((#("  width = \\linewidth,
" 0 10 (fontified t) 10 20 (face font-lock-keyword-face fontified t) 20 22 (fontified t)) . 15465) (undo-tree-id315 . -21) (undo-tree-id316 . -20) (undo-tree-id317 . -20) (undo-tree-id318 . -20) (undo-tree-id319 . -20) (undo-tree-id320 . -20) (undo-tree-id321 . -20) (undo-tree-id322 . -20) (undo-tree-id323 . -20) (undo-tree-id324 . -20) (undo-tree-id325 . -20) (undo-tree-id326 . -20) (undo-tree-id327 . -20) (undo-tree-id328 . -20) (undo-tree-id329 . -20) (undo-tree-id330 . -20) (undo-tree-id331 . -20) (undo-tree-id332 . -20) (undo-tree-id333 . -20) (undo-tree-id334 . -20) (undo-tree-id335 . -20) (undo-tree-id336 . -20) (undo-tree-id337 . -20) (undo-tree-id338 . -20) (undo-tree-id339 . -20) (undo-tree-id340 . -20) (undo-tree-id341 . -20) (undo-tree-id342 . -20) (undo-tree-id343 . -20) (undo-tree-id344 . -20) (undo-tree-id345 . -22) 15485 (t 26714 43176 877028 769000)) nil (26714 43196 351549 718000) 0 nil])
([nil nil ((#("  colspec = {Q[87]Q[362]Q[110]Q[125]Q[125]Q[125]},
" 0 50 (fontified t) 50 51 (fontified t)) . 15465) (undo-tree-id298 . -50) (undo-tree-id299 . -50) (undo-tree-id300 . -20) (undo-tree-id301 . -20) (undo-tree-id302 . -20) (undo-tree-id303 . -20) (undo-tree-id304 . -20) (undo-tree-id305 . -20) (undo-tree-id306 . -20) (undo-tree-id307 . -20) (undo-tree-id308 . -20) (undo-tree-id309 . -20) (undo-tree-id310 . -20) (undo-tree-id311 . -20) (undo-tree-id312 . -20) (undo-tree-id313 . -20) (undo-tree-id314 . -51) 15485) nil (26714 43196 351538 207000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17201 . 17202) (nil fontified nil 16264 . 17202) (16264 . 17202) (#("
%% \\begin{longtable}[]{@{}
%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 8\\tabcolsep) * \\real{0.1735}}
%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 8\\tabcolsep) * \\real{0.1740}}
%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 8\\tabcolsep) * \\real{0.2320}}
%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 8\\tabcolsep) * \\real{0.2176}}
%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 8\\tabcolsep) * \\real{0.2029}}@{}}
%% \\toprule\\noalign{}
%% \\begin{minipage}[b]{\\linewidth}\\centering
%% Наименование
%% 
%% показателя
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% Контроль
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% Образец
%% 
%% № 1(10\\%)
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% Образец
%% 
%% № 2(15\\%)
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% Образец
%% 
%% № 3(20\\%)
%% \\end{minipage} \\\\
%% \\midrule\\noalign{}
%% \\endhead
%% \\bottomrule\\noalign{}
%% \\endlastfoot
%% Консистенция & Стандартная & Хорошая сочность, приятная текстура &
%% Оптимальная мягкость и сочность & Плотная, слегка суховатая \\\\
%% Цвет & Обычный мясной & Легкий красноватый оттенок & Оптимальный
%% насыщенный оттенок & Чрезмерно темный, красно-коричневый \\\\
%% Вкус & Чистый мясной & Легкий томатный привкус & Оптимальное сочетание
%% мясного и томатного аромата & Чрезмерно выраженный аромат томатов \\\\
%% Аромат & Традиционный мясной & Незначительный томатный аромат & Усиление
%% натурального мясного аромата & Преобладание томатного аромата \\\\
%% \\end{longtable}" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 10 (face font-lock-comment-face fontified t) 10 21 (face font-lock-comment-face fontified t latex-env-pair t) 21 28 (face font-lock-comment-face fontified t) 28 33 (face font-lock-comment-delimiter-face fontified t) 33 45 (face font-lock-comment-face fontified t) 45 109 (face font-lock-comment-face fontified t) 109 114 (face font-lock-comment-delimiter-face fontified t) 114 190 (face font-lock-comment-face fontified t) 190 195 (face font-lock-comment-delimiter-face fontified t) 195 271 (face font-lock-comment-face fontified t) 271 276 (face font-lock-comment-delimiter-face fontified t) 276 352 (face font-lock-comment-face fontified t) 352 357 (face font-lock-comment-delimiter-face fontified t) 357 437 (face font-lock-comment-face fontified t) 437 440 (face font-lock-comment-delimiter-face fontified t) 440 459 (face font-lock-comment-face fontified t) 459 462 (face font-lock-comment-delimiter-face fontified t) 462 468 (face font-lock-comment-face fontified t) 468 478 (face font-lock-comment-face fontified t latex-env-pair t) 478 504 (face font-lock-comment-face fontified t) 504 507 (face font-lock-comment-delimiter-face fontified t) 507 520 (face font-lock-comment-face fontified t) 520 523 (face font-lock-comment-delimiter-face fontified t) 523 524 (face font-lock-comment-face fontified t) 524 527 (face font-lock-comment-delimiter-face fontified t) 527 538 (face font-lock-comment-face fontified t) 538 541 (face font-lock-comment-delimiter-face fontified t) 541 545 (face font-lock-comment-face fontified t) 545 555 (face font-lock-comment-face fontified t latex-env-pair t) 555 564 (face font-lock-comment-face fontified t) 564 574 (face font-lock-comment-face fontified t latex-env-pair t) 574 592 (face font-lock-comment-face fontified t) 592 593 (face font-lock-comment-face fontified t) 593 600 (face font-lock-comment-face fontified t) 600 603 (face font-lock-comment-delimiter-face fontified t) 603 612 (face font-lock-comment-face fontified t) 612 615 (face font-lock-comment-delimiter-face fontified t) 615 619 (face font-lock-comment-face fontified t) 619 629 (face font-lock-comment-face fontified t latex-env-pair t) 629 638 (face font-lock-comment-face fontified t) 638 648 (face font-lock-comment-face fontified t latex-env-pair t) 648 674 (face font-lock-comment-face fontified t) 674 677 (face font-lock-comment-delimiter-face fontified t) 677 685 (face font-lock-comment-face fontified t) 685 688 (face font-lock-comment-delimiter-face fontified t) 688 689 (face font-lock-comment-face fontified t) 689 692 (face font-lock-comment-delimiter-face fontified t) 692 700 (face font-lock-comment-face fontified t) 700 702 (face font-lock-comment-face fontified t) 702 705 (face font-lock-comment-delimiter-face fontified t) 705 709 (face font-lock-comment-face fontified t) 709 715 (face font-lock-comment-face fontified t latex-env-pair t) 715 716 (face font-lock-comment-face fontified t latex-env-pair t) 716 719 (fontified t face font-lock-comment-face latex-env-pair t) 719 728 (fontified t face font-lock-comment-face) 728 738 (fontified t face font-lock-comment-face latex-env-pair t) 738 764 (fontified t face font-lock-comment-face) 764 767 (face font-lock-comment-delimiter-face fontified t) 767 775 (face font-lock-comment-face fontified t) 775 778 (face font-lock-comment-delimiter-face fontified t) 778 779 (face font-lock-comment-face fontified t) 779 782 (face font-lock-comment-delimiter-face fontified t) 782 792 (face font-lock-comment-face fontified t) 792 795 (face font-lock-comment-delimiter-face fontified t) 795 799 (face font-lock-comment-face fontified t) 799 809 (face font-lock-comment-face fontified t latex-env-pair t) 809 818 (face font-lock-comment-face fontified t) 818 828 (face font-lock-comment-face fontified t latex-env-pair t) 828 854 (face font-lock-comment-face fontified t) 854 857 (face font-lock-comment-delimiter-face fontified t) 857 865 (face font-lock-comment-face fontified t) 865 868 (face font-lock-comment-delimiter-face fontified t) 868 869 (face font-lock-comment-face fontified t) 869 872 (face font-lock-comment-delimiter-face fontified t) 872 882 (face font-lock-comment-face fontified t) 882 885 (face font-lock-comment-delimiter-face fontified t) 885 889 (face font-lock-comment-face fontified t) 889 899 (face font-lock-comment-face fontified t latex-env-pair t) 899 903 (face font-lock-comment-face fontified t) 903 906 (face font-lock-comment-delimiter-face fontified t) 906 925 (face font-lock-comment-face fontified t) 925 928 (face font-lock-comment-delimiter-face fontified t) 928 937 (face font-lock-comment-face fontified t) 937 940 (face font-lock-comment-delimiter-face fontified t) 940 962 (face font-lock-comment-face fontified t) 962 965 (face font-lock-comment-delimiter-face fontified t) 965 978 (face font-lock-comment-face fontified t) 978 981 (face font-lock-comment-delimiter-face fontified t) 981 1048 (face font-lock-comment-face fontified t) 1048 1051 (face font-lock-comment-delimiter-face fontified t) 1051 1114 (face font-lock-comment-face fontified t) 1114 1117 (face font-lock-comment-delimiter-face fontified t) 1117 1182 (face font-lock-comment-face fontified t) 1182 1185 (face font-lock-comment-delimiter-face fontified t) 1185 1245 (face font-lock-comment-face fontified t) 1245 1248 (face font-lock-comment-delimiter-face fontified t) 1248 1319 (face font-lock-comment-face fontified t) 1319 1322 (face font-lock-comment-delimiter-face fontified t) 1322 1391 (face font-lock-comment-face fontified t) 1391 1394 (face font-lock-comment-delimiter-face fontified t) 1394 1467 (face font-lock-comment-face fontified t) 1467 1470 (face font-lock-comment-delimiter-face fontified t) 1470 1500 (face font-lock-comment-face fontified t) 1500 1535 (face font-lock-comment-face fontified t) 1535 1538 (face font-lock-comment-delimiter-face fontified t) 1538 1542 (face font-lock-comment-face fontified t) 1542 1553 (face font-lock-comment-face fontified t latex-env-pair t)) . 16264) (undo-tree-id478 . -1552) (undo-tree-id479 . -1535) (undo-tree-id480 . -28) (undo-tree-id481 . -1535) 17818 (t 26714 43196 353939 579000)) nil (26714 43242 642918 752000) 0 nil])
([nil nil ((#("% \\usepackage{tabularray}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 26 (face font-lock-comment-face fontified t)) . 16264) (undo-tree-id475 . -26) (undo-tree-id476 . -25) (undo-tree-id477 . -26)) nil (26714 43242 642917 9000) 0 nil])
([nil nil ((16203 . 16204) (#("
" 0 1 (face (bold) fontified t)) . -16203) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) 16136) nil (26714 43242 642915 816000) 0 nil])
([nil nil ((#("{\\bfseries Таблица 3 - Органолептические показатели мясного хлеба в зависимости от содержания порошка из томатного жмыха (ПТЖ)}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 67 (face (bold) fontified t) 67 68 (face (bold) fontified t) 68 126 (face (bold) fontified t) 126 128 (fontified t)) . -16136) (undo-tree-id346 . -66) (undo-tree-id347 . -67) (undo-tree-id348 . -67) (undo-tree-id349 . -128) (undo-tree-id350 . -128) (undo-tree-id351 . -128) (undo-tree-id352 . -128) (undo-tree-id353 . -67) (undo-tree-id354 . -67) (undo-tree-id355 . -67) (undo-tree-id356 . -67) (undo-tree-id357 . -67) (undo-tree-id358 . -67) (undo-tree-id359 . -67) (undo-tree-id360 . -67) (undo-tree-id361 . -67) (undo-tree-id362 . -67) (undo-tree-id363 . -67) (undo-tree-id364 . -67) (undo-tree-id365 . -67) (undo-tree-id366 . -67) (undo-tree-id367 . -67) (undo-tree-id368 . -67) (undo-tree-id369 . -67) (undo-tree-id370 . -67) (undo-tree-id371 . -67) (undo-tree-id372 . -67) (undo-tree-id373 . -67) (undo-tree-id374 . -67) (undo-tree-id375 . -67) (undo-tree-id376 . -67) (undo-tree-id377 . -67) (undo-tree-id378 . -67) (undo-tree-id379 . -67) (undo-tree-id380 . -67) (undo-tree-id381 . -67) (undo-tree-id382 . -67) (undo-tree-id383 . -67) (undo-tree-id384 . -67) (undo-tree-id385 . -67) (undo-tree-id386 . -67) (undo-tree-id387 . -67) (undo-tree-id388 . -67) (undo-tree-id389 . -67) (undo-tree-id390 . -67) (undo-tree-id391 . -67) (undo-tree-id392 . -67) (undo-tree-id393 . -67) (undo-tree-id394 . -67) (undo-tree-id395 . -67) (undo-tree-id396 . -67) (undo-tree-id397 . -67) (undo-tree-id398 . -67) (undo-tree-id399 . -67) (undo-tree-id400 . -67) (undo-tree-id401 . -67) (undo-tree-id402 . -67) (undo-tree-id403 . -67) (undo-tree-id404 . -67) (undo-tree-id405 . -67) (undo-tree-id406 . -67) (undo-tree-id407 . -67) (undo-tree-id408 . -67) (undo-tree-id409 . -67) (undo-tree-id410 . -67) (undo-tree-id411 . -67) (undo-tree-id412 . -67) (undo-tree-id413 . -67) (undo-tree-id414 . -67) (undo-tree-id415 . -67) (undo-tree-id416 . -67) (undo-tree-id417 . -67) (undo-tree-id418 . -67) (undo-tree-id419 . -67) (undo-tree-id420 . -67) (undo-tree-id421 . -67) (undo-tree-id422 . -67) (undo-tree-id423 . -67) (undo-tree-id424 . -67) (undo-tree-id425 . -67) (undo-tree-id426 . -67) (undo-tree-id427 . -67) (undo-tree-id428 . -67) (undo-tree-id429 . -67) (undo-tree-id430 . -67) (undo-tree-id431 . -67) (undo-tree-id432 . -67) (undo-tree-id433 . -67) (undo-tree-id434 . -67) (undo-tree-id435 . -67) (undo-tree-id436 . -67) (undo-tree-id437 . -67) (undo-tree-id438 . -67) (undo-tree-id439 . -67) (undo-tree-id440 . -67) (undo-tree-id441 . -67) (undo-tree-id442 . -67) (undo-tree-id443 . -67) (undo-tree-id444 . -67) (undo-tree-id445 . -67) (undo-tree-id446 . -67) (undo-tree-id447 . -67) (undo-tree-id448 . -67) (undo-tree-id449 . -67) (undo-tree-id450 . -67) (undo-tree-id451 . -67) (undo-tree-id452 . -67) (undo-tree-id453 . -67) (undo-tree-id454 . -67) (undo-tree-id455 . -67) (undo-tree-id456 . -67) (undo-tree-id457 . -67) (undo-tree-id458 . -67) (undo-tree-id459 . -67) (undo-tree-id460 . -67) (undo-tree-id461 . -128) 16264) nil (26714 43242 642910 627000) 0 nil])
([nil nil ((16153 . 16154) 16136) nil (26714 43242 642842 349000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16293 . 16294) (nil fontified nil 16154 . 16294) (16154 . 16294)) nil (26714 43266 442855 586000) 0 nil])
([nil nil ((#("			\\\\
" 0 3 (fontified t) 3 5 (face font-lock-warning-face fontified t) 5 6 (fontified t)) . 16452) (undo-tree-id567 . -5) (undo-tree-id568 . -4) 16456 (t 26714 43267 897609 929000)) nil (26714 43299 881875 123000) 0 nil] [nil nil ((#("  width = \\linewidth,
" 0 10 (fontified t) 10 20 (face font-lock-keyword-face fontified t) 20 22 (fontified t)) . 16330) (undo-tree-id504 . -21) (undo-tree-id505 . -20) (undo-tree-id506 . -20) (undo-tree-id507 . -20) (undo-tree-id508 . -20) (undo-tree-id509 . -20) (undo-tree-id510 . -22) 16350 (t 26714 43242 644726 654000)) ((16330 . 16352)) (26714 43266 295889 755000) 0 nil])
([nil nil ((#("		" 0 2 (fontified nil)) . 16462) (#("
" 0 1 (fontified t)) . -16462) (16451 . 16452) (#("			" 0 3 (fontified nil)) . 16451) (#("
" 0 1 (fontified t)) . -16451) (undo-tree-id565 . -1) (undo-tree-id566 . -1) 16440) nil (26714 43299 881873 971000) 0 nil])
([nil nil ((#("  colspec = {Q[88]Q[123]Q[213]Q[283]Q[223]},
" 0 44 (fontified t) 44 45 (fontified t)) . 16330) (undo-tree-id482 . -44) (undo-tree-id483 . -44) (undo-tree-id484 . -20) (undo-tree-id485 . -20) (undo-tree-id486 . -20) (undo-tree-id487 . -20) (undo-tree-id488 . -20) (undo-tree-id489 . -20) (undo-tree-id490 . -20) (undo-tree-id491 . -20) (undo-tree-id492 . -20) (undo-tree-id493 . -20) (undo-tree-id494 . -20) (undo-tree-id495 . -20) (undo-tree-id496 . -20) (undo-tree-id497 . -20) (undo-tree-id498 . -20) (undo-tree-id499 . -20) (undo-tree-id500 . -20) (undo-tree-id501 . -20) (undo-tree-id502 . -20) (undo-tree-id503 . -45) 16350) ((16330 . 16375) (t 26714 43257 926656 79000)) (26714 43257 923432 980000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 16462)) nil (26714 43299 881872 899000) 0 nil])
nil
([nil nil ((#("{" 0 1 (fontified t)) . 16434)) nil (26714 43299 881872 498000) 0 nil])
([nil nil ((#("		" 0 2 (fontified nil)) . 16542) (#("
" 0 1 (fontified t)) . -16542) (16532 . 16533) (#("			" 0 3 (fontified nil)) . 16532) (#("
" 0 1 (fontified t)) . -16532) (16529 . 16530) (#("			" 0 3 (fontified nil)) . 16529) (#("
" 0 1 (fontified t)) . -16529) (#("			" 0 3 (fontified nil)) . 16522) (#("
" 0 1 (fontified t)) . -16522) (#("		" 0 2 (fontified nil)) . 16517) (#("
" 0 1 (fontified t)) . -16517) (16507 . 16508) (#("			" 0 3 (fontified nil)) . 16507) (#("
" 0 1 (fontified t)) . -16507) (16504 . 16505) (#("			" 0 3 (fontified nil)) . 16504) (#("
" 0 1 (fontified t)) . -16504) (#("			" 0 3 (fontified nil)) . 16497) (#("
" 0 1 (fontified t)) . -16497) (#("		" 0 2 (fontified nil)) . 16492) (#("
" 0 1 (fontified t)) . -16492) (16482 . 16483) (#("			" 0 3 (fontified nil)) . 16482) (#("
" 0 1 (fontified t)) . -16482) (16479 . 16480) (#("			" 0 3 (fontified nil)) . 16479) (#("
" 0 1 (fontified t)) . -16479) (#("			" 0 3 (fontified nil)) . 16472) (#("
" 0 1 (fontified t)) . -16472) (#("			" 0 3 (fontified nil)) . 16434) (#("
" 0 1 (fontified t)) . -16434)) nil (26714 43299 881870 875000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 16471)) nil (26714 43299 881869 633000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 16479)) nil (26714 43299 881869 343000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16479) (undo-tree-id564 . -1)) nil (26714 43299 881869 52000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16479) (undo-tree-id562 . -1) (undo-tree-id563 . -1)) nil (26714 43299 881867 770000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 16488) (undo-tree-id560 . -1) (undo-tree-id561 . -1)) nil (26714 43299 881866 988000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 16491)) nil (26714 43299 881866 76000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 16499) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1)) nil (26714 43299 881865 555000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16499) (undo-tree-id541 . -1) (undo-tree-id542 . -1)) nil (26714 43299 881858 973000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16499) (undo-tree-id539 . -1) (undo-tree-id540 . -1)) nil (26714 43299 881857 801000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 16508)) nil (26714 43299 881856 849000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 16511) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1)) nil (26714 43299 881856 248000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 16519) (undo-tree-id515 . -1) (undo-tree-id516 . -1)) nil (26714 43299 881848 694000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 16519) (undo-tree-id513 . -1) (undo-tree-id514 . -1)) nil (26714 43299 881847 552000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 16519)) nil (26714 43299 881845 738000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 16528) (undo-tree-id511 . -1) (undo-tree-id512 . -1)) nil (26714 43322 992014 280000) 0 nil])
([nil nil ((16441 . 16443) (t 26714 43299 884461 573000)) nil (26714 43326 516467 538000) 0 nil] [nil nil ((16440 . 16442) (t 26714 43299 884461 573000)) ((#("\\-" 0 2 (face font-lock-keyword-face fontified t)) . 16440) (undo-tree-id569 . -2) (undo-tree-id570 . -2)) (26714 43322 857103 237000) 0 nil])
([nil nil ((16455 . 16457)) nil (26714 43352 135428 149000) 0 nil] [nil nil ((16454 . 16456)) ((#("\\-" 0 2 (face font-lock-keyword-face fontified t)) . 16454) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1)) (26714 43326 516360 338000) 0 nil])
([nil nil ((16455 . 16457)) ((#("\\-" 0 2 (face font-lock-keyword-face fontified t)) . 16455)) (26714 43322 857002 248000) 0 nil] [nil nil ((16456 . 16458)) ((#("\\-" 0 2 (face font-lock-keyword-face fontified t)) . 16456)) (26714 43318 44483 451000) 0 nil])
([nil nil ((16540 . 16542) (t 26714 43329 153325 312000)) nil (26714 43353 395694 407000) 0 nil] [nil nil ((16539 . 16541) (t 26714 43329 153325 312000)) ((#("\\-" 0 2 (face font-lock-keyword-face fontified t)) . 16539) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1)) (26714 43352 135180 285000) 0 nil] [nil nil ((16539 . 16541) (t 26714 43329 153325 312000)) ((#("\\-" 0 2 (face font-lock-keyword-face fontified t)) . 16539) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1)) (26714 43351 10353 458000) 0 nil] [nil nil ((16543 . 16545) (t 26714 43329 153325 312000)) ((#("\\-" 0 2 (face font-lock-keyword-face fontified t)) . 16543) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1)) (26714 43345 403225 478000) 0 nil])
nil
nil
nil
([nil nil ((16367 . 16370) (#("88" 0 2 (fontified t)) . 16367) (undo-tree-id583 . -1) (undo-tree-id584 . -2) (undo-tree-id585 . -2) (t 26714 43353 398212 77000)) nil (26714 43360 46675 809000) 0 nil])
nil
nil
nil
([nil nil ((16981 . 16983) (t 26714 43360 49180 958000)) nil (26714 43371 714193 74000) 0 nil])
([nil nil ((110 . 224) (#("Изучение органолептических характеристик и жирнокислотного состава мясного хлеба, обогащённого томатными выжимками" 0 114 (fontified t)) . 110) (t 26715 31280 525164 268000)) nil (26715 33865 775279 887000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20464 . 20465) (nil fontified nil 18798 . 20465) (18798 . 20465) (#("
%% \\begin{longtable}[]{@{}
%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 4\\tabcolsep) * \\real{0.3323}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 4\\tabcolsep) * \\real{0.3052}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 4\\tabcolsep) * \\real{0.3625}}@{}}
%% \\toprule\\noalign{}
%% \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Компонент}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\raggedright
%% {\\bfseries Контрольный образец (концентрация, \\% об.)}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\raggedright
%% {\\bfseries Экспериментальный образец (15\\%) (концентрация, \\% об.)}
%% \\end{minipage} \\\\
%% \\midrule\\noalign{}
%% \\endhead
%% \\bottomrule\\noalign{}
%% \\endlastfoot
%% Метилбутират & 2,173154 & 1,600267 \\\\
%% Метилгексаноат & 82,896302 & 56,987661 \\\\
%% Метиловый эфир цис-10-пентадеценовой кислоты & 0,015688 & 0,032050 \\\\
%% Метилпальмитолеат & 0,000116 & \\\\
%% Метилпальмитат & 0,002597 & 0,005663 \\\\
%% Метиловый эфир цис-10-гептадекановой кислоты & 0,000013 & 0,000033 \\\\
%% Метилгептадеканоат & 3,193092 & 8,124987 \\\\
%% Метиловый эфир γ-линоленовой кислоты & 0,042583 & 0,104247 \\\\
%% Метиллиноленат & 0,013492 & 0,021532 \\\\
%% Метиловый эфир линолеидовой кислоты & 0,002628 & 0,005085 \\\\
%% Метиловый эфир цис-9-олеиновой кислоты & 1,358085 & 3,284745 \\\\
%% Метиловый эфир транс-9-элаидиновой кислоты & 10,224256 & 29,282522 \\\\
%% Метиловый эфир цис-5,8,11,14,17-эйкозапентаеновой кислоты & 0,076441 &
%% 0,545892 \\\\
%% Метиловый эфир цис-8,11,14-эйкозатриеновой кислоты & 0,001081 &
%% 0,004040 \\\\
%% Метиловый эфир цис-11,14-эйкозадиеновой кислоты & 0,000035 & \\\\
%% Метилцис-11-эйкозеноат & 0,000041 & \\\\
%% Метилархидат & 0,000076 & \\\\
%% Метилгениказаноат & 0,000009 & \\\\
%% Метиловый эфир цис-13,16-докозадиеновой кислоты & 0,000290 & 0,001169 \\\\
%% Метилнервонат & 0,000021 & \\\\
%% Метилтрикозаноат & & 0,000107 \\\\
%% \\end{longtable}" 0 1 (fontified t) 1 4 (fontified t face font-lock-comment-delimiter-face) 4 10 (fontified t face font-lock-comment-face) 10 18 (fontified t face font-lock-comment-face latex-env-pair t) 18 21 (face font-lock-comment-face latex-env-pair t fontified t) 21 28 (face font-lock-comment-face fontified t) 28 33 (face font-lock-comment-delimiter-face fontified t) 33 109 (face font-lock-comment-face fontified t) 109 114 (face font-lock-comment-delimiter-face fontified t) 114 188 (face font-lock-comment-face fontified t) 188 193 (face font-lock-comment-delimiter-face fontified t) 193 271 (face font-lock-comment-face fontified t) 271 274 (face font-lock-comment-delimiter-face fontified t) 274 293 (face font-lock-comment-face fontified t) 293 296 (face font-lock-comment-delimiter-face fontified t) 296 302 (face font-lock-comment-face fontified t) 302 312 (face font-lock-comment-face latex-env-pair t fontified t) 312 338 (face font-lock-comment-face fontified t) 338 341 (face font-lock-comment-delimiter-face fontified t) 341 363 (face font-lock-comment-face fontified t) 363 366 (face font-lock-comment-delimiter-face fontified t) 366 370 (face font-lock-comment-face fontified t) 370 380 (face font-lock-comment-face latex-env-pair t fontified t) 380 389 (face font-lock-comment-face fontified t) 389 399 (face font-lock-comment-face latex-env-pair t fontified t) 399 427 (face font-lock-comment-face fontified t) 427 430 (face font-lock-comment-delimiter-face fontified t) 430 485 (face font-lock-comment-face fontified t) 485 488 (face font-lock-comment-delimiter-face fontified t) 488 492 (face font-lock-comment-face fontified t) 492 502 (face font-lock-comment-face latex-env-pair t fontified t) 502 511 (face font-lock-comment-face fontified t) 511 521 (face font-lock-comment-face latex-env-pair t fontified t) 521 549 (face font-lock-comment-face fontified t) 549 552 (face font-lock-comment-delimiter-face fontified t) 552 620 (face font-lock-comment-face fontified t) 620 623 (face font-lock-comment-delimiter-face fontified t) 623 627 (face font-lock-comment-face fontified t) 627 637 (face font-lock-comment-face latex-env-pair t fontified t) 637 641 (face font-lock-comment-face fontified t) 641 644 (face font-lock-comment-delimiter-face fontified t) 644 663 (face font-lock-comment-face fontified t) 663 666 (face font-lock-comment-delimiter-face fontified t) 666 675 (face font-lock-comment-face fontified t) 675 678 (face font-lock-comment-delimiter-face fontified t) 678 700 (face font-lock-comment-face fontified t) 700 703 (face font-lock-comment-delimiter-face fontified t) 703 716 (face font-lock-comment-face fontified t) 716 719 (face font-lock-comment-delimiter-face fontified t) 719 757 (face font-lock-comment-face fontified t) 757 760 (face font-lock-comment-delimiter-face fontified t) 760 802 (face font-lock-comment-face fontified t) 802 805 (face font-lock-comment-delimiter-face fontified t) 805 875 (face font-lock-comment-face fontified t) 875 878 (face font-lock-comment-delimiter-face fontified t) 878 912 (face font-lock-comment-face fontified t) 912 915 (face font-lock-comment-delimiter-face fontified t) 915 955 (face font-lock-comment-face fontified t) 955 958 (face font-lock-comment-delimiter-face fontified t) 958 1028 (face font-lock-comment-face fontified t) 1028 1031 (face font-lock-comment-delimiter-face fontified t) 1031 1075 (face font-lock-comment-face fontified t) 1075 1078 (face font-lock-comment-delimiter-face fontified t) 1078 1140 (face font-lock-comment-face fontified t) 1140 1143 (face font-lock-comment-delimiter-face fontified t) 1143 1183 (face font-lock-comment-face fontified t) 1183 1186 (face font-lock-comment-delimiter-face fontified t) 1186 1247 (face font-lock-comment-face fontified t) 1247 1250 (face font-lock-comment-delimiter-face fontified t) 1250 1314 (face font-lock-comment-face fontified t) 1314 1317 (face font-lock-comment-delimiter-face fontified t) 1317 1387 (face font-lock-comment-face fontified t) 1387 1390 (face font-lock-comment-delimiter-face fontified t) 1390 1461 (face font-lock-comment-face fontified t) 1461 1464 (face font-lock-comment-delimiter-face fontified t) 1464 1476 (face font-lock-comment-face fontified t) 1476 1479 (face font-lock-comment-delimiter-face fontified t) 1479 1518 (face font-lock-comment-face fontified t) 1518 1543 (fontified t face font-lock-comment-face) 1543 1546 (face font-lock-comment-delimiter-face fontified t) 1546 1558 (face font-lock-comment-face fontified t) 1558 1561 (face font-lock-comment-delimiter-face fontified t) 1561 1625 (face font-lock-comment-face fontified t) 1625 1628 (face font-lock-comment-delimiter-face fontified t) 1628 1667 (face font-lock-comment-face fontified t) 1667 1670 (face font-lock-comment-delimiter-face fontified t) 1670 1699 (face font-lock-comment-face fontified t) 1699 1702 (face font-lock-comment-delimiter-face fontified t) 1702 1736 (face font-lock-comment-face fontified t) 1736 1739 (face font-lock-comment-delimiter-face fontified t) 1739 1812 (face font-lock-comment-face fontified t) 1812 1815 (face font-lock-comment-delimiter-face fontified t) 1815 1845 (face font-lock-comment-face fontified t) 1845 1848 (face font-lock-comment-delimiter-face fontified t) 1848 1881 (face font-lock-comment-face fontified t) 1881 1884 (face font-lock-comment-delimiter-face fontified t) 1884 1888 (face font-lock-comment-face fontified t) 1888 1899 (face font-lock-comment-face fontified t latex-env-pair t)) . 18798) (undo-tree-id8 . -716) (undo-tree-id9 . -1881) (undo-tree-id10 . -1898) (undo-tree-id11 . -1881) 20698 (t 26715 33865 777926 515000)) nil (26715 33973 614220 35000) 0 nil])
([nil nil ((#("% \\usepackage{tabularray}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 26 (face font-lock-comment-face fontified t)) . 18798) (undo-tree-id7 . -25)) nil (26715 33973 614216 819000) 0 nil])
([nil nil ((18787 . 18788) (#("
" 0 1 (face (bold) fontified t)) . -18787) (18722 . 18723) (#("
" 0 1 (face (bold) fontified t)) . -18722) 18650) nil (26715 33973 614215 677000) 0 nil])
([nil nil ((#("{\\bfseries Таблица 4 - Жирнокислотный состав мясного хлеба с содержанием порошка из томатного жмыха (ПТЖ) 15 \\% в сравнении с контрольным образцом}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 72 (face (bold) fontified t) 72 73 (face (bold) fontified t) 73 109 (face (bold) fontified t) 109 111 (face (font-lock-keyword-face bold) fontified t) 111 137 (face (bold) fontified t) 137 138 (face (bold) fontified t) 138 146 (face (bold) fontified t) 146 148 (fontified t)) . -18650) (undo-tree-id0 . -137) (undo-tree-id1 . -137) (undo-tree-id2 . -136) (undo-tree-id3 . -148) (undo-tree-id4 . -148) (undo-tree-id5 . -137) (undo-tree-id6 . -137) 18798) nil (26715 33973 614214 876000) 0 nil])
([nil nil ((18667 . 18668) 18650) nil (26715 33973 614181 673000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18827 . 18828) (nil fontified nil 18668 . 18828) (18668 . 18828)) nil (26715 33973 614177 565000) 0 nil])
([nil nil ((#("			" 0 3 (face (bold) fontified t)) . 18997) (undo-tree-id41 . -2) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -3) (t 26715 33973 617835 117000)) nil (26715 34065 671857 306000) 0 nil])
([nil nil ((18997 . 18998)) nil (26715 34065 671852 456000) 0 nil])
([nil nil ((19005 . 19006)) nil (26715 34065 671852 256000) 0 nil])
([nil nil ((19005 . 19006) (#(" 			" 0 4 (face (bold) fontified t)) . 19005) (undo-tree-id39 . -3) (undo-tree-id40 . 3)) nil (26715 34065 671851 895000) 0 nil])
([nil nil ((19057 . 19058) (#("			" 0 3 (face (bold) fontified t)) . 19057) (undo-tree-id36 . -2) (undo-tree-id37 . -3) (undo-tree-id38 . -3)) nil (26715 34065 671850 483000) 0 nil])
([nil nil ((19065 . 19066) (#("			" 0 3 (face (bold) fontified t)) . 19065) (undo-tree-id35 . -2)) nil (26715 34065 671849 361000) 0 nil])
([nil nil ((19143 . 19144) (#("			" 0 3 (fontified nil)) . 19143) (#("
" 0 1 (fontified t)) . -19143) (#("			" 0 3 (fontified nil)) . 19135) (#("
" 0 1 (fontified t)) . -19135) (19123 . 19124) (#("			" 0 3 (fontified nil)) . 19123) (#("
" 0 1 (fontified t)) . -19123) (#("			" 0 3 (fontified nil)) . 19115) (#("
" 0 1 (fontified t)) . -19115) 19109) nil (26715 34065 671848 449000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 19114)) nil (26715 34065 671847 868000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19123)) nil (26715 34065 671847 718000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19123)) nil (26715 34065 671847 527000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19123)) nil (26715 34065 671847 187000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19123)) nil (26715 34065 671846 886000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19123)) nil (26715 34065 671846 495000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19123)) nil (26715 34065 671846 255000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 19123)) nil (26715 34065 671845 944000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 19123)) nil (26715 34065 671845 503000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 19125)) nil (26715 34065 671845 343000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19134)) nil (26715 34065 671845 93000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19134)) nil (26715 34065 671844 952000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19134)) nil (26715 34065 671844 722000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19134)) nil (26715 34065 671844 572000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19134)) nil (26715 34065 671844 331000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19134)) nil (26715 34065 671843 900000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 19134)) nil (26715 34065 671843 580000) 0 nil])
([nil nil ((19245 . 19246) (#("			" 0 3 (fontified nil)) . 19245) (#("
" 0 1 (fontified t)) . -19245) (#("			" 0 3 (fontified nil)) . 19237) (#("
" 0 1 (fontified t)) . -19237) (19187 . 19188) (#("			" 0 3 (fontified nil)) . 19187) (#("
" 0 1 (fontified t)) . -19187) 19186) nil (26715 34065 671843 249000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 19236)) nil (26715 34065 671842 297000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19245)) nil (26715 34065 671841 857000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19245)) nil (26715 34065 671841 496000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19245)) nil (26715 34065 671841 255000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19245)) nil (26715 34065 671841 5000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19245)) nil (26715 34065 671840 714000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19245)) nil (26715 34065 671840 203000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 19245)) nil (26715 34065 671839 702000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 19279)) nil (26715 34065 671839 322000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19279)) nil (26715 34065 671839 71000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19279)) nil (26715 34065 671838 931000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19279)) nil (26715 34065 671838 781000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19279)) nil (26715 34065 671838 510000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 19279)) nil (26715 34065 671838 280000) 0 nil])
([nil nil ((19330 . 19331) (#("			" 0 3 (fontified nil)) . 19330) (#("
" 0 1 (fontified t)) . -19330) 19329) nil (26715 34065 671837 989000) 0 nil])
([nil nil ((19442 . 19443) (#("			" 0 3 (fontified nil)) . 19442) (#("
" 0 1 (fontified t)) . -19442) 19441) nil (26715 34065 671837 328000) 0 nil])
([nil nil ((19542 . 19543) (#("			" 0 3 (fontified nil)) . 19542) (#("
" 0 1 (fontified t)) . -19542) 19541) nil (26715 34065 671836 977000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 19571)) nil (26715 34065 671836 597000) 0 nil])
([nil nil ((19579 . 19580) (#("			" 0 3 (fontified nil)) . 19579) (#("
" 0 1 (fontified t)) . -19579) (19570 . 19571) (#(" 			" 0 1 (fontified nil) 1 4 (fontified nil)) . 19570) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("
" 0 1 (fontified t)) . -19571) 19570) nil (26715 34065 671836 206000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19580)) nil (26715 34065 671834 523000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19580)) nil (26715 34065 671833 892000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19580)) nil (26715 34065 671833 511000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19580)) nil (26715 34065 671833 50000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19580)) nil (26715 34065 671832 599000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19580)) nil (26715 34065 671831 988000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 19580)) nil (26715 34065 671831 657000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 19580)) nil (26715 34065 671831 497000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 19582)) nil (26715 34065 671831 227000) 0 nil])
([nil nil ((19590 . 19591) (#("			" 0 3 (fontified nil)) . 19590) (#("
" 0 1 (fontified t)) . -19590) (undo-tree-id27 . -1) (19581 . 19582) (#(" 			" 0 1 (fontified nil) 1 4 (fontified nil)) . 19581) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("
" 0 1 (fontified t)) . -19582) (undo-tree-id32 . -1) 19581) nil (26715 34065 671830 826000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19591) (undo-tree-id25 . -1) (undo-tree-id26 . -1)) nil (26715 34065 671828 552000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19591) (undo-tree-id23 . -1) (undo-tree-id24 . -1)) nil (26715 34065 671826 578000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19591) (undo-tree-id21 . -1) (undo-tree-id22 . -1)) nil (26715 34065 671792 614000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19591) (undo-tree-id19 . -1) (undo-tree-id20 . -1)) nil (26715 34065 671791 822000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19591) (undo-tree-id17 . -1) (undo-tree-id18 . -1)) nil (26715 34065 671790 881000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19591) (undo-tree-id15 . -1) (undo-tree-id16 . -1)) nil (26715 34065 671789 799000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 19591) (undo-tree-id13 . -1) (undo-tree-id14 . -1)) nil (26715 34065 672018 579000) 0 nil])
([nil nil ((19655 . 19656) (#("			" 0 3 (fontified nil)) . 19655) (#("
" 0 1 (fontified t)) . -19655) (undo-tree-id78 . -1) (#("			" 0 3 (fontified nil)) . 19647) (#("
" 0 1 (fontified t)) . -19647) (undo-tree-id79 . -1) (19603 . 19604) (#("			" 0 3 (fontified nil)) . 19603) (#("
" 0 1 (fontified t)) . -19603) (undo-tree-id80 . -1) 19602) nil (26715 34119 846103 42000) 0 nil] [nil nil ((19593 . 19594) (#("
" 0 1 (fontified t)) . -19593) (undo-tree-id12 . -1) 19591) ((19593 . 19594) (#(" " 0 1 (fontified t)) . 19593)) (26715 34065 671783 857000) 0 nil])
([nil nil ((19721 . 19722) (#("			" 0 3 (fontified nil)) . 19721) (#("
" 0 1 (fontified t)) . -19721) (undo-tree-id75 . -1) (#("			" 0 3 (fontified nil)) . 19712) (#("
" 0 1 (fontified t)) . -19712) (undo-tree-id76 . -1) (19675 . 19676) (#("			" 0 3 (fontified nil)) . 19675) (#("
" 0 1 (fontified t)) . -19675) (undo-tree-id77 . -1) 19674) nil (26715 34119 846101 499000) 0 nil])
nil
([nil nil ((19753 . 19754) (#("			" 0 3 (fontified nil)) . 19753) (#("
" 0 1 (fontified t)) . -19753) (undo-tree-id74 . -1) 19752) nil (26715 34119 846100 56000) 0 nil])
([nil nil ((19793 . 19794) (#("			" 0 3 (fontified nil)) . 19793) (#("
" 0 1 (fontified t)) . -19793) (undo-tree-id73 . -1) 19753) nil (26715 34119 846099 425000) 0 nil])
([nil nil ((#("			" 0 3 (fontified nil)) . 19816) (#("
" 0 1 (fontified t)) . -19816) (undo-tree-id72 . -1) 19793) nil (26715 34119 846098 613000) 0 nil])
([nil nil ((19824 . 19825) (#("			" 0 3 (fontified nil)) . 19824) (#("
" 0 1 (fontified t)) . -19824) 19816) nil (26715 34119 846097 942000) 0 nil])
([nil nil ((19844 . 19845) (#("			" 0 3 (fontified nil)) . 19844) (#("
" 0 1 (fontified t)) . -19844) (undo-tree-id71 . -1) 19843) nil (26715 34119 846097 281000) 0 nil])
([nil nil ((#("			" 0 3 (fontified nil)) . 19889) (#("
" 0 1 (fontified t)) . -19889) (undo-tree-id70 . -1) 19844) nil (26715 34119 846096 359000) 0 nil])
([nil nil ((19897 . 19898) (#("			" 0 3 (fontified nil)) . 19897) (#("
" 0 1 (fontified t)) . -19897) (undo-tree-id69 . -1) 19889) nil (26715 34119 846095 568000) 0 nil])
([nil nil ((#("			" 0 3 (fontified nil)) . 19909) (#("
" 0 1 (fontified t)) . -19909) (undo-tree-id68 . -1) 19897) nil (26715 34119 846094 956000) 0 nil])
([nil nil ((19917 . 19918) (#("			" 0 3 (fontified nil)) . 19917) (#("
" 0 1 (fontified t)) . -19917) (undo-tree-id67 . -1) 19909) nil (26715 34119 846094 345000) 0 nil])
([nil nil ((19937 . 19938) (#("			" 0 3 (fontified nil)) . 19937) (#("
" 0 1 (fontified t)) . -19937) 19936) nil (26715 34119 846093 23000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 19646)) nil (26715 34119 846092 662000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19655)) nil (26715 34119 846092 482000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19655)) nil (26715 34119 846090 849000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19655)) nil (26715 34119 846090 678000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19655)) nil (26715 34119 846090 508000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19655)) nil (26715 34119 846090 298000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19655)) nil (26715 34119 846090 77000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 19655)) nil (26715 34119 846089 356000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 19703)) nil (26715 34119 846089 186000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19713)) nil (26715 34119 846089 35000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19713)) nil (26715 34119 846088 795000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19713)) nil (26715 34119 846088 484000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19713)) nil (26715 34119 846088 324000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19713)) nil (26715 34119 846088 164000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19713)) nil (26715 34119 846088 3000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 19713)) nil (26715 34119 846087 813000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 19713)) nil (26715 34119 846087 633000) 0 nil])
([nil nil ((19724 . 19725)) nil (26715 34119 846087 312000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 19799)) nil (26715 34119 846087 62000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19808)) nil (26715 34119 846086 891000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19808)) nil (26715 34119 846086 561000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19808)) nil (26715 34119 846086 240000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19808)) nil (26715 34119 846086 50000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19808)) nil (26715 34119 846085 879000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19808)) nil (26715 34119 846085 559000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 19808)) nil (26715 34119 846085 388000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19894)) nil (26715 34119 846084 998000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19894)) nil (26715 34119 846084 797000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19894)) nil (26715 34119 846084 427000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19894)) nil (26715 34119 846084 166000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19894)) nil (26715 34119 846083 926000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19894)) nil (26715 34119 846083 735000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 19894)) nil (26715 34119 846083 485000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 19884)) nil (26715 34119 846083 14000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19874)) nil (26715 34119 846082 834000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19874)) nil (26715 34119 846082 653000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19874)) nil (26715 34119 846082 493000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19874)) nil (26715 34119 846082 303000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19874)) nil (26715 34119 846082 32000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19874)) nil (26715 34119 846081 321000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 19874)) nil (26715 34119 846081 10000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 19874)) nil (26715 34119 846080 750000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 19864)) nil (26715 34119 846080 489000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 19948)) nil (26715 34119 846080 229000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19948)) nil (26715 34119 846080 68000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19948)) nil (26715 34119 846079 868000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19948)) nil (26715 34119 846079 638000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19948)) nil (26715 34119 846079 487000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 19948)) nil (26715 34119 846079 197000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 19987)) nil (26715 34119 846078 816000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19987)) nil (26715 34119 846078 536000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 19987)) nil (26715 34119 846078 285000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 19987)) nil (26715 34119 846077 904000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 19987)) nil (26715 34119 846077 654000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 19987)) nil (26715 34119 846077 343000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 20016)) nil (26715 34119 846077 133000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 20016)) nil (26715 34119 846076 913000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 20016)) nil (26715 34119 846076 662000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 20016)) nil (26715 34119 846076 502000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 20016)) nil (26715 34119 846076 311000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 20016)) nil (26715 34119 846076 61000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 20050)) nil (26715 34119 846075 810000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 20050)) nil (26715 34119 846075 380000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 20050) (undo-tree-id66 . -1)) nil (26715 34119 846075 179000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 20050) (undo-tree-id64 . -1) (undo-tree-id65 . -1)) nil (26715 34119 846074 708000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 20050) (undo-tree-id62 . -1) (undo-tree-id63 . -1)) nil (26715 34119 846073 336000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 20050) (undo-tree-id60 . -1) (undo-tree-id61 . -1)) nil (26715 34119 846193 452000) 0 nil])
([nil nil ((20123 . 20124) (#("			" 0 3 (fontified nil)) . 20123) (#("
" 0 1 (fontified t)) . -20123) (#("			" 0 3 (fontified nil)) . 20115) (#("
" 0 1 (fontified t)) . -20115) (20062 . 20063) (#("			" 0 1 (fontified nil) 1 3 (fontified nil)) . 20062) (#("
" 0 1 (fontified t)) . -20062) 20061) nil (26715 34131 831289 695000) 0 nil] [nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 20050) (undo-tree-id58 . -1) (undo-tree-id59 . -1)) ((20050 . 20051)) (26715 34119 846068 397000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 20114)) nil (26715 34131 831288 763000) 0 nil])
nil
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 20123)) nil (26715 34131 831288 593000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 20123)) nil (26715 34131 831288 323000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 20123)) nil (26715 34131 831288 152000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 20123)) nil (26715 34131 831287 932000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 20123)) nil (26715 34131 831287 772000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 20123)) nil (26715 34131 831287 601000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 20123)) nil (26715 34131 831287 110000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 20153)) nil (26715 34131 831286 720000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 20153)) nil (26715 34131 831286 539000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 20153)) nil (26715 34131 831286 389000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 20153)) nil (26715 34131 831286 209000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 20153)) nil (26715 34131 831285 978000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 20153)) nil (26715 34131 831285 417000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 20175)) nil (26715 34131 831284 726000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 20175)) nil (26715 34131 831284 105000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 20175)) nil (26715 34131 831283 3000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 20175) (undo-tree-id87 . -1)) nil (26715 34131 831282 311000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t)) . 20175) (undo-tree-id85 . -1) (undo-tree-id86 . -1)) nil (26715 34131 831281 19000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 20175) (undo-tree-id83 . -1) (undo-tree-id84 . -1)) nil (26715 34131 831279 256000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 20175) (undo-tree-id81 . -1) (undo-tree-id82 . -1)) nil (26715 34131 831273 996000) 0 nil])
([nil nil ((18908 . 18910) (#("58" 0 2 (fontified t)) . 18908) (undo-tree-id91 . -1) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (t 26715 34131 834831 193000)) nil (26715 34148 586766 773000) 0 nil])
([nil nil ((18913 . 18915) (#("333" 0 3 (fontified t)) . 18913) (undo-tree-id88 . -2) (undo-tree-id89 . -3) (undo-tree-id90 . -3)) nil (26715 34148 586764 38000) 0 nil])
([nil nil ((18913 . 18914)) nil (26715 34174 655116 956000) 0 nil])
([nil nil ((17245 . 17266) (18649 . 18665) (t 26715 34148 590838 290000)) nil (26715 34180 44332 477000) 0 nil] [nil nil ((17245 . 17264) (18649 . 18666) 17245 (t 26715 34148 590838 290000)) ((#("\\end{references}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 15 (face font-lock-function-name-face fontified t latex-env-pair t) 15 16 (fontified t latex-env-pair t) 16 17 (fontified t)) . 18649) (undo-tree-id94 . 17) (#("\\begin{references}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 17 (face font-lock-function-name-face latex-env-pair t fontified t) 17 18 (latex-env-pair t fontified t) 18 19 (fontified t)) . 17245)) (26715 34174 654857 739000) 0 nil])
([nil nil ((17191 . 17192) (#("
" 0 1 (face (bold) fontified t)) . -17191) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) 17128) nil (26715 34180 44328 109000) 0 nil])
nil
([nil nil ((20239 . 20260) (20511 . 20527) (t 26715 34180 48855 24000)) nil (26715 34200 833973 981000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20548)) nil (26715 34200 833973 530000) 0 nil])
([nil nil ((20736 . 20737) (#("
" 0 1 (face (bold) fontified t)) . -20736) 20667) nil (26715 34200 833973 249000) 0 nil])
([nil nil ((#("{\\bfseries Рис.2 - Жирнокислотный состав контрольного образца мясного хлеба}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 41 (face (bold) fontified t) 41 69 (face (bold) fontified t) 69 70 (face (bold) fontified t) 70 75 (face (bold) fontified t) 75 76 (fontified t)) . -20667) (undo-tree-id220 . -69) (undo-tree-id221 . -69) (undo-tree-id222 . -68) (undo-tree-id223 . -69) (undo-tree-id224 . -69) (undo-tree-id225 . -69) (undo-tree-id226 . -69) (undo-tree-id227 . -69) (undo-tree-id228 . -69) (undo-tree-id229 . -69) (undo-tree-id230 . -69) (undo-tree-id231 . -69) (undo-tree-id232 . -69) 20744) nil (26715 34200 833972 748000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20713 . 20714) (nil fontified nil 20650 . 20714) (20650 . 20714)) nil (26715 34200 833969 342000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20729) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1)) nil (26715 34200 833968 841000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20729) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1)) nil (26715 34200 833964 824000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20729) (undo-tree-id173 . -1)) nil (26715 34200 833939 75000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20729) (undo-tree-id172 . 1)) nil (26715 34200 833938 604000) 0 nil])
([nil nil ((#("{\\bfseries Рис.3 - Жирнокислотный состав образца мясного хлеба с 15\\% ПТЖ}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 20 (face (bold) fontified t) 20 67 (face (bold) fontified t) 67 69 (face (font-lock-keyword-face bold) fontified t) 69 73 (face (bold) fontified t) 73 74 (fontified t)) . -20848) 20923) nil (26715 34200 833938 113000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20892 . 20893) (nil fontified nil 20831 . 20893) (20831 . 20893)) nil (26715 34200 833937 783000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20909) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1)) nil (26715 34200 833936 400000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20909) (undo-tree-id108 . -1)) nil (26715 34200 833916 863000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20909) (undo-tree-id107 . 1)) nil (26715 34200 833915 631000) 0 nil])
([nil nil ((20909 . 20930) (24416 . 24432)) nil (26715 34200 834075 642000) 0 nil])
([nil nil ((24454 . 24469) (24477 . 24490)) nil (26715 34209 864766 447000) 0 nil] [nil nil ((24454 . 24475) (24477 . 24493)) ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 24477) (#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 20 (fontified t) 20 21 (fontified t)) . 24454)) (26715 34200 833903 97000) 0 nil])
([nil nil ((24506 . 24525) (27299 . 27316)) nil (26715 34209 864765 916000) 0 nil])
nil
([nil nil ((27336 . 27355) (28560 . 28577)) nil (26715 34209 864761 898000) 0 nil])
([nil nil ((24630 . 24631) (#("\\" 0 1 (face font-lock-warning-face fontified t)) . -24630) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) 24631 (24629 . 24631) (t 26715 34209 868874 755000)) nil (26715 34261 128722 597000) 0 nil])
([nil nil ((25085 . 25089) (#("url" 0 3 (face font-lock-keyword-face fontified t)) . 25085) (undo-tree-id271 . -2) (t 26715 34261 131916 915000)) nil (26715 34275 434831 827000) 0 nil])
([nil nil ((25183 . 25185)) nil (26715 34275 434830 975000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25221 . 25222) (nil fontified nil 25184 . 25222) (25184 . 25222) 25183) nil (26715 34275 434830 504000) 0 nil])
([nil nil ((#("." 0 1 (face tex-verbatim fontified t)) . 25180) (undo-tree-id269 . -1) (undo-tree-id270 . -1)) nil (26715 34275 434829 683000) 0 nil])
([nil nil ((#("-" 0 1 (face tex-verbatim fontified t)) . 25180) (undo-tree-id267 . -1) (undo-tree-id268 . -1)) nil (26715 34275 434825 515000) 0 nil])
([nil nil ((24711 . 24713) (t 26715 34275 437930 421000)) nil (26715 34297 668014 765000) 0 nil])
([nil nil ((25240 . 25242) (t 26715 34289 251944 147000)) nil (26715 34311 925166 279000) 0 nil] [nil nil ((25241 . 25243) (t 26715 34289 251944 147000)) ((#("\\\\" 0 2 (face font-lock-warning-face fontified t)) . 25241) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1)) (26715 34297 667771 157000) 0 nil] [nil nil ((25241 . 25243) (t 26715 34289 251944 147000)) ((#("\\\\" 0 2 (face font-lock-warning-face fontified t)) . 25241) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1)) (26715 34296 982917 285000) 0 nil])
([nil nil ((25710 . 25713)) nil (26715 34314 679002 146000) 0 nil] [nil nil ((25706 . 25708) (t 26715 34298 664953 874000)) ((#("\\\\" 0 2 (face font-lock-warning-face fontified t)) . 25706) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (t 26715 34310 791966 841000)) (26715 34310 788309 972000) 0 nil])
nil
nil
([nil nil ((26491 . 26493) (t 26715 34314 681971 105000)) nil (26715 34325 317260 762000) 0 nil])
nil
([nil nil ((27660 . 27662) (t 26715 34325 320983 20000)) nil (26715 34362 823004 501000) 0 nil])
([nil nil ((27829 . 27831) (t 26715 34351 900014 354000)) nil (26715 34385 675453 890000) 0 nil] [nil nil ((27828 . 27830) (t 26715 34351 900014 354000)) ((#("\\\\" 0 2 (face font-lock-warning-face fontified t)) . 27828)) (26715 34362 822753 98000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 27822)) nil (26715 34385 675453 579000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . 27952) (undo-tree-id369 . -1) (undo-tree-id370 . -1)) nil (26715 34385 675453 289000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 27695)) nil (26715 34385 675452 56000) 0 nil])
([nil nil ((27957 . 27959)) nil (26715 34385 675451 676000) 0 nil])
([nil nil ((#("\\href{mailto:" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 13 (face tex-verbatim fontified t)) . 28315) (undo-tree-id368 . -12)) nil (26715 34385 675451 315000) 0 nil])
([nil nil ((28320 . 28321)) nil (26715 34385 675450 824000) 0 nil])
([nil nil ((#("}{\\nolinkurl{azret\\_utebai@mail.ru}}" 0 2 (fontified t) 2 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 34 (face tex-verbatim fontified t) 34 36 (fontified t)) . 28336) (undo-tree-id367 . -35)) nil (26715 34385 675450 583000) 0 nil])
([nil nil ((28314 . 28315) (#("
" 0 1 (fontified t)) . -28314) (undo-tree-id366 . -1) 28313) nil (26715 34385 675449 481000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 28308) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1)) nil (26715 34385 810507 505000) 0 nil])
([nil nil ((28306 . 28307)) ((#(" " 0 1 (fontified t)) . 28306)) (26715 34386 826023 259000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 28422) (undo-tree-id376 . 1)) nil (26715 34392 386495 788000) 0 nil] [nil nil ((28422 . 28423)) ((#(" " 0 1 (fontified t)) . 28422) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1)) (26715 34385 675430 906000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 28551) (undo-tree-id374 . -1) (undo-tree-id375 . -1)) nil (26715 34392 386489 927000) 0 nil])
nil
([nil nil ((#("\\" 0 1 (fontified t)) . 28580) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (t 26715 34392 391066 158000)) nil (26715 34395 30491 862000) 0 nil])
([nil nil ((28580 . 28581)) nil (26715 34395 30478 587000) 0 nil])
([nil current ((28557 . 28559) (t 26715 34395 34069 702000)) nil (26715 34404 521248 799000) 0 nil])
nil
