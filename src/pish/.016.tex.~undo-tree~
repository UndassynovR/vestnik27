(undo-tree-save-format-version . 1)
"94042c293d0556855b79ad5e81a51a46360ed4f1"
[nil nil nil nil (26715 35974 691753 194000) 0 nil]
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/pish2/image10}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 13 (face font-lock-function-name-face latex-env-pair t fontified t) 13 14 (latex-env-pair t fontified t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 88 (face font-lock-builtin-face fontified t) 88 91 (fontified t) 91 100 (face font-lock-keyword-face fontified t) 100 103 (fontified t) 103 107 (face font-lock-keyword-face fontified t) 107 108 (latex-env-pair t fontified t) 108 114 (face font-lock-function-name-face latex-env-pair t fontified t) 114 115 (latex-env-pair t fontified t) 115 116 (fontified t)) . 152) (undo-tree-id20 . -103) (undo-tree-id21 . -103) (undo-tree-id22 . -18) (undo-tree-id23 . -18) (undo-tree-id24 . -18) (undo-tree-id25 . -18) (undo-tree-id26 . -18) (undo-tree-id27 . -18) (undo-tree-id28 . -18) (undo-tree-id29 . -18) (undo-tree-id30 . -18) (undo-tree-id31 . -18) (undo-tree-id32 . -18) (undo-tree-id33 . -18) (undo-tree-id34 . -18) (undo-tree-id35 . -18) (undo-tree-id36 . -18) (undo-tree-id37 . -18) (undo-tree-id38 . -18) (undo-tree-id39 . -30) (undo-tree-id40 . -30) (undo-tree-id41 . -30) (undo-tree-id42 . -30) (undo-tree-id43 . -30) (undo-tree-id44 . -90) (undo-tree-id45 . -90) (undo-tree-id46 . -90) (undo-tree-id47 . -90) (undo-tree-id48 . -90) (undo-tree-id49 . -103) (undo-tree-id50 . -103) (undo-tree-id51 . -103) (undo-tree-id52 . -103) (undo-tree-id53 . -103) (undo-tree-id54 . -103) (undo-tree-id55 . -103) (undo-tree-id56 . -103) (undo-tree-id57 . -103) (undo-tree-id58 . -103) (undo-tree-id59 . -103) (undo-tree-id60 . -103) (undo-tree-id61 . -103) (undo-tree-id62 . -103) (undo-tree-id63 . -103) (undo-tree-id64 . -103) (undo-tree-id65 . -103) (undo-tree-id66 . -103) (undo-tree-id67 . -103) (undo-tree-id68 . -103) (undo-tree-id69 . -103) (undo-tree-id70 . -103) (undo-tree-id71 . -103) (undo-tree-id72 . -116) (undo-tree-id73 . -115) 255 (t 26715 31280 525164 268000)) nil (26715 35974 691751 611000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/pish2/image10}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 88 (face font-lock-builtin-face fontified t) 88 91 (fontified t) 91 100 (face font-lock-keyword-face fontified t) 100 103 (fontified t) 103 107 (face font-lock-keyword-face fontified t) 107 108 (fontified t latex-env-pair t) 108 114 (face font-lock-function-name-face fontified t latex-env-pair t) 114 115 (fontified t latex-env-pair t) 115 116 (fontified t)) . 207) (undo-tree-id14 . -103) (undo-tree-id15 . -103) (undo-tree-id16 . -115) (undo-tree-id17 . -103) (undo-tree-id18 . -103) (undo-tree-id19 . -116) 310) nil (26715 35974 691697 68000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/pish2/image10}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 88 (face font-lock-builtin-face fontified t) 88 91 (fontified t) 91 100 (face font-lock-keyword-face fontified t) 100 103 (fontified t) 103 107 (face font-lock-keyword-face fontified t) 107 108 (fontified t latex-env-pair t) 108 114 (face font-lock-function-name-face fontified t latex-env-pair t) 114 115 (fontified t latex-env-pair t) 115 116 (fontified t)) . 235) (undo-tree-id8 . -103) (undo-tree-id9 . -103) (undo-tree-id10 . -115) (undo-tree-id11 . -103) (undo-tree-id12 . -103) (undo-tree-id13 . -116) 338) nil (26715 35974 691695 375000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/pish2/image10}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 88 (face font-lock-builtin-face fontified t) 88 91 (fontified t) 91 100 (face font-lock-keyword-face fontified t) 100 103 (fontified t) 103 107 (face font-lock-keyword-face fontified t) 107 108 (fontified t latex-env-pair t) 108 114 (face font-lock-function-name-face fontified t latex-env-pair t) 114 115 (fontified t latex-env-pair t) 115 116 (fontified t)) . 259) (undo-tree-id2 . -103) (undo-tree-id3 . -103) (undo-tree-id4 . -115) (undo-tree-id5 . -103) (undo-tree-id6 . -103) (undo-tree-id7 . -116) 362) nil (26715 35974 691828 946000) 0 nil])
([nil nil ((137 . 138) (#(" " 0 1 (face (bold) fontified t)) . 137)) nil (26715 36055 139012 402000) 0 nil] [nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 127) (undo-tree-id0 . -10) (undo-tree-id1 . -11)) ((127 . 138)) (26715 35974 691687 751000) 0 nil])
([nil nil ((140 . 141) (#("
" 0 1 (face (bold) fontified t)) . -140) 138) nil (26715 36055 139012 22000) 0 nil])
nil
([nil nil ((#("}" 0 1 (fontified t)) . 150)) nil (26715 36055 139011 531000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 151) (undo-tree-id172 . -10)) nil (26715 36055 139011 260000) 0 nil])
([nil nil ((150 . 151) (#("
" 0 1 (fontified t)) . -150) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) 138) nil (26715 36055 139010 108000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 150)) nil (26715 36055 138987 245000) 0 nil])
([nil nil ((182 . 183) (#("
" 0 1 (fontified t)) . -182) (179 . 180) (#("
" 0 1 (fontified t)) . -179) 150) nil (26715 36055 138986 524000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 192)) nil (26715 36055 138985 983000) 0 nil])
([nil nil ((192 . 193) (#("
" 0 1 (fontified t)) . -192) 191) nil (26715 36055 138985 512000) 0 nil])
([nil nil ((#("{\\bfseries ," 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 12 (face (bold) fontified t)) . 193) (undo-tree-id122 . -11)) nil (26715 36055 138985 71000) 0 nil])
([nil nil ((192 . 193) (#(" " 0 1 (fontified t)) . -192) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("," 0 1 (fontified t)) . -193) (undo-tree-id121 . -1) 194 (193 . 194)) nil (26715 36055 138983 979000) 0 nil])
([nil nil ((196 . 197) (#("
" 0 1 (fontified t)) . -196) (193 . 194) (#("
" 0 1 (fontified t)) . -193) (undo-tree-id117 . 1) 192) nil (26715 36055 138981 504000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 207)) nil (26715 36055 138980 542000) 0 nil])
([nil nil ((207 . 208) (#("
" 0 1 (fontified t)) . -207) 206) nil (26715 36055 138980 282000) 0 nil])
([nil nil ((#(" {\\bfseries " 0 1 (fontified t) 1 2 (fontified t) 2 11 (face font-lock-keyword-face fontified t) 11 12 (face (bold) fontified t)) . 207) (undo-tree-id116 . -11)) nil (26715 36055 138979 861000) 0 nil])
([nil nil ((211 . 212) (#("
" 0 1 (fontified t)) . -211) (208 . 209) (#("
" 0 1 (fontified t)) . -208) 207) nil (26715 36055 138979 190000) 0 nil])
([nil nil ((218 . 219)) nil (26715 36055 138978 769000) 0 nil])
([nil nil ((179 . 180) (#(" " 0 1 (fontified t)) . 179)) nil (26715 36055 138978 519000) 0 nil])
([nil nil ((193 . 194) (#(" " 0 1 (fontified t)) . 193) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1)) nil (26715 36055 138977 948000) 0 nil])
([nil nil ((208 . 209) (#(" " 0 1 (fontified t)) . 208)) nil (26715 36055 138954 53000) 0 nil])
([nil nil ((nil rear-nonsticky nil 221 . 222) (#("
" 0 1 (fontified nil)) . -302) (221 . 303)) nil (26715 36055 138953 652000) 0 nil])
([nil nil ((#("\\textsuperscript{\\envelope }" 0 16 (face font-lock-keyword-face fontified t) 16 17 (fontified t) 17 26 (face font-lock-keyword-face fontified t) 26 28 (fontified t)) . 234) (undo-tree-id104 . -27)) nil (26715 36055 138953 261000) 0 nil])
([nil nil ((264 . 265) (#("
" 0 1 (fontified t)) . -264) (249 . 250) (#("
" 0 1 (fontified t)) . -249) (235 . 236) (#("
" 0 1 (fontified t)) . -235) 234) nil (26715 36055 138952 299000) 0 nil])
([nil nil ((#("N. Alzhaxina, A. Dalabayev, I. Aubakirova, М. Mantay" 0 2 (fontified t) 2 3 (fontified t) 3 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 16 (fontified t) 16 17 (fontified t) 17 27 (fontified t) 27 28 (fontified t) 28 30 (fontified t) 30 31 (fontified t) 31 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 45 (fontified t) 45 46 (fontified t) 46 52 (fontified t)) . 222) (undo-tree-id103 . -51)) nil (26715 36055 138951 798000) 0 nil])
([nil nil ((nil rear-nonsticky nil 75 . 76) (nil fontified nil 24 . 76) (24 . 76)) nil (26715 36055 138950 396000) 0 nil])
([nil nil ((43 . 44) (25 . 43) (#("sectionw" 0 8 (face font-lock-keyword-face fontified t)) . -25) (undo-tree-id99 . -8) (undo-tree-id100 . -8) (undo-tree-id101 . -8) 33 (29 . 33) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -29) (undo-tree-id102 . -1) (24 . 30)) nil (26715 36055 138949 765000) 0 nil])
([nil nil ((96 . 97)) nil (26715 36055 138948 212000) 0 nil])
([nil nil ((#("\\bfseries " 0 9 (face font-lock-keyword-face fontified t) 9 10 (face (bold) fontified t)) . 98) (undo-tree-id98 . -9)) nil (26715 36055 138947 741000) 0 nil])
([nil nil ((156 . 157) (#("
" 0 1 (fontified t)) . -156) 98) nil (26715 36055 138946 929000) 0 nil])
([nil nil ((24 . 46) (284 . 304)) nil (26715 36055 138946 468000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 326) (undo-tree-id97 . -1)) nil (26715 36055 138945 957000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 326) (undo-tree-id96 . -1)) nil (26715 36055 138944 525000) 0 nil])
([nil nil ((390 . 391) (#("
" 0 1 (face font-lock-string-face fontified t)) . -390) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) 327) nil (26715 36055 138942 110000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -405) (undo-tree-id84 . -1) 390) nil (26715 36055 138925 339000) 0 nil])
([nil nil ((405 . 406) (#("
" 0 1 (fontified t)) . -405) 404) nil (26715 36055 138924 177000) 0 nil])
([nil nil ((327 . 347) (554 . 572)) nil (26715 36055 138923 666000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 447) (undo-tree-id83 . -10)) nil (26715 36055 138923 155000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 474)) nil (26715 36055 138922 183000) 0 nil])
([nil nil ((496 . 497) (#("
" 0 1 (fontified t)) . -496) 474) nil (26715 36055 138921 632000) 0 nil])
([nil nil ((#("\\href{mailto:" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 13 (face tex-verbatim fontified t)) . 497) (undo-tree-id82 . -12)) nil (26715 36055 138921 21000) 0 nil])
([nil nil ((#("}{\\nolinkurl{alzhaxina@inbox.ru}}" 0 2 (fontified t) 2 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 31 (face tex-verbatim fontified t) 31 33 (fontified t)) . 515) (undo-tree-id78 . -33) (undo-tree-id79 . -32) (undo-tree-id80 . -33) (undo-tree-id81 . -32)) nil (26715 36055 138919 578000) 0 nil])
([nil nil ((459 . 460) (448 . 459) (#("raggedri" 0 8 (face font-lock-keyword-face fontified t)) . -448) (undo-tree-id74 . -8) (undo-tree-id75 . -8) (undo-tree-id76 . -8) 456 (455 . 456) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -455) (undo-tree-id77 . -1) (447 . 456)) nil (26715 36055 138916 402000) 0 nil])
([nil nil ((31198 . 31199) 1502) nil (26715 36055 138900 382000) 0 nil])
([nil nil ((2277 . 2278) (#("
" 0 1 (face (bold) fontified t)) . -2277) 2223 (t 26715 36055 142766 647000)) nil (26715 36100 492956 604000) 0 nil])
([nil nil ((2303 . 2304) (#(" " 0 1 (face (bold) fontified t)) . 2303)) nil (26715 36100 492956 213000) 0 nil])
([nil nil ((2348 . 2349) (#(" " 0 1 (face (bold) fontified t)) . 2348)) nil (26715 36100 492955 903000) 0 nil])
([nil nil ((2363 . 2364) (#(" " 0 1 (fontified t)) . 2363)) nil (26715 36100 492955 693000) 0 nil])
([nil nil ((2368 . 2369) (#("
" 0 1 (fontified t)) . -2368) 2364) nil (26715 36100 492955 462000) 0 nil])
([nil nil ((2380 . 2381) (#(" " 0 1 (fontified t)) . 2380)) nil (26715 36100 492955 91000) 0 nil])
([nil nil ((2392 . 2393)) nil (26715 36100 492954 871000) 0 nil])
([nil nil ((2211 . 2233) (2395 . 2415) 2211) nil (26715 36100 492954 661000) 0 nil])
([nil nil ((2526 . 2527) (#("
" 0 1 (fontified t)) . -2526) (#("
" 0 1 (fontified t)) . -2526) (2500 . 2501) (#("
" 0 1 (fontified t)) . -2500) 2438) nil (26715 36100 492953 889000) 0 nil])
([nil nil ((2438 . 2458) (2620 . 2638)) nil (26715 36100 492953 498000) 0 nil])
([nil nil ((#("\\href{mailto:" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 13 (face tex-verbatim fontified t)) . 2575) (undo-tree-id253 . -12)) nil (26715 36100 492953 168000) 0 nil])
([nil nil ((#("}{\\nolinkurl{alzhaxina@inbox.ru}}" 0 2 (fontified t) 2 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 31 (face tex-verbatim fontified t) 31 33 (fontified t)) . 2593) (undo-tree-id249 . -33) (undo-tree-id250 . -32) (undo-tree-id251 . -33) (undo-tree-id252 . -32)) nil (26715 36100 492952 697000) 0 nil])
([nil nil ((4259 . 4260) (#("
" 0 1 (face (bold) fontified t)) . -4259) (undo-tree-id248 . -1) 4218) nil (26715 36100 492951 224000) 0 nil])
([nil nil ((#("{\\bfseries Н.E. Альжаксина\\textsuperscript{\\envelope }, А.Б. Далабаев, И.Е.
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 26 (face (bold) fontified t) 26 42 (face (font-lock-keyword-face bold) fontified t) 42 43 (face (bold) fontified t) 43 52 (face (font-lock-keyword-face bold) fontified t) 52 76 (face (bold) fontified t)) . 4280) (undo-tree-id175 . -75) (undo-tree-id176 . -66) (undo-tree-id177 . -66) (undo-tree-id178 . -66) (undo-tree-id179 . -66) (undo-tree-id180 . -66) (undo-tree-id181 . -66) (undo-tree-id182 . -66) (undo-tree-id183 . -66) (undo-tree-id184 . -66) (undo-tree-id185 . -66) (undo-tree-id186 . -66) (undo-tree-id187 . -66) (undo-tree-id188 . -66) (undo-tree-id189 . -66) (undo-tree-id190 . -66) (undo-tree-id191 . -66) (undo-tree-id192 . -66) (undo-tree-id193 . -66) (undo-tree-id194 . -66) (undo-tree-id195 . -66) (undo-tree-id196 . -66) (undo-tree-id197 . -66) (undo-tree-id198 . -66) (undo-tree-id199 . -66) (undo-tree-id200 . -66) (undo-tree-id201 . -66) (undo-tree-id202 . -66) (undo-tree-id203 . -66) (undo-tree-id204 . -66) (undo-tree-id205 . -66) (undo-tree-id206 . -66) (undo-tree-id207 . -66) (undo-tree-id208 . -66) (undo-tree-id209 . -66) (undo-tree-id210 . -66) (undo-tree-id211 . -66) (undo-tree-id212 . -66) (undo-tree-id213 . -66) (undo-tree-id214 . -66) (undo-tree-id215 . -66) (undo-tree-id216 . -66) (undo-tree-id217 . -66) (undo-tree-id218 . -66) (undo-tree-id219 . -66) (undo-tree-id220 . -66) (undo-tree-id221 . -66) (undo-tree-id222 . -66) (undo-tree-id223 . -66) (undo-tree-id224 . -66) (undo-tree-id225 . -66) (undo-tree-id226 . -66) (undo-tree-id227 . -66) (undo-tree-id228 . -66) (undo-tree-id229 . -66) (undo-tree-id230 . -66) (undo-tree-id231 . -66) (undo-tree-id232 . -66) (undo-tree-id233 . -66) (undo-tree-id234 . -66) (undo-tree-id235 . -66) (undo-tree-id236 . -66) (undo-tree-id237 . -66) (undo-tree-id238 . -66) (undo-tree-id239 . -66) (undo-tree-id240 . -66) (undo-tree-id241 . -66) (undo-tree-id242 . -66) (undo-tree-id243 . -66) (undo-tree-id244 . -66) (undo-tree-id245 . -66) (undo-tree-id246 . -66) (undo-tree-id247 . -76) 4346) nil (26715 36100 492949 210000) 0 nil])
([nil nil ((#("Аубакирова,\\textsuperscript{1}М.С. Мантай}
" 0 11 (fontified t) 11 27 (face font-lock-keyword-face fontified t) 27 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t)) . 4280) (undo-tree-id173 . -42) (undo-tree-id174 . -41) 4321) nil (26715 36100 492926 247000) 0 nil])
([nil nil ((4348 . 4349) (#("
" 0 1 (face font-lock-string-face fontified t)) . -4348) 4281) nil (26715 36100 492917 260000) 0 nil])
([nil nil ((4281 . 4301) (4440 . 4458) 4281) nil (26715 36100 492916 679000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4279 . 4280) (#("
" 0 1 (fontified nil)) . -4381) (4279 . 4382)) nil (26715 36100 492916 18000) 0 nil])
([nil nil ((4193 . 4215) (4382 . 4402)) nil (26715 36100 492912 261000) 0 nil])
([nil nil ((6321 . 6342) (10244 . 10260) (t 26715 36100 494695 838000)) nil (26715 36115 476982 207000) 0 nil])
([nil nil ((952 . 954) (t 26715 36115 479674 790000)) nil (26715 36133 215857 772000) 0 nil])
([nil nil ((326 . 338) (t 26715 36133 218651 325000)) nil (26715 36178 189739 98000) 0 nil])
([nil nil ((#("\\vspace{1em}" 0 7 (face font-lock-keyword-face fontified t) 7 12 (fontified t)) . 326) (undo-tree-id254 . -11) (undo-tree-id255 . -9) (undo-tree-id256 . -11) (undo-tree-id257 . -11) (undo-tree-id258 . -11) (undo-tree-id259 . -11) (undo-tree-id260 . -11) (undo-tree-id261 . -11) (undo-tree-id262 . -11) (undo-tree-id263 . -11) (undo-tree-id264 . -11) (undo-tree-id265 . -11) (undo-tree-id266 . -11) (undo-tree-id267 . -11) (undo-tree-id268 . -11) (undo-tree-id269 . -11) (undo-tree-id270 . -11) (undo-tree-id271 . -11) (undo-tree-id272 . -11) (undo-tree-id273 . -11) (undo-tree-id274 . -11) (undo-tree-id275 . -11) (undo-tree-id276 . -11) (undo-tree-id277 . -11) (undo-tree-id278 . -11) (undo-tree-id279 . -11) (undo-tree-id280 . -11) (undo-tree-id281 . -11) (undo-tree-id282 . -11) (undo-tree-id283 . -11) (undo-tree-id284 . -11) (undo-tree-id285 . -11) (undo-tree-id286 . -11) (undo-tree-id287 . -11) (undo-tree-id288 . -11) (undo-tree-id289 . -11) (undo-tree-id290 . -11) (undo-tree-id291 . -11) (undo-tree-id292 . -11) (undo-tree-id293 . -11) (undo-tree-id294 . -11) (undo-tree-id295 . -11) (undo-tree-id296 . -11) (undo-tree-id297 . -11) (undo-tree-id298 . -11) (undo-tree-id299 . -11) (undo-tree-id300 . -11) (undo-tree-id301 . -11) (undo-tree-id302 . -11) (undo-tree-id303 . -11) (undo-tree-id304 . -11) (undo-tree-id305 . -11) (undo-tree-id306 . -11) (undo-tree-id307 . -11) (undo-tree-id308 . -11) (undo-tree-id309 . -11) (undo-tree-id310 . -11) (undo-tree-id311 . -11) (undo-tree-id312 . -11) (undo-tree-id313 . -11) (undo-tree-id314 . -11) (undo-tree-id315 . -11) (undo-tree-id316 . -11) (undo-tree-id317 . -11) (undo-tree-id318 . -11) (undo-tree-id319 . -11) (undo-tree-id320 . -11) (undo-tree-id321 . -11) (undo-tree-id322 . -11) (undo-tree-id323 . -11) (undo-tree-id324 . -11) (undo-tree-id325 . -11) (undo-tree-id326 . -11) (undo-tree-id327 . -11) (undo-tree-id328 . -11) (undo-tree-id329 . -11) (undo-tree-id330 . -11) (undo-tree-id331 . -11) (undo-tree-id332 . -11) (undo-tree-id333 . -11) (undo-tree-id334 . -11) (undo-tree-id335 . -11) (undo-tree-id336 . -11) (undo-tree-id337 . -11) (undo-tree-id338 . -11) (undo-tree-id339 . -11) (undo-tree-id340 . -11) (undo-tree-id341 . -11) (undo-tree-id342 . -11) (undo-tree-id343 . -11) (undo-tree-id344 . -11) (undo-tree-id345 . -11) (undo-tree-id346 . -11) (undo-tree-id347 . -11) (undo-tree-id348 . -11) (undo-tree-id349 . -11) (undo-tree-id350 . -11) (undo-tree-id351 . -11) (undo-tree-id352 . -11) (undo-tree-id353 . -11) (undo-tree-id354 . -11) (undo-tree-id355 . -11) (undo-tree-id356 . -11) (undo-tree-id357 . -11) (undo-tree-id358 . -11) (undo-tree-id359 . -11) (undo-tree-id360 . -11) (undo-tree-id361 . -11) (undo-tree-id362 . -11) (undo-tree-id363 . -11) (undo-tree-id364 . -11) (undo-tree-id365 . -11) (undo-tree-id366 . -11) (undo-tree-id367 . -11) (undo-tree-id368 . -11) (undo-tree-id369 . -11) (undo-tree-id370 . -11) (undo-tree-id371 . -11) (undo-tree-id372 . -11) (undo-tree-id373 . -11) (undo-tree-id374 . -11) (undo-tree-id375 . -11) (undo-tree-id376 . -11) (undo-tree-id377 . -11) (undo-tree-id378 . -11) (undo-tree-id379 . -11) (undo-tree-id380 . -11) (undo-tree-id381 . -11) (undo-tree-id382 . -11) (undo-tree-id383 . -11) (undo-tree-id384 . -11) (undo-tree-id385 . -11) (undo-tree-id386 . -11) (undo-tree-id387 . -11) (undo-tree-id388 . -11) (undo-tree-id389 . -11) (undo-tree-id390 . -11) (undo-tree-id391 . -11) (undo-tree-id392 . -11) (undo-tree-id393 . -11) (undo-tree-id394 . -11) (undo-tree-id395 . -11) (undo-tree-id396 . -11) (undo-tree-id397 . -11) (undo-tree-id398 . -11) (undo-tree-id399 . -11) (undo-tree-id400 . -11) (undo-tree-id401 . -11) (undo-tree-id402 . -11) (undo-tree-id403 . -11) (undo-tree-id404 . -11) (undo-tree-id405 . -11) (undo-tree-id406 . -11) (undo-tree-id407 . -11) (undo-tree-id408 . -11) (undo-tree-id409 . -11) (undo-tree-id410 . -11) (undo-tree-id411 . -11) (undo-tree-id412 . -11) (undo-tree-id413 . -11) (undo-tree-id414 . -12) (undo-tree-id415 . -12) (t 26715 36178 191598 480000)) nil (26715 36188 29197 240000) 0 nil])
([nil nil ((nil rear-nonsticky nil 34 . 35) (nil fontified nil 23 . 35) (23 . 35)) nil (26715 36188 29085 249000) 0 nil])
([nil nil ((31 . 34) (#("." 0 1 (fontified t)) . -31) (undo-tree-id416 . -1) 32 (31 . 32) (#("1" 0 1 (fontified t)) . -31) (undo-tree-id417 . -1) 32 (t 26715 36188 31588 130000)) nil (26715 36204 480987 728000) 0 nil])
([nil nil ((2187 . 2189) (t 26715 36204 482571 756000)) nil (26715 36244 451830 778000) 0 nil])
([nil nil ((5082 . 5084) (t 26715 36244 459536 606000)) nil (26715 36271 966587 787000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10958 . 10959) (nil fontified nil 10354 . 10959) (10354 . 10959) (#("
%% \\begin{longtable}[]{@{}
%%   >{\\raggedright\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.4207}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.1968}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.1060}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.0910}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.0912}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.0944}}@{}}
%% \\toprule\\noalign{}
%% \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Factor of the Experiment}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Designation}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% \\emph{{\\bfseries X\\textsubscript{min}}}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% \\emph{{\\bfseries X\\textsubscript{i0}}}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% \\emph{{\\bfseries X\\textsubscript{max}}}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% \\emph{{\\bfseries ∆X}}
%% \\end{minipage} \\\\
%% \\midrule\\noalign{}
%% \\endhead
%% \\bottomrule\\noalign{}
%% \\endlastfoot
%% Mass fraction of curd, \\% & \\emph{х\\textsubscript{1}} & 70,0 & 80,0 &
%% 90,0 & 10,0 \\\\
%% Mass fraction of cryopowder, \\% & \\emph{х\\textsubscript{2}} & 2,0 & 4,0
%% & 6,0 & 2,0 \\\\
%% Mass fraction of fat in cream, \\% & \\emph{х\\textsubscript{3}} & 7,0 &
%% 20,0 & 33,0 & 13,0 \\\\
%% \\end{longtable}" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 10 (face font-lock-comment-face fontified t) 10 21 (face font-lock-comment-face fontified t latex-env-pair t) 21 28 (face font-lock-comment-face fontified t) 28 33 (face font-lock-comment-delimiter-face fontified t) 33 110 (face font-lock-comment-face fontified t) 110 115 (face font-lock-comment-delimiter-face fontified t) 115 190 (face font-lock-comment-face fontified t) 190 195 (face font-lock-comment-delimiter-face fontified t) 195 270 (face font-lock-comment-face fontified t) 270 275 (face font-lock-comment-delimiter-face fontified t) 275 280 (face font-lock-comment-face fontified t) 280 350 (face font-lock-comment-face fontified t) 350 355 (face font-lock-comment-delimiter-face fontified t) 355 430 (face font-lock-comment-face fontified t) 430 435 (face font-lock-comment-delimiter-face fontified t) 435 514 (face font-lock-comment-face fontified t) 514 517 (face font-lock-comment-delimiter-face fontified t) 517 536 (face font-lock-comment-face fontified t) 536 539 (face font-lock-comment-delimiter-face fontified t) 539 545 (face font-lock-comment-face fontified t) 545 555 (face font-lock-comment-face fontified t latex-env-pair t) 555 581 (face font-lock-comment-face fontified t) 581 584 (face font-lock-comment-delimiter-face fontified t) 584 599 (face font-lock-comment-face fontified t) 599 621 (face font-lock-comment-face fontified t) 621 624 (face font-lock-comment-delimiter-face fontified t) 624 628 (face font-lock-comment-face fontified t) 628 638 (face font-lock-comment-face fontified t latex-env-pair t) 638 647 (face font-lock-comment-face fontified t) 647 657 (face font-lock-comment-face fontified t latex-env-pair t) 657 683 (face font-lock-comment-face fontified t) 683 686 (face font-lock-comment-delimiter-face fontified t) 686 710 (face font-lock-comment-face fontified t) 710 713 (face font-lock-comment-delimiter-face fontified t) 713 717 (face font-lock-comment-face fontified t) 717 727 (face font-lock-comment-face fontified t latex-env-pair t) 727 736 (face font-lock-comment-face fontified t) 736 746 (face font-lock-comment-face fontified t latex-env-pair t) 746 772 (face font-lock-comment-face fontified t) 772 775 (face font-lock-comment-delimiter-face fontified t) 775 815 (face font-lock-comment-face fontified t) 815 818 (face font-lock-comment-delimiter-face fontified t) 818 822 (face font-lock-comment-face fontified t) 822 832 (face font-lock-comment-face fontified t latex-env-pair t) 832 835 (face font-lock-comment-face fontified t) 835 841 (fontified t face font-lock-comment-face) 841 851 (fontified t face font-lock-comment-face latex-env-pair t) 851 877 (fontified t face font-lock-comment-face) 877 880 (face font-lock-comment-delimiter-face fontified t) 880 919 (face font-lock-comment-face fontified t) 919 922 (face font-lock-comment-delimiter-face fontified t) 922 926 (face font-lock-comment-face fontified t) 926 936 (face font-lock-comment-face fontified t latex-env-pair t) 936 945 (face font-lock-comment-face fontified t) 945 955 (face font-lock-comment-face fontified t latex-env-pair t) 955 981 (face font-lock-comment-face fontified t) 981 984 (face font-lock-comment-delimiter-face fontified t) 984 1024 (face font-lock-comment-face fontified t) 1024 1027 (face font-lock-comment-delimiter-face fontified t) 1027 1031 (face font-lock-comment-face fontified t) 1031 1041 (face font-lock-comment-face fontified t latex-env-pair t) 1041 1050 (face font-lock-comment-face fontified t) 1050 1060 (face font-lock-comment-face fontified t latex-env-pair t) 1060 1086 (face font-lock-comment-face fontified t) 1086 1089 (face font-lock-comment-delimiter-face fontified t) 1089 1111 (face font-lock-comment-face fontified t) 1111 1114 (face font-lock-comment-delimiter-face fontified t) 1114 1118 (face font-lock-comment-face fontified t) 1118 1128 (face font-lock-comment-face fontified t latex-env-pair t) 1128 1132 (face font-lock-comment-face fontified t) 1132 1135 (face font-lock-comment-delimiter-face fontified t) 1135 1154 (face font-lock-comment-face fontified t) 1154 1157 (face font-lock-comment-delimiter-face fontified t) 1157 1166 (face font-lock-comment-face fontified t) 1166 1169 (face font-lock-comment-delimiter-face fontified t) 1169 1191 (face font-lock-comment-face fontified t) 1191 1194 (face font-lock-comment-delimiter-face fontified t) 1194 1207 (face font-lock-comment-face fontified t) 1207 1210 (face font-lock-comment-delimiter-face fontified t) 1210 1280 (face font-lock-comment-face fontified t) 1280 1283 (face font-lock-comment-delimiter-face fontified t) 1283 1298 (face font-lock-comment-face fontified t) 1298 1301 (face font-lock-comment-delimiter-face fontified t) 1301 1373 (face font-lock-comment-face fontified t) 1373 1376 (face font-lock-comment-delimiter-face fontified t) 1376 1391 (face font-lock-comment-face fontified t) 1391 1394 (face font-lock-comment-delimiter-face fontified t) 1394 1447 (face font-lock-comment-face fontified t) 1447 1464 (face font-lock-comment-face fontified t) 1464 1467 (face font-lock-comment-delimiter-face fontified t) 1467 1489 (face font-lock-comment-face fontified t) 1489 1492 (face font-lock-comment-delimiter-face fontified t) 1492 1496 (face font-lock-comment-face fontified t) 1496 1507 (face font-lock-comment-face fontified t latex-env-pair t)) . 10354) (undo-tree-id429 . -1489) (undo-tree-id430 . -1506) (undo-tree-id431 . -430) (undo-tree-id432 . -1489) 11862 (t 26715 36271 968516 30000)) nil (26715 36376 896025 765000) 0 nil])
([nil nil ((#("% \\usepackage{color}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 21 (face font-lock-comment-face fontified t)) . 10354) (undo-tree-id427 . -20) (undo-tree-id428 . -21)) nil (26715 36376 896023 801000) 0 nil])
([nil nil ((#("% \\usepackage{tabularray}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 25 (face font-lock-comment-face fontified t) 25 26 (face font-lock-comment-face fontified t)) . 10354) (undo-tree-id426 . -25)) nil (26715 36376 896022 749000) 0 nil])
([nil nil ((#("{\\bfseries Table 1 - Decoded Values of the Factors}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 50 (face (bold) fontified t) 50 52 (fontified t)) . -10302) (undo-tree-id422 . -52) (undo-tree-id423 . -52) (undo-tree-id424 . -52) (undo-tree-id425 . -52) 10354) nil (26715 36376 896021 506000) 0 nil])
([nil nil ((10319 . 10320) 10302) nil (26715 36376 896019 362000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10383 . 10384) (nil fontified nil 10320 . 10384) (10320 . 10384)) nil (26715 36376 896019 42000) 0 nil])
([nil nil ((10541 . 10542) (#("			" 0 3 (face (bold) fontified t)) . 10541) (undo-tree-id421 . -2)) nil (26715 36376 896018 481000) 0 nil])
([nil nil ((10687 . 10688) (#("			" 0 3 (fontified nil)) . 10687) (#("
" 0 1 (fontified t)) . -10687) (undo-tree-id420 . -1) 10686) nil (26715 36376 896017 289000) 0 nil])
([nil nil ((10757 . 10758) (#("			" 0 3 (fontified nil)) . 10757) (#("
" 0 1 (fontified t)) . -10757) (undo-tree-id419 . -1) 10756) nil (26715 36376 896015 876000) 0 nil])
([nil nil ((10829 . 10830) (#("			" 0 3 (fontified nil)) . 10829) (#("
" 0 1 (fontified t)) . -10829) (undo-tree-id418 . -1) 10828) nil (26715 36376 896011 848000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 10586) (t 26715 36376 897461 758000)) nil (26715 36430 607816 656000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10586)) nil (26715 36430 607816 306000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 10586)) nil (26715 36430 607815 955000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 10586)) nil (26715 36430 607815 594000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10586)) nil (26715 36430 607815 344000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 10586)) nil (26715 36430 607815 103000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10586)) nil (26715 36430 607814 853000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 10586) (undo-tree-id453 . -1)) nil (26715 36430 607814 653000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 10586) (undo-tree-id451 . -1) (undo-tree-id452 . -1)) nil (26715 36430 607813 921000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10586) (undo-tree-id449 . -1) (undo-tree-id450 . -1)) nil (26715 36430 607812 869000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 10586) (undo-tree-id447 . -1) (undo-tree-id448 . -1)) nil (26715 36430 607811 887000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 10586) (undo-tree-id445 . -1) (undo-tree-id446 . -1)) nil (26715 36430 607809 804000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10586) (undo-tree-id443 . -1) (undo-tree-id444 . -1)) nil (26715 36430 607809 22000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 10586) (undo-tree-id441 . -1) (undo-tree-id442 . -1)) nil (26715 36430 607807 950000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 10586) (undo-tree-id439 . -1) (undo-tree-id440 . -1)) nil (26715 36430 607806 828000) 0 nil])
([nil nil ((10586 . 10587) (#("{" 0 1 (fontified t)) . 10586) (undo-tree-id438 . -1)) nil (26715 36430 607805 686000) 0 nil])
([nil nil ((10592 . 10593) (#("}" 0 1 (fontified t)) . 10592)) nil (26715 36430 607804 754000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 10591)) nil (26715 36430 607804 313000) 0 nil])
([nil nil ((10588 . 10590)) nil (26715 36430 607804 163000) 0 nil])
([nil nil ((10593 . 10594)) nil (26715 36430 607804 3000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 10598)) nil (26715 36430 607803 852000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10598)) nil (26715 36430 607803 191000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 10598)) nil (26715 36430 607802 931000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 10598)) nil (26715 36430 607802 600000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10598)) nil (26715 36430 607802 189000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 10598)) nil (26715 36430 607802 19000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10598)) nil (26715 36430 607801 859000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 10598)) nil (26715 36430 607801 698000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 10598)) nil (26715 36430 607801 448000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10598)) nil (26715 36430 607801 137000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 10598)) nil (26715 36430 607800 867000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 10598)) nil (26715 36430 607800 586000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10598)) nil (26715 36430 607800 356000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 10598) (undo-tree-id437 . -1)) nil (26715 36430 607800 25000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 10598) (undo-tree-id435 . -1) (undo-tree-id436 . -1)) nil (26715 36430 607799 364000) 0 nil])
([nil nil ((10598 . 10599) (#("{" 0 1 (fontified t)) . 10598) (undo-tree-id434 . -1)) nil (26715 36430 607798 61000) 0 nil])
([nil nil ((10602 . 10603) (#("}" 0 1 (fontified t)) . 10602)) nil (26715 36430 607796 969000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 10603)) nil (26715 36430 607950 518000) 0 nil])
([nil nil ((10600 . 10601) (#("-" 0 1 (face tex-math fontified nil)) . -10600) 10601 (10600 . 10601)) nil (26715 36458 537020 945000) 0 nil] [nil nil ((10601 . 10602) (#("-" 0 1 (face tex-math fontified t)) . -10601) (undo-tree-id433 . -1) 10602 (10601 . 10602)) ((#("-" 0 1 (face tex-math fontified nil)) . 10601) (undo-tree-id454 . -1) (10601 . 10602) (#("_" 0 1 (face tex-math fontified t)) . 10601)) (26715 36430 607792 872000) 0 nil])
([nil nil ((10601 . 10602)) nil (26715 36458 537020 634000) 0 nil])
nil
([nil nil ((10604 . 10605)) nil (26715 36458 537020 364000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 10609)) nil (26715 36458 537020 203000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10609)) nil (26715 36458 537020 23000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 10609)) nil (26715 36458 537019 853000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 10609)) nil (26715 36458 537019 512000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10609)) nil (26715 36458 537019 101000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 10609)) nil (26715 36458 537018 931000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10609)) nil (26715 36458 537018 771000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 10609)) nil (26715 36458 537018 530000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 10609)) nil (26715 36458 537018 280000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10609)) nil (26715 36458 537018 89000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 10609)) nil (26715 36458 537017 919000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 10609)) nil (26715 36458 537017 679000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10609)) nil (26715 36458 537017 468000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 10609)) nil (26715 36458 537017 268000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 10609)) nil (26715 36458 537017 88000) 0 nil])
([nil nil ((10609 . 10610) (#("{" 0 1 (fontified t)) . 10609)) nil (26715 36458 537016 897000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 10614)) nil (26715 36458 537016 526000) 0 nil])
([nil nil ((10614 . 10615) (#("}" 0 1 (fontified t)) . 10614)) nil (26715 36458 537016 316000) 0 nil])
([nil nil ((10611 . 10613)) nil (26715 36458 537016 96000) 0 nil])
([nil nil ((10616 . 10617)) nil (26715 36458 537015 925000) 0 nil])
([nil nil ((nil face (subscript) 10617 . 10618) (nil fontified nil 10617 . 10618) (10617 . 10618) (#("&" 0 1 (fontified t)) . 10617) (undo-tree-id488 . 1)) nil (26715 36458 537015 595000) 0 nil])
([nil nil ((#("∆" 0 1 (fontified t)) . 10621)) nil (26715 36458 537014 833000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 10621)) nil (26715 36458 537014 643000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10621)) nil (26715 36458 537014 372000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 10621) (undo-tree-id487 . -1)) nil (26715 36458 537014 42000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 10621) (undo-tree-id485 . -1) (undo-tree-id486 . -1)) nil (26715 36458 537013 601000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10621) (undo-tree-id483 . -1) (undo-tree-id484 . -1)) nil (26715 36458 537012 569000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 10621) (undo-tree-id481 . -1) (undo-tree-id482 . -1)) nil (26715 36458 537011 838000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10621) (undo-tree-id479 . -1) (undo-tree-id480 . -1)) nil (26715 36458 537010 916000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 10621) (undo-tree-id477 . -1) (undo-tree-id478 . -1)) nil (26715 36458 537010 24000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 10621) (undo-tree-id475 . -1) (undo-tree-id476 . -1)) nil (26715 36458 537008 792000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10621) (undo-tree-id473 . -1) (undo-tree-id474 . -1)) nil (26715 36458 537007 369000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 10621) (undo-tree-id471 . -1) (undo-tree-id472 . -1)) nil (26715 36458 537006 257000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 10621) (undo-tree-id469 . -1) (undo-tree-id470 . -1)) nil (26715 36458 537005 25000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10621) (undo-tree-id467 . -1) (undo-tree-id468 . -1)) nil (26715 36458 537003 943000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 10621) (undo-tree-id465 . -1) (undo-tree-id466 . -1)) nil (26715 36458 537002 350000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 10621) (undo-tree-id463 . -1) (undo-tree-id464 . -1)) nil (26715 36458 537000 897000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 10621) (undo-tree-id461 . -1) (undo-tree-id462 . -1)) nil (26715 36458 536999 755000) 0 nil])
([nil nil ((#("X" 0 1 (fontified t)) . 10621) (undo-tree-id459 . -1) (undo-tree-id460 . -1)) nil (26715 36458 536998 563000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 10621) (undo-tree-id457 . -1) (undo-tree-id458 . -1)) nil (26715 36458 536997 240000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 10621) (undo-tree-id455 . -1) (undo-tree-id456 . -1)) nil (26715 36458 536995 737000) 0 nil])
([nil nil ((10621 . 10632)) nil (26715 36458 536978 916000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 10663) (t 26715 36458 539442 631000)) nil (26715 36479 100720 718000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10663)) nil (26715 36479 100720 397000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 10663)) nil (26715 36479 100720 237000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 10663)) nil (26715 36479 100720 27000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10663)) nil (26715 36479 100719 876000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 10663)) nil (26715 36479 100719 696000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10663)) nil (26715 36479 100719 526000) 0 nil])
([nil nil ((10663 . 10664) (#("{" 0 1 (fontified t)) . 10663) (undo-tree-id520 . -1)) nil (26715 36479 100719 235000) 0 nil])
([nil nil ((10666 . 10667) (#("}" 0 1 (fontified t)) . 10666) (undo-tree-id519 . -1)) nil (26715 36479 100718 444000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 10732) (undo-tree-id517 . -1) (undo-tree-id518 . -1)) nil (26715 36479 100717 903000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10732) (undo-tree-id515 . -1) (undo-tree-id516 . -1)) nil (26715 36479 100716 991000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 10732) (undo-tree-id513 . -1) (undo-tree-id514 . -1)) nil (26715 36479 100716 230000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 10732) (undo-tree-id511 . -1) (undo-tree-id512 . -1)) nil (26715 36479 100715 308000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10732) (undo-tree-id509 . -1) (undo-tree-id510 . -1)) nil (26715 36479 100714 236000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 10732) (undo-tree-id507 . -1) (undo-tree-id508 . -1)) nil (26715 36479 100712 22000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10732) (undo-tree-id505 . -1) (undo-tree-id506 . -1)) nil (26715 36479 100711 130000) 0 nil])
([nil nil ((10732 . 10733) (#("{" 0 1 (fontified t)) . 10732) (undo-tree-id504 . -1)) nil (26715 36479 100710 208000) 0 nil])
([nil nil ((10735 . 10736) (#("}" 0 1 (fontified t)) . 10735)) nil (26715 36479 100709 477000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 10799) (undo-tree-id503 . -1)) nil (26715 36479 100709 246000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10799) (undo-tree-id501 . -1) (undo-tree-id502 . -1)) nil (26715 36479 100708 435000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 10799) (undo-tree-id499 . -1) (undo-tree-id500 . -1)) nil (26715 36479 100707 583000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 10799) (undo-tree-id497 . -1) (undo-tree-id498 . -1)) nil (26715 36479 100706 281000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10799) (undo-tree-id495 . -1) (undo-tree-id496 . -1)) nil (26715 36479 100705 8000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 10799) (undo-tree-id493 . -1) (undo-tree-id494 . -1)) nil (26715 36479 100703 456000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10799) (undo-tree-id491 . -1) (undo-tree-id492 . -1)) nil (26715 36479 100815 35000) 0 nil])
([nil nil ((10799 . 10800) (#("{" 0 1 (fontified t)) . 10799) (undo-tree-id522 . -1)) nil (26715 36483 833734 459000) 0 nil] [nil nil ((#("{" 0 1 (fontified t)) . 10799) (undo-tree-id489 . -1) (undo-tree-id490 . -1)) ((10799 . 10800)) (26715 36479 100697 64000) 0 nil])
([nil nil ((10802 . 10803) (#("}" 0 1 (fontified t)) . 10802) (undo-tree-id521 . -1)) nil (26715 36483 833733 347000) 0 nil])
nil
([nil nil ((10801 . 10802)) nil (26715 36483 833725 162000) 0 nil])
([nil nil ((10734 . 10735)) nil (26715 36483 833724 520000) 0 nil])
([nil nil ((10665 . 10666)) nil (26715 36483 833720 212000) 0 nil])
([nil nil ((#("  width = \\linewidth,
" 0 10 (fontified t) 10 20 (face font-lock-keyword-face fontified t) 20 22 (fontified t)) . 10420) (undo-tree-id555 . -21) (undo-tree-id556 . -20) (undo-tree-id557 . -20) (undo-tree-id558 . -20) (undo-tree-id559 . -20) (undo-tree-id560 . -20) (undo-tree-id561 . -20) (undo-tree-id562 . -20) (undo-tree-id563 . -20) (undo-tree-id564 . -20) (undo-tree-id565 . -20) (undo-tree-id566 . -20) (undo-tree-id567 . -20) (undo-tree-id568 . -20) (undo-tree-id569 . -20) (undo-tree-id570 . -20) (undo-tree-id571 . -20) (undo-tree-id572 . -20) (undo-tree-id573 . -20) (undo-tree-id574 . -20) (undo-tree-id575 . -20) (undo-tree-id576 . -20) (undo-tree-id577 . -20) (undo-tree-id578 . -20) (undo-tree-id579 . -20) (undo-tree-id580 . -20) (undo-tree-id581 . -20) (undo-tree-id582 . -20) (undo-tree-id583 . -20) (undo-tree-id584 . -20) (undo-tree-id585 . -22) 10440 (t 26715 36483 836440 272000)) nil (26715 36489 403428 311000) 0 nil])
([nil nil ((#("  colspec = {Q[427]Q[188]Q[87]Q[71]Q[94]Q[71]},
" 0 47 (fontified t) 47 48 (fontified t)) . 10420) (undo-tree-id523 . -47) (undo-tree-id524 . -30) (undo-tree-id525 . -30) (undo-tree-id526 . -30) (undo-tree-id527 . -30) (undo-tree-id528 . -30) (undo-tree-id529 . -30) (undo-tree-id530 . -30) (undo-tree-id531 . -30) (undo-tree-id532 . -30) (undo-tree-id533 . -30) (undo-tree-id534 . -30) (undo-tree-id535 . -30) (undo-tree-id536 . -30) (undo-tree-id537 . -30) (undo-tree-id538 . -30) (undo-tree-id539 . -47) (undo-tree-id540 . -20) (undo-tree-id541 . -20) (undo-tree-id542 . -20) (undo-tree-id543 . -20) (undo-tree-id544 . -20) (undo-tree-id545 . -20) (undo-tree-id546 . -20) (undo-tree-id547 . -20) (undo-tree-id548 . -20) (undo-tree-id549 . -20) (undo-tree-id550 . -20) (undo-tree-id551 . -20) (undo-tree-id552 . -20) (undo-tree-id553 . -20) (undo-tree-id554 . -48) 10440) nil (26715 36489 403416 499000) 0 nil])
([nil nil ((10594 . 10595) (#("х" 0 1 (face tex-math fontified t)) . 10594) (undo-tree-id588 . -1) (t 26715 36489 405439 964000)) nil (26715 36499 539101 915000) 0 nil])
([nil nil ((10664 . 10665) (#("х" 0 1 (face tex-math fontified t)) . 10664) (undo-tree-id587 . -1)) nil (26715 36499 539100 332000) 0 nil])
([nil nil ((10732 . 10733) (#("х" 0 1 (face tex-math fontified t)) . 10732) (undo-tree-id586 . -1)) nil (26715 36499 539094 681000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12559 . 12560) (nil fontified nil 11136 . 12560) (11136 . 12560) (#("
%% \\begin{longtable}[]{@{}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 14\\tabcolsep) * \\real{0.1548}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 14\\tabcolsep) * \\real{0.0976}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 14\\tabcolsep) * \\real{0.0866}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 14\\tabcolsep) * \\real{0.1020}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 14\\tabcolsep) * \\real{0.0920}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 14\\tabcolsep) * \\real{0.1024}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 14\\tabcolsep) * \\real{0.1026}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 14\\tabcolsep) * \\real{0.2620}}@{}}
%% \\toprule\\noalign{}
%% \\multirow{3}{=}{\\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Experiment No.}
%% \\end{minipage}} &
%% \\multicolumn{6}{>{\\centering\\arraybackslash}p{(\\linewidth - 14\\tabcolsep) * \\real{0.5833} + 10\\tabcolsep}}{%
%% \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Levels of сontrolled factors}
%% \\end{minipage}} &
%% \\multirow{2}{=}{\\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Viscosity, mPa·s}
%% \\end{minipage}} \\\\
%% &
%% \\multicolumn{3}{>{\\centering\\arraybackslash}p{(\\linewidth - 14\\tabcolsep) * \\real{0.2862} + 4\\tabcolsep}}{%
%% \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Coded Values}
%% \\end{minipage}} &
%% \\multicolumn{3}{>{\\centering\\arraybackslash}p{(\\linewidth - 14\\tabcolsep) * \\real{0.2971} + 4\\tabcolsep}}{%
%% \\begin{minipage}[b]{\\linewidth}\\centering
%% {\\bfseries Actual Values}
%% \\end{minipage}} \\\\
%% & \\begin{minipage}[b]{\\linewidth}\\centering
%% \\emph{х\\textsubscript{1}}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% \\emph{х\\textsubscript{2}}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% \\emph{х\\textsubscript{3}}
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% Т, \\%
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% К, \\%
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% С, \\%
%% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\centering
%% \\emph{у}
%% \\end{minipage} \\\\
%% \\midrule\\noalign{}
%% \\endhead
%% \\bottomrule\\noalign{}
%% \\endlastfoot
%% 1 & 0 & 0 & 0 & 80,0 & 4,0 & 20,0 & 2263,0 \\\\
%% 2 & -1 & -1 & 0 & 70,0 & 2,0 & 20,0 & 914,0 \\\\
%% 3 & +1 & -1 & 0 & 90,0 & 2,0 & 20,0 & 985,0 \\\\
%% 4 & -1 & +1 & 0 & 70,0 & 6,0 & 20,0 & 1062,0 \\\\
%% 5 & +1 & +1 & 0 & 90,0 & 6,0 & 20,0 & 2810,0 \\\\
%% 6 & -1 & 0 & -1 & 70,0 & 4,0 & 7,0 & 948,0 \\\\
%% 7 & +1 & 0 & -1 & 90,0 & 4,0 & 7,0 & 948,0 \\\\
%% 8 & 0 & 0 & 0 & 80,0 & 4,0 & 20,0 & 2269,0 \\\\
%% 9 & -1 & 0 & +1 & 70,0 & 4,0 & 33,0 & 2389,0 \\\\
%% 10 & +1 & 0 & +1 & 90,0 & 4,0 & 33,0 & 2364,0 \\\\
%% 11 & 0 & -1 & -1 & 80,0 & 2,0 & 7,0 & 952,0 \\\\
%% 12 & 0 & +1 & -1 & 80,0 & 6,0 & 7,0 & 961,0 \\\\
%% 13 & 0 & -1 & +1 & 80,0 & 2,0 & 33,0 & 1042,0 \\\\
%% 14 & 0 & +1 & +1 & 80,0 & 6,0 & 33,0 & 2501,0 \\\\
%% 15 & 0 & 0 & 0 & 80,0 & 4,0 & 20,0 & 2167,0 \\\\
%% \\end{longtable}" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 10 (face font-lock-comment-face fontified t) 10 21 (face font-lock-comment-face fontified t latex-env-pair t) 21 28 (face font-lock-comment-face fontified t) 28 33 (face font-lock-comment-delimiter-face fontified t) 33 108 (face font-lock-comment-face fontified t) 108 113 (face font-lock-comment-delimiter-face fontified t) 113 188 (face font-lock-comment-face fontified t) 188 193 (face font-lock-comment-delimiter-face fontified t) 193 268 (face font-lock-comment-face fontified t) 268 273 (face font-lock-comment-delimiter-face fontified t) 273 348 (face font-lock-comment-face fontified t) 348 353 (face font-lock-comment-delimiter-face fontified t) 353 428 (face font-lock-comment-face fontified t) 428 433 (face font-lock-comment-delimiter-face fontified t) 433 508 (face font-lock-comment-face fontified t) 508 513 (face font-lock-comment-delimiter-face fontified t) 513 588 (face font-lock-comment-face fontified t) 588 593 (face font-lock-comment-delimiter-face fontified t) 593 602 (face font-lock-comment-face fontified t) 602 672 (face font-lock-comment-face fontified t) 672 675 (face font-lock-comment-delimiter-face fontified t) 675 694 (face font-lock-comment-face fontified t) 694 697 (face font-lock-comment-delimiter-face fontified t) 697 719 (face font-lock-comment-face fontified t) 719 729 (face font-lock-comment-face fontified t latex-env-pair t) 729 747 (face font-lock-comment-face fontified t) 747 755 (face font-lock-comment-face fontified t) 755 758 (face font-lock-comment-delimiter-face fontified t) 758 785 (face font-lock-comment-face fontified t) 785 788 (face font-lock-comment-delimiter-face fontified t) 788 792 (face font-lock-comment-face fontified t) 792 799 (face font-lock-comment-face fontified t latex-env-pair t) 799 802 (face font-lock-comment-face fontified t latex-env-pair t) 802 806 (face font-lock-comment-face fontified t) 806 809 (face font-lock-comment-delimiter-face fontified t) 809 902 (face font-lock-comment-face fontified t) 902 911 (face font-lock-comment-face fontified t) 911 918 (face font-lock-comment-face fontified t) 918 921 (face font-lock-comment-delimiter-face fontified t) 921 927 (face font-lock-comment-face fontified t) 927 929 (face font-lock-comment-face fontified t latex-env-pair t) 929 937 (face font-lock-comment-face fontified t latex-env-pair t) 937 963 (face font-lock-comment-face fontified t) 963 966 (face font-lock-comment-delimiter-face fontified t) 966 978 (face font-lock-comment-face fontified t) 978 981 (face font-lock-comment-face fontified t) 981 993 (face font-lock-comment-face fontified t) 993 1007 (face font-lock-comment-face fontified t) 1007 1010 (face font-lock-comment-delimiter-face fontified t) 1010 1014 (face font-lock-comment-face fontified t) 1014 1024 (face font-lock-comment-face fontified t latex-env-pair t) 1024 1028 (face font-lock-comment-face fontified t) 1028 1031 (face font-lock-comment-delimiter-face fontified t) 1031 1053 (face font-lock-comment-face fontified t) 1053 1059 (face font-lock-comment-face fontified t latex-env-pair t) 1059 1063 (face font-lock-comment-face fontified t latex-env-pair t) 1063 1089 (face font-lock-comment-face fontified t) 1089 1092 (face font-lock-comment-delimiter-face fontified t) 1092 1121 (face font-lock-comment-face fontified t) 1121 1124 (face font-lock-comment-delimiter-face fontified t) 1124 1128 (face font-lock-comment-face fontified t) 1128 1138 (fontified t face font-lock-comment-face latex-env-pair t) 1138 1143 (fontified t face font-lock-comment-face) 1143 1146 (face font-lock-comment-delimiter-face fontified t) 1146 1148 (face font-lock-comment-face fontified t) 1148 1151 (face font-lock-comment-delimiter-face fontified t) 1151 1240 (face font-lock-comment-face fontified t) 1240 1259 (face font-lock-comment-face fontified t) 1259 1262 (face font-lock-comment-delimiter-face fontified t) 1262 1268 (face font-lock-comment-face fontified t) 1268 1278 (face font-lock-comment-face fontified t latex-env-pair t) 1278 1304 (face font-lock-comment-face fontified t) 1304 1307 (face font-lock-comment-delimiter-face fontified t) 1307 1332 (face font-lock-comment-face fontified t) 1332 1335 (face font-lock-comment-delimiter-face fontified t) 1335 1339 (face font-lock-comment-face fontified t) 1339 1349 (face font-lock-comment-face fontified t latex-env-pair t) 1349 1353 (face font-lock-comment-face fontified t) 1353 1356 (face font-lock-comment-delimiter-face fontified t) 1356 1464 (face font-lock-comment-face fontified t) 1464 1467 (face font-lock-comment-delimiter-face fontified t) 1467 1473 (face font-lock-comment-face fontified t) 1473 1483 (face font-lock-comment-face fontified t latex-env-pair t) 1483 1509 (face font-lock-comment-face fontified t) 1509 1512 (face font-lock-comment-delimiter-face fontified t) 1512 1538 (face font-lock-comment-face fontified t) 1538 1541 (face font-lock-comment-delimiter-face fontified t) 1541 1545 (face font-lock-comment-face fontified t) 1545 1555 (face font-lock-comment-face fontified t latex-env-pair t) 1555 1560 (face font-lock-comment-face fontified t) 1560 1563 (face font-lock-comment-delimiter-face fontified t) 1563 1571 (face font-lock-comment-face fontified t) 1571 1581 (face font-lock-comment-face fontified t latex-env-pair t) 1581 1607 (face font-lock-comment-face fontified t) 1607 1610 (face font-lock-comment-delimiter-face fontified t) 1610 1636 (face font-lock-comment-face fontified t) 1636 1639 (face font-lock-comment-delimiter-face fontified t) 1639 1643 (face font-lock-comment-face fontified t) 1643 1653 (face font-lock-comment-face fontified t latex-env-pair t) 1653 1662 (face font-lock-comment-face fontified t) 1662 1672 (face font-lock-comment-face fontified t latex-env-pair t) 1672 1698 (face font-lock-comment-face fontified t) 1698 1701 (face font-lock-comment-delimiter-face fontified t) 1701 1727 (face font-lock-comment-face fontified t) 1727 1730 (face font-lock-comment-delimiter-face fontified t) 1730 1734 (face font-lock-comment-face fontified t) 1734 1744 (face font-lock-comment-face fontified t latex-env-pair t) 1744 1753 (face font-lock-comment-face fontified t) 1753 1763 (face font-lock-comment-face fontified t latex-env-pair t) 1763 1789 (face font-lock-comment-face fontified t) 1789 1792 (face font-lock-comment-delimiter-face fontified t) 1792 1818 (face font-lock-comment-face fontified t) 1818 1821 (face font-lock-comment-delimiter-face fontified t) 1821 1825 (face font-lock-comment-face fontified t) 1825 1835 (face font-lock-comment-face fontified t latex-env-pair t) 1835 1844 (face font-lock-comment-face fontified t) 1844 1854 (face font-lock-comment-face fontified t latex-env-pair t) 1854 1880 (face font-lock-comment-face fontified t) 1880 1883 (face font-lock-comment-delimiter-face fontified t) 1883 1889 (face font-lock-comment-face fontified t) 1889 1892 (face font-lock-comment-delimiter-face fontified t) 1892 1896 (face font-lock-comment-face fontified t) 1896 1906 (face font-lock-comment-face fontified t latex-env-pair t) 1906 1915 (face font-lock-comment-face fontified t) 1915 1925 (face font-lock-comment-face fontified t latex-env-pair t) 1925 1951 (face font-lock-comment-face fontified t) 1951 1954 (face font-lock-comment-delimiter-face fontified t) 1954 1960 (face font-lock-comment-face fontified t) 1960 1963 (face font-lock-comment-delimiter-face fontified t) 1963 1967 (face font-lock-comment-face fontified t) 1967 1977 (face font-lock-comment-face fontified t latex-env-pair t) 1977 1986 (face font-lock-comment-face fontified t) 1986 1996 (face font-lock-comment-face fontified t latex-env-pair t) 1996 2022 (face font-lock-comment-face fontified t) 2022 2025 (face font-lock-comment-delimiter-face fontified t) 2025 2031 (face font-lock-comment-face fontified t) 2031 2034 (face font-lock-comment-delimiter-face fontified t) 2034 2038 (face font-lock-comment-face fontified t) 2038 2048 (face font-lock-comment-face fontified t latex-env-pair t) 2048 2057 (face font-lock-comment-face fontified t) 2057 2067 (face font-lock-comment-face fontified t latex-env-pair t) 2067 2093 (face font-lock-comment-face fontified t) 2093 2096 (face font-lock-comment-delimiter-face fontified t) 2096 2105 (face font-lock-comment-face fontified t) 2105 2108 (face font-lock-comment-delimiter-face fontified t) 2108 2112 (face font-lock-comment-face fontified t) 2112 2122 (face font-lock-comment-face fontified t latex-env-pair t) 2122 2126 (face font-lock-comment-face fontified t) 2126 2129 (face font-lock-comment-delimiter-face fontified t) 2129 2148 (face font-lock-comment-face fontified t) 2148 2151 (face font-lock-comment-delimiter-face fontified t) 2151 2160 (face font-lock-comment-face fontified t) 2160 2163 (face font-lock-comment-delimiter-face fontified t) 2163 2185 (face font-lock-comment-face fontified t) 2185 2188 (face font-lock-comment-delimiter-face fontified t) 2188 2201 (face font-lock-comment-face fontified t) 2201 2204 (face font-lock-comment-delimiter-face fontified t) 2204 2250 (face font-lock-comment-face fontified t) 2250 2253 (face font-lock-comment-delimiter-face fontified t) 2253 2300 (face font-lock-comment-face fontified t) 2300 2303 (face font-lock-comment-delimiter-face fontified t) 2303 2350 (face font-lock-comment-face fontified t) 2350 2353 (face font-lock-comment-delimiter-face fontified t) 2353 2401 (face font-lock-comment-face fontified t) 2401 2404 (face font-lock-comment-delimiter-face fontified t) 2404 2452 (face font-lock-comment-face fontified t) 2452 2455 (face font-lock-comment-delimiter-face fontified t) 2455 2501 (face font-lock-comment-face fontified t) 2501 2504 (face font-lock-comment-delimiter-face fontified t) 2504 2550 (face font-lock-comment-face fontified t) 2550 2553 (face font-lock-comment-delimiter-face fontified t) 2553 2599 (face font-lock-comment-face fontified t) 2599 2602 (face font-lock-comment-delimiter-face fontified t) 2602 2643 (face font-lock-comment-face fontified t) 2643 2650 (fontified t face font-lock-comment-face) 2650 2653 (face font-lock-comment-delimiter-face fontified t) 2653 2702 (face font-lock-comment-face fontified t) 2702 2705 (face font-lock-comment-delimiter-face fontified t) 2705 2752 (face font-lock-comment-face fontified t) 2752 2755 (face font-lock-comment-delimiter-face fontified t) 2755 2802 (face font-lock-comment-face fontified t) 2802 2805 (face font-lock-comment-delimiter-face fontified t) 2805 2854 (face font-lock-comment-face fontified t) 2854 2857 (face font-lock-comment-delimiter-face fontified t) 2857 2906 (face font-lock-comment-face fontified t) 2906 2909 (face font-lock-comment-delimiter-face fontified t) 2909 2956 (face font-lock-comment-face fontified t) 2956 2959 (face font-lock-comment-delimiter-face fontified t) 2959 2963 (face font-lock-comment-face fontified t) 2963 2974 (face font-lock-comment-face fontified t latex-env-pair t)) . 11136) (undo-tree-id713 . -2956) (undo-tree-id714 . -2973) (undo-tree-id715 . -1960) (undo-tree-id716 . -2956) (undo-tree-id717 . -2956) (undo-tree-id718 . -2956) (undo-tree-id719 . -2956) (undo-tree-id720 . -2956) (undo-tree-id721 . -2956) (undo-tree-id722 . -2956) (undo-tree-id723 . -2956) (undo-tree-id724 . -2956) (undo-tree-id725 . -2956) (undo-tree-id726 . -2956) (undo-tree-id727 . -2956) (undo-tree-id728 . -2956) (undo-tree-id729 . -2956) (undo-tree-id730 . -2956) (undo-tree-id731 . -2956) (undo-tree-id732 . -2956) (undo-tree-id733 . -2956) (undo-tree-id734 . -2956) (undo-tree-id735 . -2956) (undo-tree-id736 . -2956) (undo-tree-id737 . -2956) (undo-tree-id738 . -2956) (undo-tree-id739 . -2956) (undo-tree-id740 . -2974) 14111 (t 26715 36499 542439 592000)) nil (26715 36551 489178 597000) 0 nil])
([nil nil ((#("% \\usepackage{color}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 21 (face font-lock-comment-face fontified t)) . 11136) (undo-tree-id694 . -20) (undo-tree-id695 . -21) (undo-tree-id696 . -21) (undo-tree-id697 . -21) (undo-tree-id698 . -21) (undo-tree-id699 . -21) (undo-tree-id700 . -21) (undo-tree-id701 . -21) (undo-tree-id702 . -21) (undo-tree-id703 . -21) (undo-tree-id704 . -21) (undo-tree-id705 . -21) (undo-tree-id706 . -21) (undo-tree-id707 . -21) (undo-tree-id708 . -21) (undo-tree-id709 . -21) (undo-tree-id710 . -21) (undo-tree-id711 . -21) (undo-tree-id712 . -21)) nil (26715 36551 489170 492000) 0 nil])
([nil nil ((#("% \\usepackage{tabularray}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 25 (face font-lock-comment-face fontified t) 25 26 (face font-lock-comment-face fontified t)) . 11136) (undo-tree-id693 . -25)) nil (26715 36551 489149 793000) 0 nil])
([nil nil ((11053 . 11054)) nil (26715 36551 489149 192000) 0 nil])
([nil nil ((11111 . 11112) (#("
" 0 1 (face (bold) fontified t)) . -11111) (undo-tree-id692 . -1) 11053) nil (26715 36551 489299 54000) 0 nil])
([nil nil ((#("{\\bfseries Table 2 - Results of the three-factor experiment for curd product samples with cryopowder}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 76 (face (bold) fontified t) 76 77 (face (bold) fontified t) 77 87 (face (bold) fontified t) 87 100 (face (bold) fontified t) 100 101 (fontified t) 101 102 (fontified t)) . -11035) (undo-tree-id871 . -75) (undo-tree-id872 . 83) (undo-tree-id873 . -102) (undo-tree-id874 . -102) (undo-tree-id875 . -102) (undo-tree-id876 . -102) (undo-tree-id877 . -102) (undo-tree-id878 . -102) (undo-tree-id879 . -102) (undo-tree-id880 . -102) (undo-tree-id881 . -102) (undo-tree-id882 . -102) (undo-tree-id883 . -102) (undo-tree-id884 . -102) (undo-tree-id885 . -102) (undo-tree-id886 . -102) (undo-tree-id887 . -102) (undo-tree-id888 . -102) (undo-tree-id889 . -102) (undo-tree-id890 . -102) (undo-tree-id891 . -102) (undo-tree-id892 . -102) (undo-tree-id893 . -102) (undo-tree-id894 . -102) (undo-tree-id895 . -102) (undo-tree-id896 . -102) (undo-tree-id897 . -102) (undo-tree-id898 . -102) (undo-tree-id899 . -102) (undo-tree-id900 . -102) (undo-tree-id901 . -102) (undo-tree-id902 . -102) (undo-tree-id903 . -102) (undo-tree-id904 . -102) (undo-tree-id905 . -102) (undo-tree-id906 . -102) (undo-tree-id907 . -102) (undo-tree-id908 . -102) (undo-tree-id909 . -102) (undo-tree-id910 . -102) (undo-tree-id911 . -102) (undo-tree-id912 . -102) (undo-tree-id913 . -102) 11137) nil (26715 36559 938209 976000) 0 nil] [nil nil ((#("{\\bfseries Table 2 - Results of the three-factor experiment for curd product samples with cryopowder}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 76 (face (bold) fontified t) 76 77 (face (bold) fontified t) 77 87 (face (bold) fontified t) 87 100 (face (bold) fontified t) 100 101 (fontified t)) . -11035) (undo-tree-id589 . -76) (undo-tree-id590 . -76) (undo-tree-id591 . -75) (undo-tree-id592 . 82) (undo-tree-id593 . -18) (undo-tree-id594 . -18) (undo-tree-id595 . -18) (undo-tree-id596 . -18) (undo-tree-id597 . -18) (undo-tree-id598 . -18) (undo-tree-id599 . -18) (undo-tree-id600 . -18) (undo-tree-id601 . -18) (undo-tree-id602 . -18) (undo-tree-id603 . -18) (undo-tree-id604 . -18) (undo-tree-id605 . -18) (undo-tree-id606 . -18) (undo-tree-id607 . -18) (undo-tree-id608 . -18) (undo-tree-id609 . -18) (undo-tree-id610 . -18) (undo-tree-id611 . -18) (undo-tree-id612 . -18) (undo-tree-id613 . -18) (undo-tree-id614 . -18) (undo-tree-id615 . -18) (undo-tree-id616 . -18) (undo-tree-id617 . -18) (undo-tree-id618 . -18) (undo-tree-id619 . -18) (undo-tree-id620 . -18) (undo-tree-id621 . -18) (undo-tree-id622 . -76) (undo-tree-id623 . -76) (undo-tree-id624 . -76) (undo-tree-id625 . -76) (undo-tree-id626 . -76) (undo-tree-id627 . -76) (undo-tree-id628 . -76) (undo-tree-id629 . -76) (undo-tree-id630 . -76) (undo-tree-id631 . -76) (undo-tree-id632 . -76) (undo-tree-id633 . -76) (undo-tree-id634 . -76) (undo-tree-id635 . -76) (undo-tree-id636 . -76) (undo-tree-id637 . -76) (undo-tree-id638 . -76) (undo-tree-id639 . -76) (undo-tree-id640 . -76) (undo-tree-id641 . -76) (undo-tree-id642 . -76) (undo-tree-id643 . -76) (undo-tree-id644 . -76) (undo-tree-id645 . -76) (undo-tree-id646 . -76) (undo-tree-id647 . -76) (undo-tree-id648 . -76) (undo-tree-id649 . -76) (undo-tree-id650 . -76) (undo-tree-id651 . -76) (undo-tree-id652 . -76) (undo-tree-id653 . -76) (undo-tree-id654 . -76) (undo-tree-id655 . -76) (undo-tree-id656 . -76) (undo-tree-id657 . -76) (undo-tree-id658 . -76) (undo-tree-id659 . -76) (undo-tree-id660 . -76) (undo-tree-id661 . -76) (undo-tree-id662 . -76) (undo-tree-id663 . -76) (undo-tree-id664 . -76) (undo-tree-id665 . -76) (undo-tree-id666 . -76) (undo-tree-id667 . -76) (undo-tree-id668 . -76) (undo-tree-id669 . -76) (undo-tree-id670 . -76) (undo-tree-id671 . -76) (undo-tree-id672 . -76) (undo-tree-id673 . -76) (undo-tree-id674 . -76) (undo-tree-id675 . -76) (undo-tree-id676 . -76) (undo-tree-id677 . -76) (undo-tree-id678 . -76) (undo-tree-id679 . -76) (undo-tree-id680 . -76) (undo-tree-id681 . -76) (undo-tree-id682 . -76) (undo-tree-id683 . -76) (undo-tree-id684 . -76) (undo-tree-id685 . -76) (undo-tree-id686 . -76) (undo-tree-id687 . -76) (undo-tree-id688 . -76) (undo-tree-id689 . -76) (undo-tree-id690 . -76) (undo-tree-id691 . -76) 11137) ((11035 . 11136)) (26715 36551 489144 373000) 0 nil])
([nil nil ((11052 . 11053) 11035) nil (26715 36559 938159 350000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 11166 . 11167) (nil fontified nil 11053 . 11167) (11053 . 11167)) nil (26715 36559 938359 46000) 0 nil])
([nil nil ((#("0.43\\linewidth" 0 4 (fontified t) 4 14 (face font-lock-keyword-face fontified t)) . 11343) (undo-tree-id918 . -13) (undo-tree-id919 . -14)) nil (26715 36562 829290 236000) 0 nil] [nil nil ((#("\\begin{longtblr}[
  caption = {\\bfseries Table 2 - Results of the three-factor experiment for curd product samples with cryopowder},
  label = none,
  entry = none,
]{
  width = \\linewidth,
  colspec = {Q[246]Q[71]Q[71]Q[71]Q[71]Q[73]Q[73]Q[256]},
  cells = {c},
  cell{1}{1} = {r=3}{},
  cell{1}{2} = {c=6}{" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 15 (face font-lock-function-name-face fontified t latex-env-pair t) 15 16 (fontified t latex-env-pair t) 16 17 (fontified t) 17 18 (fontified t) 18 31 (fontified t) 31 40 (face font-lock-keyword-face fontified t) 40 130 (face (bold) fontified t) 130 131 (fontified t) 131 132 (rear-nonsticky t fontified t) 132 133 (fontified t) 133 178 (fontified t) 178 188 (face font-lock-keyword-face fontified t) 188 308 (fontified t)) . 11035) (undo-tree-id741 . -18) (undo-tree-id742 . 175) (undo-tree-id743 . -307) (undo-tree-id744 . 176) (undo-tree-id745 . -182) (undo-tree-id746 . -182) (undo-tree-id747 . -182) (undo-tree-id748 . -182) (undo-tree-id749 . -182) (undo-tree-id750 . -204) (undo-tree-id751 . -204) (undo-tree-id752 . -204) (undo-tree-id753 . -204) (undo-tree-id754 . -204) (undo-tree-id755 . -204) (undo-tree-id756 . -204) (undo-tree-id757 . -204) (undo-tree-id758 . -204) (undo-tree-id759 . -204) (undo-tree-id760 . -204) (undo-tree-id761 . -204) (undo-tree-id762 . -204) (undo-tree-id763 . -204) (undo-tree-id764 . -204) (undo-tree-id765 . -261) (undo-tree-id766 . -261) (undo-tree-id767 . -261) (undo-tree-id768 . -261) (undo-tree-id769 . -261) (undo-tree-id770 . -261) (undo-tree-id771 . -261) (undo-tree-id772 . -261) (undo-tree-id773 . -261) (undo-tree-id774 . -261) (undo-tree-id775 . -277) (undo-tree-id776 . -277) (undo-tree-id777 . -277) (undo-tree-id778 . -277) (undo-tree-id779 . -277) (undo-tree-id780 . -301) (undo-tree-id781 . -301) (undo-tree-id782 . -301) (undo-tree-id783 . -301) (undo-tree-id784 . -301) (undo-tree-id785 . -301) (undo-tree-id786 . -301) (undo-tree-id787 . -301) (undo-tree-id788 . -301) (undo-tree-id789 . -301) (undo-tree-id790 . -301) (undo-tree-id791 . -301) (undo-tree-id792 . -301) (undo-tree-id793 . -301) (undo-tree-id794 . -301) (undo-tree-id795 . -301) (undo-tree-id796 . -301) (undo-tree-id797 . -301) (undo-tree-id798 . -301) (undo-tree-id799 . -301) (undo-tree-id800 . -302) (undo-tree-id801 . -302) (undo-tree-id802 . -302) (undo-tree-id803 . -302) (undo-tree-id804 . -302) (undo-tree-id805 . -302) (undo-tree-id806 . -302) (undo-tree-id807 . -302) (undo-tree-id808 . -302) (undo-tree-id809 . -302) (undo-tree-id810 . -303) (undo-tree-id811 . -303) (undo-tree-id812 . -303) (undo-tree-id813 . -303) (undo-tree-id814 . -303) (undo-tree-id815 . -304) (undo-tree-id816 . -304) (undo-tree-id817 . -304) (undo-tree-id818 . -304) (undo-tree-id819 . -304) (undo-tree-id820 . -305) (undo-tree-id821 . -305) (undo-tree-id822 . -305) (undo-tree-id823 . -305) (undo-tree-id824 . -305) (undo-tree-id825 . -306) (undo-tree-id826 . -306) (undo-tree-id827 . -306) (undo-tree-id828 . -306) (undo-tree-id829 . -306) (undo-tree-id830 . -307) (undo-tree-id831 . -307) (undo-tree-id832 . -307) (undo-tree-id833 . -307) (undo-tree-id834 . -307) (undo-tree-id835 . -287) (undo-tree-id836 . -308) (undo-tree-id837 . -308) (undo-tree-id838 . -308) (undo-tree-id839 . -308) (undo-tree-id840 . -308) (undo-tree-id841 . -308) (undo-tree-id842 . -308) (undo-tree-id843 . -308) (undo-tree-id844 . -308) (undo-tree-id845 . -308) (undo-tree-id846 . -308) (undo-tree-id847 . -308) (undo-tree-id848 . -308) (undo-tree-id849 . -308) (undo-tree-id850 . -308) (undo-tree-id851 . -308) (undo-tree-id852 . -308) (undo-tree-id853 . -308) (undo-tree-id854 . -308) (undo-tree-id855 . -308) (undo-tree-id856 . -308) (undo-tree-id857 . -308) (undo-tree-id858 . -308) (undo-tree-id859 . -308) (undo-tree-id860 . -308) (undo-tree-id861 . -308) (undo-tree-id862 . -308) (undo-tree-id863 . -308) (undo-tree-id864 . -308) (undo-tree-id865 . -308) (undo-tree-id866 . -308) (undo-tree-id867 . -308) (undo-tree-id868 . -308) (undo-tree-id869 . -308) (undo-tree-id870 . -308) 11343) ((11035 . 11343)) (26715 36559 938154 992000) 0 nil])
([nil nil ((#("0.212\\linewidth" 0 5 (fontified t) 5 15 (face font-lock-keyword-face fontified t)) . 11391) (undo-tree-id916 . -14) (undo-tree-id917 . -15)) nil (26715 36562 829288 713000) 0 nil])
nil
([nil nil ((#("0.216\\linewidth" 0 5 (fontified t) 5 15 (face font-lock-keyword-face fontified t)) . 11415) (undo-tree-id914 . -14) (undo-tree-id915 . -15)) nil (26715 36562 829284 234000) 0 nil])
([nil nil ((11517 . 11518) (#("			" 0 3 (face (bold) fontified t)) . 11517) (undo-tree-id924 . -2) (t 26715 36562 831442 551000)) nil (26715 36577 827326 575000) 0 nil])
([nil nil ((11539 . 11540) (#("			" 0 3 (face (bold) fontified t)) . 11539) (undo-tree-id921 . -2) (undo-tree-id922 . -3) (undo-tree-id923 . -3)) nil (26715 36577 827325 443000) 0 nil])
([nil nil ((11598 . 11599) (#("			" 0 3 (face (bold) fontified t)) . 11598) (undo-tree-id920 . -2)) nil (26715 36577 827320 13000) 0 nil])
([nil nil ((11726 . 11727) (#("			" 0 3 (fontified nil)) . 11726) (undo-tree-id996 . -2) (undo-tree-id997 . -2) (undo-tree-id998 . -2) (undo-tree-id999 . -2) (undo-tree-id1000 . -2) (undo-tree-id1001 . -2) (undo-tree-id1002 . -2) (undo-tree-id1003 . -2) (undo-tree-id1004 . -2) (undo-tree-id1005 . -2) (undo-tree-id1006 . -2) (undo-tree-id1007 . -2) (undo-tree-id1008 . -2) (undo-tree-id1009 . -2) (undo-tree-id1010 . -2) (undo-tree-id1011 . -2) (undo-tree-id1012 . -2) (undo-tree-id1013 . -2) (undo-tree-id1014 . -2) (undo-tree-id1015 . -2) (undo-tree-id1016 . -2) (undo-tree-id1017 . -2) (undo-tree-id1018 . -2) (undo-tree-id1019 . -2) (undo-tree-id1020 . -2) (undo-tree-id1021 . -2) (#("
" 0 1 (fontified t)) . -11726) (undo-tree-id1022 . -1) 11690 (t 26715 36577 829444 506000)) nil (26715 36589 832851 253000) 0 nil])
([nil nil ((11734 . 11735) (#("			" 0 3 (fontified nil)) . 11734) (undo-tree-id984 . -2) (undo-tree-id985 . -2) (undo-tree-id986 . -2) (undo-tree-id987 . -2) (undo-tree-id988 . -2) (undo-tree-id989 . -2) (undo-tree-id990 . -2) (undo-tree-id991 . -2) (undo-tree-id992 . -2) (undo-tree-id993 . -2) (undo-tree-id994 . -2) (#("
" 0 1 (fontified t)) . -11734) (undo-tree-id995 . -1) 11726) nil (26715 36589 832803 313000) 0 nil])
([nil nil ((11742 . 11743) (#("			" 0 3 (fontified nil)) . 11742) (#("
" 0 1 (fontified t)) . -11742) 11734) nil (26715 36590 376649 108000) 0 nil])
([nil nil ((#("  width = \\linewidth,
" 0 10 (fontified t) 10 20 (face font-lock-keyword-face fontified t) 20 22 (fontified t)) . 11203) (undo-tree-id1090 . -21) (undo-tree-id1091 . -20) (undo-tree-id1092 . -20) (undo-tree-id1093 . -20) (undo-tree-id1094 . -20) (undo-tree-id1095 . -20) (undo-tree-id1096 . -20) (undo-tree-id1097 . -20) (undo-tree-id1098 . -20) (undo-tree-id1099 . -20) (undo-tree-id1100 . -20) (undo-tree-id1101 . -20) (undo-tree-id1102 . -20) (undo-tree-id1103 . -20) (undo-tree-id1104 . -20) (undo-tree-id1105 . -20) (undo-tree-id1106 . -20) (undo-tree-id1107 . -20) (undo-tree-id1108 . -20) (undo-tree-id1109 . -20) (undo-tree-id1110 . -20) (undo-tree-id1111 . -20) (undo-tree-id1112 . -20) (undo-tree-id1113 . -20) (undo-tree-id1114 . -20) (undo-tree-id1115 . -20) (undo-tree-id1116 . -20) (undo-tree-id1117 . -20) (undo-tree-id1118 . -20) (undo-tree-id1119 . -20) (undo-tree-id1120 . -20) (undo-tree-id1121 . -20) (undo-tree-id1122 . -22) 11223) nil (26715 36595 310566 964000) 0 nil] [nil nil ((#("  colspec = {Q[246]Q[71]Q[71]Q[71]Q[71]Q[73]Q[73]Q[256]},
" 0 58 (fontified t)) . 11225) (undo-tree-id952 . -57) (undo-tree-id953 . -56) (undo-tree-id954 . -56) (undo-tree-id955 . -56) (undo-tree-id956 . -56) (undo-tree-id957 . -56) (undo-tree-id958 . -56) (undo-tree-id959 . -56) (undo-tree-id960 . -56) (undo-tree-id961 . -56) (undo-tree-id962 . -56) (undo-tree-id963 . -56) (undo-tree-id964 . -56) (undo-tree-id965 . -56) (undo-tree-id966 . -56) (undo-tree-id967 . -56) (undo-tree-id968 . -56) (undo-tree-id969 . -56) (undo-tree-id970 . -56) (undo-tree-id971 . -56) (undo-tree-id972 . -56) (undo-tree-id973 . -56) (undo-tree-id974 . -56) (undo-tree-id975 . -56) (undo-tree-id976 . -56) (undo-tree-id977 . -56) (undo-tree-id978 . -56) (undo-tree-id979 . -56) (undo-tree-id980 . -56) (undo-tree-id981 . -56) (undo-tree-id982 . -56) (undo-tree-id983 . -58) 11281) ((11225 . 11283)) (26715 36589 832988 501000) 0 nil])
([nil nil ((#("  colspec = {Q[246]Q[71]Q[71]Q[71]Q[71]Q[73]Q[73]Q[256]},
" 0 57 (fontified t) 57 58 (fontified t)) . 11203) (undo-tree-id1023 . -57) (undo-tree-id1024 . -56) (undo-tree-id1025 . -56) (undo-tree-id1026 . -56) (undo-tree-id1027 . -56) (undo-tree-id1028 . -56) (undo-tree-id1029 . -56) (undo-tree-id1030 . -56) (undo-tree-id1031 . -56) (undo-tree-id1032 . -56) (undo-tree-id1033 . -56) (undo-tree-id1034 . -56) (undo-tree-id1035 . -56) (undo-tree-id1036 . -56) (undo-tree-id1037 . -56) (undo-tree-id1038 . -56) (undo-tree-id1039 . -56) (undo-tree-id1040 . -56) (undo-tree-id1041 . -56) (undo-tree-id1042 . -56) (undo-tree-id1043 . -56) (undo-tree-id1044 . -56) (undo-tree-id1045 . -56) (undo-tree-id1046 . -56) (undo-tree-id1047 . -56) (undo-tree-id1048 . -56) (undo-tree-id1049 . -56) (undo-tree-id1050 . -56) (undo-tree-id1051 . -56) (undo-tree-id1052 . -56) (undo-tree-id1053 . -56) (undo-tree-id1054 . -56) (undo-tree-id1055 . -56) (undo-tree-id1056 . -56) (undo-tree-id1057 . -56) (undo-tree-id1058 . -56) (undo-tree-id1059 . -56) (undo-tree-id1060 . -56) (undo-tree-id1061 . -56) (undo-tree-id1062 . -56) (undo-tree-id1063 . -56) (undo-tree-id1064 . -56) (undo-tree-id1065 . -56) (undo-tree-id1066 . -56) (undo-tree-id1067 . -56) (undo-tree-id1068 . -56) (undo-tree-id1069 . -56) (undo-tree-id1070 . -56) (undo-tree-id1071 . -56) (undo-tree-id1072 . -56) (undo-tree-id1073 . -56) (undo-tree-id1074 . -56) (undo-tree-id1075 . -56) (undo-tree-id1076 . -56) (undo-tree-id1077 . -56) (undo-tree-id1078 . -56) (undo-tree-id1079 . -57) (undo-tree-id1080 . -20) (undo-tree-id1081 . -20) (undo-tree-id1082 . -20) (undo-tree-id1083 . -20) (undo-tree-id1084 . -20) (undo-tree-id1085 . -20) (undo-tree-id1086 . -20) (undo-tree-id1087 . -20) (undo-tree-id1088 . -20) (undo-tree-id1089 . -58) 11223) nil (26715 36595 310556 775000) 0 nil])
([nil nil ((#("  cells = {c},
" 0 14 (fontified t) 14 15 (fontified t)) . 11225) (undo-tree-id925 . -14) (undo-tree-id926 . -13) (undo-tree-id927 . -13) (undo-tree-id928 . -13) (undo-tree-id929 . -13) (undo-tree-id930 . -13) (undo-tree-id931 . -13) (undo-tree-id932 . -13) (undo-tree-id933 . -13) (undo-tree-id934 . -13) (undo-tree-id935 . -13) (undo-tree-id936 . -13) (undo-tree-id937 . -13) (undo-tree-id938 . -13) (undo-tree-id939 . -13) (undo-tree-id940 . -13) (undo-tree-id941 . -14) (undo-tree-id942 . -13) (undo-tree-id943 . -13) (undo-tree-id944 . -13) (undo-tree-id945 . -13) (undo-tree-id946 . -13) (undo-tree-id947 . -13) (undo-tree-id948 . -13) (undo-tree-id949 . -13) (undo-tree-id950 . -13) (undo-tree-id951 . -15) 11238) ((11225 . 11240)) (26715 36589 832783 436000) 0 nil])
([nil nil ((11433 . 11435)) nil (26715 36595 310520 667000) 0 nil])
nil
([nil nil ((11433 . 11435) (#("\\" 0 1 (face (font-lock-keyword-face bold) fontified t)) . -11433) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (#("-" 0 1 (face (font-lock-keyword-face bold) fontified t)) . -11434) (undo-tree-id1154 . -1) 11435 (t 26715 36595 313447 357000)) nil (26715 36611 610580 495000) 0 nil])
([nil nil ((11438 . 11440) (#("t" 0 1 (face (bold) fontified nil)) . -11438) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (#(" " 0 1 (face (bold) fontified t)) . -11439) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) 11440) nil (26715 36611 610574 864000) 0 nil])
([nil nil ((11438 . 11439) (t 26715 36611 613450 548000)) nil (26715 36613 152978 411000) 0 nil])
([nil nil ((11547 . 11548) (#("			" 0 3 (face (bold) fontified t)) . 11547) (undo-tree-id1173 . -2) (t 26715 36613 155450 876000)) nil (26715 36633 427827 481000) 0 nil])
([nil nil ((11578 . 11579) (#("			" 0 3 (face (bold) fontified t)) . 11578) (undo-tree-id1155 . -2) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -3) (undo-tree-id1172 . -3)) nil (26715 36633 427826 229000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11531) 11578) nil (26715 36633 427806 442000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11597) 11644) nil (26715 36633 427801 473000) 0 nil])
([nil nil ((12494 . 12495) (t 26715 36633 431455 602000)) nil (26715 36697 230461 722000) 0 nil])
([nil nil ((12550 . 12551) (#("
" 0 1 (face (bold) fontified t)) . -12550) (undo-tree-id1174 . -1) 12494) nil (26715 36697 230457 735000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13611 . 13612) (nil fontified nil 12565 . 13612) (12565 . 13612) (#("
%% \\begin{longtable}[]{@{}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.1886}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.2108}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.1133}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.1843}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.1324}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 10\\tabcolsep) * \\real{0.1707}}@{}}
%% \\toprule\\noalign{}
%% \\endhead
%% \\bottomrule\\noalign{}
%% \\endlastfoot
%% {\\bfseries Values} & {\\bfseries Sum of Squares} & {\\bfseries Difference} &
%% {\\bfseries Mean Square} & {\\bfseries F-ratio} & {\\bfseries P-Value} \\\\
%% \\emph{х\\textsubscript{1}} & 402305 & 1 & 402305, & 122,80 & 0,0080 \\\\
%% \\emph{х\\textsubscript{2}} & 1,48006 & 1 & 1,48006 & 451,79 & 0,0022 \\\\
%% \\emph{х\\textsubscript{3}} & 2,51665 & 1 & 2,51665 & 768,21 & 0,0013 \\\\
%% \\emph{х\\textsubscript{1}\\textsuperscript{2}} & 223444 & 1 & 223444, &
%% 68,21 & 0,0143 \\\\
%% \\emph{х\\textsubscript{1} х\\textsubscript{2}} & 703082 & 1 & 703082, &
%% 214,62 & 0,0046 \\\\
%% \\emph{х\\textsubscript{2}\\textsuperscript{2}} & 1,09369 & 1 & 1,09369 &
%% 333,85 & 0,0030 \\\\
%% \\emph{х\\textsubscript{2}х\\textsubscript{3}} & 525625 & 1 & 525625, &
%% 160,45 & 0,0062 \\\\
%% \\emph{х\\textsubscript{3}\\textsuperscript{2}} & 389400 & 1 & 389400, &
%% 118,86 & 0,0083 \\\\
%% Sum of squared deviations & 645267 & 4 & 161317, & 49,24 & 0,0200 \\\\
%% The resulting error & 6552,0 & 2 & 3276,0 & - & - \\\\
%% Total & 7,79676 & 14 & - & - & - \\\\
%% \\end{longtable}" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 10 (face font-lock-comment-face fontified t) 10 21 (face font-lock-comment-face fontified t latex-env-pair t) 21 28 (face font-lock-comment-face fontified t) 28 33 (face font-lock-comment-delimiter-face fontified t) 33 108 (face font-lock-comment-face fontified t) 108 113 (face font-lock-comment-delimiter-face fontified t) 113 137 (face font-lock-comment-face fontified t) 137 151 (face font-lock-comment-face fontified t) 151 154 (face font-lock-comment-face fontified t) 154 175 (face font-lock-comment-face fontified t) 175 184 (face font-lock-comment-face fontified t) 184 188 (face font-lock-comment-face fontified t) 188 193 (face font-lock-comment-delimiter-face fontified t) 193 268 (face font-lock-comment-face fontified t) 268 273 (face font-lock-comment-delimiter-face fontified t) 273 340 (face font-lock-comment-face fontified t) 340 348 (face font-lock-comment-face fontified t) 348 351 (face font-lock-comment-delimiter-face fontified t) 351 353 (face font-lock-comment-delimiter-face fontified t) 353 428 (face font-lock-comment-face fontified t) 428 433 (face font-lock-comment-delimiter-face fontified t) 433 452 (face font-lock-comment-face fontified t) 452 461 (face font-lock-comment-face fontified t) 461 512 (face font-lock-comment-face fontified t) 512 515 (face font-lock-comment-delimiter-face fontified t) 515 526 (face font-lock-comment-face fontified t) 526 532 (face font-lock-comment-face fontified t) 532 534 (face font-lock-comment-face fontified t) 534 537 (face font-lock-comment-delimiter-face fontified t) 537 546 (face font-lock-comment-face fontified t) 546 549 (face font-lock-comment-delimiter-face fontified t) 549 571 (face font-lock-comment-face fontified t) 571 574 (face font-lock-comment-delimiter-face fontified t) 574 587 (face font-lock-comment-face fontified t) 587 590 (face font-lock-comment-delimiter-face fontified t) 590 614 (face font-lock-comment-face fontified t) 614 665 (face font-lock-comment-face fontified t) 665 668 (face font-lock-comment-delimiter-face fontified t) 668 739 (face font-lock-comment-face fontified t) 739 742 (face font-lock-comment-delimiter-face fontified t) 742 812 (face font-lock-comment-face fontified t) 812 815 (face font-lock-comment-delimiter-face fontified t) 815 886 (face font-lock-comment-face fontified t) 886 889 (face font-lock-comment-delimiter-face fontified t) 889 960 (face font-lock-comment-face fontified t) 960 963 (face font-lock-comment-delimiter-face fontified t) 963 1033 (face font-lock-comment-face fontified t) 1033 1036 (face font-lock-comment-delimiter-face fontified t) 1036 1054 (face font-lock-comment-face fontified t) 1054 1057 (face font-lock-comment-delimiter-face fontified t) 1057 1127 (face font-lock-comment-face fontified t) 1127 1130 (face font-lock-comment-delimiter-face fontified t) 1130 1149 (face font-lock-comment-face fontified t) 1149 1152 (face font-lock-comment-delimiter-face fontified t) 1152 1223 (face font-lock-comment-face fontified t) 1223 1226 (face font-lock-comment-delimiter-face fontified t) 1226 1245 (face font-lock-comment-face fontified t) 1245 1248 (face font-lock-comment-delimiter-face fontified t) 1248 1317 (face font-lock-comment-face fontified t) 1317 1320 (face font-lock-comment-delimiter-face fontified t) 1320 1339 (face font-lock-comment-face fontified t) 1339 1342 (face font-lock-comment-delimiter-face fontified t) 1342 1411 (face font-lock-comment-face fontified t) 1411 1412 (face font-lock-comment-face fontified t) 1412 1415 (face font-lock-comment-delimiter-face fontified t) 1415 1434 (face font-lock-comment-face fontified t) 1434 1437 (face font-lock-comment-delimiter-face fontified t) 1437 1500 (face font-lock-comment-face fontified t) 1500 1506 (fontified t face font-lock-comment-face) 1506 1509 (face font-lock-comment-delimiter-face fontified t) 1509 1562 (face font-lock-comment-face fontified t) 1562 1565 (face font-lock-comment-delimiter-face fontified t) 1565 1601 (face font-lock-comment-face fontified t) 1601 1604 (face font-lock-comment-delimiter-face fontified t) 1604 1608 (face font-lock-comment-face fontified t) 1608 1619 (face font-lock-comment-face fontified t latex-env-pair t)) . 12565) (undo-tree-id1345 . -1601) (undo-tree-id1346 . -1618) (undo-tree-id1347 . -546) (undo-tree-id1348 . -1601) 14185 (t 26715 36697 233475 176000)) nil (26715 36802 466163 30000) 0 nil])
([nil nil ((#("\\textit" 0 7 (face font-lock-keyword-face fontified t)) . 13307) (undo-tree-id1279 . -6) (undo-tree-id1280 . -6) (undo-tree-id1281 . -6) (undo-tree-id1282 . -4) (undo-tree-id1283 . -4) (undo-tree-id1284 . -4) (undo-tree-id1285 . -4) (undo-tree-id1286 . -4) (undo-tree-id1287 . -4) (undo-tree-id1288 . -4) (undo-tree-id1289 . -4) (undo-tree-id1290 . -4) (undo-tree-id1291 . -4) (undo-tree-id1292 . -5) (undo-tree-id1293 . -5) (undo-tree-id1294 . -5) (undo-tree-id1295 . -5) (undo-tree-id1296 . -5) (undo-tree-id1297 . -5) (undo-tree-id1298 . -5) (undo-tree-id1299 . -5) (undo-tree-id1300 . -5) (undo-tree-id1301 . -5) (undo-tree-id1302 . -6) (undo-tree-id1303 . -6) (undo-tree-id1304 . -6) (undo-tree-id1305 . -6) (undo-tree-id1306 . -6) (undo-tree-id1307 . -6) (undo-tree-id1308 . -6) (undo-tree-id1309 . -6) (undo-tree-id1310 . -6) (undo-tree-id1311 . -6) (undo-tree-id1312 . -6) (undo-tree-id1313 . -6) (undo-tree-id1314 . -6) (undo-tree-id1315 . -6) (undo-tree-id1316 . -6) (undo-tree-id1317 . -6) (undo-tree-id1318 . -6) (undo-tree-id1319 . -6) (undo-tree-id1320 . -6) (undo-tree-id1321 . -6) (undo-tree-id1322 . -6) (undo-tree-id1323 . -6) (undo-tree-id1324 . -6) (undo-tree-id1325 . -6) (undo-tree-id1326 . -6) (undo-tree-id1327 . -6) (undo-tree-id1328 . -6) (undo-tree-id1329 . -6) (undo-tree-id1330 . -6) (undo-tree-id1331 . -6) (undo-tree-id1332 . -6) (undo-tree-id1333 . -6) (undo-tree-id1334 . -6) (undo-tree-id1335 . -6) (undo-tree-id1336 . -6) (undo-tree-id1337 . -6) (undo-tree-id1338 . -6) (undo-tree-id1339 . -6) (undo-tree-id1340 . -6) (undo-tree-id1341 . -6) (undo-tree-id1342 . -6) (undo-tree-id1343 . -6) (undo-tree-id1344 . -7) (#("\\textit" 0 7 (face font-lock-keyword-face fontified t)) . 13257) (#("\\textit" 0 7 (face font-lock-keyword-face fontified t)) . 13180) (#("\\textit" 0 7 (face font-lock-keyword-face fontified t)) . 13127) (#("\\textit" 0 7 (face font-lock-keyword-face fontified t)) . 13052) (#("\\textit" 0 7 (face font-lock-keyword-face fontified t)) . 13003) (#("\\textit" 0 7 (face font-lock-keyword-face fontified t)) . 12954) (#("\\textit" 0 7 (face font-lock-keyword-face fontified t)) . 12906) 13362) nil (26715 36802 466160 215000) 0 nil])
([nil nil ((12906 . 12907) (#("{" 0 1 (fontified t)) . 12906) (undo-tree-id1278 . -1)) nil (26715 36802 466131 551000) 0 nil])
([nil nil ((12954 . 12955) (#("{" 0 1 (fontified t)) . 12954) (undo-tree-id1277 . -1)) nil (26715 36802 466130 429000) 0 nil])
([nil nil ((13003 . 13004) (#("{" 0 1 (fontified t)) . 13003) (undo-tree-id1276 . -1)) nil (26715 36802 466129 798000) 0 nil])
([nil nil ((13052 . 13053) (#("{" 0 1 (fontified t)) . 13052) (undo-tree-id1275 . -1)) nil (26715 36802 466129 36000) 0 nil])
([nil nil ((13127 . 13128) (#("{" 0 1 (fontified t)) . 13127) (undo-tree-id1274 . -1)) nil (26715 36802 466128 265000) 0 nil])
([nil nil ((13180 . 13181) (#("{" 0 1 (fontified t)) . 13180) (undo-tree-id1273 . -1)) nil (26715 36802 466127 423000) 0 nil])
([nil nil ((13257 . 13258) (#("{" 0 1 (fontified t)) . 13257) (undo-tree-id1272 . -1)) nil (26715 36802 466126 531000) 0 nil])
([nil nil ((13307 . 13308) (#("{" 0 1 (fontified t)) . 13307) (undo-tree-id1271 . 1)) nil (26715 36802 466125 329000) 0 nil])
([nil nil ((13310 . 13311) (#("}" 0 1 (fontified t)) . 13310) (undo-tree-id1270 . -1)) nil (26715 36802 466124 678000) 0 nil])
([nil nil ((13262 . 13263) (#("}" 0 1 (fontified t)) . 13262) (undo-tree-id1269 . -1)) nil (26715 36802 466123 856000) 0 nil])
([nil nil ((13183 . 13184) (#("}" 0 1 (fontified t)) . 13183)) nil (26715 36802 466123 75000) 0 nil])
([nil nil ((#("		" 0 2 (fontified t)) . 13131) (undo-tree-id1268 . -1)) nil (26715 36802 466122 444000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . 13130) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1)) nil (26715 36802 466121 762000) 0 nil])
([nil nil ((13132 . 13133) (#("}" 0 1 (fontified t)) . 13132) (undo-tree-id1265 . -1)) nil (26715 36802 466120 139000) 0 nil])
([nil nil ((13055 . 13056) (#("}" 0 1 (fontified t)) . 13055) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1)) nil (26715 36802 466118 997000) 0 nil])
([nil nil ((13006 . 13007) (#("}" 0 1 (fontified t)) . 13006) (undo-tree-id1248 . -1)) nil (26715 36802 466112 445000) 0 nil])
([nil nil ((12957 . 12958) (#("}" 0 1 (fontified t)) . 12957) (undo-tree-id1247 . -1)) nil (26715 36802 466111 623000) 0 nil])
([nil nil ((12909 . 12910) (#("}" 0 1 (fontified t)) . 12909)) nil (26715 36802 466110 541000) 0 nil])
([nil nil ((12908 . 12909)) nil (26715 36802 466109 740000) 0 nil])
([nil nil ((12957 . 12958)) nil (26715 36802 466109 399000) 0 nil])
([nil nil ((13007 . 13008)) nil (26715 36802 466109 189000) 0 nil])
([nil nil ((13057 . 13058)) nil (26715 36802 466108 928000) 0 nil])
([nil nil ((13133 . 13134)) nil (26715 36802 466108 688000) 0 nil])
([nil nil ((13184 . 13185)) nil (26715 36802 466108 447000) 0 nil])
([nil nil ((13262 . 13263)) nil (26715 36802 466108 237000) 0 nil])
([nil nil ((13313 . 13314)) nil (26715 36802 466107 906000) 0 nil])
([nil nil ((13265 . 13266)) nil (26715 36802 466107 696000) 0 nil])
([nil nil ((13136 . 13137)) nil (26715 36802 466107 395000) 0 nil])
([nil nil ((12804 . 12805) (#("			" 0 3 (face (bold) fontified t)) . 12804) (undo-tree-id1246 . -2)) nil (26715 36802 466106 915000) 0 nil])
([nil nil ((12853 . 12854) (#("			" 0 3 (face (bold) fontified t)) . 12853) (undo-tree-id1245 . -2)) nil (26715 36802 466106 3000) 0 nil])
([nil nil ((#("% \\usepackage{color}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 21 (face font-lock-comment-face fontified t)) . 12565) (undo-tree-id1213 . -20) (undo-tree-id1214 . -19) (undo-tree-id1215 . -19) (undo-tree-id1216 . -19) (undo-tree-id1217 . -19) (undo-tree-id1218 . -19) (undo-tree-id1219 . -19) (undo-tree-id1220 . -19) (undo-tree-id1221 . -19) (undo-tree-id1222 . -19) (undo-tree-id1223 . -19) (undo-tree-id1224 . -19) (undo-tree-id1225 . -19) (undo-tree-id1226 . -19) (undo-tree-id1227 . -19) (undo-tree-id1228 . -19) (undo-tree-id1229 . -19) (undo-tree-id1230 . -19) (undo-tree-id1231 . -19) (undo-tree-id1232 . -19) (undo-tree-id1233 . -19) (undo-tree-id1234 . -19) (undo-tree-id1235 . -19) (undo-tree-id1236 . -19) (undo-tree-id1237 . -19) (undo-tree-id1238 . -19) (undo-tree-id1239 . -19) (undo-tree-id1240 . -19) (undo-tree-id1241 . -19) (undo-tree-id1242 . -19) (undo-tree-id1243 . -19) (undo-tree-id1244 . -21) 12584) nil (26715 36802 466104 480000) 0 nil])
([nil nil ((#("% \\usepackage{tabularray}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 25 (face font-lock-comment-face fontified t) 25 26 (face font-lock-comment-face fontified t)) . 12565) (undo-tree-id1211 . -25) (undo-tree-id1212 . -19) 12584) nil (26715 36802 466079 242000) 0 nil])
([nil nil ((#("{\\bfseries Table 3 - Analysis of Variance (ANOVA) for the Viscosity of the Curd Product}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 32 (face (bold) fontified t) 32 33 (face (bold) fontified t) 33 51 (face (bold) fontified t) 51 74 (face (bold) fontified t) 74 75 (face (bold) fontified t) 75 87 (face (bold) fontified t) 87 89 (fontified t)) . -12476) (undo-tree-id1175 . -16) (undo-tree-id1176 . -16) (undo-tree-id1177 . -89) (undo-tree-id1178 . -89) (undo-tree-id1179 . -89) (undo-tree-id1180 . -89) (undo-tree-id1181 . -89) (undo-tree-id1182 . -89) (undo-tree-id1183 . -89) (undo-tree-id1184 . -89) (undo-tree-id1185 . -89) (undo-tree-id1186 . -89) (undo-tree-id1187 . -89) (undo-tree-id1188 . -89) (undo-tree-id1189 . -89) (undo-tree-id1190 . -89) (undo-tree-id1191 . -89) (undo-tree-id1192 . -89) (undo-tree-id1193 . -89) (undo-tree-id1194 . -89) (undo-tree-id1195 . -89) (undo-tree-id1196 . -89) (undo-tree-id1197 . -89) (undo-tree-id1198 . -89) (undo-tree-id1199 . -89) (undo-tree-id1200 . -89) (undo-tree-id1201 . -89) (undo-tree-id1202 . -89) (undo-tree-id1203 . -89) (undo-tree-id1204 . -89) (undo-tree-id1205 . -89) (undo-tree-id1206 . -89) (undo-tree-id1207 . -89) (undo-tree-id1208 . -89) (undo-tree-id1209 . -16) (undo-tree-id1210 . -16) 12565) nil (26715 36802 466077 219000) 0 nil])
([nil nil ((12493 . 12494) 12476) nil (26715 36802 466046 20000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12594 . 12595) (nil fontified nil 12494 . 12595) (12494 . 12595)) nil (26715 36802 466041 632000) 0 nil])
([nil nil ((12869 . 12870) (#("х" 0 1 (face tex-math fontified t)) . 12869) (undo-tree-id1369 . -1) (t 26715 36802 469521 285000)) nil (26715 36825 151196 212000) 0 nil])
([nil nil ((12869 . 12870) (#("x" 0 1 (face tex-math fontified t)) . 12869) (undo-tree-id1368 . -1)) nil (26715 36825 151195 540000) 0 nil])
([nil nil ((12918 . 12919) (#("х" 0 1 (face tex-math fontified t)) . 12918) (undo-tree-id1367 . -1)) nil (26715 36825 151194 949000) 0 nil])
([nil nil ((12968 . 12969) (#("х" 0 1 (face tex-math fontified t)) . 12968) (undo-tree-id1366 . -1)) nil (26715 36825 151194 358000) 0 nil])
([nil nil ((13018 . 13019) (#("х" 0 1 (face tex-math fontified t)) . 13018)) nil (26715 36825 151193 747000) 0 nil])
([nil nil ((13094 . 13095) (#("х" 0 1 (face tex-math fontified t)) . 13094) (undo-tree-id1365 . -1)) nil (26715 36825 151193 507000) 0 nil])
([nil nil ((13146 . 13147) (#("х" 0 1 (face tex-math fontified t)) . 13146) (undo-tree-id1364 . -1)) nil (26715 36825 151192 845000) 0 nil])
([nil nil ((13224 . 13225) (#("х" 0 1 (face tex-math fontified t)) . 13224) (undo-tree-id1363 . -1)) nil (26715 36825 151192 214000) 0 nil])
([nil nil ((13276 . 13277) (#("х" 0 1 (face tex-math fontified t)) . 13276) (undo-tree-id1362 . -1)) nil (26715 36825 151191 543000) 0 nil])
([nil nil ((13094 . 13095) (#("x" 0 1 (face tex-math fontified t)) . 13094) (undo-tree-id1361 . -1)) nil (26715 36825 151190 200000) 0 nil])
([nil nil ((13018 . 13019) (#("x" 0 1 (face tex-math fontified t)) . 13018) (undo-tree-id1360 . -1)) nil (26715 36825 151189 409000) 0 nil])
([nil nil ((12968 . 12969) (#("x" 0 1 (face tex-math fontified t)) . 12968) (undo-tree-id1359 . -1)) nil (26715 36825 151188 607000) 0 nil])
([nil nil ((12918 . 12919) (#("x" 0 1 (face tex-math fontified t)) . 12918) (undo-tree-id1358 . -1)) nil (26715 36825 151187 756000) 0 nil])
([nil nil ((12869 . 12870) (#("x" 0 1 (face tex-math fontified t)) . 12869) (undo-tree-id1357 . -1)) nil (26715 36825 151186 894000) 0 nil])
([nil nil ((12918 . 12919) (#("x" 0 1 (face tex-math fontified t)) . 12918) (undo-tree-id1356 . -1)) nil (26715 36825 151186 213000) 0 nil])
([nil nil ((12968 . 12969) (#("x" 0 1 (face tex-math fontified t)) . 12968) (undo-tree-id1355 . -1)) nil (26715 36825 151185 201000) 0 nil])
([nil nil ((13018 . 13019) (#("x" 0 1 (face tex-math fontified t)) . 13018)) nil (26715 36825 151184 450000) 0 nil])
([nil nil ((13094 . 13095) (#("x" 0 1 (face tex-math fontified t)) . 13094) (undo-tree-id1354 . -1)) nil (26715 36825 151184 109000) 0 nil])
([nil nil ((13146 . 13147) (#("x" 0 1 (face tex-math fontified t)) . 13146) (undo-tree-id1353 . -1)) nil (26715 36825 151183 337000) 0 nil])
([nil nil ((13224 . 13225) (#("x" 0 1 (face tex-math fontified t)) . 13224) (undo-tree-id1352 . -1)) nil (26715 36825 151182 516000) 0 nil])
([nil nil ((13224 . 13225) (#("x" 0 1 (face tex-math fontified t)) . 13224) (undo-tree-id1351 . -1)) nil (26715 36825 151181 514000) 0 nil])
([nil nil ((nil fontified nil 13227 . 13228) (nil face (tex-math subscript) 13227 . 13228) (13227 . 13228) (#("х" 0 1 (face tex-math fontified t)) . 13227) (undo-tree-id1350 . -1)) nil (26715 36825 151180 101000) 0 nil])
([nil nil ((nil fontified nil 13097 . 13098) (nil face (tex-math subscript) 13097 . 13098) (13097 . 13098) (#("х" 0 1 (face tex-math fontified t)) . 13097) (undo-tree-id1349 . -1)) nil (26715 36825 151176 264000) 0 nil])
([nil nil ((13227 . 13228) (t 26715 36825 154533 214000)) nil (26715 36837 279139 699000) 0 nil])
([nil nil ((13097 . 13098)) nil (26715 36837 279135 0) 0 nil])
([nil nil ((13529 . 13550) (15350 . 15366) (t 26715 36837 282539 856000)) nil (26715 36912 158665 833000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15976 . 15977) (nil fontified nil 15434 . 15977) (15434 . 15977) (#("
%% \\begin{longtable}[]{@{}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 2\\tabcolsep) * \\real{0.5456}}
%%   >{\\centering\\arraybackslash}p{(\\linewidth - 2\\tabcolsep) * \\real{0.4544}}@{}}
%% \\toprule\\noalign{}
%% \\endhead
%% \\bottomrule\\noalign{}
%% \\endlastfoot
%% {\\bfseries Coefficients} & {\\bfseries Values} \\\\
%% Constant & -12150,4 \\\\
%% \\emph{х\\textsubscript{1}} & 332,175 \\\\
%% \\emph{х\\textsubscript{2}} & -652,284 \\\\
%% \\emph{х\\textsubscript{3}} & 64,2389 \\\\
%% \\emph{х\\textsubscript{1}\\textsuperscript{2}} & -2,46 \\\\
%% \\emph{х\\textsubscript{1}х\\textsubscript{2}} & 20,9625 \\\\
%% \\emph{х\\textsubscript{2}\\textsuperscript{2}} & -136,062 \\\\
%% \\emph{х\\textsubscript{2}х\\textsubscript{3}} & 13,9423 \\\\
%% \\emph{х\\textsubscript{3}\\textsuperscript{2}} & -1,9216 \\\\
%% \\end{longtable}" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 10 (face font-lock-comment-face fontified t) 10 21 (face font-lock-comment-face fontified t latex-env-pair t) 21 28 (face font-lock-comment-face fontified t) 28 33 (face font-lock-comment-delimiter-face fontified t) 33 76 (face font-lock-comment-face fontified t) 76 107 (face font-lock-comment-face fontified t) 107 112 (face font-lock-comment-delimiter-face fontified t) 112 190 (face font-lock-comment-face fontified t) 190 193 (face font-lock-comment-delimiter-face fontified t) 193 212 (face font-lock-comment-face fontified t) 212 215 (face font-lock-comment-delimiter-face fontified t) 215 224 (face font-lock-comment-face fontified t) 224 227 (face font-lock-comment-delimiter-face fontified t) 227 249 (face font-lock-comment-face fontified t) 249 252 (face font-lock-comment-delimiter-face fontified t) 252 265 (face font-lock-comment-face fontified t) 265 268 (face font-lock-comment-delimiter-face fontified t) 268 317 (face font-lock-comment-face fontified t) 317 320 (face font-lock-comment-delimiter-face fontified t) 320 343 (face font-lock-comment-face fontified t) 343 346 (face font-lock-comment-delimiter-face fontified t) 346 385 (face font-lock-comment-face fontified t) 385 388 (face font-lock-comment-delimiter-face fontified t) 388 428 (face font-lock-comment-face fontified t) 428 431 (face font-lock-comment-delimiter-face fontified t) 431 470 (face font-lock-comment-face fontified t) 470 473 (face font-lock-comment-delimiter-face fontified t) 473 529 (face font-lock-comment-face fontified t) 529 532 (face font-lock-comment-delimiter-face fontified t) 532 589 (face font-lock-comment-face fontified t) 589 592 (face font-lock-comment-delimiter-face fontified t) 592 651 (face font-lock-comment-face fontified t) 651 654 (face font-lock-comment-delimiter-face fontified t) 654 711 (face font-lock-comment-face fontified t) 711 714 (face font-lock-comment-delimiter-face fontified t) 714 772 (face font-lock-comment-face fontified t) 772 775 (face font-lock-comment-delimiter-face fontified t) 775 777 (face font-lock-comment-face fontified t) 777 779 (face font-lock-comment-face fontified t) 779 790 (face font-lock-comment-face fontified t latex-env-pair t)) . 15434) (undo-tree-id1598 . -772) (undo-tree-id1599 . -789) (undo-tree-id1600 . -772) 16225 (t 26715 36912 161584 655000)) nil (26715 36958 441180 15000) 0 nil])
([nil nil ((#("\\textit" 0 7 (face font-lock-keyword-face fontified t)) . 15864) (undo-tree-id1456 . -6) (undo-tree-id1457 . -6) (undo-tree-id1458 . -6) (undo-tree-id1459 . -5) (undo-tree-id1460 . -5) (undo-tree-id1461 . -5) (undo-tree-id1462 . -5) (undo-tree-id1463 . -5) (undo-tree-id1464 . -5) (undo-tree-id1465 . -5) (undo-tree-id1466 . -5) (undo-tree-id1467 . -5) (undo-tree-id1468 . -5) (undo-tree-id1469 . -5) (undo-tree-id1470 . -5) (undo-tree-id1471 . -5) (undo-tree-id1472 . -5) (undo-tree-id1473 . -5) (undo-tree-id1474 . -5) (undo-tree-id1475 . -5) (undo-tree-id1476 . -5) (undo-tree-id1477 . -5) (undo-tree-id1478 . -5) (undo-tree-id1479 . -5) (undo-tree-id1480 . -5) (undo-tree-id1481 . -5) (undo-tree-id1482 . -5) (undo-tree-id1483 . -5) (undo-tree-id1484 . -5) (undo-tree-id1485 . -6) (undo-tree-id1486 . -6) (undo-tree-id1487 . -6) (undo-tree-id1488 . -6) (undo-tree-id1489 . -6) (undo-tree-id1490 . -6) (undo-tree-id1491 . -6) (undo-tree-id1492 . -6) (undo-tree-id1493 . -6) (undo-tree-id1494 . -6) (undo-tree-id1495 . -6) (undo-tree-id1496 . -6) (undo-tree-id1497 . -6) (undo-tree-id1498 . -6) (undo-tree-id1499 . -6) (undo-tree-id1500 . -6) (undo-tree-id1501 . -6) (undo-tree-id1502 . -6) (undo-tree-id1503 . -6) (undo-tree-id1504 . -6) (undo-tree-id1505 . -6) (undo-tree-id1506 . -6) (undo-tree-id1507 . -6) (undo-tree-id1508 . -6) (undo-tree-id1509 . -6) (undo-tree-id1510 . -6) (undo-tree-id1511 . -6) (undo-tree-id1512 . -6) (undo-tree-id1513 . -6) (undo-tree-id1514 . -6) (undo-tree-id1515 . -6) (undo-tree-id1516 . -6) (undo-tree-id1517 . -7) (#("\\textit" 0 7 (face font-lock-keyword-face fontified t)) . 15845) (undo-tree-id1518 . -2) (undo-tree-id1519 . -2) (undo-tree-id1520 . -2) (undo-tree-id1521 . -2) (undo-tree-id1522 . -2) (undo-tree-id1523 . -2) (undo-tree-id1524 . -2) (undo-tree-id1525 . -2) (undo-tree-id1526 . -2) (undo-tree-id1527 . -2) (undo-tree-id1528 . -3) (undo-tree-id1529 . -3) (undo-tree-id1530 . -3) (undo-tree-id1531 . -3) (undo-tree-id1532 . -3) (undo-tree-id1533 . -3) (undo-tree-id1534 . -3) (undo-tree-id1535 . -3) (undo-tree-id1536 . -3) (undo-tree-id1537 . -3) (undo-tree-id1538 . -4) (undo-tree-id1539 . -4) (undo-tree-id1540 . -4) (undo-tree-id1541 . -4) (undo-tree-id1542 . -4) (undo-tree-id1543 . -4) (undo-tree-id1544 . -4) (undo-tree-id1545 . -4) (undo-tree-id1546 . -4) (undo-tree-id1547 . -4) (undo-tree-id1548 . -5) (undo-tree-id1549 . -5) (undo-tree-id1550 . -5) (undo-tree-id1551 . -5) (undo-tree-id1552 . -5) (undo-tree-id1553 . -5) (undo-tree-id1554 . -5) (undo-tree-id1555 . -5) (undo-tree-id1556 . -5) (undo-tree-id1557 . -5) (undo-tree-id1558 . -6) (undo-tree-id1559 . -6) (undo-tree-id1560 . -6) (undo-tree-id1561 . -6) (undo-tree-id1562 . -6) (undo-tree-id1563 . -6) (undo-tree-id1564 . -6) (undo-tree-id1565 . -6) (undo-tree-id1566 . -6) (undo-tree-id1567 . -6) (undo-tree-id1568 . -6) (undo-tree-id1569 . -6) (undo-tree-id1570 . -6) (undo-tree-id1571 . -6) (undo-tree-id1572 . -6) (undo-tree-id1573 . -6) (undo-tree-id1574 . -6) (undo-tree-id1575 . -6) (undo-tree-id1576 . -6) (undo-tree-id1577 . -6) (undo-tree-id1578 . -6) (undo-tree-id1579 . -6) (undo-tree-id1580 . -6) (undo-tree-id1581 . -6) (undo-tree-id1582 . -6) (undo-tree-id1583 . -5) (undo-tree-id1584 . -5) (undo-tree-id1585 . -5) (undo-tree-id1586 . -5) (undo-tree-id1587 . -5) (undo-tree-id1588 . -5) (undo-tree-id1589 . -5) (undo-tree-id1590 . -5) (undo-tree-id1591 . -5) (undo-tree-id1592 . -5) (undo-tree-id1593 . -5) (undo-tree-id1594 . -5) (undo-tree-id1595 . -5) (undo-tree-id1596 . -5) (undo-tree-id1597 . -5) (#("\\textit" 0 7 (face font-lock-keyword-face fontified t)) . 15799) (#("\\textit" 0 7 (face font-lock-keyword-face fontified t)) . 15780) (#("\\textit" 0 7 (face font-lock-keyword-face fontified t)) . 15737) (#("\\textit" 0 7 (face font-lock-keyword-face fontified t)) . 15720) (#("\\textit" 0 7 (face font-lock-keyword-face fontified t)) . 15702) (#("\\textit" 0 7 (face font-lock-keyword-face fontified t)) . 15685) 15919) nil (26715 36958 441176 699000) 0 nil])
([nil nil ((15685 . 15686) (#("{" 0 1 (fontified t)) . 15685) (undo-tree-id1455 . -1)) nil (26715 36958 441131 905000) 0 nil])
([nil nil ((15702 . 15703) (#("{" 0 1 (fontified t)) . 15702) (undo-tree-id1454 . -1)) nil (26715 36958 441130 953000) 0 nil])
([nil nil ((15720 . 15721) (#("{" 0 1 (fontified t)) . 15720) (undo-tree-id1453 . -1)) nil (26715 36958 441130 282000) 0 nil])
([nil nil ((15737 . 15738) (#("{" 0 1 (fontified t)) . 15737) (undo-tree-id1452 . -1)) nil (26715 36958 441129 741000) 0 nil])
([nil nil ((15780 . 15781) (#("{" 0 1 (fontified t)) . 15780) (undo-tree-id1451 . -1)) nil (26715 36958 441129 69000) 0 nil])
([nil nil ((15799 . 15800) (#("{" 0 1 (fontified t)) . 15799)) nil (26715 36958 441128 518000) 0 nil])
([nil nil ((15845 . 15846) (#("{" 0 1 (fontified t)) . 15845) (undo-tree-id1450 . -1)) nil (26715 36958 441128 298000) 0 nil])
([nil nil ((15864 . 15865) (#("{" 0 1 (fontified t)) . 15864) (undo-tree-id1448 . 1) (undo-tree-id1449 . -1)) nil (26715 36958 441127 757000) 0 nil])
([nil nil ((15867 . 15868) (#("}" 0 1 (fontified t)) . 15867) (undo-tree-id1447 . -1)) nil (26715 36958 441126 985000) 0 nil])
([nil nil ((15850 . 15851) (#("}" 0 1 (fontified t)) . 15850) (undo-tree-id1446 . -1)) nil (26715 36958 441126 444000) 0 nil])
([nil nil ((15802 . 15803) (#("}" 0 1 (fontified t)) . 15802) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1)) nil (26715 36958 441125 372000) 0 nil])
([nil nil ((15785 . 15786) (#("}" 0 1 (fontified t)) . 15785)) nil (26715 36958 441121 946000) 0 nil])
([nil nil ((15740 . 15741) (#("}" 0 1 (fontified t)) . 15740) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1)) nil (26715 36958 441121 515000) 0 nil])
([nil nil ((15723 . 15724) (#("}" 0 1 (fontified t)) . 15723) (undo-tree-id1428 . -1)) nil (26715 36958 441119 281000) 0 nil])
([nil nil ((15705 . 15706) (#("}" 0 1 (fontified t)) . 15705) (undo-tree-id1427 . -1)) nil (26715 36958 441118 630000) 0 nil])
([nil nil ((15688 . 15689) (#("}" 0 1 (fontified t)) . 15688) (undo-tree-id1426 . -1)) nil (26715 36958 441118 89000) 0 nil])
([nil nil ((15687 . 15688)) nil (26715 36958 441117 508000) 0 nil])
([nil nil ((15705 . 15706)) nil (26715 36958 441117 367000) 0 nil])
([nil nil ((15724 . 15725)) nil (26715 36958 441117 197000) 0 nil])
([nil nil ((15742 . 15743)) nil (26715 36958 441117 57000) 0 nil])
([nil nil ((15786 . 15787)) nil (26715 36958 441116 886000) 0 nil])
([nil nil ((15806 . 15807)) nil (26715 36958 441116 726000) 0 nil])
([nil nil ((15853 . 15854)) nil (26715 36958 441116 556000) 0 nil])
([nil nil ((15873 . 15874)) nil (26715 36958 441116 295000) 0 nil])
([nil nil ((15872 . 15873) (#("х" 0 1 (face tex-math fontified t)) . 15872) (undo-tree-id1400 . 1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1)) nil (26715 36958 441115 544000) 0 nil])
([nil nil ((15852 . 15853) (#("х" 0 1 (face tex-math fontified t)) . 15852) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1)) nil (26715 36958 441106 487000) 0 nil])
([nil nil ((15805 . 15806) (#("х" 0 1 (face tex-math fontified t)) . 15805) (undo-tree-id1375 . -1)) nil (26715 36958 441096 388000) 0 nil])
([nil nil ((15785 . 15786) (#("х" 0 1 (face tex-math fontified t)) . 15785) (undo-tree-id1374 . -1)) nil (26715 36958 441095 707000) 0 nil])
([nil nil ((15741 . 15742) (#("х" 0 1 (face tex-math fontified t)) . 15741) (undo-tree-id1373 . -1)) nil (26715 36958 441095 35000) 0 nil])
([nil nil ((15723 . 15724) (#("х" 0 1 (face tex-math fontified t)) . 15723) (undo-tree-id1372 . -1)) nil (26715 36958 441094 204000) 0 nil])
([nil nil ((15704 . 15705) (#("х" 0 1 (face tex-math fontified t)) . 15704)) nil (26715 36958 441093 382000) 0 nil])
([nil nil ((15686 . 15687) (#("х" 0 1 (face tex-math fontified t)) . 15686) (undo-tree-id1371 . -1)) nil (26715 36958 441312 354000) 0 nil])
([nil nil ((nil fontified nil 15788 . 15789) (nil face (tex-math subscript) 15788 . 15789) (15788 . 15789) (#("х" 0 1 (face tex-math fontified t)) . 15788) (undo-tree-id1605 . -1)) nil (26715 36962 571866 857000) 0 nil] [nil nil ((nil fontified nil 15744 . 15745) (nil face (tex-math subscript) 15744 . 15745) (15744 . 15745) (#("$" 0 1 (face tex-math fontified t)) . 15744) (undo-tree-id1370 . -1)) ((15744 . 15745) (#("x" 0 1 (face (tex-math subscript) fontified nil)) . 15744) (nil face nil 15744 . 15745) (nil fontified t 15744 . 15745)) (26715 36958 441089 896000) 0 nil])
([nil nil ((nil fontified nil 15855 . 15856) (nil face (tex-math subscript) 15855 . 15856) (15855 . 15856) (#("х" 0 1 (face tex-math fontified t)) . 15855)) nil (26715 36962 571865 915000) 0 nil])
nil
([nil nil ((#("n" 0 1 (face tex-math fontified t)) . -15856) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) 15857 (15855 . 15857)) nil (26715 36962 571865 134000) 0 nil])
([nil nil ((#("n" 0 1 (face (tex-math subscript) fontified nil)) . -15789) (undo-tree-id1601 . -1) 15790 (15788 . 15790)) nil (26715 36962 571860 264000) 0 nil])
([nil nil ((15744 . 15746) (#("@" 0 1 (face tex-math fontified t)) . -15744) (undo-tree-id1798 . -1) 15745 (15744 . 15745) (#("\\" 0 1 (face font-lock-keyword-face fontified t)) . -15744) (undo-tree-id1799 . -1) 15745 (15744 . 15745) (t 26715 36962 575618 179000)) nil (26715 37000 60612 271000) 0 nil])
([nil nil ((15811 . 15813) (#("@" 0 1 (face (tex-math subscript) fontified nil)) . -15811) (undo-tree-id1796 . -1) 15812 (15811 . 15812) (#("\\" 0 1 (face (tex-math subscript) fontified nil)) . -15811) (undo-tree-id1797 . -1) 15812 (15811 . 15812)) nil (26715 37000 60610 928000) 0 nil])
([nil nil ((15881 . 15883) (#("@" 0 1 (face (tex-math subscript) fontified nil)) . -15881) 15882 (15881 . 15882) (#("\\" 0 1 (face (tex-math subscript) fontified nil)) . -15881) 15882 (15881 . 15882)) nil (26715 37000 60609 846000) 0 nil])
([nil nil ((#("\\textsuperscript{\\textit{2}}" 0 16 (face font-lock-keyword-face fontified t) 16 17 (fontified t) 17 24 (face font-lock-keyword-face fontified t) 24 25 (fontified t) 25 26 (face (italic) fontified t) 26 28 (fontified t)) . 15884) (undo-tree-id1795 . -27)) nil (26715 37000 60609 345000) 0 nil])
([nil nil ((#("\\textsuperscript{\\textit{2}}" 0 16 (face font-lock-keyword-face fontified t) 16 17 (fontified t) 17 24 (face font-lock-keyword-face fontified t) 24 25 (fontified t) 25 26 (face (italic) fontified t) 26 28 (fontified t)) . 15814) (undo-tree-id1793 . -27) (undo-tree-id1794 . -28)) nil (26715 37000 60608 674000) 0 nil])
([nil nil ((#("\\textsuperscript{\\textit{2}}" 0 16 (face font-lock-keyword-face fontified t) 16 17 (fontified t) 17 24 (face font-lock-keyword-face fontified t) 24 25 (fontified t) 25 26 (face (italic) fontified t) 26 28 (fontified t)) . 15747) (undo-tree-id1792 . -27)) nil (26715 37000 60607 973000) 0 nil])
([nil nil ((#("  colspec = {Q[502]Q[352]},
" 0 28 (fontified t)) . 15556) (undo-tree-id1790 . -27) (undo-tree-id1791 . -6) 15562) nil (26715 37000 60607 352000) 0 nil])
([nil nil ((#("  width = \\linewidth,
" 0 10 (fontified t) 10 20 (face font-lock-keyword-face fontified t) 20 22 (fontified t)) . 15534) (undo-tree-id1788 . -21) (undo-tree-id1789 . -6) 15540) nil (26715 37000 60604 306000) 0 nil])
([nil nil ((#("% \\usepackage{color}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 21 (face font-lock-comment-face fontified t)) . 15434) (undo-tree-id1756 . -20) (undo-tree-id1757 . -6) (undo-tree-id1758 . -6) (undo-tree-id1759 . -6) (undo-tree-id1760 . -6) (undo-tree-id1761 . -6) (undo-tree-id1762 . -6) (undo-tree-id1763 . -6) (undo-tree-id1764 . -6) (undo-tree-id1765 . -6) (undo-tree-id1766 . -6) (undo-tree-id1767 . -6) (undo-tree-id1768 . -6) (undo-tree-id1769 . -6) (undo-tree-id1770 . -6) (undo-tree-id1771 . -6) (undo-tree-id1772 . -6) (undo-tree-id1773 . -6) (undo-tree-id1774 . -6) (undo-tree-id1775 . -6) (undo-tree-id1776 . -6) (undo-tree-id1777 . -6) (undo-tree-id1778 . -6) (undo-tree-id1779 . -6) (undo-tree-id1780 . -6) (undo-tree-id1781 . -6) (undo-tree-id1782 . -6) (undo-tree-id1783 . -6) (undo-tree-id1784 . -6) (undo-tree-id1785 . -6) (undo-tree-id1786 . -6) (undo-tree-id1787 . -21) 15440) nil (26715 37000 60603 104000) 0 nil])
([nil nil ((#("% \\usepackage{tabularray}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 25 (face font-lock-comment-face fontified t) 25 26 (face font-lock-comment-face fontified t)) . 15434) (undo-tree-id1733 . -25) (undo-tree-id1734 . -6) (undo-tree-id1735 . -6) (undo-tree-id1736 . -6) (undo-tree-id1737 . -6) (undo-tree-id1738 . -6) (undo-tree-id1739 . -6) (undo-tree-id1740 . -25) (undo-tree-id1741 . -6) (undo-tree-id1742 . -6) (undo-tree-id1743 . -6) (undo-tree-id1744 . -6) (undo-tree-id1745 . -6) (undo-tree-id1746 . -6) (undo-tree-id1747 . -6) (undo-tree-id1748 . -6) (undo-tree-id1749 . -6) (undo-tree-id1750 . -6) (undo-tree-id1751 . -6) (undo-tree-id1752 . -6) (undo-tree-id1753 . -6) (undo-tree-id1754 . -6) (undo-tree-id1755 . -26) 15440) nil (26715 37000 60560 313000) 0 nil])
([nil nil ((#("{\\bfseries Table 4 - Regression Coefficients}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 44 (face (bold) fontified t) 44 46 (fontified t)) . -15388) (undo-tree-id1606 . -6) (undo-tree-id1607 . -6) (undo-tree-id1608 . -46) (undo-tree-id1609 . -46) (undo-tree-id1610 . -46) (undo-tree-id1611 . -46) (undo-tree-id1612 . -46) (undo-tree-id1613 . -46) (undo-tree-id1614 . -46) (undo-tree-id1615 . -46) (undo-tree-id1616 . -46) (undo-tree-id1617 . -46) (undo-tree-id1618 . -46) (undo-tree-id1619 . -46) (undo-tree-id1620 . -46) (undo-tree-id1621 . -46) (undo-tree-id1622 . -46) (undo-tree-id1623 . -46) (undo-tree-id1624 . -46) (undo-tree-id1625 . -46) (undo-tree-id1626 . -46) (undo-tree-id1627 . -46) (undo-tree-id1628 . -46) (undo-tree-id1629 . -46) (undo-tree-id1630 . -46) (undo-tree-id1631 . -46) (undo-tree-id1632 . -46) (undo-tree-id1633 . -46) (undo-tree-id1634 . -46) (undo-tree-id1635 . -46) (undo-tree-id1636 . -46) (undo-tree-id1637 . -46) (undo-tree-id1638 . -46) (undo-tree-id1639 . -46) (undo-tree-id1640 . -46) (undo-tree-id1641 . -46) (undo-tree-id1642 . -46) (undo-tree-id1643 . -46) (undo-tree-id1644 . -46) (undo-tree-id1645 . -46) (undo-tree-id1646 . -46) (undo-tree-id1647 . -46) (undo-tree-id1648 . -46) (undo-tree-id1649 . -46) (undo-tree-id1650 . -46) (undo-tree-id1651 . -46) (undo-tree-id1652 . -46) (undo-tree-id1653 . -46) (undo-tree-id1654 . -46) (undo-tree-id1655 . -46) (undo-tree-id1656 . -46) (undo-tree-id1657 . -46) (undo-tree-id1658 . -46) (undo-tree-id1659 . -46) (undo-tree-id1660 . -6) (undo-tree-id1661 . -6) (undo-tree-id1662 . -6) (undo-tree-id1663 . -6) (undo-tree-id1664 . -6) (undo-tree-id1665 . -6) (undo-tree-id1666 . -6) (undo-tree-id1667 . -6) (undo-tree-id1668 . -6) (undo-tree-id1669 . -6) (undo-tree-id1670 . -6) (undo-tree-id1671 . -6) (undo-tree-id1672 . -6) (undo-tree-id1673 . -6) (undo-tree-id1674 . -6) (undo-tree-id1675 . -6) (undo-tree-id1676 . -6) (undo-tree-id1677 . -6) (undo-tree-id1678 . -6) (undo-tree-id1679 . -6) (undo-tree-id1680 . -6) (undo-tree-id1681 . -6) (undo-tree-id1682 . -6) (undo-tree-id1683 . -6) (undo-tree-id1684 . -6) (undo-tree-id1685 . -6) (undo-tree-id1686 . -6) (undo-tree-id1687 . -6) (undo-tree-id1688 . -6) (undo-tree-id1689 . -6) (undo-tree-id1690 . -6) (undo-tree-id1691 . -6) (undo-tree-id1692 . -6) (undo-tree-id1693 . -6) (undo-tree-id1694 . -6) (undo-tree-id1695 . -6) (undo-tree-id1696 . -6) (undo-tree-id1697 . -6) (undo-tree-id1698 . -6) (undo-tree-id1699 . -6) (undo-tree-id1700 . -6) (undo-tree-id1701 . -6) (undo-tree-id1702 . -6) (undo-tree-id1703 . -6) (undo-tree-id1704 . -6) (undo-tree-id1705 . -6) (undo-tree-id1706 . -6) (undo-tree-id1707 . -6) (undo-tree-id1708 . -6) (undo-tree-id1709 . -6) (undo-tree-id1710 . -6) (undo-tree-id1711 . -6) (undo-tree-id1712 . -6) (undo-tree-id1713 . -6) (undo-tree-id1714 . -6) (undo-tree-id1715 . -6) (undo-tree-id1716 . -6) (undo-tree-id1717 . -6) (undo-tree-id1718 . -6) (undo-tree-id1719 . -6) (undo-tree-id1720 . -6) (undo-tree-id1721 . -6) (undo-tree-id1722 . -6) (undo-tree-id1723 . -6) (undo-tree-id1724 . -6) (undo-tree-id1725 . -6) (undo-tree-id1726 . -6) (undo-tree-id1727 . -6) (undo-tree-id1728 . -6) (undo-tree-id1729 . -6) (undo-tree-id1730 . -6) (undo-tree-id1731 . -6) (undo-tree-id1732 . -46) 15434) nil (26715 37000 60552 669000) 0 nil])
([nil nil ((15405 . 15406) 15388) nil (26715 37000 60503 156000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15463 . 15464) (nil fontified nil 15406 . 15464) (15406 . 15464)) nil (26715 37000 60498 747000) 0 nil])
([nil nil ((15680 . 15681) (t 26715 37000 63644 677000)) nil (26715 37053 245123 912000) 0 nil])
([nil nil ((15723 . 15724)) nil (26715 37053 245119 935000) 0 nil])
([nil nil ((#("  caption = {\\bfseries Table 4 - Regression Coefficients},
" 0 13 (fontified t) 13 22 (face font-lock-keyword-face fontified t) 22 56 (face (bold) fontified t) 56 57 (fontified t) 57 58 (rear-nonsticky t fontified t) 58 59 (fontified t)) . 15406) (undo-tree-id1801 . -58) (undo-tree-id1802 . -5) 15411 (t 26715 37053 248684 379000)) nil (26715 37081 97796 238000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15389 . 15390) (#("
" 0 1 (fontified nil)) . -15446) (15387 . 15447)) nil (26715 37081 97794 675000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t) 1 2 (rear-nonsticky t fontified t)) . -15388) (undo-tree-id1800 . -2) 15390) nil (26715 37081 97793 844000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 15388)) nil (26715 37081 97785 538000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 15388)) nil (26715 37081 97785 378000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 15388)) nil (26715 37081 97785 117000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 15388)) nil (26715 37081 97784 366000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 15388)) nil (26715 37081 97784 85000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 15388)) nil (26715 37081 97783 735000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 15388)) nil (26715 37081 97783 574000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15388)) nil (26715 37081 97783 424000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . 15388)) nil (26715 37081 97783 224000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15388)) nil (26715 37081 97782 923000) 0 nil])
([nil nil ((#("," 0 1 (fontified t rear-nonsticky t)) . 15433)) nil (26715 37081 97782 542000) 0 nil])
([nil nil ((15388 . 15403) (15434 . 15447)) nil (26715 37081 97782 242000) 0 nil])
([nil nil ((15461 . 15462) 15460) nil (26715 37081 97778 364000) 0 nil])
([nil nil ((15789 . 15810) (17651 . 17667) (t 26715 37081 101706 86000)) nil (26715 37224 385926 947000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 17688)) nil (26715 37224 385926 596000) 0 nil])
([nil nil ((17876 . 17877) (#("
" 0 1 (face (bold) fontified t)) . -17876) 17807) nil (26715 37224 385926 326000) 0 nil])
([nil nil ((#("{\\bfseries Fig.1- Pareto Chart of Standardized Effects of Independent Factors on the Viscosity of the Curd Product}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 69 (face (bold) fontified t) 69 70 (face (bold) fontified t) 70 114 (face (bold) fontified t) 114 115 (fontified t)) . -17807) (undo-tree-id2090 . -69) (undo-tree-id2091 . -69) (undo-tree-id2092 . -68) (undo-tree-id2093 . -69) (undo-tree-id2094 . -69) (undo-tree-id2095 . -69) (undo-tree-id2096 . -69) (undo-tree-id2097 . -69) (undo-tree-id2098 . -69) (undo-tree-id2099 . -69) (undo-tree-id2100 . -69) (undo-tree-id2101 . -69) (undo-tree-id2102 . -69) (undo-tree-id2103 . -69) (undo-tree-id2104 . -69) (undo-tree-id2105 . -69) (undo-tree-id2106 . -69) (undo-tree-id2107 . -69) (undo-tree-id2108 . -69) (undo-tree-id2109 . -69) (undo-tree-id2110 . -69) (undo-tree-id2111 . -69) (undo-tree-id2112 . -69) (undo-tree-id2113 . -69) (undo-tree-id2114 . -69) (undo-tree-id2115 . -69) (undo-tree-id2116 . -69) (undo-tree-id2117 . -69) (undo-tree-id2118 . -69) (undo-tree-id2119 . -69) (undo-tree-id2120 . -69) (undo-tree-id2121 . -69) (undo-tree-id2122 . -69) (undo-tree-id2123 . -69) (undo-tree-id2124 . -69) (undo-tree-id2125 . -69) (undo-tree-id2126 . -69) (undo-tree-id2127 . -69) (undo-tree-id2128 . -69) (undo-tree-id2129 . -69) (undo-tree-id2130 . -69) (undo-tree-id2131 . -69) (undo-tree-id2132 . -69) (undo-tree-id2133 . -69) (undo-tree-id2134 . -69) (undo-tree-id2135 . -69) (undo-tree-id2136 . -69) (undo-tree-id2137 . -69) (undo-tree-id2138 . -69) (undo-tree-id2139 . -69) (undo-tree-id2140 . -69) (undo-tree-id2141 . -69) (undo-tree-id2142 . -69) (undo-tree-id2143 . -69) (undo-tree-id2144 . -69) (undo-tree-id2145 . -69) (undo-tree-id2146 . -69) (undo-tree-id2147 . -69) (undo-tree-id2148 . -69) (undo-tree-id2149 . -69) (undo-tree-id2150 . -69) (undo-tree-id2151 . -69) (undo-tree-id2152 . -69) (undo-tree-id2153 . -69) (undo-tree-id2154 . -69) (undo-tree-id2155 . -69) (undo-tree-id2156 . -69) (undo-tree-id2157 . -69) (undo-tree-id2158 . -69) (undo-tree-id2159 . -69) (undo-tree-id2160 . -69) (undo-tree-id2161 . -69) (undo-tree-id2162 . -69) (undo-tree-id2163 . -69) (undo-tree-id2164 . -69) (undo-tree-id2165 . -69) (undo-tree-id2166 . -69) (undo-tree-id2167 . -69) (undo-tree-id2168 . -69) (undo-tree-id2169 . -69) (undo-tree-id2170 . -69) (undo-tree-id2171 . -69) (undo-tree-id2172 . -69) (undo-tree-id2173 . -69) (undo-tree-id2174 . -69) (undo-tree-id2175 . -69) (undo-tree-id2176 . -69) (undo-tree-id2177 . -69) (undo-tree-id2178 . -69) 17923) nil (26715 37224 385925 13000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17892 . 17893) (nil fontified nil 17790 . 17893) (17790 . 17893)) nil (26715 37224 385900 507000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 17908) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1)) nil (26715 37224 385899 916000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 17908) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1)) nil (26715 37224 385894 987000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 17908)) nil (26715 37224 385855 182000) 0 nil])
([nil nil ((17909 . 17930) (18522 . 18538)) nil (26715 37224 385854 982000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 18559)) nil (26715 37224 385854 601000) 0 nil])
([nil nil ((18746 . 18747) (#("
" 0 1 (face (bold) fontified t)) . -18746) 18678) nil (26715 37224 385854 320000) 0 nil])
([nil nil ((#("{\\bfseries Fig.2- Response surface of the dependence of curd product viscosity on the mass fraction of cryopowder and fat content in cream}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 68 (face (bold) fontified t) 68 69 (face (bold) fontified t) 69 138 (face (bold) fontified t) 138 139 (fontified t)) . -18678) (undo-tree-id1908 . -68) (undo-tree-id1909 . -68) (undo-tree-id1910 . -67) (undo-tree-id1911 . -68) (undo-tree-id1912 . -68) (undo-tree-id1913 . -68) (undo-tree-id1914 . -68) (undo-tree-id1915 . -68) (undo-tree-id1916 . -68) (undo-tree-id1917 . -68) (undo-tree-id1918 . -68) (undo-tree-id1919 . -68) (undo-tree-id1920 . -68) (undo-tree-id1921 . -68) (undo-tree-id1922 . -68) (undo-tree-id1923 . -68) (undo-tree-id1924 . -68) (undo-tree-id1925 . -68) (undo-tree-id1926 . -68) (undo-tree-id1927 . -68) (undo-tree-id1928 . -68) (undo-tree-id1929 . -68) (undo-tree-id1930 . -68) (undo-tree-id1931 . -68) (undo-tree-id1932 . -68) (undo-tree-id1933 . -68) (undo-tree-id1934 . -68) (undo-tree-id1935 . -68) (undo-tree-id1936 . -68) (undo-tree-id1937 . -68) (undo-tree-id1938 . -68) (undo-tree-id1939 . -68) (undo-tree-id1940 . -68) (undo-tree-id1941 . -68) (undo-tree-id1942 . -68) (undo-tree-id1943 . -68) (undo-tree-id1944 . -68) (undo-tree-id1945 . -68) (undo-tree-id1946 . -68) (undo-tree-id1947 . -68) (undo-tree-id1948 . -68) (undo-tree-id1949 . -68) (undo-tree-id1950 . -68) (undo-tree-id1951 . -68) (undo-tree-id1952 . -68) (undo-tree-id1953 . -68) (undo-tree-id1954 . -68) (undo-tree-id1955 . -68) (undo-tree-id1956 . -68) (undo-tree-id1957 . -68) (undo-tree-id1958 . -68) (undo-tree-id1959 . -68) (undo-tree-id1960 . -68) (undo-tree-id1961 . -68) (undo-tree-id1962 . -68) (undo-tree-id1963 . -68) (undo-tree-id1964 . -68) (undo-tree-id1965 . -68) (undo-tree-id1966 . -68) (undo-tree-id1967 . -68) 18818) nil (26715 37224 385853 88000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18787 . 18788) (nil fontified nil 18661 . 18788) (18661 . 18788)) nil (26715 37224 385796 171000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 18803) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1)) nil (26715 37224 385795 610000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 18803) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1)) nil (26715 37224 385790 530000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 18803) (undo-tree-id1807 . -1)) nil (26715 37224 385761 806000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 18803) (undo-tree-id1806 . 1)) nil (26715 37224 385761 145000) 0 nil])
([nil nil ((#("{\\bfseries Fig.3- Response surface of the dependence of curd product
viscosity on the mass fraction of curd and fat content in cream}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 132 (face (bold) fontified t) 132 133 (fontified t)) . -18922) (undo-tree-id1803 . -69) (undo-tree-id1804 . -69) (undo-tree-id1805 . -69) 19056) nil (26715 37224 385760 153000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19025 . 19026) (nil fontified nil 18905 . 19026) (18905 . 19026)) nil (26715 37224 385749 493000) 0 nil])
([nil nil ((18910 . 18911)) nil (26715 37224 386018 740000) 0 nil])
([nil nil ((18666 . 18667)) nil (26715 37234 618730 270000) 0 nil] [nil nil ((18606 . 18607)) ((#(" " 0 1 (fontified t)) . 18606)) (26715 37224 385745 936000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 19043) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1)) nil (26715 37234 618729 960000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 19043) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1)) nil (26715 37234 618728 888000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 19043) (undo-tree-id2304 . -1)) nil (26715 37234 618726 934000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 19043) (undo-tree-id2303 . 1)) nil (26715 37234 618726 293000) 0 nil])
([nil nil ((#("{\\bfseries Fig.4 - Response surface of the dependence of curd product
viscosity on the mass fraction of curd and cryopowder}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 123 (face (bold) fontified t) 123 124 (fontified t)) . -19162) (undo-tree-id2263 . -70) (undo-tree-id2264 . -70) (undo-tree-id2265 . -70) (undo-tree-id2266 . -70) (undo-tree-id2267 . -70) (undo-tree-id2268 . -70) (undo-tree-id2269 . -70) (undo-tree-id2270 . -70) (undo-tree-id2271 . -70) (undo-tree-id2272 . -70) (undo-tree-id2273 . -70) (undo-tree-id2274 . -70) (undo-tree-id2275 . -70) (undo-tree-id2276 . -70) (undo-tree-id2277 . -70) (undo-tree-id2278 . -70) (undo-tree-id2279 . -70) (undo-tree-id2280 . -70) (undo-tree-id2281 . -70) (undo-tree-id2282 . -70) (undo-tree-id2283 . -70) (undo-tree-id2284 . -70) (undo-tree-id2285 . -70) (undo-tree-id2286 . -70) (undo-tree-id2287 . -70) (undo-tree-id2288 . -70) (undo-tree-id2289 . -70) (undo-tree-id2290 . -70) (undo-tree-id2291 . -70) (undo-tree-id2292 . -70) (undo-tree-id2293 . -70) (undo-tree-id2294 . -70) (undo-tree-id2295 . -70) (undo-tree-id2296 . -70) (undo-tree-id2297 . -70) (undo-tree-id2298 . -70) (undo-tree-id2299 . -70) (undo-tree-id2300 . -70) (undo-tree-id2301 . -70) (undo-tree-id2302 . -70) 19287) nil (26715 37234 618725 71000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19256 . 19257) (nil fontified nil 19145 . 19257) (19145 . 19257)) nil (26715 37234 618711 906000) 0 nil])
([nil nil ((19203 . 19204) (#("
" 0 1 (fontified t)) . -19203) (undo-tree-id2262 . -1) 19183) nil (26715 37234 618711 175000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 19272) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1)) nil (26715 37234 618709 251000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 19272) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1)) nil (26715 37234 618699 232000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 19272)) nil (26715 37234 618652 915000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 19272) (undo-tree-id2179 . 1) (undo-tree-id2180 . -1)) nil (26715 37234 618871 897000) 0 nil])
([nil nil ((19271 . 19272) 19259) nil (26715 37280 666689 25000) 0 nil] [nil nil ((19272 . 19345) (#("As seen in figures 2-4, the construction of the response surface for the
" 0 72 (fontified t) 72 73 (fontified t)) . 19272)) ((19272 . 19345) (#("as seen in figures 2-4, the construction of the response surface for the
" 0 72 (fontified t) 72 73 (fontified t)) . 19272) (undo-tree-id2314 . -72)) (26715 37234 618639 991000) 0 nil])
([nil nil ((19273 . 19294) (19954 . 19970)) nil (26715 37280 666688 804000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 19991) (undo-tree-id2610 . -1)) nil (26715 37280 666688 544000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20108) (undo-tree-id2609 . -1)) nil (26715 37280 666688 73000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20108)) nil (26715 37280 666687 612000) 0 nil])
([nil nil ((20238 . 20239) (#("
" 0 1 (face (bold) fontified t)) . -20238) (20172 . 20173) (#("
" 0 1 (face (bold) fontified t)) . -20172) 20108) nil (26715 37280 666687 251000) 0 nil])
([nil nil ((#("{\\bfseries Fig.5 - Sectional projections of the response surface illustrating the dependence of curd product viscosity on the mass fraction of cryopowder and fat content in cream}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 59 (face (bold) fontified t) 59 64 (face (bold) fontified t) 64 65 (face (bold) fontified t) 65 130 (face (bold) fontified t) 130 131 (face (bold) fontified t) 131 178 (face (bold) fontified t) 178 179 (fontified t)) . -20108) (undo-tree-id2605 . -130) (undo-tree-id2606 . -130) (undo-tree-id2607 . -129) (undo-tree-id2608 . -130) 20288) nil (26715 37280 666686 780000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20259 . 20260) (nil fontified nil 20093 . 20260) (20093 . 20260)) nil (26715 37280 666685 618000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20275) (undo-tree-id2604 . -1)) nil (26715 37280 666685 247000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20275) (undo-tree-id2603 . 1)) nil (26715 37280 666684 797000) 0 nil])
([nil nil ((20523 . 20524) (#("
" 0 1 (face (bold) fontified t)) . -20523) (20457 . 20458) (#("
" 0 1 (face (bold) fontified t)) . -20457) 20394) nil (26715 37280 666684 185000) 0 nil])
([nil nil ((20410 . 20411)) nil (26715 37280 666683 775000) 0 nil])
([nil nil ((#("{\\bfseries Fig.6 - Sectional projections of the response surface illustrating the dependence of curd product viscosity on the mass fraction of curd and fat content in cream}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 64 (face (bold) fontified t) 64 65 (face (bold) fontified t) 65 130 (face (bold) fontified t) 130 131 (face (bold) fontified t) 131 153 (face (bold) fontified t) 153 172 (face (bold) fontified t) 172 173 (fontified t)) . -20394) (undo-tree-id2597 . -16) (undo-tree-id2598 . -115) (undo-tree-id2599 . -129) (undo-tree-id2600 . 156) (undo-tree-id2601 . -115) (undo-tree-id2602 . -115) 20568) nil (26715 37280 666683 404000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20537 . 20538) (nil fontified nil 20377 . 20538) (20377 . 20538)) nil (26715 37280 666681 340000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20553) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1)) nil (26715 37280 666681 40000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20553) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1)) nil (26715 37280 666680 228000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20553) (undo-tree-id2586 . 1) (undo-tree-id2587 . -1)) nil (26715 37280 666678 254000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20553) (undo-tree-id2584 . 1) (undo-tree-id2585 . 1)) nil (26715 37280 666677 483000) 0 nil])
([nil nil ((20688 . 20689)) nil (26715 37280 666676 832000) 0 nil])
([nil nil ((#("{\\bfseries Fig.7 - Sectional projections of the response surface
illustrating the dependence of curd product viscosity on the mass
fraction of curd and cryopowder}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 65 (face (bold) fontified t) 65 94 (face (bold) fontified t) 94 105 (face (bold) fontified t) 105 131 (face (bold) fontified t) 131 162 (face (bold) fontified t) 162 163 (fontified t)) . -20672) (undo-tree-id2512 . -16) (undo-tree-id2513 . -147) (undo-tree-id2514 . 146) (undo-tree-id2515 . -81) (undo-tree-id2516 . -81) (undo-tree-id2517 . -81) (undo-tree-id2518 . -81) (undo-tree-id2519 . -81) (undo-tree-id2520 . -81) (undo-tree-id2521 . -81) (undo-tree-id2522 . -131) (undo-tree-id2523 . -147) (undo-tree-id2524 . -147) (undo-tree-id2525 . -147) (undo-tree-id2526 . -147) (undo-tree-id2527 . -147) (undo-tree-id2528 . -147) (undo-tree-id2529 . -147) (undo-tree-id2530 . -147) (undo-tree-id2531 . -147) (undo-tree-id2532 . -147) (undo-tree-id2533 . -147) (undo-tree-id2534 . -147) (undo-tree-id2535 . -147) (undo-tree-id2536 . -147) (undo-tree-id2537 . -147) (undo-tree-id2538 . -147) (undo-tree-id2539 . -147) (undo-tree-id2540 . -147) (undo-tree-id2541 . -147) (undo-tree-id2542 . -147) (undo-tree-id2543 . -147) (undo-tree-id2544 . -147) (undo-tree-id2545 . -147) (undo-tree-id2546 . -147) (undo-tree-id2547 . -147) (undo-tree-id2548 . -147) (undo-tree-id2549 . -147) (undo-tree-id2550 . -147) (undo-tree-id2551 . -147) (undo-tree-id2552 . -147) (undo-tree-id2553 . -147) (undo-tree-id2554 . -147) (undo-tree-id2555 . -147) (undo-tree-id2556 . -147) (undo-tree-id2557 . -147) (undo-tree-id2558 . -147) (undo-tree-id2559 . -147) (undo-tree-id2560 . -147) (undo-tree-id2561 . -147) (undo-tree-id2562 . -147) (undo-tree-id2563 . -147) (undo-tree-id2564 . -147) (undo-tree-id2565 . -147) (undo-tree-id2566 . -147) (undo-tree-id2567 . -147) (undo-tree-id2568 . -147) (undo-tree-id2569 . -147) (undo-tree-id2570 . -147) (undo-tree-id2571 . -147) (undo-tree-id2572 . -147) (undo-tree-id2573 . -147) (undo-tree-id2574 . -147) (undo-tree-id2575 . -147) (undo-tree-id2576 . -147) (undo-tree-id2577 . -147) (undo-tree-id2578 . -147) (undo-tree-id2579 . -147) (undo-tree-id2580 . -147) (undo-tree-id2581 . -147) (undo-tree-id2582 . -147) (undo-tree-id2583 . -147) 20836) nil (26715 37280 666675 720000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20805 . 20806) (nil fontified nil 20655 . 20806) (20655 . 20806)) nil (26715 37280 666654 640000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20821) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1)) nil (26715 37280 666653 989000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20821) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1)) nil (26715 37280 666646 825000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20821) (undo-tree-id2392 . 1) (undo-tree-id2393 . -1)) nil (26715 37280 666597 252000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20821) (undo-tree-id2390 . 1) (undo-tree-id2391 . 1)) nil (26715 37280 666596 430000) 0 nil])
([nil nil ((20956 . 20957)) nil (26715 37280 666595 659000) 0 nil])
([nil nil ((#("{\\bfseries Fig.8 - Diagnostic plot of deviation of predicted viscosity
error values from normal distribution}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 71 (face (bold) fontified t) 71 108 (fontified t) 108 109 (fontified t)) . -20940) (undo-tree-id2376 . -16) (undo-tree-id2377 . -87) (undo-tree-id2378 . 92) (undo-tree-id2379 . -71) (undo-tree-id2380 . -87) (undo-tree-id2381 . -87) (undo-tree-id2382 . -87) (undo-tree-id2383 . -87) (undo-tree-id2384 . -87) (undo-tree-id2385 . -87) (undo-tree-id2386 . -87) (undo-tree-id2387 . -87) (undo-tree-id2388 . -87) (undo-tree-id2389 . -87) 21050) nil (26715 37280 666595 268000) 0 nil])
([nil nil ((nil rear-nonsticky nil 21019 . 21020) (nil fontified nil 20923 . 21020) (20923 . 21020)) nil (26715 37280 666589 968000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21035) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1)) nil (26715 37280 666589 417000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21035) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1)) nil (26715 37280 666581 51000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21035) (undo-tree-id2315 . 1)) nil (26715 37280 666564 300000) 0 nil])
([nil nil ((21036 . 21057) (23306 . 23322)) nil (26715 37280 666556 605000) 0 nil])
([nil nil ((23344 . 23359) (23367 . 23380)) nil (26715 37280 666556 295000) 0 nil])
([nil nil ((23396 . 23415) (25710 . 25727)) nil (26715 37280 666555 764000) 0 nil])
([nil nil ((25747 . 25766) (27578 . 27595)) nil (26715 37280 666552 317000) 0 nil])
([nil nil ((#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 21 (fontified t)) . 15789) (undo-tree-id2611 . -20) (t 26715 37280 669876 971000)) nil (26715 37311 225515 741000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16703 . 16704) (#("
" 0 1 (fontified nil)) . -16724) (16703 . 16725)) nil (26715 37311 225507 95000) 0 nil])
([nil nil ((15789 . 15810) (16309 . 16325) 15789) nil (26715 37311 225502 967000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16477 . 16478) (nil fontified nil 16347 . 16478) (16347 . 16478) (#("\\emph{y} = -12150,4 + 332,175\\emph{х\\textsubscript{1}} -
652,284\\emph{х\\textsubscript{2}}+ 64,2389\\emph{х\\textsubscript{3 }}-
2,46\\emph{х\\textsubscript{1}}\\textsuperscript{2} +
20,9625\\emph{х\\textsubscript{1}х\\textsubscript{2}}-
136,062\\emph{х\\textsubscript{2}}\\textsuperscript{2} +

13,9423\\emph{х\\textsubscript{2}х\\textsubscript{3 }}-
1,9216\\emph{х\\textsubscript{3}}\\textsuperscript{2}

(1)
" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 7 (face (italic) fontified t) 7 29 (fontified t) 29 34 (face font-lock-keyword-face fontified t) 34 35 (fontified t) 35 36 (face (italic) fontified t) 36 50 (face (font-lock-keyword-face italic) fontified t) 50 53 (face (italic) fontified t) 53 64 (fontified t) 64 69 (face font-lock-keyword-face fontified t) 69 70 (fontified t) 70 71 (face (italic) fontified t) 71 85 (face (font-lock-keyword-face italic) fontified t) 85 88 (face (italic) fontified t) 88 98 (fontified t) 98 103 (face font-lock-keyword-face fontified t) 103 104 (fontified t) 104 105 (face (italic) fontified t) 105 119 (face (font-lock-keyword-face italic) fontified t) 119 123 (face (italic) fontified t) 123 124 (fontified t) 124 126 (fontified t) 126 130 (fontified t) 130 135 (face font-lock-keyword-face fontified t) 135 136 (fontified t) 136 137 (face (italic) fontified t) 137 151 (face (font-lock-keyword-face italic) fontified t) 151 154 (face (italic) fontified t) 154 155 (fontified t) 155 171 (face font-lock-keyword-face fontified t) 171 184 (fontified t) 184 189 (face font-lock-keyword-face fontified t) 189 190 (fontified t) 190 191 (face (italic) fontified t) 191 205 (face (font-lock-keyword-face italic) fontified t) 205 209 (face (italic) fontified t) 209 223 (face (font-lock-keyword-face italic) fontified t) 223 226 (face (italic) fontified t) 226 229 (fontified t) 229 236 (fontified t) 236 241 (face font-lock-keyword-face fontified t) 241 242 (fontified t) 242 243 (face (italic) fontified t) 243 257 (face (font-lock-keyword-face italic) fontified t) 257 260 (face (italic) fontified t) 260 261 (fontified t) 261 277 (face font-lock-keyword-face fontified t) 277 291 (fontified t) 291 296 (face font-lock-keyword-face fontified t) 296 297 (fontified t) 297 298 (face (italic) fontified t) 298 312 (face (font-lock-keyword-face italic) fontified t) 312 316 (face (italic) fontified t) 316 330 (face (font-lock-keyword-face italic) fontified t) 330 334 (face (italic) fontified t) 334 343 (fontified t) 343 348 (face font-lock-keyword-face fontified t) 348 349 (fontified t) 349 350 (face (italic) fontified t) 350 364 (face (font-lock-keyword-face italic) fontified t) 364 367 (face (italic) fontified t) 367 368 (fontified t) 368 384 (face font-lock-keyword-face fontified t) 384 393 (fontified t)) . 16347) (undo-tree-id2651 . -393) (undo-tree-id2652 . -389) (undo-tree-id2653 . -392) (undo-tree-id2654 . -229) (undo-tree-id2655 . -283) (undo-tree-id2656 . -283) (undo-tree-id2657 . -388) (undo-tree-id2658 . -393) (undo-tree-id2659 . -393) (undo-tree-id2660 . -393) (undo-tree-id2661 . -388) (undo-tree-id2662 . -389) 16740 (t 26715 37311 228905 147000)) nil (26715 37342 711887 798000) 0 nil])
([nil nil ((#("\\]
" 0 2 (face font-lock-keyword-face fontified t) 2 3 (rear-nonsticky t fontified t)) . 16475) (undo-tree-id2619 . -2) (undo-tree-id2620 . -2) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -3) 16476) nil (26715 37342 711871 367000) 0 nil])
([nil nil ((#("\\[
" 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t)) . 16347) (undo-tree-id2612 . -2) (undo-tree-id2613 . -3) (undo-tree-id2614 . -3) (undo-tree-id2615 . -3) (undo-tree-id2616 . -3) (undo-tree-id2617 . -3) (undo-tree-id2618 . -3)) nil (26715 37342 711851 109000) 0 nil])
([nil nil ((16347 . 16364) (16472 . 16487)) nil (26715 37342 711833 506000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -16460) (undo-tree-id2663 . -1) 16461 (t 26715 37342 715934 647000)) nil (26715 37372 854004 84000) 0 nil])
([nil nil ((16460 . 16463)) nil (26715 37372 853991 330000) 0 nil])
([nil nil ((16462 . 16463) (t 26715 37372 856963 306000)) nil (26715 37402 283033 657000) 0 nil])
([nil nil ((16356 . 16361) (#("i" 0 1 (face font-lock-function-name-face latex-env-pair t fontified nil)) . -16356) (undo-tree-id2682 . -1) (16354 . 16357) (#("equation" 0 8 (face font-lock-function-name-face latex-env-pair t fontified t)) . 16354) (undo-tree-id2683 . -7) (undo-tree-id2684 . -8) (undo-tree-id2685 . -8)) nil (26715 37402 283033 36000) 0 nil])
([nil nil ((16496 . 16503) (#("equation" 0 8 (face font-lock-function-name-face fontified t latex-env-pair t)) . 16496) (undo-tree-id2664 . -7) (undo-tree-id2665 . -8) (undo-tree-id2666 . -8) (undo-tree-id2667 . -8) (undo-tree-id2668 . -8) (undo-tree-id2669 . -8) (undo-tree-id2670 . -8) (undo-tree-id2671 . -8) (undo-tree-id2672 . -8) (undo-tree-id2673 . -8) (undo-tree-id2674 . -8) (undo-tree-id2675 . -8) (undo-tree-id2676 . -8) (undo-tree-id2677 . -8) (undo-tree-id2678 . -8) (undo-tree-id2679 . -8) (undo-tree-id2680 . -8) (undo-tree-id2681 . -8)) nil (26715 37402 283028 337000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-function-name-face fontified t latex-env-pair t)) . 16501) (undo-tree-id2691 . -1) (t 26715 37402 286991 664000)) nil (26715 37412 481697 64000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-function-name-face fontified t latex-env-pair t)) . 16501)) nil (26715 37412 481696 232000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-function-name-face latex-env-pair t fontified t)) . 16359) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1)) nil (26715 37412 481695 651000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-function-name-face latex-env-pair t fontified t)) . 16359) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1)) nil (26715 37412 481690 421000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16521 . 16522) (nil fontified nil 16347 . 16522) (16347 . 16522) (#("\\begin{align}
y = -12150.4 + 332.175x_1 - 652.284x_2 + 64.2389x_3 - 2.46x_1^2 + 20.9625x_1x_2 - 136.062x_2^2 +\\\\
+13.9423x_2x_3 - 1.9216x_3^2
\\end{align}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 12 (face font-lock-function-name-face latex-env-pair t fontified t) 12 13 (latex-env-pair t fontified t) 13 14 (fontified t) 14 38 (fontified t) 38 39 (face (subscript) fontified t display (raise -0.2)) 39 51 (fontified t) 51 52 (face (subscript) fontified t display (raise -0.2)) 52 64 (fontified t) 64 65 (face (subscript) fontified t display (raise -0.2)) 65 74 (fontified t) 74 75 (face (subscript) fontified t display (raise -0.2)) 75 76 (fontified t) 76 77 (face (superscript) fontified t display (raise 0.2)) 77 89 (fontified t) 89 90 (face (subscript) fontified t display (raise -0.2)) 90 92 (fontified t) 92 93 (face (subscript) fontified t display (raise -0.2)) 93 105 (fontified t) 105 106 (face (subscript) fontified t display (raise -0.2)) 106 107 (fontified t) 107 108 (face (superscript) fontified t display (raise 0.2)) 108 110 (fontified t) 110 112 (face font-lock-warning-face fontified t) 112 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 123 (fontified t) 123 124 (face (subscript) fontified t display (raise -0.2)) 124 126 (fontified t) 126 127 (face (subscript) fontified t display (raise -0.2)) 127 138 (fontified t) 138 139 (face (subscript) fontified t display (raise -0.2)) 139 140 (fontified t) 140 141 (face (superscript) fontified t display (raise 0.2)) 141 142 (fontified t) 142 146 (face font-lock-keyword-face fontified t) 146 147 (fontified t latex-env-pair t) 147 152 (face font-lock-function-name-face fontified t latex-env-pair t) 152 153 (fontified t latex-env-pair t) 153 154 (fontified t)) . 16347) (undo-tree-id2692 . -154) (undo-tree-id2693 . -12) (undo-tree-id2694 . -153) (undo-tree-id2695 . -153) (undo-tree-id2696 . 2) (undo-tree-id2697 . -12) (undo-tree-id2698 . -125) (undo-tree-id2699 . -125) (undo-tree-id2700 . -142) (undo-tree-id2701 . -153) (undo-tree-id2702 . -153) (undo-tree-id2703 . -153) (undo-tree-id2704 . -12) (undo-tree-id2705 . -153) (undo-tree-id2706 . -153) (undo-tree-id2707 . -153) (undo-tree-id2708 . -154) (undo-tree-id2709 . -154) 16501 (t 26715 37412 485001 572000)) nil (26715 37467 152073 255000) 0 nil])
([nil nil ((#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 16 (face font-lock-function-name-face latex-env-pair t fontified t) 16 17 (latex-env-pair t fontified t) 17 21 (fontified t)) . 15789) (undo-tree-id2712 . -20) (undo-tree-id2713 . -10) (undo-tree-id2714 . -10) (undo-tree-id2715 . -10) (undo-tree-id2716 . -10) (undo-tree-id2717 . -10) (undo-tree-id2718 . -10) (undo-tree-id2719 . -10) (undo-tree-id2720 . -10) (undo-tree-id2721 . -10) (undo-tree-id2722 . -10) (undo-tree-id2723 . -10) (undo-tree-id2724 . -10) (undo-tree-id2725 . -10) (undo-tree-id2726 . -10) (undo-tree-id2727 . -21) 15799 (t 26715 37467 156055 373000)) nil (26715 37488 396494 441000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 15371) (undo-tree-id2710 . -15) (undo-tree-id2711 . -16)) nil (26715 37488 396478 521000) 0 nil])
([nil nil ((#("{\\bfseries Table 4 - Regression Coefficients}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 44 (face (bold) fontified t) 44 45 (fontified t) 45 46 (fontified t)) . -15387) (undo-tree-id2855 . -46) 15433 (t 26715 37488 401076 565000)) nil (26715 37499 921902 10000) 0 nil])
([nil nil ((15418 . 15419) 15401) nil (26715 37499 921901 469000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15476 . 15477) (nil fontified nil 15419 . 15477) (15419 . 15477)) nil (26715 37499 921901 228000) 0 nil])
([nil nil ((#("\\begin{center}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 15 (fontified t)) . 15372) (undo-tree-id2807 . -15) (undo-tree-id2808 . -15) (undo-tree-id2809 . -15) (undo-tree-id2810 . -14) (undo-tree-id2811 . -15) (undo-tree-id2812 . -15) (undo-tree-id2813 . -15) (undo-tree-id2814 . -15) (undo-tree-id2815 . -15) (undo-tree-id2816 . -15) (undo-tree-id2817 . -15) (undo-tree-id2818 . -15) (undo-tree-id2819 . -15) (undo-tree-id2820 . -15) (undo-tree-id2821 . -15) (undo-tree-id2822 . -15) (undo-tree-id2823 . -15) (undo-tree-id2824 . -13) (undo-tree-id2825 . -13) (undo-tree-id2826 . -13) (undo-tree-id2827 . -13) (undo-tree-id2828 . -13) (undo-tree-id2829 . -13) (undo-tree-id2830 . -13) (undo-tree-id2831 . -13) (undo-tree-id2832 . -13) (undo-tree-id2833 . -13) (undo-tree-id2834 . -13) (undo-tree-id2835 . -13) (undo-tree-id2836 . -13) (undo-tree-id2837 . -13) (undo-tree-id2838 . -13) (undo-tree-id2839 . -13) (undo-tree-id2840 . -13) (undo-tree-id2841 . -13) (undo-tree-id2842 . -13) (undo-tree-id2843 . -13) (undo-tree-id2844 . -13) (undo-tree-id2845 . -13) (undo-tree-id2846 . -13) (undo-tree-id2847 . -13) (undo-tree-id2848 . -13) (undo-tree-id2849 . -13) (undo-tree-id2850 . -15) (undo-tree-id2851 . -13) (undo-tree-id2852 . -13) (undo-tree-id2853 . -13) (undo-tree-id2854 . -15) 15385) nil (26715 37499 921900 296000) 0 nil])
([nil nil ((#("\\end{center}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 11 (face font-lock-function-name-face fontified t latex-env-pair t) 11 12 (fontified t latex-env-pair t) 12 13 (fontified t)) . 15372) (undo-tree-id2747 . -12) (undo-tree-id2748 . -13) (undo-tree-id2749 . -12) (undo-tree-id2750 . -13) (undo-tree-id2751 . -13) (undo-tree-id2752 . -13) (undo-tree-id2753 . -13) (undo-tree-id2754 . -13) (undo-tree-id2755 . -13) (undo-tree-id2756 . -13) (undo-tree-id2757 . -13) (undo-tree-id2758 . -13) (undo-tree-id2759 . -13) (undo-tree-id2760 . -13) (undo-tree-id2761 . -13) (undo-tree-id2762 . -13) (undo-tree-id2763 . -13) (undo-tree-id2764 . -13) (undo-tree-id2765 . -13) (undo-tree-id2766 . -13) (undo-tree-id2767 . -13) (undo-tree-id2768 . -13) (undo-tree-id2769 . -13) (undo-tree-id2770 . -13) (undo-tree-id2771 . -13) (undo-tree-id2772 . -13) (undo-tree-id2773 . -13) (undo-tree-id2774 . -11) (undo-tree-id2775 . -11) (undo-tree-id2776 . -11) (undo-tree-id2777 . -11) (undo-tree-id2778 . -11) (undo-tree-id2779 . -11) (undo-tree-id2780 . -11) (undo-tree-id2781 . -11) (undo-tree-id2782 . -11) (undo-tree-id2783 . -11) (undo-tree-id2784 . -11) (undo-tree-id2785 . -11) (undo-tree-id2786 . -11) (undo-tree-id2787 . -11) (undo-tree-id2788 . -11) (undo-tree-id2789 . -11) (undo-tree-id2790 . -11) (undo-tree-id2791 . -11) (undo-tree-id2792 . -11) (undo-tree-id2793 . -11) (undo-tree-id2794 . -11) (undo-tree-id2795 . -11) (undo-tree-id2796 . -12) (undo-tree-id2797 . -11) (undo-tree-id2798 . -11) (undo-tree-id2799 . -11) (undo-tree-id2800 . -11) (undo-tree-id2801 . -11) (undo-tree-id2802 . -11) (undo-tree-id2803 . -11) (undo-tree-id2804 . -11) (undo-tree-id2805 . -11) (undo-tree-id2806 . -13) 15383) nil (26715 37499 921884 106000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 15372) (undo-tree-id2728 . 1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1)) nil (26715 37499 921827 259000) 0 nil])
([nil nil ((15460 . 15467) (#("i" 0 1 (fontified nil)) . -15460) (undo-tree-id2884 . -1) (15455 . 15461) (#("i" 0 1 (fontified nil)) . -15455) (undo-tree-id2885 . -1) (15451 . 15456) (15448 . 15451) (t 26715 37499 925088 125000) 15390) nil (26715 37617 861536 938000) 0 nil])
([nil nil ((15477 . 15478) (#(";" 0 1 (fontified t)) . -15477) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) 15478 (15473 . 15478) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -15473) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (15467 . 15474)) nil (26715 37617 861531 629000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15553 . 15554) (nil fontified nil 15510 . 15554) (15510 . 15554) 15509 (t 26715 37617 866208 779000)) nil (26715 37673 890244 937000) 0 nil])
([nil nil ((15512 . 15515) (#(" " 0 1 (fontified t)) . 15512)) nil (26715 37673 890244 286000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15534) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1)) nil (26715 37673 890243 375000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15534) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1)) nil (26715 37673 890231 342000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15511) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1)) nil (26715 37673 890229 679000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15510) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1)) nil (26715 37673 890224 669000) 0 nil])
([nil nil ((#("  caption-width = \\textwidth,
" 0 18 (fontified t) 18 28 (face font-lock-keyword-face fontified t) 28 29 (fontified t) 29 30 (fontified t)) . 15449) (undo-tree-id2929 . -29) (undo-tree-id2930 . 1) (undo-tree-id2931 . -27) (undo-tree-id2932 . -14) (undo-tree-id2933 . -14) (undo-tree-id2934 . -14) (undo-tree-id2935 . -14) (undo-tree-id2936 . -14) (undo-tree-id2937 . -14) (undo-tree-id2938 . -14) (undo-tree-id2939 . -14) (undo-tree-id2940 . -14) (undo-tree-id2941 . -14) (undo-tree-id2942 . -14) (undo-tree-id2943 . -14) (undo-tree-id2944 . -14) (undo-tree-id2945 . -14) (undo-tree-id2946 . -14) (undo-tree-id2947 . -14) (undo-tree-id2948 . -14) (undo-tree-id2949 . -14) (undo-tree-id2950 . -14) (undo-tree-id2951 . -14) (undo-tree-id2952 . -14) (undo-tree-id2953 . -14) (undo-tree-id2954 . -14) (undo-tree-id2955 . -14) (undo-tree-id2956 . -14) (undo-tree-id2957 . -14) (undo-tree-id2958 . -14) (undo-tree-id2959 . -14) (undo-tree-id2960 . -14) (undo-tree-id2961 . -30) 15463 (t 26715 37673 895267 443000)) nil (26715 37683 629355 151000) 0 nil])
([nil nil ((15415 . 15419) (#("o" 0 1 (face (font-lock-keyword-face bold) fontified t)) . -15415) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) 15416 (15413 . 15416) (t 26715 37683 633277 719000)) nil (26715 37730 246888 348000) 0 nil])
([nil nil ((15453 . 15454)) nil (26715 37740 649594 553000) 0 nil])
([nil nil ((#("  caption-pos = t,
" 0 19 (fontified t)) . 15488) (undo-tree-id3018 . -18) (undo-tree-id3019 . -17) (undo-tree-id3020 . -17) (undo-tree-id3021 . -17) (undo-tree-id3022 . -17) (undo-tree-id3023 . -17) (undo-tree-id3024 . -17) (undo-tree-id3025 . -17) (undo-tree-id3026 . -17) (undo-tree-id3027 . -17) (undo-tree-id3028 . -17) (undo-tree-id3029 . -17) (undo-tree-id3030 . -17) (undo-tree-id3031 . -17) (undo-tree-id3032 . -17) (undo-tree-id3033 . -17) (undo-tree-id3034 . -17) (undo-tree-id3035 . -17) (undo-tree-id3036 . -17) (undo-tree-id3037 . -17) (undo-tree-id3038 . -17) (undo-tree-id3039 . -17) (undo-tree-id3040 . -17) (undo-tree-id3041 . -17) (undo-tree-id3042 . -17) (undo-tree-id3043 . -17) (undo-tree-id3044 . -17) (undo-tree-id3045 . -17) (undo-tree-id3046 . -17) (undo-tree-id3047 . -17) (undo-tree-id3048 . -19) 15505 (t 26715 37730 252327 198000)) nil (26715 37742 338593 748000) 0 nil] [nil nil ((15454 . 15457) (t 26715 37730 252327 198000)) ((#("ttt" 0 3 (fontified t)) . 15454) (undo-tree-id2993 . -2) (undo-tree-id2994 . -2) (undo-tree-id2995 . -2) (undo-tree-id2996 . -2) (undo-tree-id2997 . -2)) (26715 37740 649332 280000) 0 nil])
([nil nil ((#("  caption-sep = \\quad,
" 0 16 (fontified t) 16 21 (face font-lock-keyword-face fontified t) 21 22 (fontified t rear-nonsticky t) 22 23 (fontified t)) . 15488) (undo-tree-id2998 . -23) (undo-tree-id2999 . -22) (undo-tree-id3000 . -23) (undo-tree-id3001 . -23) (undo-tree-id3002 . -22) (undo-tree-id3003 . -17) (undo-tree-id3004 . -17) (undo-tree-id3005 . -17) (undo-tree-id3006 . -17) (undo-tree-id3007 . -17) (undo-tree-id3008 . -17) (undo-tree-id3009 . -17) (undo-tree-id3010 . -17) (undo-tree-id3011 . -17) (undo-tree-id3012 . -17) (undo-tree-id3013 . -17) (undo-tree-id3014 . -17) (undo-tree-id3015 . -17) (undo-tree-id3016 . -17) (undo-tree-id3017 . -23) 15505) nil (26715 38252 490928 110000) 0 nil])
nil
([nil nil ((#("\\mbox{" 0 5 (face (font-lock-keyword-face bold) fontified t) 5 6 (face (bold) fontified t)) . 15413) (undo-tree-id3065 . -5) (undo-tree-id3066 . -6) (t 26715 37742 343340 110000)) nil (26715 38255 76082 703000) 0 nil] [nil nil ((#("\\mbox{Table 4 - Regression Coefficients}" 0 5 (face (font-lock-keyword-face bold) fontified t) 5 11 (face (bold) fontified t) 11 39 (face (bold) fontified t) 39 40 (face (bold) fontified t)) . 15413) (undo-tree-id3049 . -39) (undo-tree-id3050 . -40) (t 26715 37742 343340 110000)) ((15413 . 15453)) (26715 38252 490670 846000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 15447) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1)) nil (26715 38255 76077 483000) 0 nil])
nil
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 16277) (undo-tree-id3067 . -15) (undo-tree-id3068 . -14) 16291 (t 26715 38255 80908 256000)) nil (26715 38909 752587 292000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15370 . 15371) (#("
" 0 1 (fontified nil)) . 15386) (15370 . 15387) (t 26715 38910 203663 554000)) ((#("
\\end{multicols}
" 0 1 (rear-nonsticky nil fontified nil) 1 5 (face font-lock-keyword-face fontified nil) 5 6 (fontified nil latex-env-pair t) 6 15 (face font-lock-function-name-face fontified nil latex-env-pair t) 15 16 (fontified nil latex-env-pair t) 16 17 (fontified nil)) . 15370) (undo-tree-id3073 . -1) (undo-tree-id3074 . -16) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (15386 . 15387) (nil rear-nonsticky t 15370 . 15371) (t 26715 38511 332201 502000)) (26715 38911 224538 253000) 0 nil])
([nil nil ((#("  caption = {\\bfseries Table 4 - Regression Coefficients},
" 0 13 (fontified t) 13 22 (face font-lock-keyword-face fontified t) 22 23 (face (bold) fontified t) 23 28 (face (bold) fontified t) 28 56 (face (bold) fontified t) 56 57 (fontified t) 57 58 (fontified t rear-nonsticky t) 58 59 (fontified t)) . 15406) (undo-tree-id3110 . -58) (undo-tree-id3111 . 2) (undo-tree-id3112 . -57) (undo-tree-id3113 . -23) (undo-tree-id3114 . -23) (undo-tree-id3115 . -14) 15420 (t 26715 38911 710665 309000)) nil (26715 39590 370296 587000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15389 . 15390) (#("
" 0 1 (fontified nil)) . -15446) (15387 . 15447)) nil (26715 39590 370293 481000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 15390)) nil (26715 39590 370293 90000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 15390)) nil (26715 39590 370292 519000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 15390)) nil (26715 39590 370292 259000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 15390)) nil (26715 39590 370292 78000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 15390) (undo-tree-id3109 . -1)) nil (26715 39590 370291 357000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 15390) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1)) nil (26715 39590 370290 686000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 15390) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1)) nil (26715 39590 370289 784000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15390) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1)) nil (26715 39590 370288 592000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . 15390) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1)) nil (26715 39590 370287 470000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15390) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1)) nil (26715 39591 966261 946000) 0 nil])
([nil nil ((15401 . 15404) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -15401) (undo-tree-id3118 . -1) (15388 . 15402) (#("l" 0 1 (fontified t)) . -15388) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (#("o" 0 1 (fontified t)) . -15389) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (#("n" 0 1 (fontified t)) . -15390) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (#("g" 0 1 (fontified t)) . -15391) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) 15392 (15388 . 15392) (#(" " 0 1 (fontified t)) . -15388) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (#(" " 0 1 (rear-nonsticky t fontified t)) . -15389) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) 15390) nil (26715 39600 813071 696000) 0 nil] [nil nil ((#("{" 0 1 (fontified t)) . 15390) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1)) ((15390 . 15391)) (26715 39591 623135 943000) 0 nil])
([nil nil ((#("," 0 1 (fontified t rear-nonsticky t)) . 15449) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1)) nil (26715 39794 274422 400000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 15390) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1)) ((15390 . 15391)) (26715 39591 256315 775000) 0 nil])
([nil nil ((15389 . 15393) (#("longtblrcaption" 0 15 (face font-lock-keyword-face fontified t)) . 15389) (undo-tree-id3251 . -14) (undo-tree-id3252 . -15) (undo-tree-id3253 . -15) (t 26715 39600 817010 929000)) nil (26715 39796 665476 667000) 0 nil] [nil nil ((#("w" 0 1 (fontified t)) . -15388) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) 15389 (15388 . 15389) (15388 . 15389) (#("\\longtblrcaption{\\bfseries Table 4 - Regression Coefficients}
" 0 16 (face font-lock-keyword-face fontified t) 16 17 (fontified t) 17 18 (face font-lock-keyword-face fontified t) 18 19 (face font-lock-keyword-face fontified t) 19 20 (face font-lock-keyword-face fontified t) 20 21 (face font-lock-keyword-face fontified t) 21 22 (face font-lock-keyword-face fontified t) 22 23 (face font-lock-keyword-face fontified t) 23 24 (face font-lock-keyword-face fontified t) 24 25 (face font-lock-keyword-face fontified t) 25 26 (face font-lock-keyword-face fontified t) 26 27 (face (bold) fontified t) 27 32 (face (bold) fontified t) 32 60 (face (bold) fontified t) 60 61 (fontified t) 61 62 (fontified t)) . 15388) (undo-tree-id3166 . -60) (undo-tree-id3167 . -60) (undo-tree-id3168 . -1) (undo-tree-id3169 . -61) (undo-tree-id3170 . 46) (undo-tree-id3171 . -62) (undo-tree-id3172 . -62) (undo-tree-id3173 . -62) (undo-tree-id3174 . -62) (undo-tree-id3175 . -60) (undo-tree-id3176 . -60) (undo-tree-id3177 . -60) (undo-tree-id3178 . -60) (undo-tree-id3179 . -60) (undo-tree-id3180 . -60) (undo-tree-id3181 . -60) (undo-tree-id3182 . -60) (undo-tree-id3183 . -60) (undo-tree-id3184 . -60) (undo-tree-id3185 . -60) (undo-tree-id3186 . -60) (undo-tree-id3187 . -60) (undo-tree-id3188 . -60) (undo-tree-id3189 . -60) (undo-tree-id3190 . -60) (undo-tree-id3191 . -60) (undo-tree-id3192 . -60) (undo-tree-id3193 . -60) (undo-tree-id3194 . -60) (undo-tree-id3195 . -60) (undo-tree-id3196 . -60) (undo-tree-id3197 . -60) (undo-tree-id3198 . -60) (undo-tree-id3199 . -60) (undo-tree-id3200 . -60) (undo-tree-id3201 . -60) (undo-tree-id3202 . -60) (undo-tree-id3203 . -60) (undo-tree-id3204 . -60) (undo-tree-id3205 . -60) (undo-tree-id3206 . -60) (undo-tree-id3207 . -60) (undo-tree-id3208 . -60) (undo-tree-id3209 . -60) (undo-tree-id3210 . -60) (undo-tree-id3211 . -60) (undo-tree-id3212 . -60) (undo-tree-id3213 . -60) (undo-tree-id3214 . -60) (undo-tree-id3215 . -60) (undo-tree-id3216 . -60) (undo-tree-id3217 . -60) (undo-tree-id3218 . -60) (undo-tree-id3219 . -60) (undo-tree-id3220 . -60) (undo-tree-id3221 . -60) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -60) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -62) (undo-tree-id3246 . -62) 15389 (t 26715 39600 817010 929000)) ((15388 . 15450) (#("
" 0 1 (fontified nil)) . 15388) (undo-tree-id3247 . 1) (#("w" 0 1 (fontified nil)) . 15388) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (15388 . 15389)) (26715 39794 274082 800000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 15390) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1)) ((15390 . 15391)) (26715 39591 103542 288000) 0 nil])
([nil nil ((#("\\bfseries " 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t) 4 5 (face font-lock-keyword-face fontified t) 5 6 (face font-lock-keyword-face fontified t) 6 7 (face font-lock-keyword-face fontified t) 7 8 (face font-lock-keyword-face fontified t) 8 9 (face font-lock-keyword-face fontified t) 9 10 (face (bold) fontified t)) . 15394) (undo-tree-id3254 . -9) (undo-tree-id3255 . -10) (t 26715 39796 670253 467000)) nil (26715 40212 669597 981000) 0 nil])
nil
([nil nil ((#("f" 0 1 (fontified t)) . 15390) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1)) ((15390 . 15391)) (26715 39590 935624 393000) 0 nil])
([nil nil ((10303 . 12541) (#("begin{longtblr}[
  caption = {\\bfseries Table 1 - Decoded Values of the Factors},
  label = none,
  entry = none,
]{
  cells = {c},
  hlines,
  vlines,
}
\\textbf{Factor of the Experiment} & \\textbf{Designation} & $X_{min}$ & $X_{i0}$ & $X_{max}$ & $\\Delta X$ \\\\
Mass fraction of curd, \\% & $x_1$ & 70,0 & 80,0 & 90,0 & 10,0\\\\
Mass fraction of cryopowder, \\% & $x_2$ & 2,0 & 4,0 & 6,0 & 2,0\\\\
Mass fraction of fat in cream, \\% & $x_3$ & 7,0 & 20,0 & 33,0 & 13,0
\\end{longtblr}

The viscosity of the curd product was determined using a Brookfield DV2T
rotational viscometer.

{\\bfseries Results and discussion.~} Viscosity studies were conducted on
the prepared samples of the curd product, and the results are presented
in table 2.

\\begin{longtblr}[
  caption = {\\bfseries Table 2 - Results of the three-factor experiment for curd product samples with cryopowder},
  label = none,
  entry = none,
]{
  cells = {c},
  cell{1}{1} = {r=3}{},
  cell{1}{2} = {c=6}{},
  cell{1}{8} = {r=2}{},
  cell{2}{2} = {c=3}{},
  cell{2}{5} = {c=3}{},
  vlines,
  hline{1,4-19} = {-}{},
  hline{2} = {2-7}{},
  hline{3} = {2-8}{},
}
\\textbf{Experi\\\\ment\\\\No.} & \\textbf{Levels of сontrolled factors} &  &  &  &  &  & \\textbf{Viscosity, mPa·s}\\\\
& \\textbf{Coded Values} &  &  & \\textbf{Actual Values} &  &  & \\\\
& \\textit{х1} & \\textit{х2} & \\textit{х3} & Т, \\% & К, \\% & С, \\% & \\textit{у}\\\\
1 & 0 & 0 & 0 & 80,0 & 4,0 & 20,0 & 2263,0\\\\
2 & -1 & -1 & 0 & 70,0 & 2,0 & 20,0 & 914,0\\\\
3 & +1 & -1 & 0 & 90,0 & 2,0 & 20,0 & 985,0\\\\
4 & -1 & +1 & 0 & 70,0 & 6,0 & 20,0 & 1062,0\\\\
5 & +1 & +1 & 0 & 90,0 & 6,0 & 20,0 & 2810,0\\\\
6 & -1 & 0 & -1 & 70,0 & 4,0 & 7,0 & 948,0\\\\
7 & +1 & 0 & -1 & 90,0 & 4,0 & 7,0 & 948,0\\\\
8 & 0 & 0 & 0 & 80,0 & 4,0 & 20,0 & 2269,0\\\\
9 & -1 & 0 & +1 & 70,0 & 4,0 & 33,0 & 2389,0\\\\
10 & +1 & 0 & +1 & 90,0 & 4,0 & 33,0 & 2364,0\\\\
11 & 0 & -1 & -1 & 80,0 & 2,0 & 7,0 & 952,0\\\\
12 & 0 & +1 & -1 & 80,0 & 6,0 & 7,0 & 961,0\\\\
13 & 0 & -1 & +1 & 80,0 & 2,0 & 33,0 & 1042,0\\\\
14 & 0 & +1 & +1 & 80,0 & 6,0 & 33,0 & 2501,0\\\\
15 & 0 & 0 & 0 & 80,0 & 4,0 & 20,0 & 2167,0
\\end{longtblr}

The analysis of variance for the viscosity of the curd product is
presented in table 3.

\\begin{longtblr}[
  caption = {\\bfseries Table 3 - Analysis of Variance (ANOVA) for the Viscosity of the Curd Product},
  " 0 5 (face font-lock-keyword-face fontified t) 5 6 (latex-env-pair t fontified t) 6 14 (face font-lock-function-name-face latex-env-pair t fontified t) 14 15 (latex-env-pair t fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 30 (fontified t) 30 39 (face font-lock-keyword-face fontified t) 39 79 (face (bold) fontified t) 79 80 (fontified t) 80 81 (rear-nonsticky t fontified t) 81 82 (fontified t) 82 117 (fontified t) 117 131 (fontified t) 131 132 (fontified t) 132 154 (fontified t) 154 161 (face font-lock-keyword-face fontified t) 161 162 (fontified t) 162 186 (face (bold) fontified t) 186 190 (fontified t) 190 197 (face font-lock-keyword-face fontified t) 197 198 (fontified t) 198 209 (face (bold) fontified t) 209 213 (fontified t) 213 214 (face tex-math fontified t) 214 216 (face tex-math fontified t) 216 217 (face (tex-math subscript) fontified t display (raise -0.2)) 217 218 (face (tex-math subscript) fontified t display (raise -0.2)) 218 221 (face (tex-math subscript) fontified t display (raise -0.2)) 221 222 (face tex-math fontified t) 222 225 (fontified t) 225 226 (face tex-math fontified t) 226 228 (face tex-math fontified t) 228 229 (face (tex-math subscript) fontified t display (raise -0.2)) 229 230 (face (tex-math subscript) fontified t display (raise -0.2)) 230 231 (face (tex-math subscript) fontified t display (raise -0.2)) 231 232 (face (tex-math subscript) fontified t display (raise -0.2)) 232 233 (face tex-math fontified t) 233 236 (fontified t) 236 237 (face tex-math fontified t) 237 239 (face tex-math fontified t) 239 240 (face (tex-math subscript) fontified t display (raise -0.2)) 240 241 (face (tex-math subscript) fontified t display (raise -0.2)) 241 244 (face (tex-math subscript) fontified t display (raise -0.2)) 244 245 (face tex-math fontified t) 245 248 (fontified t) 248 249 (face tex-math fontified t) 249 255 (face tex-math fontified t) 255 258 (face tex-math fontified t) 258 259 (fontified t) 259 260 (face font-lock-warning-face fontified t) 260 261 (face font-lock-warning-face fontified t) 261 262 (fontified t) 262 266 (fontified t) 266 267 (fontified t) 267 285 (fontified t) 285 287 (face font-lock-keyword-face fontified t) 287 290 (fontified t) 290 291 (face tex-math fontified t) 291 292 (face tex-math fontified t) 292 293 (face tex-math fontified t) 293 294 (face (tex-math subscript) fontified t display (raise -0.2)) 294 295 (face tex-math fontified t) 295 323 (fontified t) 323 325 (face font-lock-warning-face fontified t) 325 326 (fontified t) 326 330 (fontified t) 330 331 (fontified t) 331 355 (fontified t) 355 357 (face font-lock-keyword-face fontified t) 357 360 (fontified t) 360 361 (face tex-math fontified t) 361 362 (face tex-math fontified t) 362 363 (face tex-math fontified t) 363 364 (face (tex-math subscript) fontified t display (raise -0.2)) 364 365 (face tex-math fontified t) 365 389 (fontified t) 389 391 (face font-lock-warning-face fontified t) 391 392 (fontified t) 392 396 (fontified t) 396 397 (fontified t) 397 423 (fontified t) 423 425 (face font-lock-keyword-face fontified t) 425 428 (fontified t) 428 429 (face tex-math fontified t) 429 430 (face tex-math fontified t) 430 431 (face tex-math fontified t) 431 432 (face (tex-math subscript) fontified t display (raise -0.2)) 432 433 (face tex-math fontified t) 433 461 (fontified t) 461 465 (face font-lock-keyword-face fontified t) 465 466 (fontified t latex-env-pair t) 466 474 (face font-lock-function-name-face fontified t latex-env-pair t) 474 475 (fontified t latex-env-pair t rear-nonsticky t) 475 476 (fontified t) 476 550 (fontified t) 550 573 (fontified t) 573 575 (fontified t) 575 584 (face font-lock-keyword-face fontified t) 584 609 (face (bold) fontified t) 609 732 (fontified t) 732 738 (face font-lock-keyword-face fontified t) 738 739 (fontified t latex-env-pair t) 739 747 (face font-lock-function-name-face fontified t latex-env-pair t) 747 748 (fontified t latex-env-pair t) 748 749 (fontified t) 749 750 (fontified t) 750 763 (fontified t) 763 772 (face font-lock-keyword-face fontified t) 772 862 (face (bold) fontified t) 862 863 (fontified t) 863 864 (rear-nonsticky t fontified t) 864 865 (fontified t) 865 900 (fontified t) 900 914 (fontified t) 914 915 (fontified t) 915 938 (fontified t) 938 939 (fontified t) 939 960 (fontified t) 960 963 (fontified t) 963 987 (fontified t) 987 1008 (fontified t) 1008 1011 (fontified t) 1011 1032 (fontified t) 1032 1035 (fontified t) 1035 1116 (fontified t) 1116 1123 (face font-lock-keyword-face fontified t) 1123 1124 (fontified t) 1124 1130 (face (bold) fontified t) 1130 1132 (face (font-lock-warning-face bold) fontified t) 1132 1136 (face (bold) fontified t) 1136 1138 (face (font-lock-warning-face bold) fontified t) 1138 1141 (face (bold) fontified t) 1141 1145 (fontified t) 1145 1152 (face font-lock-keyword-face fontified t) 1152 1153 (fontified t) 1153 1181 (face (bold) fontified t) 1181 1200 (fontified t) 1200 1207 (face font-lock-keyword-face fontified t) 1207 1208 (fontified t) 1208 1224 (face (bold) fontified t) 1224 1225 (fontified t) 1225 1227 (face font-lock-warning-face fontified t) 1227 1228 (fontified t) 1228 1230 (fontified t) 1230 1237 (face font-lock-keyword-face fontified t) 1237 1238 (fontified t) 1238 1250 (face (bold) fontified t) 1250 1260 (fontified t) 1260 1267 (face font-lock-keyword-face fontified t) 1267 1268 (fontified t) 1268 1281 (face (bold) fontified t) 1281 1291 (fontified t) 1291 1293 (face font-lock-warning-face fontified t) 1293 1294 (fontified t) 1294 1296 (fontified t) 1296 1303 (face font-lock-keyword-face fontified t) 1303 1304 (fontified t) 1304 1306 (face (italic) fontified t) 1306 1310 (fontified t) 1310 1317 (face font-lock-keyword-face fontified t) 1317 1318 (fontified t) 1318 1320 (face (italic) fontified t) 1320 1324 (fontified t) 1324 1331 (face font-lock-keyword-face fontified t) 1331 1332 (fontified t) 1332 1334 (face (italic) fontified t) 1334 1340 (fontified t) 1340 1341 (fontified t) 1341 1343 (face font-lock-keyword-face fontified t) 1343 1348 (fontified t) 1348 1349 (fontified t) 1349 1351 (face font-lock-keyword-face fontified t) 1351 1356 (fontified t) 1356 1357 (fontified t) 1357 1359 (face font-lock-keyword-face fontified t) 1359 1362 (fontified t) 1362 1369 (face font-lock-keyword-face fontified t) 1369 1370 (fontified t) 1370 1371 (face (italic) fontified t) 1371 1372 (fontified t) 1372 1374 (face font-lock-warning-face fontified t) 1374 1375 (fontified t) 1375 1417 (fontified t) 1417 1419 (face font-lock-warning-face fontified t) 1419 1463 (fontified t) 1463 1465 (face font-lock-warning-face fontified t) 1465 1509 (fontified t) 1509 1511 (face font-lock-warning-face fontified t) 1511 1556 (fontified t) 1556 1558 (face font-lock-warning-face fontified t) 1558 1603 (fontified t) 1603 1605 (face font-lock-warning-face fontified t) 1605 1648 (fontified t) 1648 1650 (face font-lock-warning-face fontified t) 1650 1693 (fontified t) 1693 1695 (face font-lock-warning-face fontified t) 1695 1738 (fontified t) 1738 1740 (face font-lock-warning-face fontified t) 1740 1785 (fontified t) 1785 1787 (face font-lock-warning-face fontified t) 1787 1833 (fontified t) 1833 1835 (face font-lock-warning-face fontified t) 1835 1879 (fontified t) 1879 1881 (face font-lock-warning-face fontified t) 1881 1925 (fontified t) 1925 1927 (face font-lock-warning-face fontified t) 1927 1973 (fontified t) 1973 1975 (face font-lock-warning-face fontified t) 1975 2021 (fontified t) 2021 2023 (face font-lock-warning-face fontified t) 2023 2068 (fontified t) 2068 2072 (face font-lock-keyword-face fontified t) 2072 2073 (fontified t latex-env-pair t) 2073 2081 (face font-lock-function-name-face fontified t latex-env-pair t) 2081 2082 (fontified t latex-env-pair t rear-nonsticky t) 2082 2083 (fontified t) 2083 2150 (fontified t) 2150 2172 (fontified t) 2172 2173 (fontified t) 2173 2179 (face font-lock-keyword-face fontified t) 2179 2180 (latex-env-pair t fontified t) 2180 2188 (face font-lock-function-name-face latex-env-pair t fontified t) 2188 2189 (latex-env-pair t fontified t) 2189 2190 (fontified t) 2190 2191 (fontified t) 2191 2204 (fontified t) 2204 2213 (face font-lock-keyword-face fontified t) 2213 2290 (face (bold) fontified t) 2290 2291 (fontified t) 2291 2292 (rear-nonsticky t fontified t) 2292 2293 (fontified t) 2293 2295 (fontified t)) . 10303) (undo-tree-id20 . -2197) (undo-tree-id21 . -2173) (undo-tree-id22 . 2) (undo-tree-id23 . -2179) (undo-tree-id24 . -2197) (undo-tree-id25 . -2173) (undo-tree-id26 . -2292) (undo-tree-id27 . -474) (undo-tree-id28 . -95) (undo-tree-id29 . -95) (undo-tree-id30 . -1836) (undo-tree-id31 . -2179) (undo-tree-id32 . -2197) (undo-tree-id33 . -2179) (undo-tree-id34 . -2179) (t 26715 40212 674159 696000)) nil (26715 40621 4109 125000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 15390) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1)) ((15390 . 15391)) (26715 39590 710860 696000) 0 nil])
([nil nil ((11131 . 11133) (#("	" 0 1 (fontified t)) . -11131) (undo-tree-id19 . -1) 11132 (t 26715 40555 99320 726000)) nil (26715 40621 4251 393000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 15390) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1)) ((15390 . 15391)) (26715 39590 660916 113000) 0 nil])
([nil nil ((10367 . 10369) (#("	" 0 1 (fontified t)) . 10367) (undo-tree-id39 . 1)) nil (26715 40628 154853 438000) 0 nil] [nil nil ((10366 . 10368) (#("
" 0 1 (fontified t)) . -10366) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 10367) ((10366 . 10367) (#("  " 0 2 (fontified t)) . 10366) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1)) (26715 40621 4099 497000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 15390) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1)) ((15390 . 15391)) (26715 39590 609957 294000) 0 nil])
([nil nil ((12542 . 12544) (#("	" 0 1 (fontified t)) . 12542)) nil (26715 40628 154840 834000) 0 nil])
nil
([nil nil ((#("i" 0 1 (fontified t)) . 15390) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1)) ((15390 . 15391)) (26715 39590 561339 348000) 0 nil])
([nil nil ((15701 . 15722) (16221 . 16237) (t 26715 40628 159541 525000)) nil (26715 40924 591395 886000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 15390) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1)) ((15390 . 15391)) (26715 39590 510625 553000) 0 nil])
([nil nil ((#("
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/pish2/image82}
	\\caption*{Fig.2 - Response surface of the dependence of curd product viscosity on the mass fraction of cryopowder and fat content in cream}
\\end{figure}
" 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t latex-env-pair t) 8 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 20 (fontified t) 20 30 (face font-lock-keyword-face fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 47 (face font-lock-keyword-face fontified t) 47 48 (face font-lock-keyword-face fontified t) 48 58 (fontified t) 58 68 (face font-lock-keyword-face fontified t) 68 70 (fontified t) 70 88 (face font-lock-builtin-face fontified t) 88 89 (face font-lock-builtin-face fontified t) 89 91 (fontified t) 91 92 (fontified t) 92 101 (face font-lock-keyword-face fontified t) 101 102 (fontified t) 102 229 (fontified t) 229 230 (fontified t rear-nonsticky t) 230 232 (fontified t) 232 236 (face font-lock-keyword-face fontified t) 236 237 (fontified t latex-env-pair t) 237 243 (face font-lock-function-name-face fontified t latex-env-pair t) 243 244 (fontified t latex-env-pair t) 244 245 (fontified t)) . 18290) (undo-tree-id40 . -232) (undo-tree-id41 . -232) (undo-tree-id42 . -244) (undo-tree-id43 . -1) (undo-tree-id44 . -232) 18522 (t 26715 40924 595376 542000)) nil (26715 40957 842109 867000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 15390) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1)) ((15390 . 15391)) (26715 39590 370388 480000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17638 . 17639) (#("
" 0 1 (fontified nil)) . -17883) (17638 . 17884) 17626) nil (26715 40958 861388 522000) 0 nil] [nil nil ((nil rear-nonsticky nil 17625 . 17626) (#("
" 0 1 (fontified nil)) . -17870) (17625 . 17871) 17606) ((#("

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/pish2/image82}
	\\caption*{Fig.2 - Response surface of the dependence of curd product viscosity on the mass fraction of cryopowder and fat content in cream}
\\end{figure}
" 0 1 (rear-nonsticky nil fontified nil) 1 2 (fontified nil) 2 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t latex-env-pair t) 9 15 (face font-lock-function-name-face fontified t latex-env-pair t) 15 16 (fontified t latex-env-pair t) 16 21 (fontified t) 21 31 (face font-lock-keyword-face fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 48 (face font-lock-keyword-face fontified t) 48 49 (face font-lock-keyword-face fontified t) 49 59 (fontified t) 59 69 (face font-lock-keyword-face fontified t) 69 71 (fontified t) 71 89 (face font-lock-builtin-face fontified t) 89 90 (face font-lock-builtin-face fontified t) 90 92 (fontified t) 92 93 (fontified t) 93 102 (face font-lock-keyword-face fontified t) 102 103 (fontified t) 103 230 (fontified t) 230 231 (fontified t rear-nonsticky t) 231 233 (fontified t) 233 237 (face font-lock-keyword-face fontified nil) 237 238 (fontified nil latex-env-pair t) 238 244 (face font-lock-function-name-face fontified nil latex-env-pair t) 244 245 (fontified nil latex-env-pair t) 245 246 (fontified nil)) . 17625) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -245) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (17870 . 17871) (nil rear-nonsticky t 17625 . 17626)) (26715 40957 841922 775000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 15390) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1)) ((15390 . 15391)) (26715 39590 370210 244000) 0 nil])
([nil nil ((17526 . 17527) (t 26715 40958 865468 250000)) nil (26715 40985 279889 149000) 0 nil])
nil
nil
([nil nil ((17476 . 17477) (#("8" 0 1 (fontified t)) . 17476) (undo-tree-id55 . -1)) nil (26715 40985 279888 538000) 0 nil])
([nil nil ((17697 . 17698) (#("8" 0 1 (fontified t)) . 17697)) nil (26715 40985 279887 787000) 0 nil])
([nil nil ((18593 . 18594) (#("8" 0 1 (fontified t)) . 18593) (undo-tree-id54 . -1)) nil (26715 40985 279887 176000) 0 nil])
([nil nil ((18832 . 18833) (#("8" 0 1 (fontified t)) . 18832)) nil (26715 40985 279886 304000) 0 nil])
([nil nil ((19780 . 19781) (#("8" 0 1 (fontified t)) . 19780) (undo-tree-id53 . -1)) nil (26715 40985 279885 663000) 0 nil])
([nil nil ((20064 . 20065) (#("8" 0 1 (fontified t)) . 20064) (undo-tree-id52 . -1)) nil (26715 40985 279884 801000) 0 nil])
([nil nil ((20342 . 20343) (#("8" 0 1 (fontified t)) . 20342) (undo-tree-id51 . -1)) nil (26715 40985 279883 419000) 0 nil])
([nil nil ((20610 . 20611) (#("8" 0 1 (fontified t)) . 20610)) nil (26715 40985 279866 687000) 0 nil])
([nil nil ((#("
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.6\\textwidth]{media/pish2/image85}
	\\caption*{Fig.5 - Sectional projections of the response surface illustrating the dependence of curd product viscosity on the mass fraction of cryopowder and fat content in cream}
\\end{figure}
" 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t latex-env-pair t) 8 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 20 (fontified t) 20 30 (face font-lock-keyword-face fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 48 (face font-lock-keyword-face fontified t) 48 57 (fontified t) 57 58 (fontified t) 58 59 (face font-lock-keyword-face fontified t) 59 68 (face font-lock-keyword-face fontified t) 68 70 (fontified t) 70 89 (face font-lock-builtin-face fontified t) 89 91 (fontified t) 91 92 (fontified t) 92 101 (face font-lock-keyword-face fontified t) 101 102 (fontified t) 102 159 (fontified t) 159 268 (fontified t) 268 269 (fontified t rear-nonsticky t) 269 271 (fontified t) 271 275 (face font-lock-keyword-face fontified t) 275 276 (fontified t latex-env-pair t) 276 282 (face font-lock-function-name-face fontified t latex-env-pair t) 282 283 (fontified t latex-env-pair t) 283 284 (fontified t)) . 19723) (undo-tree-id56 . -271) (undo-tree-id57 . -271) (undo-tree-id58 . -283) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -19) (undo-tree-id81 . -19) (undo-tree-id82 . -19) (undo-tree-id83 . -19) (undo-tree-id84 . -19) (undo-tree-id85 . -19) (undo-tree-id86 . -31) (undo-tree-id87 . -31) (undo-tree-id88 . -31) (undo-tree-id89 . -31) (undo-tree-id90 . -31) (undo-tree-id91 . -31) (undo-tree-id92 . -91) (undo-tree-id93 . -91) (undo-tree-id94 . -91) (undo-tree-id95 . -91) (undo-tree-id96 . -91) (undo-tree-id97 . -91) (undo-tree-id98 . -187) (undo-tree-id99 . -187) (undo-tree-id100 . -187) (undo-tree-id101 . -187) (undo-tree-id102 . -187) (undo-tree-id103 . -187) (undo-tree-id104 . -271) (undo-tree-id105 . -271) (undo-tree-id106 . -271) (undo-tree-id107 . -271) (undo-tree-id108 . -271) (undo-tree-id109 . -271) (undo-tree-id110 . -271) (undo-tree-id111 . -271) (undo-tree-id112 . -271) (undo-tree-id113 . -271) (undo-tree-id114 . -271) (undo-tree-id115 . -271) (undo-tree-id116 . -271) (undo-tree-id117 . -271) (undo-tree-id118 . -271) (undo-tree-id119 . -271) (undo-tree-id120 . -271) (undo-tree-id121 . -271) (undo-tree-id122 . -271) (undo-tree-id123 . -271) (undo-tree-id124 . -271) (undo-tree-id125 . -271) (undo-tree-id126 . -271) (undo-tree-id127 . -271) (undo-tree-id128 . -284) 19994 (t 26715 40985 284538 410000)) nil (26715 41042 599590 355000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19003 . 19004) (#("
" 0 1 (fontified nil)) . -19287) (19003 . 19288) 18991) nil (26715 41106 185236 133000) 0 nil])
([nil nil ((18594 . 18595)) nil (26715 41109 432549 100000) 0 nil] [nil nil ((nil fontified t 18593 . 18594) (t 26715 41042 604689 142000) (#("6" 0 1 (fontified t)) . 18593) (t 26715 41042 604689 142000) (18594 . 18595) 18593 (t 26715 41042 604689 142000)) ((#("7" 0 1 (fontified nil)) . 18594) (18593 . 18594)) (26715 41104 224390 776000) 0 nil])
([nil nil ((18834 . 18835)) nil (26715 41109 432548 539000) 0 nil])
([nil nil ((nil fontified t 18832 . 18833) (#("6" 0 1 (fontified t)) . 18832) (18833 . 18834) 18832) ((#("7" 0 1 (fontified nil)) . 18833) (18832 . 18833) (t 26715 41086 183802 488000)) (26715 41085 799825 474000) 0 nil])
([nil nil ((19064 . 19065)) nil (26715 41109 432543 49000) 0 nil])
([nil nil ((nil fontified t 19061 . 19062) (#("6" 0 1 (fontified t)) . 19061) (19062 . 19063) 19061) ((#("7" 0 1 (fontified nil)) . 19062) (19061 . 19062) (t 26715 41074 54771 45000)) (26715 41074 49618 602000) 0 nil])
([nil nil ((17698 . 17699) (t 26715 41109 438862 557000)) nil (26715 41125 646756 707000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 21373 . 21374) (#("
" 0 1 (fontified nil)) . -21389) (21373 . 21390) 21344 (t 26715 41125 651904 282000)) nil (26715 41162 601123 96000) 0 nil])
([nil nil ((#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (fontified t face font-lock-function-name-face latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 20 (fontified t) 20 21 (fontified t)) . 20772) (undo-tree-id142 . -20)) nil (26715 41162 601122 585000) 0 nil])
([nil nil ((nil rear-nonsticky nil 21369 . 21370) (#("
" 0 1 (fontified nil)) . -21390) (21369 . 21391)) nil (26715 41162 601121 994000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 21353) (undo-tree-id137 . -16) (undo-tree-id138 . -15) (undo-tree-id139 . -16) (undo-tree-id140 . -16) (undo-tree-id141 . -16)) nil (26715 41162 601121 533000) 0 nil])
([nil nil ((#("
The analysis of the response surface behavior demonstrated that the
optimal viscosity range of the curd product is achieved at a curd
content of 89.6\\%, cryopowder content of 5.4\\%, and cream fat content of
31.3\\%. The study of the error distribution in viscosity prediction
showed that a significant number of points remained close to the line,
indicating the accuracy of the developed model. Thus, the obtained
results make it possible to determine the optimal formulation parameters
of the curd product with the addition of cryopowder based on the
developed mathematical model.
" 0 1 (fontified t) 1 68 (fontified t) 68 69 (fontified t) 69 150 (fontified t) 150 152 (face font-lock-keyword-face fontified t) 152 179 (fontified t) 179 181 (face font-lock-keyword-face fontified t) 181 208 (fontified t) 208 212 (fontified t) 212 214 (face font-lock-keyword-face fontified t) 214 396 (fontified t) 396 414 (fontified t) 414 466 (fontified t) 466 487 (fontified t) 487 514 (fontified t) 514 552 (fontified t) 552 579 (fontified t) 579 581 (fontified t) 581 582 (fontified t rear-nonsticky t)) . 20771) (undo-tree-id129 . -552) (undo-tree-id130 . -552) (undo-tree-id131 . -581) (undo-tree-id132 . -582) (undo-tree-id133 . -1) (undo-tree-id134 . -582) (undo-tree-id135 . -1) (undo-tree-id136 . -582)) nil (26715 41162 601119 359000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20556 . 20557) (#("
" 0 1 (fontified nil rear-nonsticky t)) . -21138) (20556 . 21139) 20544) nil (26715 41162 601106 936000) 0 nil])
([nil nil ((20558 . 20579) (21139 . 21155)) nil (26715 41162 601102 768000) 0 nil])
([nil nil ((nil fontified t 21233 . 21234) (t 26715 41162 604998 920000) (#("6" 0 1 (fontified t)) . 21233) (t 26715 41162 604998 920000) (21234 . 21235) 21233 (t 26715 41162 604998 920000)) nil (26715 41182 883928 768000) 0 nil])
([nil nil ((nil fontified t 20346 . 20347) (#("6" 0 1 (fontified t)) . 20346) (20347 . 20348) 20346) nil (26715 41182 883927 997000) 0 nil])
([nil nil ((nil fontified t 20068 . 20069) (#("6" 0 1 (fontified t)) . 20068) (20069 . 20070) 20068) nil (26715 41182 883923 568000) 0 nil])
([nil nil ((24108 . 24110) (t 26715 41182 888050 604000)) nil (26715 41214 540513 392000) 0 nil])
([nil nil ((26911 . 26913) (t 26715 41214 546130 915000)) nil (26715 41240 564810 879000) 0 nil])
([nil nil ((27049 . 27051) (t 26715 41240 569196 631000)) nil (26715 41251 979740 783000) 0 nil])
([nil nil ((27270 . 27272) (t 26715 41251 984225 374000)) nil (26715 41277 6169 724000) 0 nil])
([nil nil ((249 . 294) 248 (t 26715 41277 10288 222000)) nil (26716 64639 26399 378000) 0 nil])
([nil nil ((336 . 381)) nil (26716 64639 26398 757000) 0 nil])
([nil nil ((396 . 441)) nil (26716 64639 26398 376000) 0 nil])
([nil nil ((452 . 497) 451) nil (26716 64684 542900 156000) 0 nil])
([nil nil ((#("{}" 0 2 (fontified t)) . -20) (t 26717 10309 663956 77000) (22 . 67) 2235 (t 26717 10309 663956 77000)) nil (26718 30839 175674 21000) 0 nil] [nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (latex-env-pair t fontified t) 5 14 (face font-lock-function-name-face latex-env-pair t fontified t) 14 15 (latex-env-pair t fontified t) 15 16 (fontified t)) . 15497) (undo-tree-id2 . -14) (undo-tree-id3 . -15) 15511 (t 26716 64639 31241 226000)) ((15497 . 15513)) (26716 64684 135171 363000) 0 nil])
([nil current ((#("," 0 1 (fontified t)) . 681) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (t 26718 30839 180256 140000)) nil (26719 42711 963135 440000) 0 nil])
([nil nil ((#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 21 (fontified t)) . 15865) (undo-tree-id0 . -20) (undo-tree-id1 . -21)) ((15865 . 15886) (t 26716 64674 310451 667000)) (26716 64674 305733 426000) 0 nil])
nil
nil
