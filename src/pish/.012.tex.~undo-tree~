(undo-tree-save-format-version . 1)
"fdadb6acbdd38234851cc35701811a038741f6e0"
[nil nil nil nil (26716 63009 33539 722000) 0 nil]
([nil nil ((247 . 292) (t 26715 40779 167977 393000)) nil (26716 63009 33539 40000) 0 nil])
([nil nil ((305 . 350)) nil (26716 63009 33538 640000) 0 nil])
([nil nil ((364 . 409) 363) nil (26716 63009 33538 339000) 0 nil])
([nil nil ((455 . 500)) nil (26716 63009 33537 868000) 0 nil])
([nil nil ((516 . 561) 515) nil (26716 63009 33537 107000) 0 nil])
([nil nil ((nil rear-nonsticky nil 651 . 652) (nil fontified nil 646 . 652) (646 . 652) 645) nil (26716 63009 33536 205000) 0 nil])
([nil nil ((652 . 654)) nil (26716 63009 33531 466000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2851 . 2852) (nil fontified nil 2844 . 2852) (2844 . 2852) 2843 (t 26716 63009 35290 337000)) nil (26716 63040 699880 113000) 0 nil])
([nil nil ((4987 . 4995)) nil (26716 63040 699876 817000) 0 nil])
([nil nil ((19654 . 19655) (t 26716 63040 701461 825000) 19652) nil (26716 63383 596881 435000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/pish/image61}
	\\caption*{}
\\end{figure}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/pish/image62}
	\\caption*{}
\\end{figure}
а)
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 13 (face font-lock-function-name-face latex-env-pair t fontified t) 13 14 (latex-env-pair t fontified t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 87 (face font-lock-builtin-face fontified t) 87 89 (fontified t) 89 90 (fontified t) 90 99 (face font-lock-keyword-face fontified t) 99 102 (fontified t) 102 106 (face font-lock-keyword-face fontified t) 106 107 (latex-env-pair t fontified t) 107 113 (face font-lock-function-name-face latex-env-pair t fontified t) 113 114 (latex-env-pair t fontified t) 114 115 (fontified t) 115 121 (face font-lock-keyword-face fontified t) 121 122 (fontified t latex-env-pair t) 122 128 (face font-lock-function-name-face fontified t latex-env-pair t) 128 129 (fontified t latex-env-pair t) 129 134 (fontified t) 134 144 (face font-lock-keyword-face fontified t) 144 146 (fontified t) 146 162 (face font-lock-keyword-face fontified t) 162 172 (fontified t) 172 182 (face font-lock-keyword-face fontified t) 182 184 (fontified t) 184 202 (face font-lock-builtin-face fontified t) 202 205 (fontified t) 205 214 (face font-lock-keyword-face fontified t) 214 217 (fontified t) 217 221 (face font-lock-keyword-face fontified t) 221 222 (fontified t latex-env-pair t) 222 228 (face font-lock-function-name-face fontified t latex-env-pair t) 228 229 (fontified t latex-env-pair t) 229 230 (fontified t) 230 232 (fontified t) 232 233 (fontified t)) . 19422) (undo-tree-id8 . -230) (undo-tree-id9 . -232) (undo-tree-id10 . -230) (undo-tree-id11 . -89) (undo-tree-id12 . -233)) nil (26716 63448 341866 995000) 0 nil] [nil nil ((#("	\\caption*{}
" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 13 (fontified t)) . 19511) (undo-tree-id0 . -12) (undo-tree-id1 . -13) (undo-tree-id2 . -13) (undo-tree-id3 . -13) (undo-tree-id4 . -13) (undo-tree-id5 . -13) (undo-tree-id6 . -13) (undo-tree-id7 . -13)) ((19511 . 19524)) (26716 63383 596776 157000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19750 . 19751) (nil fontified nil 19422 . 19751) (19422 . 19751)) nil (26716 63453 730455 945000) 0 nil] [nil nil ((nil rear-nonsticky nil 19749 . 19750) (nil fontified nil 19421 . 19750) (19421 . 19750)) ((#("\\begin{figure}[H]
	\\centering
	\\begin{subfigure}{0.48\\textwidth}
		\\centering
		\\includegraphics[width=\\textwidth]{media/pish/image61}
		\\caption*{}
	\\end{subfigure}
	\\begin{subfigure}{0.48\\textwidth}
		\\centering
		\\includegraphics[width=\\textwidth]{media/pish/image62}
		\\caption*{}
	\\end{subfigure}
	\\caption*{а)}
\\end{figure}" 0 6 (face font-lock-keyword-face fontified nil) 6 7 (latex-env-pair t fontified nil) 7 13 (face font-lock-function-name-face latex-env-pair t fontified nil) 13 14 (latex-env-pair t fontified nil) 14 19 (fontified nil) 19 29 (face font-lock-keyword-face fontified nil) 29 31 (fontified nil) 31 37 (face font-lock-keyword-face fontified nil) 37 38 (latex-env-pair t fontified nil) 38 47 (face font-lock-function-name-face latex-env-pair t fontified nil) 47 48 (latex-env-pair t fontified nil) 48 53 (fontified nil) 53 63 (face font-lock-keyword-face fontified nil) 63 67 (fontified nil) 67 77 (face font-lock-keyword-face fontified nil) 77 80 (fontified nil) 80 96 (face font-lock-keyword-face fontified nil) 96 103 (fontified nil) 103 113 (face font-lock-keyword-face fontified nil) 113 115 (fontified nil) 115 133 (face font-lock-builtin-face fontified nil) 133 137 (fontified nil) 137 146 (face font-lock-keyword-face fontified nil) 146 150 (fontified nil) 150 154 (face font-lock-keyword-face fontified nil) 154 155 (latex-env-pair t fontified nil) 155 164 (face font-lock-function-name-face latex-env-pair t fontified nil) 164 165 (latex-env-pair t fontified nil) 165 167 (fontified nil) 167 173 (face font-lock-keyword-face fontified nil) 173 174 (latex-env-pair t fontified nil) 174 183 (face font-lock-function-name-face latex-env-pair t fontified nil) 183 184 (latex-env-pair t fontified nil) 184 189 (fontified nil) 189 199 (face font-lock-keyword-face fontified nil) 199 203 (fontified nil) 203 213 (face font-lock-keyword-face fontified nil) 213 216 (fontified nil) 216 232 (face font-lock-keyword-face fontified nil) 232 239 (fontified nil) 239 249 (face font-lock-keyword-face fontified nil) 249 251 (fontified nil) 251 269 (face font-lock-builtin-face fontified nil) 269 273 (fontified nil) 273 282 (face font-lock-keyword-face fontified nil) 282 286 (fontified nil) 286 290 (face font-lock-keyword-face fontified nil) 290 291 (latex-env-pair t fontified nil) 291 300 (face font-lock-function-name-face latex-env-pair t fontified nil) 300 301 (latex-env-pair t fontified nil) 301 303 (fontified nil) 303 312 (face font-lock-keyword-face fontified nil) 312 317 (fontified nil) 317 321 (face font-lock-keyword-face fontified nil) 321 322 (latex-env-pair t fontified nil) 322 328 (face font-lock-function-name-face latex-env-pair t fontified nil) 328 329 (latex-env-pair t rear-nonsticky nil fontified nil)) . 19421) (undo-tree-id13 . -328) (undo-tree-id14 . -328) (undo-tree-id15 . -317) (undo-tree-id16 . -328) (undo-tree-id17 . -328) (nil fontified t 19733 . 19738) (nil fontified t 19724 . 19733) (nil fontified t 19722 . 19724) (nil fontified t 19721 . 19722) (nil fontified t 19712 . 19721) (nil fontified t 19711 . 19712) (nil fontified t 19707 . 19711) (nil fontified t 19703 . 19707) (nil fontified t 19694 . 19703) (nil fontified t 19690 . 19694) (nil fontified t 19672 . 19690) (nil fontified t 19670 . 19672) (nil fontified t 19660 . 19670) (nil fontified t 19653 . 19660) (nil fontified t 19637 . 19653) (nil fontified t 19634 . 19637) (nil fontified t 19624 . 19634) (nil fontified t 19620 . 19624) (nil fontified t 19610 . 19620) (nil fontified t 19605 . 19610) (nil fontified t 19604 . 19605) (nil fontified t 19595 . 19604) (nil fontified t 19594 . 19595) (nil fontified t 19588 . 19594) (nil fontified t 19586 . 19588) (nil fontified t 19585 . 19586) (nil fontified t 19576 . 19585) (nil fontified t 19575 . 19576) (nil fontified t 19571 . 19575) (nil fontified t 19567 . 19571) (nil fontified t 19558 . 19567) (nil fontified t 19554 . 19558) (nil fontified t 19536 . 19554) (nil fontified t 19534 . 19536) (nil fontified t 19524 . 19534) (nil fontified t 19517 . 19524) (nil fontified t 19501 . 19517) (nil fontified t 19498 . 19501) (nil fontified t 19488 . 19498) (nil fontified t 19484 . 19488) (nil fontified t 19474 . 19484) (nil fontified t 19469 . 19474) (nil fontified t 19468 . 19469) (nil fontified t 19459 . 19468) (nil fontified t 19458 . 19459) (nil fontified t 19452 . 19458) (nil fontified t 19450 . 19452) (nil fontified t 19440 . 19450) (nil fontified t 19435 . 19440) (nil fontified t 19434 . 19435) (nil fontified t 19428 . 19434) (nil fontified t 19427 . 19428) (nil fontified t 19421 . 19427) (nil rear-nonsticky t 19749 . 19750)) (26716 63448 341652 422000) 0 nil])
nil
([nil nil ((19751 . 19752) 19750) nil (26716 63453 730454 573000) 0 nil])
nil
([nil nil ((#("		\\caption*{}
" 0 2 (fontified t) 2 11 (face font-lock-keyword-face fontified t) 11 14 (fontified t)) . 19693) (undo-tree-id32 . -13) (undo-tree-id33 . -14) (undo-tree-id34 . -14) (undo-tree-id35 . -14) (undo-tree-id36 . -14) (undo-tree-id37 . -14) (undo-tree-id38 . -14) (undo-tree-id39 . -14) (undo-tree-id40 . -14) (undo-tree-id41 . -14) (undo-tree-id42 . -14) (undo-tree-id43 . -14)) nil (26716 63453 730453 430000) 0 nil])
([nil nil ((#("		\\caption*{}
" 0 2 (fontified t) 2 11 (face font-lock-keyword-face fontified t) 11 14 (fontified t)) . 19557) (undo-tree-id18 . -13) (undo-tree-id19 . -14) (undo-tree-id20 . -14) (undo-tree-id21 . -14) (undo-tree-id22 . -14) (undo-tree-id23 . -14) (undo-tree-id24 . -14) (undo-tree-id25 . -14) (undo-tree-id26 . -14) (undo-tree-id27 . -14) (undo-tree-id28 . -14) (undo-tree-id29 . -14) (undo-tree-id30 . -14) (undo-tree-id31 . -14)) nil (26716 63473 370165 333000) 0 nil])
([nil nil ((19532 . 19536) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -19532) (undo-tree-id87 . -1) (19521 . 19533) (#("i" 0 1 (fontified nil)) . -19521) (undo-tree-id88 . -1) (19519 . 19522) (#("width=\\textwidth" 0 6 (fontified t) 6 16 (face font-lock-keyword-face fontified t)) . 19519) (undo-tree-id89 . -15) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -16) (undo-tree-id154 . -16) 19520 (t 26716 63453 732730 377000)) nil (26716 63481 691646 50000) 0 nil] [nil nil ((19537 . 19539) (#("media/pish/image61" 0 18 (face font-lock-builtin-face fontified t)) . 19537) (undo-tree-id44 . -17) (undo-tree-id45 . -18) (undo-tree-id46 . -18) 19520 (t 26716 63453 732730 377000)) ((19537 . 19555) (#("uu" 0 2 (face font-lock-builtin-face fontified t)) . 19537) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1)) (26716 63473 369897 990000) 0 nil])
([nil nil ((19642 . 19659) (#("width=\\textwidth" 0 6 (fontified t) 6 16 (face font-lock-keyword-face fontified t)) . 19642) (undo-tree-id52 . -15) (undo-tree-id53 . -16) (undo-tree-id54 . -16) (undo-tree-id55 . -16) (undo-tree-id56 . -16) (undo-tree-id57 . -16) (undo-tree-id58 . -16) (undo-tree-id59 . -16) (undo-tree-id60 . -16) (undo-tree-id61 . -16) (undo-tree-id62 . -16) (undo-tree-id63 . -16) (undo-tree-id64 . -16) (undo-tree-id65 . -16) (undo-tree-id66 . -16) (undo-tree-id67 . -16) (undo-tree-id68 . -15) (undo-tree-id69 . -15) (undo-tree-id70 . -15) (undo-tree-id71 . -15) (undo-tree-id72 . -15) (undo-tree-id73 . -15) (undo-tree-id74 . -15) (undo-tree-id75 . -15) (undo-tree-id76 . -15) (undo-tree-id77 . -15) (undo-tree-id78 . -15) (undo-tree-id79 . -15) (undo-tree-id80 . -15) (undo-tree-id81 . -15) (undo-tree-id82 . -15) (undo-tree-id83 . -15) (undo-tree-id84 . -15) (undo-tree-id85 . -16) (undo-tree-id86 . -16) 19657) nil (26716 63481 691546 713000) 0 nil])
nil
([nil nil ((19649 . 19652) (#("." 0 1 (fontified t)) . -19649) (undo-tree-id156 . -1) 19650 (19649 . 19650) (t 26716 63481 692885 524000)) nil (26716 63498 248846 977000) 0 nil])
([nil nil ((19526 . 19529) (#("." 0 1 (fontified nil)) . -19526) (undo-tree-id160 . -1) 19527 (19526 . 19527)) nil (26716 63499 89896 920000) 0 nil] [nil nil ((19527 . 19530) (#("." 0 1 (face font-lock-keyword-face fontified nil)) . -19527) (undo-tree-id155 . -1) 19528 (19527 . 19528)) ((#("." 0 1 (face font-lock-keyword-face fontified nil)) . 19527) (19527 . 19528) (#("0.8" 0 1 (face font-lock-keyword-face fontified t) 1 3 (fontified t)) . 19527) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2)) (26716 63498 248714 197000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/pish/image63}
	\\caption*{}
\\end{figure}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/pish/image64}
	\\caption*{}
\\end{figure}
б) 
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 87 (face font-lock-builtin-face fontified t) 87 90 (fontified t) 90 99 (face font-lock-keyword-face fontified t) 99 102 (fontified t) 102 106 (face font-lock-keyword-face fontified t) 106 107 (fontified t latex-env-pair t) 107 113 (face font-lock-function-name-face fontified t latex-env-pair t) 113 114 (fontified t latex-env-pair t) 114 115 (fontified t) 115 121 (face font-lock-keyword-face fontified t) 121 122 (fontified t latex-env-pair t) 122 128 (face font-lock-function-name-face fontified t latex-env-pair t) 128 129 (fontified t latex-env-pair t) 129 134 (fontified t) 134 144 (face font-lock-keyword-face fontified t) 144 146 (fontified t) 146 162 (face font-lock-keyword-face fontified t) 162 172 (fontified t) 172 182 (face font-lock-keyword-face fontified t) 182 184 (fontified t) 184 202 (face font-lock-builtin-face fontified t) 202 205 (fontified t) 205 214 (face font-lock-keyword-face fontified t) 214 217 (fontified t) 217 221 (face font-lock-keyword-face fontified t) 221 222 (fontified t latex-env-pair t) 222 228 (face font-lock-function-name-face fontified t latex-env-pair t) 228 229 (fontified t latex-env-pair t) 229 234 (fontified t)) . 19733) (undo-tree-id165 . -233) (undo-tree-id166 . -233) (undo-tree-id167 . -13) (undo-tree-id168 . -233) (undo-tree-id169 . -233) 19966 (t 26716 63499 91982 141000)) nil (26716 63580 699933 998000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 20040 . 20041) (nil fontified nil 19732 . 20041) (19732 . 20041)) nil (26716 63580 699931 42000) 0 nil])
([nil nil ((20042 . 20043) (20041 . 20042) 20040) nil (26716 63580 699930 561000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 20042) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1)) nil (26716 63580 699929 850000) 0 nil])
([nil nil ((19731 . 19732) 19719) nil (26716 63580 699916 835000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/pish/image65}
	\\caption*{}
\\end{figure}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/pish/image66}
	\\caption*{}
\\end{figure}
в) 
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 87 (face font-lock-builtin-face fontified t) 87 90 (fontified t) 90 99 (face font-lock-keyword-face fontified t) 99 102 (fontified t) 102 106 (face font-lock-keyword-face fontified t) 106 107 (fontified t latex-env-pair t) 107 113 (face font-lock-function-name-face fontified t latex-env-pair t) 113 114 (fontified t latex-env-pair t) 114 115 (fontified t) 115 121 (face font-lock-keyword-face fontified t) 121 122 (fontified t latex-env-pair t) 122 128 (face font-lock-function-name-face fontified t latex-env-pair t) 128 129 (fontified t latex-env-pair t) 129 134 (fontified t) 134 144 (face font-lock-keyword-face fontified t) 144 146 (fontified t) 146 162 (face font-lock-keyword-face fontified t) 162 172 (fontified t) 172 182 (face font-lock-keyword-face fontified t) 182 184 (fontified t) 184 202 (face font-lock-builtin-face fontified t) 202 205 (fontified t) 205 214 (face font-lock-keyword-face fontified t) 214 217 (fontified t) 217 221 (face font-lock-keyword-face fontified t) 221 222 (fontified t latex-env-pair t) 222 228 (face font-lock-function-name-face fontified t latex-env-pair t) 228 229 (fontified t latex-env-pair t) 229 234 (fontified t)) . 20044) (undo-tree-id377 . -230) (undo-tree-id378 . -233) (undo-tree-id379 . -230) (undo-tree-id380 . -3) (undo-tree-id381 . -204) (undo-tree-id382 . -230) 20274 (t 26716 63580 702545 433000)) nil (26716 63666 990436 584000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20351 . 20352) (nil fontified nil 20043 . 20352) (20043 . 20352)) nil (26716 63666 990434 530000) 0 nil])
([nil nil ((20352 . 20353) 20351) nil (26716 63666 990434 270000) 0 nil])
([nil nil ((20042 . 20043) 20030) nil (26716 63666 990434 29000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/pish/image67}
	\\caption*{}
\\end{figure}
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/pish/image68}
	\\caption*{}
\\end{figure}
г) 
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 87 (face font-lock-builtin-face fontified t) 87 90 (fontified t) 90 99 (face font-lock-keyword-face fontified t) 99 102 (fontified t) 102 106 (face font-lock-keyword-face fontified t) 106 107 (fontified t latex-env-pair t) 107 113 (face font-lock-function-name-face fontified t latex-env-pair t) 113 114 (fontified t latex-env-pair t) 114 115 (fontified t) 115 121 (face font-lock-keyword-face fontified t) 121 122 (fontified t latex-env-pair t) 122 128 (face font-lock-function-name-face fontified t latex-env-pair t) 128 129 (fontified t latex-env-pair t) 129 134 (fontified t) 134 144 (face font-lock-keyword-face fontified t) 144 146 (fontified t) 146 162 (face font-lock-keyword-face fontified t) 162 172 (fontified t) 172 182 (face font-lock-keyword-face fontified t) 182 184 (fontified t) 184 202 (face font-lock-builtin-face fontified t) 202 205 (fontified t) 205 214 (face font-lock-keyword-face fontified t) 214 217 (fontified t) 217 221 (face font-lock-keyword-face fontified t) 221 222 (fontified t latex-env-pair t) 222 228 (face font-lock-function-name-face fontified t latex-env-pair t) 228 229 (fontified t latex-env-pair t) 229 234 (fontified t)) . 20355) (undo-tree-id373 . -230) (undo-tree-id374 . -233) (undo-tree-id375 . -230) (undo-tree-id376 . -230) 20585) nil (26716 63666 990433 57000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20663 . 20664) (nil fontified nil 20355 . 20664) (20355 . 20664)) nil (26716 63666 990431 735000) 0 nil])
([nil nil ((20664 . 20665) 20663) nil (26716 63666 990431 374000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20652 . 20653) (#("
" 0 1 (fontified nil)) . -20666) (20651 . 20667) 20637) nil (26716 63666 990430 693000) 0 nil])
([nil nil ((#("г" 0 1 (fontified t)) . 20663)) nil (26716 63666 990430 332000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 20663)) nil (26716 63666 990430 142000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -20760) 20693) nil (26716 63666 990429 851000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 20759)) nil (26716 63666 990429 501000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20862 . 20863) (nil fontified nil 20862 . 20863) (20862 . 20863) 20861) nil (26716 63666 990429 150000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -20831) (undo-tree-id372 . -1)) nil (26716 63666 990428 759000) 0 nil])
([nil nil ((20830 . 20831) (#("
" 0 1 (fontified t)) . -20830) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) 20760) nil (26716 63666 990427 277000) 0 nil])
([nil nil ((20759 . 20760) (#("
" 0 1 (face (bold) fontified t)) . -20759) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) 20749) nil (26716 63666 990560 537000) 0 nil])
([nil nil ((#("{\\bfseries Рис.2 - Вид образцов хлеба с добавлением сока, пюре и порошка редьки: а) контроль, б) с дозировкой сока редьки; в) с дозировкой пюре редьки; г) с дозировкой порошка редьки}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 80 (face (bold) fontified t) 80 81 (face (bold) fontified t) 81 151 (face (bold) fontified t) 151 152 (face (bold) fontified t) 152 168 (face (bold) fontified t) 168 182 (face (bold) fontified t) 182 183 (rear-nonsticky t fontified t)) . -20679) (undo-tree-id646 . -80) (undo-tree-id647 . -80) (undo-tree-id648 . -80) (undo-tree-id649 . -80) (undo-tree-id650 . -182) (undo-tree-id651 . -182) (undo-tree-id652 . -182) (undo-tree-id653 . -182) (undo-tree-id654 . -182) (undo-tree-id655 . -182) (undo-tree-id656 . -182) (undo-tree-id657 . -182) (undo-tree-id658 . -182) (undo-tree-id659 . -182) (undo-tree-id660 . -151) (undo-tree-id661 . -151) (undo-tree-id662 . -151) (undo-tree-id663 . -151) (undo-tree-id664 . -151) (undo-tree-id665 . -151) (undo-tree-id666 . -151) (undo-tree-id667 . -151) (undo-tree-id668 . -151) (undo-tree-id669 . -151) (undo-tree-id670 . -151) (undo-tree-id671 . -151) (undo-tree-id672 . -151) (undo-tree-id673 . -151) (undo-tree-id674 . -151) (undo-tree-id675 . -151) (undo-tree-id676 . -151) (undo-tree-id677 . -111) (undo-tree-id678 . -111) (undo-tree-id679 . -111) (undo-tree-id680 . -111) (undo-tree-id681 . -111) (undo-tree-id682 . -111) (undo-tree-id683 . -111) (undo-tree-id684 . -111) (undo-tree-id685 . -111) (undo-tree-id686 . -111) (undo-tree-id687 . -111) (undo-tree-id688 . -111) (undo-tree-id689 . -111) (undo-tree-id690 . -111) (undo-tree-id691 . -111) (undo-tree-id692 . -111) (undo-tree-id693 . -111) (undo-tree-id694 . -111) (undo-tree-id695 . -111) (undo-tree-id696 . -111) (undo-tree-id697 . -111) (undo-tree-id698 . -111) (undo-tree-id699 . -151) (undo-tree-id700 . -151) (undo-tree-id701 . -151) (undo-tree-id702 . -151) (undo-tree-id703 . -151) (undo-tree-id704 . -151) (undo-tree-id705 . -151) (undo-tree-id706 . -151) (undo-tree-id707 . -151) (undo-tree-id708 . -151) (undo-tree-id709 . -151) (undo-tree-id710 . -151) (undo-tree-id711 . -151) (undo-tree-id712 . -151) (undo-tree-id713 . -151) (undo-tree-id714 . -151) (undo-tree-id715 . -151) (undo-tree-id716 . -151) (undo-tree-id717 . -151) (undo-tree-id718 . -151) (undo-tree-id719 . -151) (undo-tree-id720 . -151) (undo-tree-id721 . -151) (undo-tree-id722 . -151) (undo-tree-id723 . -151) (undo-tree-id724 . -151) (undo-tree-id725 . -151) (undo-tree-id726 . -151) (undo-tree-id727 . -151) (undo-tree-id728 . -151) (undo-tree-id729 . -151) (undo-tree-id730 . -151) (undo-tree-id731 . -151) (undo-tree-id732 . -151) (undo-tree-id733 . -151) (undo-tree-id734 . -151) (undo-tree-id735 . -80) (undo-tree-id736 . -80) (undo-tree-id737 . -80) (undo-tree-id738 . -80) (undo-tree-id739 . -80) (undo-tree-id740 . -80) (undo-tree-id741 . -80) (undo-tree-id742 . -80) (undo-tree-id743 . -80) (undo-tree-id744 . -80) (undo-tree-id745 . -80) (undo-tree-id746 . -80) (undo-tree-id747 . -80) (undo-tree-id748 . -80) (undo-tree-id749 . -80) (undo-tree-id750 . -80) (undo-tree-id751 . -80) (undo-tree-id752 . -80) (undo-tree-id753 . -80) (undo-tree-id754 . -80) (undo-tree-id755 . -80) (undo-tree-id756 . -80) (undo-tree-id757 . -80) (undo-tree-id758 . -80) (undo-tree-id759 . -80) (undo-tree-id760 . -80) (undo-tree-id761 . -80) (undo-tree-id762 . -80) (undo-tree-id763 . -80) (undo-tree-id764 . -80) (undo-tree-id765 . -80) (undo-tree-id766 . -80) (undo-tree-id767 . -80) (undo-tree-id768 . -80) (undo-tree-id769 . -151) (undo-tree-id770 . -151) (undo-tree-id771 . -151) (undo-tree-id772 . -151) (undo-tree-id773 . -151) (undo-tree-id774 . -151) (undo-tree-id775 . -151) (undo-tree-id776 . -151) (undo-tree-id777 . -151) (undo-tree-id778 . -151) (undo-tree-id779 . -151) (undo-tree-id780 . -151) (undo-tree-id781 . -151) (undo-tree-id782 . -151) (undo-tree-id783 . -151) (undo-tree-id784 . -151) (undo-tree-id785 . -151) (undo-tree-id786 . -151) (undo-tree-id787 . -151) (undo-tree-id788 . -151) (undo-tree-id789 . -80) (undo-tree-id790 . -80) (undo-tree-id791 . -80) (undo-tree-id792 . -79) (undo-tree-id793 . -80) (undo-tree-id794 . -80) (undo-tree-id795 . -80) (undo-tree-id796 . -80) (undo-tree-id797 . -80) (undo-tree-id798 . -80) (undo-tree-id799 . -80) (undo-tree-id800 . -80) (undo-tree-id801 . -80) (undo-tree-id802 . -80) (undo-tree-id803 . -80) (undo-tree-id804 . -80) (undo-tree-id805 . -80) (undo-tree-id806 . -80) (undo-tree-id807 . -80) (undo-tree-id808 . -80) (undo-tree-id809 . -80) (undo-tree-id810 . -80) (undo-tree-id811 . -80) (undo-tree-id812 . -80) (undo-tree-id813 . -80) (undo-tree-id814 . -80) (undo-tree-id815 . -80) (undo-tree-id816 . -80) (undo-tree-id817 . -80) (undo-tree-id818 . -80) (undo-tree-id819 . -80) (undo-tree-id820 . -80) (undo-tree-id821 . -80) (undo-tree-id822 . -80) (undo-tree-id823 . -80) (undo-tree-id824 . -80) (undo-tree-id825 . -80) (undo-tree-id826 . -80) (undo-tree-id827 . -80) (undo-tree-id828 . -80) (undo-tree-id829 . -80) (undo-tree-id830 . -80) (undo-tree-id831 . -80) (undo-tree-id832 . -80) (undo-tree-id833 . -80) (undo-tree-id834 . -80) (undo-tree-id835 . -80) (undo-tree-id836 . -80) (undo-tree-id837 . -80) (undo-tree-id838 . -80) (undo-tree-id839 . -80) (undo-tree-id840 . -80) (undo-tree-id841 . -80) (undo-tree-id842 . -80) (undo-tree-id843 . -80) (undo-tree-id844 . -80) (undo-tree-id845 . -80) (undo-tree-id846 . -80) (undo-tree-id847 . -80) (undo-tree-id848 . -80) (undo-tree-id849 . -80) (undo-tree-id850 . -80) (undo-tree-id851 . -80) (undo-tree-id852 . -80) (undo-tree-id853 . -80) (undo-tree-id854 . -80) (undo-tree-id855 . -80) (undo-tree-id856 . -80) (undo-tree-id857 . -80) (undo-tree-id858 . -80) (undo-tree-id859 . -80) (undo-tree-id860 . -80) (undo-tree-id861 . -80) (undo-tree-id862 . -80) (undo-tree-id863 . -80) (undo-tree-id864 . -80) (undo-tree-id865 . -80) (undo-tree-id866 . -80) (undo-tree-id867 . -80) (undo-tree-id868 . -80) (undo-tree-id869 . -80) (undo-tree-id870 . -80) (undo-tree-id871 . -80) (undo-tree-id872 . -80) (undo-tree-id873 . -80) (undo-tree-id874 . -80) (undo-tree-id875 . -80) (undo-tree-id876 . -80) (undo-tree-id877 . -80) (undo-tree-id878 . -80) (undo-tree-id879 . -80) (undo-tree-id880 . -80) (undo-tree-id881 . -80) 20863) nil (26716 63670 770748 726000) 0 nil] [nil nil ((#(" а) контроль, б) с дозировкой сока редьки; в) с дозировкой пюре редьки; г) с дозировкой порошка редьки}" 0 1 (face (bold) fontified t) 1 71 (face (bold) fontified t) 71 72 (face (bold) fontified t) 72 88 (face (bold) fontified t) 88 102 (face (bold) fontified t) 102 103 (rear-nonsticky t fontified t)) . 20759) (undo-tree-id170 . 102) (undo-tree-id171 . -102) (undo-tree-id172 . -102) (undo-tree-id173 . -102) (undo-tree-id174 . -102) (undo-tree-id175 . -102) (undo-tree-id176 . -102) (undo-tree-id177 . -102) (undo-tree-id178 . -102) (undo-tree-id179 . -102) (undo-tree-id180 . -102) (undo-tree-id181 . -71) (undo-tree-id182 . -71) (undo-tree-id183 . -71) (undo-tree-id184 . -71) (undo-tree-id185 . -71) (undo-tree-id186 . -71) (undo-tree-id187 . -71) (undo-tree-id188 . -71) (undo-tree-id189 . -71) (undo-tree-id190 . -71) (undo-tree-id191 . -71) (undo-tree-id192 . -71) (undo-tree-id193 . -71) (undo-tree-id194 . -71) (undo-tree-id195 . -71) (undo-tree-id196 . -71) (undo-tree-id197 . -71) (undo-tree-id198 . -31) (undo-tree-id199 . -31) (undo-tree-id200 . -31) (undo-tree-id201 . -31) (undo-tree-id202 . -31) (undo-tree-id203 . -31) (undo-tree-id204 . -31) (undo-tree-id205 . -31) (undo-tree-id206 . -31) (undo-tree-id207 . -31) (undo-tree-id208 . -31) (undo-tree-id209 . -31) (undo-tree-id210 . -31) (undo-tree-id211 . -31) (undo-tree-id212 . -31) (undo-tree-id213 . -31) (undo-tree-id214 . -31) (undo-tree-id215 . -31) (undo-tree-id216 . -31) (undo-tree-id217 . -31) (undo-tree-id218 . -31) (undo-tree-id219 . -31) (undo-tree-id220 . -71) (undo-tree-id221 . -71) (undo-tree-id222 . -71) (undo-tree-id223 . -71) (undo-tree-id224 . -71) (undo-tree-id225 . -71) (undo-tree-id226 . -71) (undo-tree-id227 . -71) (undo-tree-id228 . -71) (undo-tree-id229 . -71) (undo-tree-id230 . -71) (undo-tree-id231 . -71) (undo-tree-id232 . -71) (undo-tree-id233 . -71) (undo-tree-id234 . -71) (undo-tree-id235 . -71) (undo-tree-id236 . -71) (undo-tree-id237 . -71) (undo-tree-id238 . -71) (undo-tree-id239 . -71) (undo-tree-id240 . -71) (undo-tree-id241 . -71) (undo-tree-id242 . -71) (undo-tree-id243 . -71) (undo-tree-id244 . -71) (undo-tree-id245 . -71) (undo-tree-id246 . -71) (undo-tree-id247 . -71) (undo-tree-id248 . -71) (undo-tree-id249 . -71) (undo-tree-id250 . -71) (undo-tree-id251 . -71) (undo-tree-id252 . -71) (undo-tree-id253 . -71) (undo-tree-id254 . -71) (undo-tree-id255 . -71) (undo-tree-id256 . -71) (undo-tree-id257 . -71) (undo-tree-id258 . -71) (undo-tree-id259 . -71) (undo-tree-id260 . -71) (undo-tree-id261 . -71) (undo-tree-id262 . -71) (undo-tree-id263 . -71) (undo-tree-id264 . -71) (undo-tree-id265 . -71) (undo-tree-id266 . -71) (undo-tree-id267 . -71) (undo-tree-id268 . -71) (undo-tree-id269 . -71) (undo-tree-id270 . -71) (undo-tree-id271 . -71) (undo-tree-id272 . -71) (undo-tree-id273 . -71) (undo-tree-id274 . -71) (undo-tree-id275 . -71) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1)) ((20759 . 20862)) (26716 63666 990320 676000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20833 . 20834) (nil fontified nil 20663 . 20834) (20663 . 20834)) nil (26716 63670 770685 126000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 20849) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1)) nil (26716 63670 770680 928000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 20849) (undo-tree-id383 . 1) (undo-tree-id384 . -1)) nil (26716 63670 770540 934000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 20587) (t 26716 63670 773168 930000) (20588 . 20589) 20587 (t 26716 63670 773168 930000)) nil (26716 63694 991129 713000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 20461) (20462 . 20463) 20461) nil (26716 63694 991128 471000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 20276) (20277 . 20278) 20276) nil (26716 63694 991127 499000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 20150) (20151 . 20152) 20150) nil (26716 63694 991126 527000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 19965) (19966 . 19967) 19965) nil (26716 63694 991125 856000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 19839) (19840 . 19841) 19839) nil (26716 63694 991124 744000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 19654) (19655 . 19656) 19654) nil (26716 63694 991123 91000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 19528) (19529 . 19530) 19528) nil (26716 63778 885421 80000) 0 nil])
([nil nil ((19534 . 19540) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . 19534) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (19520 . 19535) (#("i" 0 1 (fontified nil)) . 19520) (undo-tree-id930 . -1) (19519 . 19521) (t 26716 63694 993333 731000)) ((#("wi" 0 1 (fontified nil) 1 2 (fontified nil)) . 19519) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -2) (undo-tree-id898 . -1) (19520 . 19521) (#("idth=0.7\\text" 0 8 (fontified nil) 8 13 (face font-lock-keyword-face fontified nil)) . 19520) (undo-tree-id899 . -13) (undo-tree-id900 . -13) (undo-tree-id901 . -13) (undo-tree-id902 . -13) (undo-tree-id903 . -13) (undo-tree-id904 . -13) (undo-tree-id905 . -13) (undo-tree-id906 . -13) (undo-tree-id907 . -13) (undo-tree-id908 . -13) (#("wi" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil)) . 19533) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -2) (undo-tree-id912 . -2) (undo-tree-id913 . -2) (undo-tree-id914 . -2) (undo-tree-id915 . -2) (undo-tree-id916 . -1) (undo-tree-id917 . -2) (undo-tree-id918 . -1) (19534 . 19535) (#("idth, " 0 4 (face font-lock-keyword-face fontified t) 4 6 (fontified t)) . 19534) (undo-tree-id919 . -5) (undo-tree-id920 . -4) (undo-tree-id921 . -4) (undo-tree-id922 . -5) (undo-tree-id923 . -5)) (26716 63779 805097 184000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 19539)) nil (26716 63798 812593 744000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19684 . 19685) (nil fontified nil 19665 . 19685) (19665 . 19685)) nil (26716 63798 812593 423000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19889 . 19890) (nil fontified nil 19870 . 19890) (19870 . 19890)) nil (26716 63798 812593 72000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20035 . 20036) (nil fontified nil 20016 . 20036) (20016 . 20036)) nil (26716 63798 812592 742000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20240 . 20241) (nil fontified nil 20221 . 20241) (20221 . 20241)) nil (26716 63798 812592 451000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20386 . 20387) (nil fontified nil 20367 . 20387) (20367 . 20387)) nil (26716 63798 812707 498000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20591 . 20592) (nil fontified nil 20572 . 20592) (20572 . 20592)) nil (26716 63804 193928 840000) 0 nil] [nil nil ((nil rear-nonsticky nil 20597 . 20598) (nil fontified nil 20578 . 20598) (20578 . 20598)) ((#("width=0.7\\textwidth," 0 9 (fontified nil) 9 19 (face font-lock-keyword-face fontified nil) 19 20 (rear-nonsticky nil fontified nil)) . 20578) (undo-tree-id931 . -19) (undo-tree-id932 . -19) (undo-tree-id933 . -19) (undo-tree-id934 . -19) (nil rear-nonsticky t 20597 . 20598)) (26716 63798 812587 933000) 0 nil])
([nil nil ((nil rear-nonsticky nil 20737 . 20738) (nil fontified nil 20718 . 20738) (20718 . 20738) 20717) nil (26716 63805 189951 74000) 0 nil] [nil nil ((nil rear-nonsticky nil 20738 . 20739) (nil fontified nil 20719 . 20739) (20719 . 20739) 20718) ((#("width=0.7\\textwidth," 0 9 (fontified nil) 9 19 (face font-lock-keyword-face fontified nil) 19 20 (rear-nonsticky nil fontified nil)) . 20719) (undo-tree-id935 . -19) (undo-tree-id936 . -19) (undo-tree-id937 . -19) (undo-tree-id938 . -19) (nil rear-nonsticky t 20738 . 20739)) (26716 63804 193803 203000) 0 nil])
nil
([nil nil ((23497 . 23518) (23983 . 23999) (t 26716 63805 192070 364000)) nil (26716 63837 444274 739000) 0 nil])
nil
([nil current ((26876 . 26897) (27806 . 27822) (t 26716 63837 447282 291000)) nil (26716 63842 62170 303000) 0 nil])
nil
