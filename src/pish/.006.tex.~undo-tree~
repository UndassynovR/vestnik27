(undo-tree-save-format-version . 1)
"0f3c8c9ff00ddac043497bb1da26ddc5a2fd491d"
[nil nil nil nil (26716 59934 858456 793000) 0 nil]
([nil nil ((224 . 269) 223 (t 26715 40779 140977 318000)) nil (26716 59934 858455 641000) 0 nil])
([nil nil ((311 . 356)) nil (26716 59934 858454 499000) 0 nil])
([nil nil ((367 . 412) 366) nil (26716 59934 858448 317000) 0 nil])
([nil nil ((#("  caption = {\\bfseries Таблица 1 - Рекомендуемые суточные нормы Рекомендуемая суточная норма потребления {[}4{]}},
" 0 13 (fontified t) 13 22 (face font-lock-keyword-face fontified t) 22 112 (face (bold) fontified t) 112 115 (fontified t)) . 10917) (undo-tree-id2 . -11) (undo-tree-id3 . -114) 10928 (t 26716 59934 861812 817000)) nil (26716 59970 927940 164000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10900 . 10901) (#("
" 0 1 (fontified nil)) . -11013) (10898 . 11014)) nil (26716 59970 927938 772000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t) 1 2 (rear-nonsticky t fontified t)) . -10899) (undo-tree-id1 . -2) 10901) nil (26716 59970 927938 70000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 10899)) nil (26716 59970 927936 708000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 10899)) nil (26716 59970 927936 287000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 10899)) nil (26716 59970 927935 716000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 10899)) nil (26716 59970 927935 185000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 10899)) nil (26716 59970 927934 644000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 10899)) nil (26716 59970 927933 622000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 10899)) nil (26716 59970 927933 71000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 10899)) nil (26716 59970 927932 630000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . 10899)) nil (26716 59970 927932 199000) 0 nil])
([nil nil ((#("\\bfseries " 0 9 (face font-lock-keyword-face fontified t) 9 10 (face (bold) fontified t)) . 10901) (undo-tree-id0 . -9)) nil (26716 59970 927931 608000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 10899)) nil (26716 59970 927908 475000) 0 nil])
([nil nil ((10899 . 10904)) nil (26716 59970 927907 693000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 10995)) nil (26716 59970 927901 712000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 13191) (undo-tree-id70 . -1) (t 26716 59970 930007 446000)) nil (26716 60003 920660 931000) 0 nil])
([nil nil ((#("caption = {\\bfseries Таблица 2 - Пищевая ценность и калорийность пряных трав (чеснок, укроп, базилик, петрушка, сельдерей, красный перец) {[}5{]}}," 0 11 (fontified t) 11 20 (face font-lock-keyword-face fontified t) 20 145 (face (bold) fontified t) 145 147 (fontified t)) . 13191) (undo-tree-id69 . -146)) nil (26716 60003 920660 59000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13318 . 13319) (nil fontified nil 13172 . 13319) (13172 . 13319)) nil (26716 60003 920658 506000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13338) (undo-tree-id68 . -1)) nil (26716 60003 920657 775000) 0 nil])
([nil nil ((#("caption " 0 8 (fontified t)) . 13172) (undo-tree-id66 . -7) (undo-tree-id67 . -8)) nil (26716 60003 920657 154000) 0 nil])
([nil nil ((#("= " 0 2 (fontified t)) . 13172) (undo-tree-id65 . -1)) nil (26716 60003 920656 72000) 0 nil])
([nil nil ((#("\\bfseries " 0 9 (face font-lock-keyword-face fontified t) 9 10 (face (bold) fontified t)) . 13173) (undo-tree-id64 . -9)) nil (26716 60003 920655 611000) 0 nil])
([nil nil (13172) nil (26716 60003 920655 10000) 0 nil])
([nil nil ((13172 . 13177)) nil (26716 60003 920654 599000) 0 nil])
([nil nil ((#("," 0 1 (rear-nonsticky t fontified t)) . 13303) (undo-tree-id62 . -1) (undo-tree-id63 . -1)) nil (26716 60003 920653 988000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -13304) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) 13305 (13304 . 13305) (13303 . 13304) 13302) nil (26716 60003 920651 703000) 0 nil])
([nil nil ((#("n" 0 1 (fontified nil)) . -13172) 13173 (13172 . 13173) (13171 . 13172) 13156) nil (26716 60003 920603 904000) 0 nil])
([nil nil ((#("{}" 0 2 (fontified t)) . -20) (t 26717 10309 661956 88000) (22 . 66) 1 (t 26717 10309 661956 88000)) nil (26718 30602 722170 921000) 0 nil])
([nil nil ((637 . 651) (t 26718 30602 724767 540000)) nil (26718 51552 277642 731000) 0 nil])
([nil nil ((636 . 637) (t 26718 51552 279411 455000) 607) nil (26718 51569 167047 186000) 0 nil])
([nil current ((55175 . 55176) (#(";" 0 1 (fontified t)) . 55175) (undo-tree-id0 . -1) (t 26718 51569 169325 77000)) nil (26718 51649 436126 81000) 0 nil])
nil
