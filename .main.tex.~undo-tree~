(undo-tree-save-format-version . 1)
"c68ed8e3f27715c5855f497a09033c42fab0c6fc"
[nil nil nil nil (26697 2977 988210 599000) 0 nil]
([nil nil ((apply -3 683 711 undo--wrap-and-run-primitive-undo 683 711 ((683 . 686) (t 26695 53654 19490 882000)))) nil (26697 2977 988209 353000) 0 nil])
([nil nil ((apply 3 711 735 undo--wrap-and-run-primitive-undo 711 735 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -711)))) nil (26697 2977 988205 712000) 0 nil])
([nil nil ((apply -3 711 739 undo--wrap-and-run-primitive-undo 711 739 ((711 . 714) (t 26697 2977 988858 452000)))) nil (26697 4246 813069 33000) 0 nil])
([nil nil ((apply 3 739 763 undo--wrap-and-run-primitive-undo 739 763 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -739)))) nil (26697 4246 813065 374000) 0 nil])
([nil nil ((apply -3 739 767 undo--wrap-and-run-primitive-undo 739 767 ((739 . 742) (t 26697 4246 813624 563000)))) nil (26697 8282 843514 408000) 0 nil])
([nil nil ((apply 3 767 791 undo--wrap-and-run-primitive-undo 767 791 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -767)))) nil (26697 8282 843509 906000) 0 nil])
([nil nil ((apply -3 767 795 undo--wrap-and-run-primitive-undo 767 795 ((767 . 770) (t 26697 8282 845729 262000)))) nil (26698 23004 81930 146000) 0 nil])
([nil nil ((apply 3 795 819 undo--wrap-and-run-primitive-undo 795 819 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -795)))) nil (26698 23004 81926 540000) 0 nil])
([nil nil ((apply -3 795 823 undo--wrap-and-run-primitive-undo 795 823 ((795 . 798) (t 26698 23004 82817 546000)))) nil (26698 23476 552755 531000) 0 nil])
([nil nil ((apply 3 823 847 undo--wrap-and-run-primitive-undo 823 847 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -823)))) nil (26698 23476 552751 499000) 0 nil])
([nil nil ((apply -3 823 851 undo--wrap-and-run-primitive-undo 823 851 ((823 . 826) (t 26698 23476 554874 485000)))) nil (26698 24331 973328 859000) 0 nil])
([nil nil ((apply 3 851 875 undo--wrap-and-run-primitive-undo 851 875 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -851)))) nil (26698 24331 973324 879000) 0 nil])
([nil nil ((apply -3 851 879 undo--wrap-and-run-primitive-undo 851 879 ((851 . 854) (t 26698 24331 974510 474000)))) nil (26698 24822 665865 961000) 0 nil])
([nil nil ((apply 3 879 903 undo--wrap-and-run-primitive-undo 879 903 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -879)))) nil (26698 24822 665865 629000) 0 nil])
([nil nil ((903 . 904) 879) nil (26698 24822 665865 175000) 0 nil])
([nil nil ((1093 . 1094) 1067) nil (26698 24822 665864 466000) 0 nil])
([nil nil ((1178 . 1179) 1151) nil (26698 24822 665863 729000) 0 nil])
([nil nil ((1291 . 1292) 1264) nil (26698 24822 665860 51000) 0 nil])
([nil nil ((apply -3 879 907 undo--wrap-and-run-primitive-undo 879 907 ((879 . 882) (t 26698 24822 667147 45000)))) nil (26698 26327 380014 870000) 0 nil])
([nil nil ((apply 3 908 931 undo--wrap-and-run-primitive-undo 908 931 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -908)))) nil (26698 26327 380011 314000) 0 nil])
([nil nil ((apply -3 908 935 undo--wrap-and-run-primitive-undo 908 935 ((908 . 911) (t 26698 26327 381478 817000)))) nil (26698 27751 452986 791000) 0 nil])
([nil nil ((apply 3 935 958 undo--wrap-and-run-primitive-undo 935 958 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -935)))) nil (26698 27751 452983 94000) 0 nil])
([nil nil ((apply -3 935 962 undo--wrap-and-run-primitive-undo 935 962 ((935 . 938) (t 26698 27751 454396 697000)))) nil (26698 28151 51886 889000) 0 nil])
([nil nil ((apply 3 962 985 undo--wrap-and-run-primitive-undo 962 985 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -962)))) nil (26698 28151 51883 635000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1093 . 1094) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -1120) (1093 . 1121) 1067 (t 26698 28151 52795 974000)) nil (26698 28715 990912 900000) 0 nil])
([nil nil ((#("007" 0 3 (face font-lock-comment-face fontified t)) . 1112) (1115 . 1116) 1114) nil (26698 28715 990912 22000) 0 nil])
([nil nil ((1112 . 1114)) nil (26698 28715 990911 49000) 0 nil])
([nil nil ((apply -3 962 989 undo--wrap-and-run-primitive-undo 962 989 ((962 . 965) 981))) nil (26698 28715 990910 422000) 0 nil])
([nil nil ((apply 3 989 1012 undo--wrap-and-run-primitive-undo 989 1012 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -989) 1008))) nil (26698 28715 990906 794000) 0 nil])
([nil nil ((apply -3 989 1016 undo--wrap-and-run-primitive-undo 989 1016 ((989 . 992) 1008 (t 26698 28715 991801 976000)))) nil (26698 30364 105100 987000) 0 nil])
([nil nil ((apply 3 1016 1039 undo--wrap-and-run-primitive-undo 1016 1039 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1016) 1035))) nil (26698 30364 105096 959000) 0 nil])
([nil nil ((apply -3 1016 1043 undo--wrap-and-run-primitive-undo 1016 1043 ((1016 . 1019) 1035 (t 26698 30364 105972 704000)))) nil (26698 30576 371309 894000) 0 nil])
([nil nil ((apply 3 1043 1066 undo--wrap-and-run-primitive-undo 1043 1066 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1043) 1062))) nil (26698 30576 371305 676000) 0 nil])
([nil nil ((apply -3 1043 1070 undo--wrap-and-run-primitive-undo 1043 1070 ((1043 . 1046) 1062 (t 26698 30576 373321 300000)))) nil (26698 31673 24322 266000) 0 nil])
([nil nil ((apply 3 1070 1093 undo--wrap-and-run-primitive-undo 1070 1093 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1070) 1089))) nil (26698 31673 24317 972000) 0 nil])
([nil nil ((apply -3 1070 1097 undo--wrap-and-run-primitive-undo 1070 1097 ((1070 . 1073) 1089 (t 26698 31673 31059 973000)))) nil (26698 32309 630198 478000) 0 nil])
([nil nil ((apply 3 1097 1120 undo--wrap-and-run-primitive-undo 1097 1120 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1097) 1116))) nil (26698 32309 630193 306000) 0 nil])
([nil nil ((apply -3 1097 1124 undo--wrap-and-run-primitive-undo 1097 1124 ((1097 . 1100) 1116 (t 26698 32309 639031 861000)))) nil (26698 32515 723963 643000) 0 nil])
([nil nil ((apply 3 1125 1149 undo--wrap-and-run-primitive-undo 1125 1149 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1125) 1144))) nil (26698 32515 723958 529000) 0 nil])
([nil nil ((apply -3 1125 1153 undo--wrap-and-run-primitive-undo 1125 1153 ((1125 . 1128) 1144 (t 26698 32515 732542 964000)))) nil (26698 33190 177730 115000) 0 nil])
([nil nil ((apply 3 1153 1177 undo--wrap-and-run-primitive-undo 1153 1177 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1153) 1172))) nil (26698 33190 177726 537000) 0 nil])
([nil nil ((apply -3 1153 1181 undo--wrap-and-run-primitive-undo 1153 1181 ((1153 . 1156) 1172 (t 26698 33190 178574 236000)))) nil (26698 33366 832679 148000) 0 nil])
([nil nil ((apply 3 1181 1205 undo--wrap-and-run-primitive-undo 1181 1205 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1181) 1200))) nil (26698 33366 832673 744000) 0 nil])
([nil nil ((apply -3 1181 1209 undo--wrap-and-run-primitive-undo 1181 1209 ((1181 . 1184) 1200 (t 26698 33366 839863 347000)))) nil (26699 54408 779032 939000) 0 nil])
([nil nil ((apply 3 1210 1234 undo--wrap-and-run-primitive-undo 1210 1234 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1210) 1229))) nil (26699 54408 779031 975000) 0 nil])
([nil nil ((apply -3 1210 1238 undo--wrap-and-run-primitive-undo 1210 1238 ((1210 . 1213) 1229))) nil (26699 54408 779030 948000) 0 nil])
([nil nil ((apply 3 1210 1234 undo--wrap-and-run-primitive-undo 1210 1234 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1210) 1229))) nil (26699 54408 779027 285000) 0 nil])
([nil nil ((apply -3 1210 1238 undo--wrap-and-run-primitive-undo 1210 1238 ((1210 . 1213) 1229 (t 26699 54408 780102 632000)))) nil (26699 54561 52354 454000) 0 nil])
([nil nil ((apply 3 1238 1262 undo--wrap-and-run-primitive-undo 1238 1262 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1238) 1257))) nil (26699 54561 52350 44000) 0 nil])
([nil nil ((apply -3 1238 1266 undo--wrap-and-run-primitive-undo 1238 1266 ((1238 . 1241) 1257 (t 26699 54561 60024 178000)))) nil (26699 54897 69915 117000) 0 nil])
([nil nil ((apply 3 1266 1290 undo--wrap-and-run-primitive-undo 1266 1290 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1266) 1285))) nil (26699 54897 69910 710000) 0 nil])
([nil nil ((apply -3 1266 1294 undo--wrap-and-run-primitive-undo 1266 1294 ((1266 . 1269) 1285 (t 26699 54897 78019 813000)))) nil (26699 55607 228907 11000) 0 nil])
([nil nil ((apply 3 1294 1318 undo--wrap-and-run-primitive-undo 1294 1318 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1294) 1313))) nil (26699 55607 228903 545000) 0 nil])
([nil nil ((1294 . 1421) (#("\\input{src/ekon/004.tex}

%% \\input{src/chem/001.tex}
%% \\input{src/chem/002.tex}

% Last page (appendix, references, etc.)
%% " 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 23 (face font-lock-builtin-face fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 29 (face font-lock-comment-delimiter-face fontified t) 29 54 (face font-lock-comment-face fontified t) 54 57 (face font-lock-comment-delimiter-face fontified t) 57 82 (face font-lock-comment-face fontified t) 82 83 (fontified t) 83 85 (face font-lock-comment-delimiter-face fontified t) 85 124 (face font-lock-comment-face fontified t) 124 127 (face font-lock-comment-delimiter-face fontified t)) . 1294) (undo-tree-id0 . -19) (t 26699 55607 229999 855000)) nil (26703 39567 118043 704000) 0 nil])
([nil nil ((apply 3 908 931 undo--wrap-and-run-primitive-undo 908 931 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -908) 927 (t 26703 39495 11157 965000)))) nil (26703 39567 118007 399000) 0 nil])
([nil nil ((apply -3 908 935 undo--wrap-and-run-primitive-undo 908 935 ((908 . 911) 927 (t 26703 39567 127133 298000)))) nil (26703 39593 129673 994000) 0 nil])
([nil nil ((apply 3 1323 1347 undo--wrap-and-run-primitive-undo 1323 1347 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1323) 1342))) nil (26703 39593 129670 637000) 0 nil])
([nil nil ((apply -3 1323 1351 undo--wrap-and-run-primitive-undo 1323 1351 ((1323 . 1326) 1342 (t 26703 39593 131403 237000)))) nil (26703 42694 180133 322000) 0 nil])
([nil nil ((apply 3 1351 1375 undo--wrap-and-run-primitive-undo 1351 1375 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1351) 1370))) nil (26703 42694 180128 811000) 0 nil])
([nil nil ((apply -3 1351 1379 undo--wrap-and-run-primitive-undo 1351 1379 ((1351 . 1354) 1370 (t 26703 42694 189273 728000)))) nil (26703 43098 11756 137000) 0 nil])
([nil nil ((1351 . 1365) (#("$" 0 1 (face font-lock-comment-face fontified t)) . -1351) (undo-tree-id56 . -1) (#("$" 0 1 (face font-lock-comment-face fontified t)) . -1352) (undo-tree-id57 . -1) 1353 (1349 . 1353) (#("}" 0 1 (face font-lock-comment-face fontified t)) . -1349) (undo-tree-id58 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1350) (undo-tree-id59 . -1) (#("$" 0 1 (face font-lock-comment-face fontified t)) . -1351) (undo-tree-id60 . -1) (#("&" 0 1 (face font-lock-comment-face fontified t)) . -1352) (undo-tree-id61 . -1) 1353 (1350 . 1353)) nil (26703 43098 11752 580000) 0 nil])
([nil nil ((1433 . 1440) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -1433) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 1434 (1433 . 1434) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -1433) (undo-tree-id15 . -1) (1426 . 1434) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -1426) (undo-tree-id16 . -1) (1424 . 1427) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -1424) (undo-tree-id17 . -1) (1420 . 1425) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1420) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("c" 0 1 (face font-lock-comment-face fontified t)) . -1421) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("u" 0 1 (face font-lock-comment-face fontified t)) . -1422) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -1423) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1424) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -1425) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -1426) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -1427) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -1428) (undo-tree-id42 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -1429) (undo-tree-id43 . -1) 1430 (1419 . 1430) (1417 . 1419) (#("y" 0 1 (face font-lock-comment-face fontified t)) . -1417) (undo-tree-id44 . -1) (#("l" 0 1 (face font-lock-comment-face fontified t)) . -1418) (undo-tree-id45 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1419) (undo-tree-id46 . -1) 1420 (1415 . 1420) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -1415) (undo-tree-id47 . -1) (1407 . 1416) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -1407) (undo-tree-id48 . -1) (1394 . 1408) (#("$" 0 1 (face font-lock-comment-face fontified nil)) . -1394) (undo-tree-id49 . -1) (#("$" 0 1 (face font-lock-comment-face fontified t)) . -1395) (undo-tree-id50 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1396) (undo-tree-id51 . -1) 1397 (1394 . 1397) (#("&" 0 1 (face font-lock-comment-face fontified t)) . -1394) (undo-tree-id52 . -1) (#("&" 0 1 (face font-lock-comment-face fontified t)) . -1395) (undo-tree-id53 . -1) 1396 (1394 . 1396) (#("&" 0 1 (face font-lock-comment-face fontified t)) . -1394) (undo-tree-id54 . -1) (#("&" 0 1 (face font-lock-comment-face fontified t)) . -1395) (undo-tree-id55 . -1) 1396 (1393 . 1396)) nil (26703 43098 11737 958000) 0 nil])
([nil nil ((1435 . 1436) (#("c" 0 1 (face font-lock-comment-face fontified t)) . 1435) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1)) nil (26703 43098 11577 415000) 0 nil])
([nil nil ((apply 3 1210 1234 undo--wrap-and-run-primitive-undo 1210 1234 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1210) 1236 (t 26703 43098 21109 759000)))) nil (26703 43108 793183 850000) 0 nil])
([nil nil ((1238 . 1249) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -1238) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("l" 0 1 (face font-lock-comment-face fontified t)) . -1239) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 1240 (1235 . 1240) (#("&" 0 1 (fontified t)) . -1235) (undo-tree-id68 . -1) (#("&" 0 1 (fontified t)) . -1236) (undo-tree-id69 . -1) 1237 (1234 . 1237) (t 26703 43108 794811 755000)) nil (26703 47551 569855 638000) 0 nil])
([nil nil ((apply -3 1210 1253 undo--wrap-and-run-primitive-undo 1210 1253 ((1210 . 1213) 1248))) nil (26703 47551 569835 880000) 0 nil])
([nil nil ((apply 3 1253 1277 undo--wrap-and-run-primitive-undo 1253 1277 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1253) 1279))) nil (26703 47551 569831 687000) 0 nil])
([nil nil ((1287 . 1292) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -1287) (undo-tree-id0 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -1288) (undo-tree-id1 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -1289) (undo-tree-id2 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -1290) (undo-tree-id3 . -1) 1291 (1277 . 1291) (t 26703 47551 578092 900000)) nil (26706 24153 169911 496000) 0 nil])
([nil nil ((apply -3 1253 1296 undo--wrap-and-run-primitive-undo 1253 1296 ((1253 . 1256) 1291 (t 26706 24327 942246 892000)))) nil (26706 24523 336139 368000) 0 nil])
([nil nil ((apply 3 1296 1320 undo--wrap-and-run-primitive-undo 1296 1320 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1296) 1322))) nil (26706 24523 336135 532000) 0 nil])
([nil nil ((1321 . 1330) (#("&" 0 1 (fontified t)) . -1321) (undo-tree-id0 . -1) (#("&" 0 1 (fontified t)) . -1322) (undo-tree-id1 . -1) 1323 (1320 . 1323) (t 26706 24523 338017 118000)) nil (26706 24660 118650 315000) 0 nil])
([nil nil ((apply -3 1296 1334 undo--wrap-and-run-primitive-undo 1296 1334 ((1296 . 1299) 1329))) nil (26706 24660 118617 276000) 0 nil])
([nil nil ((apply 3 1334 1358 undo--wrap-and-run-primitive-undo 1334 1358 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1334) 1360 (t 26706 24660 126552 712000)))) nil (26706 24661 110374 764000) 0 nil])
([nil nil ((apply -3 1334 1362 undo--wrap-and-run-primitive-undo 1334 1362 ((1334 . 1337) 1357 (t 26706 24661 111528 506000)))) nil (26706 25987 967654 432000) 0 nil])
([nil nil ((apply 3 599 623 undo--wrap-and-run-primitive-undo 599 623 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -599) 622))) nil (26706 25987 967649 980000) 0 nil])
([nil nil ((apply -3 599 627 undo--wrap-and-run-primitive-undo 599 627 ((599 . 602) 622 (t 26706 25987 971171 392000)))) nil (26706 26631 231489 559000) 0 nil])
([nil nil ((apply 3 627 651 undo--wrap-and-run-primitive-undo 627 651 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -627) 650))) nil (26706 26631 231488 320000) 0 nil])
([nil nil ((apply -3 1520 1549 undo--wrap-and-run-primitive-undo 1520 1549 ((1520 . 1523) 1543))) nil (26706 26655 132006 924000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1372 . 1373) (nil fontified nil 1358 . 1373) (1358 . 1373) 1357 (t 26706 26631 234638 599000)) nil (26706 26659 794250 358000) 0 nil] [nil nil ((#(" %% almost done" 0 15 (face font-lock-comment-face fontified t)) . 1234) (undo-tree-id2 . -15) (undo-tree-id3 . -15) (undo-tree-id4 . -14) (t 26706 26631 234638 599000)) ((1234 . 1249)) (26706 26655 131736 974000) 0 nil])
([nil nil ((nil rear-nonsticky nil 640 . 641) (nil fontified nil 626 . 641) (626 . 641) 625) nil (26706 27651 402520 695000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 675 . 676) (nil fontified nil 666 . 676) (666 . 676) 665 (t 26706 26659 797846 590000)) nil (26706 27655 797852 56000) 0 nil] [nil nil ((#(" %% graphs" 0 1 (face font-lock-comment-face fontified t) 1 4 (face font-lock-comment-face fontified t) 4 10 (face font-lock-comment-face fontified t)) . 1335) (undo-tree-id5 . -9) (undo-tree-id6 . -8) (undo-tree-id7 . -8) (undo-tree-id8 . -8) (undo-tree-id9 . -8) (undo-tree-id10 . -8) (undo-tree-id11 . -6) (undo-tree-id12 . -6) (undo-tree-id13 . -6) (undo-tree-id14 . -6) (undo-tree-id15 . -6) (undo-tree-id16 . -5) (undo-tree-id17 . -5) (undo-tree-id18 . -5) (undo-tree-id19 . -5) (undo-tree-id20 . -5) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -3) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -10) (undo-tree-id52 . -10) (t 26706 26659 797846 590000)) ((1335 . 1345)) (26706 27651 402217 240000) 0 nil])
([nil nil ((apply -3 642 680 undo--wrap-and-run-primitive-undo 642 680 ((642 . 645) 675))) nil (26706 27655 797850 634000) 0 nil])
nil
([nil nil ((apply 3 680 704 undo--wrap-and-run-primitive-undo 680 704 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -680) 706))) nil (26706 27655 797845 853000) 0 nil])
([nil nil ((#(" %% graphs" 0 1 (face font-lock-comment-face fontified t) 1 4 (face font-lock-comment-face fontified t) 4 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face rear-nonsticky t fontified t)) . 669) (undo-tree-id53 . -9) (t 26706 27655 800524 839000)) nil (26707 47034 774355 167000) 0 nil])
([nil nil ((nil rear-nonsticky nil 703 . 704) (nil fontified nil 694 . 704) (694 . 704) 693) nil (26707 47034 774346 171000) 0 nil])
([nil nil ((apply -3 670 708 undo--wrap-and-run-primitive-undo 670 708 ((670 . 673) 703))) nil (26707 47139 40476 793000) 0 nil])
([nil nil ((apply 3 708 732 undo--wrap-and-run-primitive-undo 708 732 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 708) 734 (t 26707 47139 813327 770000)))) ((apply -3 708 735 undo--wrap-and-run-primitive-undo 708 735 ((708 . 711) 731 (t 26707 47036 87236 524000)))) (26707 47140 990901 846000) 0 nil])
([nil nil ((777 . 782) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -777) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -778) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -779) (undo-tree-id60 . -1) 780 (777 . 780) (763 . 777) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -763) (undo-tree-id61 . -1) (759 . 764) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -759) (undo-tree-id62 . -1) 760 (753 . 760) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -753) (undo-tree-id63 . -1) 754 (733 . 754) (#("&" 0 1 (fontified t)) . -733) (undo-tree-id64 . -1) 734 (#("&" 0 1 (fontified t)) . -734) (undo-tree-id65 . -1) 735 (732 . 735) (t 26707 47141 392283 491000)) nil (26707 49294 318009 644000) 0 nil])
([nil nil ((apply -3 708 786 undo--wrap-and-run-primitive-undo 708 786 ((708 . 711) 781))) nil (26707 49294 317990 113000) 0 nil])
([nil nil ((apply 3 786 810 undo--wrap-and-run-primitive-undo 786 810 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -786) 812 (t 26707 49294 320157 738000)))) nil (26707 49295 304062 724000) 0 nil])
([nil nil ((786 . 984) (#("\\input{src/pish/005.tex}
%% \\input{src/pish/006.tex}
%% \\input{src/pish/007.tex}
%% \\input{src/pish/008.tex}" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 23 (face font-lock-builtin-face fontified t) 23 25 (fontified t) 25 28 (face font-lock-comment-delimiter-face fontified t) 28 53 (face font-lock-comment-face fontified t) 53 56 (face font-lock-comment-delimiter-face fontified t) 56 81 (face font-lock-comment-face fontified t) 81 84 (face font-lock-comment-delimiter-face fontified t) 84 108 (face font-lock-comment-face fontified t)) . 786) (undo-tree-id0 . -23) (t 26707 49295 306130 415000)) nil (26708 57948 108686 904000) 0 nil])
([nil nil ((apply 3 985 1009 undo--wrap-and-run-primitive-undo 985 1009 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -985) 1011 (t 26708 57900 968772 594000)))) nil (26708 57948 108658 880000) 0 nil])
([nil nil ((apply -3 985 1013 undo--wrap-and-run-primitive-undo 985 1013 ((985 . 988) (t 26708 57948 116453 13000)))) nil (26708 61983 302626 439000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1026 . 1027) (nil fontified nil 1012 . 1027) (1012 . 1027) 1011) nil (26708 61984 805819 756000) 0 nil] [nil nil ((#(" %% almost done" 0 15 (face font-lock-comment-face fontified t)) . 969) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -15) (undo-tree-id6 . -15) (undo-tree-id7 . -14)) ((969 . 984)) (26708 61983 302539 935000) 0 nil])
([nil nil ((apply 3 1028 1052 undo--wrap-and-run-primitive-undo 1028 1052 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1028) 1054))) nil (26708 62291 403398 479000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1066 . 1067) (nil fontified nil 1052 . 1067) (1052 . 1067) 1051 (t 26708 61984 806920 839000)) nil (26708 62292 722947 74000) 0 nil] [nil nil ((#(" %% almost done" 0 14 (face font-lock-comment-face fontified t) 14 15 (face font-lock-comment-face rear-nonsticky t fontified t)) . 1012) (undo-tree-id8 . -14) (undo-tree-id9 . -15) (undo-tree-id10 . -15) (t 26708 61984 806920 839000)) ((1012 . 1027)) (26708 62291 403113 455000) 0 nil])
([nil nil ((apply -3 1028 1071 undo--wrap-and-run-primitive-undo 1028 1071 ((1028 . 1031) 1066))) nil (26708 62292 722943 142000) 0 nil])
nil
([nil nil ((apply 3 1071 1095 undo--wrap-and-run-primitive-undo 1071 1095 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1071) 1097 (t 26708 62292 724636 823000)))) nil (26708 62293 565348 263000) 0 nil])
([nil nil ((apply -3 1071 1099 undo--wrap-and-run-primitive-undo 1071 1099 ((1071 . 1074) 1094 (t 26708 62293 567614 744000)))) nil (26709 492 842600 963000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1112 . 1113) (nil fontified nil 1098 . 1113) (1098 . 1113) 1097) nil (26709 500 681476 717000) 0 nil] [nil nil ((#(" %% almost done" 0 1 (face font-lock-comment-face fontified t) 1 4 (face font-lock-comment-face fontified t) 4 14 (face font-lock-comment-face fontified t) 14 15 (face font-lock-comment-face rear-nonsticky t fontified t)) . 1055) (undo-tree-id11 . -14) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -15) (undo-tree-id23 . -15)) ((1055 . 1070)) (26709 492 842402 642000) 0 nil])
([nil nil ((1134 . 1143) (1126 . 1134) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -1126) (undo-tree-id24 . -1) (1123 . 1127) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -1123) (undo-tree-id25 . -1) (1113 . 1124) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1113) (undo-tree-id26 . -1) 1114 (1113 . 1114)) nil (26709 500 681471 406000) 0 nil])
nil
([nil nil ((apply 3 1145 1168 undo--wrap-and-run-primitive-undo 1145 1168 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1145) 1170 (t 26709 500 688860 805000)))) nil (26709 502 252584 344000) 0 nil])
([nil nil ((1162 . 1164) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -1162) (undo-tree-id27 . -1) (1157 . 1163) (#("f" 0 1 (face font-lock-comment-face fontified t)) . -1157) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 1158 (1155 . 1158) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1155) (undo-tree-id31 . -1) 1156 (1152 . 1156) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -1152) (undo-tree-id32 . -1) (1145 . 1153) (#("m" 0 1 (face font-lock-comment-face fontified t)) . -1145) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1146) (undo-tree-id36 . -1) 1147 (1143 . 1147) (t 26709 502 255820 202000)) nil (26709 514 519311 942000) 0 nil])
([nil nil ((apply -3 1166 1193 undo--wrap-and-run-primitive-undo 1166 1193 ((1166 . 1169) 1188 (t 26709 514 521502 169000)))) nil (26709 2390 668961 775000) 0 nil])
([nil nil ((apply 3 1193 1216 undo--wrap-and-run-primitive-undo 1193 1216 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1193) 1215))) nil (26709 2390 668961 240000) 0 nil])
([nil nil ((1200 . 1207) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -1200) (undo-tree-id37 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1201) (undo-tree-id38 . -1) 1202 (1192 . 1202)) nil (26709 2390 668957 473000) 0 nil])
([nil nil ((apply -3 1208 1235 undo--wrap-and-run-primitive-undo 1208 1235 ((1208 . 1211) 1230 (t 26709 2390 677284 391000)))) nil (26709 4841 785229 172000) 0 nil])
([nil nil ((1234 . 1249)) nil (26709 4841 785228 634000) 0 nil])
([nil nil ((apply 3 1250 1273 undo--wrap-and-run-primitive-undo 1250 1273 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1250) 1275))) nil (26709 4841 785224 602000) 0 nil])
([nil nil ((apply -3 1250 1277 undo--wrap-and-run-primitive-undo 1250 1277 ((1250 . 1253) (t 26709 10060 205831 400000)))) nil (26709 10689 390156 574000) 0 nil])
([nil nil ((apply 3 1277 1300 undo--wrap-and-run-primitive-undo 1277 1300 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1277)))) nil (26709 10689 390257 52000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1290 . 1291) (nil fontified nil 1276 . 1291) (1276 . 1291) 1275) nil (26709 10690 51149 974000) 0 nil] [nil nil ((#(" %% almost done" 0 15 (face font-lock-comment-face fontified t)) . 1234) (undo-tree-id0 . -14) (undo-tree-id1 . -14) (undo-tree-id2 . -14) (undo-tree-id3 . -14) (undo-tree-id4 . -14) (undo-tree-id5 . -14) (undo-tree-id6 . -14) (undo-tree-id7 . -14) (undo-tree-id8 . -14) (undo-tree-id9 . -14) (undo-tree-id10 . -13) (undo-tree-id11 . -13) (undo-tree-id12 . -13) (undo-tree-id13 . -13) (undo-tree-id14 . -13) (undo-tree-id15 . -13) (undo-tree-id16 . -13) (undo-tree-id17 . -13) (undo-tree-id18 . -13) (undo-tree-id19 . -13) (undo-tree-id20 . -12) (undo-tree-id21 . -12) (undo-tree-id22 . -12) (undo-tree-id23 . -12) (undo-tree-id24 . -12) (undo-tree-id25 . -11) (undo-tree-id26 . -11) (undo-tree-id27 . -11) (undo-tree-id28 . -11) (undo-tree-id29 . -11) (undo-tree-id30 . -10) (undo-tree-id31 . -10) (undo-tree-id32 . -10) (undo-tree-id33 . -10) (undo-tree-id34 . -10) (undo-tree-id35 . -9) (undo-tree-id36 . -9) (undo-tree-id37 . -9) (undo-tree-id38 . -9) (undo-tree-id39 . -9) (undo-tree-id40 . -8) (undo-tree-id41 . -8) (undo-tree-id42 . -8) (undo-tree-id43 . -8) (undo-tree-id44 . -8) (undo-tree-id45 . -7) (undo-tree-id46 . -7) (undo-tree-id47 . -7) (undo-tree-id48 . -7) (undo-tree-id49 . -7) (undo-tree-id50 . -6) (undo-tree-id51 . -6) (undo-tree-id52 . -6) (undo-tree-id53 . -6) (undo-tree-id54 . -6) (undo-tree-id55 . -5) (undo-tree-id56 . -5) (undo-tree-id57 . -5) (undo-tree-id58 . -5) (undo-tree-id59 . -5) (undo-tree-id60 . -4) (undo-tree-id61 . -4) (undo-tree-id62 . -4) (undo-tree-id63 . -4) (undo-tree-id64 . -4) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (undo-tree-id74 . -2) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -15) (undo-tree-id81 . -15) (undo-tree-id82 . -14)) ((1234 . 1249)) (26709 10689 390152 46000) 0 nil])
([nil nil ((apply -3 1292 1319 undo--wrap-and-run-primitive-undo 1292 1319 ((1292 . 1295) (t 26709 10690 52741 247000)))) nil (26710 30688 59982 814000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1332 . 1333) (nil fontified nil 1318 . 1333) (1318 . 1333) 1317) nil (26710 30689 171716 242000) 0 nil] [nil nil ((#(" %% almost done" 0 15 (face font-lock-comment-face fontified t)) . 1276) (undo-tree-id0 . -15) (undo-tree-id1 . -15) (undo-tree-id2 . -14)) ((1276 . 1291)) (26710 30688 59911 671000) 0 nil])
([nil nil ((apply 3 1334 1357 undo--wrap-and-run-primitive-undo 1334 1357 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1334) 1359))) nil (26710 43762 871798 622000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1406 . 1407) (nil fontified nil 1357 . 1407) (1357 . 1407) 1356 (t 26710 30689 173449 238000)) nil (26710 43767 501685 78000) 0 nil] [nil nil ((#(" %% almost done, graphs, no email for some reason?" 0 50 (face font-lock-comment-face fontified t)) . 735) (undo-tree-id3 . -49) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -50) (undo-tree-id25 . -50) (t 26710 30689 173449 238000)) ((735 . 785)) (26710 43762 871602 805000) 0 nil])
([nil nil ((apply -3 1334 1411 undo--wrap-and-run-primitive-undo 1334 1411 ((1334 . 1337) 1406))) nil (26710 43767 501684 647000) 0 nil])
nil
([nil nil ((#(", no email for some reason?" 0 26 (face font-lock-comment-face fontified t) 26 27 (face font-lock-comment-face rear-nonsticky t fontified t)) . 1383) (undo-tree-id26 . -26)) nil (26710 43767 501684 76000) 0 nil])
([nil nil ((apply 3 1384 1407 undo--wrap-and-run-primitive-undo 1384 1407 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1384) 1409))) nil (26710 45635 616065 817000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1421 . 1422) (nil fontified nil 1407 . 1422) (1407 . 1422) 1406 (t 26710 43767 503025 238000)) nil (26710 45637 464481 624000) 0 nil] [nil nil ((#(" %% almost done" 0 14 (face font-lock-comment-face fontified t) 14 15 (face font-lock-comment-face fontified t rear-nonsticky t)) . 1318) (undo-tree-id27 . -14) (undo-tree-id28 . -15) (undo-tree-id29 . -15) (t 26710 43767 503025 238000)) ((1318 . 1333)) (26710 45635 615865 692000) 0 nil])
([nil nil ((apply -3 1384 1426 undo--wrap-and-run-primitive-undo 1384 1426 ((1384 . 1387) 1421))) nil (26710 45637 464480 221000) 0 nil])
nil
([nil nil ((apply 3 1426 1449 undo--wrap-and-run-primitive-undo 1426 1449 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1426) 1451))) nil (26710 45637 464476 3000) 0 nil])
([nil nil ((1517 . 1523) (1496 . 1517) (1482 . 1496) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -1482) (undo-tree-id30 . -1) (1475 . 1483) (1474 . 1475) (1453 . 1474) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1453) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1454) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("l" 0 1 (face font-lock-comment-face fontified t)) . -1455) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 1456 (1450 . 1456) (#("~" 0 1 (fontified t)) . -1450) (undo-tree-id40 . -1) (#("~" 0 1 (fontified t)) . -1451) (undo-tree-id41 . -1) 1452 (1449 . 1452) (t 26710 45637 464570 367000)) nil (26710 47667 297753 864000) 0 nil])
([nil nil ((apply -3 1426 1527 undo--wrap-and-run-primitive-undo 1426 1527 ((1426 . 1429) 1522 (t 26710 47667 298704 889000)))) nil (26710 47765 809151 33000) 0 nil])
([nil nil ((apply 3 1527 1550 undo--wrap-and-run-primitive-undo 1527 1550 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1527) 1552))) nil (26710 47765 809147 477000) 0 nil])
([nil nil ((apply -3 1527 1554 undo--wrap-and-run-primitive-undo 1527 1554 ((1527 . 1530) (t 26710 47765 810317 674000)))) nil (26711 43559 234549 41000) 0 nil])
([nil nil ((1554 . 1561) (#("$" 0 1 (face font-lock-comment-face fontified t)) . -1554) (undo-tree-id0 . -1) (#("$" 0 1 (face font-lock-comment-face fontified t)) . -1555) (undo-tree-id1 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1556) (undo-tree-id2 . -1) 1557 (1553 . 1557)) nil (26711 43559 234546 85000) 0 nil])
([nil nil ((apply 3 1563 1587 undo--wrap-and-run-primitive-undo 1563 1587 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1563) 1589 (t 26711 43559 241851 748000)))) nil (26711 43565 152544 219000) 0 nil])
([nil nil ((599 . 1104) (t 26711 43565 154819 869000)) nil (26711 44905 953656 703000) 0 nil])
([nil nil ((apply -60 599 1207 undo--wrap-and-run-primitive-undo 599 1207 ((1135 . 1138) (1106 . 1109) (1077 . 1080) (1048 . 1051) (1019 . 1022) (991 . 994) (963 . 966) (935 . 938) (907 . 910) (879 . 882) (851 . 854) (823 . 826) (795 . 798) (767 . 770) (739 . 742) (711 . 714) (683 . 686) (655 . 658) (627 . 630) (599 . 602) 1104 (t 26711 44857 12855 255000)))) nil (26711 44905 953655 671000) 0 nil])
([nil nil ((1163 . 1164) 1161) nil (26711 44905 953654 629000) 0 nil])
([nil nil ((#("%% \\input{src/ict2/009.tex}
%% \\input{src/ict2/010.tex}
%% \\input{src/ict2/011.tex}
%% \\input{src/ict2/012.tex}
%% \\input{src/ict2/013.tex}
%% \\input{src/ict2/014.tex}
%% \\input{src/ict2/015.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 26 (face font-lock-comment-face fontified t) 26 28 (face font-lock-comment-face fontified t) 28 31 (face font-lock-comment-delimiter-face fontified t) 31 37 (face font-lock-comment-face fontified t) 37 38 (face font-lock-comment-face fontified t) 38 54 (face font-lock-comment-face fontified t) 54 56 (face font-lock-comment-face fontified t) 56 59 (face font-lock-comment-delimiter-face fontified t) 59 65 (face font-lock-comment-face fontified t) 65 66 (face font-lock-comment-face fontified t) 66 82 (face font-lock-comment-face fontified t) 82 84 (face font-lock-comment-face fontified t) 84 87 (face font-lock-comment-delimiter-face fontified t) 87 93 (face font-lock-comment-face fontified t) 93 94 (face font-lock-comment-face fontified t) 94 110 (face font-lock-comment-face fontified t) 110 112 (face font-lock-comment-face fontified t) 112 115 (face font-lock-comment-delimiter-face fontified t) 115 121 (face font-lock-comment-face fontified t) 121 122 (face font-lock-comment-face fontified t) 122 138 (face font-lock-comment-face fontified t) 138 140 (face font-lock-comment-face fontified t) 140 143 (face font-lock-comment-delimiter-face fontified t) 143 149 (face font-lock-comment-face fontified t) 149 150 (face font-lock-comment-face fontified t) 150 166 (face font-lock-comment-face fontified t) 166 168 (face font-lock-comment-face fontified t) 168 171 (face font-lock-comment-delimiter-face fontified t) 171 177 (face font-lock-comment-face fontified t) 177 178 (face font-lock-comment-face fontified t) 178 194 (face font-lock-comment-face fontified t) 194 196 (face font-lock-comment-face fontified t)) . 823) (undo-tree-id18 . -168) (undo-tree-id19 . -168) (undo-tree-id20 . -168) (undo-tree-id21 . -195) 991) nil (26711 44905 953652 655000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1931 . 1932) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -2127) (1931 . 2128) 1897) nil (26711 44905 953586 291000) 0 nil])
([nil nil ((#("%% \\input{src/ict2/001.tex}
%% \\input{src/ict2/002.tex}
%% \\input{src/ict2/003.tex}
%% \\input{src/ict2/004.tex}
%% \\input{src/ict2/005.tex}
%% \\input{src/ict2/006.tex}
%% \\input{src/ict2/007.tex}
%% \\input{src/ict2/008.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 26 (face font-lock-comment-face fontified t) 26 28 (face font-lock-comment-face fontified t) 28 31 (face font-lock-comment-delimiter-face fontified t) 31 37 (face font-lock-comment-face fontified t) 37 38 (face font-lock-comment-face fontified t) 38 54 (face font-lock-comment-face fontified t) 54 56 (face font-lock-comment-face fontified t) 56 59 (face font-lock-comment-delimiter-face fontified t) 59 65 (face font-lock-comment-face fontified t) 65 66 (face font-lock-comment-face fontified t) 66 82 (face font-lock-comment-face fontified t) 82 84 (face font-lock-comment-face fontified t) 84 87 (face font-lock-comment-delimiter-face fontified t) 87 93 (face font-lock-comment-face fontified t) 93 94 (face font-lock-comment-face fontified t) 94 110 (face font-lock-comment-face fontified t) 110 112 (face font-lock-comment-face fontified t) 112 115 (face font-lock-comment-delimiter-face fontified t) 115 121 (face font-lock-comment-face fontified t) 121 122 (face font-lock-comment-face fontified t) 122 138 (face font-lock-comment-face fontified t) 138 140 (face font-lock-comment-face fontified t) 140 143 (face font-lock-comment-delimiter-face fontified t) 143 149 (face font-lock-comment-face fontified t) 149 150 (face font-lock-comment-face fontified t) 150 166 (face font-lock-comment-face fontified t) 166 168 (face font-lock-comment-face fontified t) 168 171 (face font-lock-comment-delimiter-face fontified t) 171 177 (face font-lock-comment-face fontified t) 177 178 (face font-lock-comment-face fontified t) 178 194 (face font-lock-comment-face fontified t) 194 196 (face font-lock-comment-face fontified t) 196 199 (face font-lock-comment-delimiter-face fontified t) 199 205 (face font-lock-comment-face fontified t) 205 206 (face font-lock-comment-face fontified t) 206 222 (face font-lock-comment-face fontified t) 222 224 (face font-lock-comment-face fontified t)) . 599) (undo-tree-id15 . -196) (undo-tree-id16 . -196) (undo-tree-id17 . -223)) nil (26711 44905 953585 329000) 0 nil])
([nil nil ((#("%% \\input{src/gorn2/001.tex}
%% \\input{src/gorn2/002.tex}
%% \\input{src/gorn2/003.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t) 29 32 (face font-lock-comment-delimiter-face fontified t) 32 38 (face font-lock-comment-face fontified t) 38 39 (face font-lock-comment-face fontified t) 39 56 (face font-lock-comment-face fontified t) 56 58 (face font-lock-comment-face fontified t) 58 61 (face font-lock-comment-delimiter-face fontified t) 61 67 (face font-lock-comment-face fontified t) 67 68 (face font-lock-comment-face fontified t) 68 85 (face font-lock-comment-face fontified t) 85 87 (face font-lock-comment-face fontified t)) . 599) (undo-tree-id11 . -58) (undo-tree-id12 . -58) (undo-tree-id13 . -86) (undo-tree-id14 . -58) 657) nil (26711 44905 953582 935000) 0 nil])
([nil nil ((#("%% \\input{src/gorn2/004.tex}
%% \\input{src/gorn2/005.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t) 29 32 (face font-lock-comment-delimiter-face fontified t) 32 38 (face font-lock-comment-face fontified t) 38 39 (face font-lock-comment-face fontified t) 39 56 (face font-lock-comment-face fontified t) 56 57 (face font-lock-comment-face fontified t) 57 58 (face font-lock-comment-face fontified t)) . 599) (undo-tree-id7 . -29) (undo-tree-id8 . -29) (undo-tree-id9 . -57) (undo-tree-id10 . -29) 628) nil (26711 44905 953580 109000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1840 . 1841) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -1898) (1840 . 1899) 1813) nil (26711 44905 953577 224000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 598) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1)) nil (26711 44905 953573 267000) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . 1858) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (t 26711 44905 955591 403000)) nil (26711 44972 356590 606000) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . 1886) (undo-tree-id22 . -1) (undo-tree-id23 . -1)) nil (26711 44972 356586 639000) 0 nil])
([nil nil ((1836 . 1839) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -1836) (undo-tree-id29 . -1) (1835 . 1837) (#("w" 0 1 (face font-lock-comment-face fontified t)) . -1835) (undo-tree-id30 . -1) (#("h" 0 1 (face font-lock-comment-face fontified t)) . -1836) (undo-tree-id31 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -1837) (undo-tree-id32 . -1) 1838 (1837 . 1838) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -1837) (undo-tree-id33 . -1) (1827 . 1838) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -1827) (undo-tree-id34 . -1) (1822 . 1828) (1818 . 1822) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -1818) (undo-tree-id35 . -1) (1801 . 1819) (#("f" 0 1 (face font-lock-comment-face fontified t)) . -1801) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -1802) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -1803) (undo-tree-id42 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -1804) (undo-tree-id43 . -1) 1805 (1803 . 1805) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -1803) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -1804) (undo-tree-id47 . -1) 1805 (1784 . 1805) (#("$" 0 1 (fontified t)) . -1784) (undo-tree-id48 . -1) (#("$" 0 1 (fontified t)) . -1785) (undo-tree-id49 . -1) 1786 (1783 . 1786) (t 26711 44972 357233 414000)) nil (26711 45091 838544 923000) 0 nil])
([nil nil ((1817 . 1828) (#("y" 0 1 (face font-lock-comment-face fontified t)) . -1817) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) 1818 (1816 . 1818)) nil (26711 45091 838535 325000) 0 nil])
([nil nil ((apply -3 1759 1855 undo--wrap-and-run-primitive-undo 1759 1855 ((1759 . 1762) 1827 (t 26711 45091 839589 265000)))) nil (26711 46506 267863 26000) 0 nil])
([nil nil ((apply 3 1855 1879 undo--wrap-and-run-primitive-undo 1855 1879 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1855) 1881))) nil (26711 46506 267859 540000) 0 nil])
([nil nil ((1890 . 1893) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -1890) (undo-tree-id50 . -1) (1880 . 1891) (#("$" 0 1 (fontified t)) . -1880) (undo-tree-id51 . -1) (#("$" 0 1 (fontified t)) . -1881) (undo-tree-id52 . -1) 1882 (1879 . 1882) (t 26711 46506 269963 794000)) nil (26711 47784 920485 903000) 0 nil])
([nil nil ((#("$" 0 1 (face font-lock-comment-face fontified t)) . -1922) (undo-tree-id55 . -1) (#("$" 0 1 (face font-lock-comment-face fontified t)) . -1923) (undo-tree-id56 . -1) 1924 (1921 . 1924) (t 26711 47784 921070 432000)) nil (26711 53162 696685 84000) 0 nil])
([nil nil ((1893 . 1906) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1893) (undo-tree-id54 . -1) 1894 (1893 . 1894)) nil (26711 53162 696683 240000) 0 nil])
([nil nil ((1854 . 1867) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -1854) (undo-tree-id53 . -1) 1855 (1854 . 1855)) nil (26711 53162 696681 457000) 0 nil])
([nil nil ((apply -3 1868 1923 undo--wrap-and-run-primitive-undo 1868 1923 ((1868 . 1871) 1918))) nil (26711 53162 696668 503000) 0 nil])
([nil nil ((apply 3 1923 1948 undo--wrap-and-run-primitive-undo 1923 1948 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1923) 1950 (t 26711 53162 697078 18000)))) nil (26711 53163 284879 270000) 0 nil])
([nil nil ((1968 . 1981) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1968) (undo-tree-id57 . -1) 1969 (1967 . 1969) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -1967) (undo-tree-id58 . -1) 1968 (1947 . 1968) (#(" " 0 1 (fontified t)) . -1947) (undo-tree-id59 . -1) (#("$" 0 1 (fontified t)) . -1948) (undo-tree-id60 . -1) (#("$" 0 1 (fontified t)) . -1949) (undo-tree-id61 . -1) 1950 (1948 . 1950) (t 26711 53163 286074 843000)) nil (26711 54416 289252 789000) 0 nil])
([nil nil ((apply -3 1923 1985 undo--wrap-and-run-primitive-undo 1923 1985 ((1923 . 1926) 1980))) nil (26711 54416 289241 688000) 0 nil])
([nil nil ((apply 3 1985 2009 undo--wrap-and-run-primitive-undo 1985 2009 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1985) 2011))) nil (26711 54416 289237 560000) 0 nil])
([nil nil ((apply -3 1985 2013 undo--wrap-and-run-primitive-undo 1985 2013 ((1985 . 1988) 2008 (t 26711 54416 290319 554000)))) nil (26711 58707 809051 489000) 0 nil])
([nil nil ((2013 . 2027) (#("$" 0 1 (face font-lock-comment-face fontified t)) . -2013) (undo-tree-id62 . -1) (#("$" 0 1 (face font-lock-comment-face fontified t)) . -2014) (undo-tree-id63 . -1) 2015 (2012 . 2015)) nil (26711 58707 809050 838000) 0 nil])
([nil nil ((apply 3 2028 2052 undo--wrap-and-run-primitive-undo 2028 2052 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2028) 2054))) nil (26712 14916 388961 79000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2066 . 2067) (nil fontified nil 2052 . 2067) (2052 . 2067) 2051 (t 26711 58707 810183 462000)) nil (26712 14922 747204 156000) 0 nil] [nil nil ((#(" %% almost done" 0 15 (face font-lock-comment-face fontified t)) . 2012) (undo-tree-id64 . -14) (undo-tree-id65 . -15) (undo-tree-id66 . -15) (t 26711 58707 810183 462000)) ((2012 . 2027)) (26712 14916 388737 390000) 0 nil])
([nil nil ((2082 . 2083) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -2082) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) 2083 (2067 . 2083)) nil (26712 14922 747203 124000) 0 nil])
nil
([nil nil ((apply -3 2028 2087 undo--wrap-and-run-primitive-undo 2028 2087 ((2028 . 2031) 2082))) nil (26712 14922 747186 644000) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . 1741) (undo-tree-id84 . -1) (#("2" 0 1 (face font-lock-comment-face fontified t)) . 1714) (#("2" 0 1 (face font-lock-comment-face fontified t)) . 1687) (#("2" 0 1 (face font-lock-comment-face fontified t)) . 1660) (#("2" 0 1 (face font-lock-comment-face fontified t)) . 1633) (#("2" 0 1 (face font-lock-comment-face fontified t)) . 1606) (#("2" 0 1 (face font-lock-comment-face fontified t)) . 1579) (t 26712 14922 748545 882000)) nil (26712 14986 529885 332000) 0 nil])
([nil nil ((apply 3 1562 1585 undo--wrap-and-run-primitive-undo 1562 1585 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1562) 1579 (t 26712 14986 531214 874000)))) nil (26712 16237 221896 291000) 0 nil])
([nil nil ((apply -3 1562 1589 undo--wrap-and-run-primitive-undo 1562 1589 ((1562 . 1565) 1579 (t 26712 14988 889202 621000)))) nil (26712 16248 288541 854000) 0 nil] [nil nil ((nil rear-nonsticky nil 1585 . 1586) (#("
" 0 1 (fontified nil)) . -1586) (1585 . 1587) 1579 (t 26712 14988 889202 621000)) ((#("

" 0 1 (rear-nonsticky nil fontified nil) 1 2 (fontified nil)) . 1585) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (1586 . 1587) (nil rear-nonsticky t 1585 . 1586)) (26712 16237 221615 215000) 0 nil])
([nil nil ((1589 . 1603) (#("$" 0 1 (face font-lock-comment-face fontified t)) . -1589) (undo-tree-id92 . -1) (#("$" 0 1 (face font-lock-comment-face fontified t)) . -1590) (undo-tree-id93 . -1) 1591 (1588 . 1591)) nil (26712 16248 288541 103000) 0 nil])
nil
([nil nil ((apply 3 1604 1627 undo--wrap-and-run-primitive-undo 1604 1627 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1604) 1629))) nil (26712 16248 288529 0) 0 nil])
([nil nil ((apply -3 1604 1631 undo--wrap-and-run-primitive-undo 1604 1631 ((1604 . 1607) (t 26712 55164 134309 817000)))) nil (26712 57290 271054 620000) 0 nil])
([nil nil ((apply 3 1631 1654 undo--wrap-and-run-primitive-undo 1631 1654 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1631)))) nil (26712 57290 271050 923000) 0 nil])
([nil nil ((apply -3 1631 1658 undo--wrap-and-run-primitive-undo 1631 1658 ((1631 . 1634) (t 26712 57290 272632 898000)))) nil (26712 57910 276922 796000) 0 nil])
([nil nil ((apply 3 1658 1681 undo--wrap-and-run-primitive-undo 1658 1681 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1658)))) nil (26712 57910 276912 386000) 0 nil])
([nil nil ((apply -3 1658 1685 undo--wrap-and-run-primitive-undo 1658 1685 ((1658 . 1661) (t 26712 57910 283590 246000)))) nil (26712 57950 288890 364000) 0 nil])
([nil nil ((apply 3 1685 1708 undo--wrap-and-run-primitive-undo 1685 1708 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1685)))) nil (26712 57950 288878 402000) 0 nil])
([nil nil ((apply -3 1685 1712 undo--wrap-and-run-primitive-undo 1685 1712 ((1685 . 1688) (t 26712 57950 295765 448000)))) nil (26712 58211 937022 606000) 0 nil])
([nil nil ((apply 3 1712 1735 undo--wrap-and-run-primitive-undo 1712 1735 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1712)))) nil (26712 58211 937018 258000) 0 nil])
([nil nil ((apply -3 1712 1739 undo--wrap-and-run-primitive-undo 1712 1739 ((1712 . 1715) (t 26712 58211 938886 398000)))) nil (26712 59436 40339 432000) 0 nil])
([nil nil ((apply 3 1604 1627 undo--wrap-and-run-primitive-undo 1604 1627 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1604)))) nil (26712 59436 40335 364000) 0 nil])
([nil nil ((1644 . 1658) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -1644) (undo-tree-id0 . -1) (1644 . 1645) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -1644) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -1645) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) 1646 (1628 . 1646) (#("$" 0 1 (fontified t)) . -1628) (undo-tree-id7 . -1) (#("$" 0 1 (fontified t)) . -1629) (undo-tree-id8 . -1) 1630 (1627 . 1630) (t 26712 59436 41373 234000)) nil (26712 60821 150535 892000) 0 nil])
([nil nil ((apply -3 1604 1662 undo--wrap-and-run-primitive-undo 1604 1662 ((1604 . 1607) 1657))) nil (26712 60821 150508 180000) 0 nil])
([nil nil ((apply 3 1662 1685 undo--wrap-and-run-primitive-undo 1662 1685 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1662) 1687))) nil (26712 63373 318770 912000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1715 . 1716) (nil fontified nil 1685 . 1716) (1685 . 1716) 1684 (t 26712 60821 152507 291000)) nil (26712 63376 150557 898000) 0 nil] [nil nil ((#(" %% almost done, images, graphs" 0 1 (face font-lock-comment-face fontified t) 1 4 (face font-lock-comment-face fontified t) 4 31 (face font-lock-comment-face fontified t)) . 1630) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -31) (undo-tree-id28 . -31) (undo-tree-id29 . -30) (t 26712 60821 152507 291000)) ((1630 . 1661)) (26712 63373 318530 721000) 0 nil])
([nil nil ((apply -3 1662 1720 undo--wrap-and-run-primitive-undo 1662 1720 ((1662 . 1665) 1715))) nil (26712 63376 150557 367000) 0 nil])
nil
([nil nil ((apply 3 1720 1743 undo--wrap-and-run-primitive-undo 1720 1743 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1720) 1745))) nil (26712 63376 150552 788000) 0 nil])
([nil nil ((apply -3 1720 1747 undo--wrap-and-run-primitive-undo 1720 1747 ((1720 . 1723) 1742 (t 26712 63376 151972 940000)))) nil (26712 64852 946831 251000) 0 nil])
([nil nil ((1747 . 1761) (#("$" 0 1 (face font-lock-comment-face fontified t)) . -1747) (undo-tree-id30 . -1) (#("$" 0 1 (face font-lock-comment-face fontified t)) . -1748) (undo-tree-id31 . -1) 1749 (1746 . 1749)) nil (26712 64852 946830 189000) 0 nil])
([nil nil ((apply 3 1762 1785 undo--wrap-and-run-primitive-undo 1762 1785 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1762) 1787))) nil (26712 64852 946816 623000) 0 nil])
([nil nil ((apply 3 1813 1836 undo--wrap-and-run-primitive-undo 1813 1836 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1813) (t 26712 64852 948484 266000)))) nil (26712 65099 217983 534000) 0 nil])
([nil nil ((apply -3 1762 1789 undo--wrap-and-run-primitive-undo 1762 1789 ((1762 . 1765)))) nil (26712 65099 217978 945000) 0 nil])
([nil nil ((apply -3 1816 1843 undo--wrap-and-run-primitive-undo 1816 1843 ((1816 . 1819) (t 26712 65099 220702 247000)))) nil (26712 65110 157593 77000) 0 nil])
([nil nil ((apply 3 1762 1785 undo--wrap-and-run-primitive-undo 1762 1785 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1762)))) nil (26713 1452 641443 75000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1799 . 1800) (nil fontified nil 1785 . 1800) (1785 . 1800) 1784 (t 26712 65110 159756 292000)) nil (26713 1454 132210 833000) 0 nil] [nil nil ((#(" %% almost done" 0 15 (face font-lock-comment-face fontified t)) . 1746) (undo-tree-id32 . -14) (t 26712 65110 159756 292000)) ((1746 . 1761)) (26713 1452 641200 509000) 0 nil])
([nil nil ((apply -3 1762 1804 undo--wrap-and-run-primitive-undo 1762 1804 ((1762 . 1765) 1799))) nil (26713 1454 132206 254000) 0 nil])
nil
([nil nil ((apply 3 1804 1827 undo--wrap-and-run-primitive-undo 1804 1827 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1804) (t 26713 1454 133547 389000)))) nil (26713 1482 620572 204000) 0 nil])
([nil nil ((apply 12 1166 1322 undo--wrap-and-run-primitive-undo 1166 1322 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1283) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1244) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1205) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1166) 1334 (t 26713 1482 623691 273000)))) nil (26714 14218 570314 450000) 0 nil])
([nil nil ((apply 3 1372 1410 undo--wrap-and-run-primitive-undo 1372 1410 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1372)))) nil (26714 14218 570314 280000) 0 nil])
([nil nil ((apply 3 1512 1543 undo--wrap-and-run-primitive-undo 1512 1543 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1512) 1545))) nil (26714 14218 570314 10000) 0 nil])
([nil nil ((apply 3 1544 1582 undo--wrap-and-run-primitive-undo 1544 1582 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1544) 1574))) nil (26714 14218 570313 849000) 0 nil])
([nil nil ((apply 3 1699 1737 undo--wrap-and-run-primitive-undo 1699 1737 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1699) 1729))) nil (26714 14218 570313 579000) 0 nil])
([nil nil ((apply 3 1738 1776 undo--wrap-and-run-primitive-undo 1738 1776 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1738) 1768))) nil (26714 14218 570312 918000) 0 nil])
([nil nil ((apply -3 1777 1804 undo--wrap-and-run-primitive-undo 1777 1804 ((1777 . 1780) 1799))) nil (26714 14218 570308 890000) 0 nil])
([nil nil ((apply -3 1166 1208 undo--wrap-and-run-primitive-undo 1166 1208 ((1166 . 1169) 1188 (t 26714 14218 571087 725000)))) nil (26714 15486 487374 782000) 0 nil])
([nil nil ((apply -3 1208 1250 undo--wrap-and-run-primitive-undo 1208 1250 ((1208 . 1211) 1230))) nil (26714 15486 487374 411000) 0 nil])
([nil nil ((apply -3 1250 1292 undo--wrap-and-run-primitive-undo 1250 1292 ((1250 . 1253) 1272))) nil (26714 15486 487374 130000) 0 nil])
([nil nil ((apply -3 1292 1334 undo--wrap-and-run-primitive-undo 1292 1334 ((1292 . 1295) 1314))) nil (26714 15486 487373 740000) 0 nil])
([nil nil ((apply -3 1384 1426 undo--wrap-and-run-primitive-undo 1384 1426 ((1384 . 1387) 1406))) nil (26714 15486 487373 479000) 0 nil])
([nil nil ((apply -3 1527 1562 undo--wrap-and-run-primitive-undo 1527 1562 ((1527 . 1530) 1549))) nil (26714 15486 487373 219000) 0 nil])
([nil nil ((apply -3 1562 1604 undo--wrap-and-run-primitive-undo 1562 1604 ((1562 . 1565) 1584))) nil (26714 15486 487372 297000) 0 nil])
([nil nil ((apply -3 1720 1762 undo--wrap-and-run-primitive-undo 1720 1762 ((1720 . 1723) 1742))) nil (26714 15486 487372 16000) 0 nil])
([nil nil ((apply -3 1762 1804 undo--wrap-and-run-primitive-undo 1762 1804 ((1762 . 1765) 1784))) nil (26714 15486 487371 556000) 0 nil])
([nil nil ((apply 3 1804 1827 undo--wrap-and-run-primitive-undo 1804 1827 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1804) 1826))) nil (26714 15628 591154 102000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1841 . 1842) (nil fontified nil 1827 . 1842) (1827 . 1842) 1826 (t 26714 15486 489815 272000)) nil (26714 15630 729075 527000) 0 nil] [nil nil ((#(" %% almost done" 0 1 (face font-lock-comment-face fontified t) 1 4 (face font-lock-comment-face fontified t) 4 15 (face font-lock-comment-face fontified t)) . 1788) (undo-tree-id0 . -15) (undo-tree-id1 . -15) (undo-tree-id2 . -14) (t 26714 15486 489815 272000)) ((1788 . 1803)) (26714 15628 590936 492000) 0 nil])
([nil nil ((apply -3 1804 1846 undo--wrap-and-run-primitive-undo 1804 1846 ((1804 . 1807) 1841))) nil (26714 15630 729074 865000) 0 nil])
nil
([nil nil ((apply 3 1846 1869 undo--wrap-and-run-primitive-undo 1846 1869 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1846) 1871))) nil (26714 15630 729070 357000) 0 nil])
([nil nil ((apply -3 1846 1873 undo--wrap-and-run-primitive-undo 1846 1873 ((1846 . 1849) 1868 (t 26714 15630 730934 48000)))) nil (26714 16079 325902 795000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1886 . 1887) (nil fontified nil 1872 . 1887) (1872 . 1887) 1871) nil (26714 16080 262108 349000) 0 nil] [nil nil ((#(" %% almost done" 0 1 (face font-lock-comment-face fontified t) 1 4 (face font-lock-comment-face fontified t) 4 14 (face font-lock-comment-face fontified t) 14 15 (face font-lock-comment-face rear-nonsticky t fontified t)) . 1830) (undo-tree-id3 . -14) (undo-tree-id4 . -15) (undo-tree-id5 . -15)) ((1830 . 1845)) (26714 16079 325807 466000) 0 nil])
([nil nil ((apply 3 642 666 undo--wrap-and-run-primitive-undo 642 666 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -642) (t 26714 16080 263581 235000)))) nil (26714 17462 344757 810000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 688 . 689) (nil fontified nil 666 . 689) (666 . 689) 665 (t 26714 17233 896211 771000)) nil (26714 17465 775853 524000) 0 nil] [nil nil ((#(" %% almost done, graphs" 0 23 (face font-lock-comment-face fontified t)) . 1357) (undo-tree-id0 . -23) (undo-tree-id1 . -23) (undo-tree-id2 . -22) (t 26714 17233 896211 771000)) ((1357 . 1380)) (26714 17462 344517 367000) 0 nil])
([nil nil ((apply -3 642 693 undo--wrap-and-run-primitive-undo 642 693 ((642 . 645) 688))) nil (26714 17465 775849 406000) 0 nil])
nil
([nil nil ((apply 3 599 638 undo--wrap-and-run-primitive-undo 599 638 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -599) 640 (t 26714 17465 777780 512000)))) nil (26714 17489 852189 898000) 0 nil])
([nil nil ((apply 3 806 845 undo--wrap-and-run-primitive-undo 806 845 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -806) 844))) nil (26714 17489 852189 737000) 0 nil])
([nil nil ((apply 3 846 885 undo--wrap-and-run-primitive-undo 846 885 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -846) 884))) nil (26714 17489 852189 527000) 0 nil])
([nil nil ((apply 3 956 995 undo--wrap-and-run-primitive-undo 956 995 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -956) 994))) nil (26714 17489 852189 307000) 0 nil])
([nil nil ((apply 3 996 1035 undo--wrap-and-run-primitive-undo 996 1035 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -996) 1034))) nil (26714 17489 852188 916000) 0 nil])
([nil nil ((apply 3 1036 1075 undo--wrap-and-run-primitive-undo 1036 1075 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1036) 1074))) nil (26714 17489 852184 828000) 0 nil])
([nil nil ((apply 3 886 952 undo--wrap-and-run-primitive-undo 886 952 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -886) (t 26714 17489 853929 639000)))) nil (26714 18353 220485 197000) 0 nil])
([nil nil ((#(", no email for some reason?" 0 27 (face font-lock-comment-face fontified t)) . 925) (undo-tree-id3 . -26) (t 26714 18353 222394 388000)) nil (26714 18358 985030 18000) 0 nil])
([nil nil ((#(", no email for some reason?" 0 27 (face font-lock-comment-face fontified t)) . 778) (undo-tree-id4 . -26) (undo-tree-id5 . -27) (undo-tree-id6 . -27) (t 26714 18358 986420 938000)) nil (26714 18366 467073 36000) 0 nil])
([nil nil ((apply -3 979 1022 undo--wrap-and-run-primitive-undo 979 1022 ((979 . 982) 1017 (t 26714 18366 468455 368000)))) nil (26714 18377 101345 38000) 0 nil])
([nil nil ((apply -3 939 982 undo--wrap-and-run-primitive-undo 939 982 ((939 . 942) 977))) nil (26714 18377 101344 718000) 0 nil])
([nil nil ((apply -3 899 942 undo--wrap-and-run-primitive-undo 899 942 ((899 . 902) 937))) nil (26714 18377 101344 407000) 0 nil])
([nil nil ((apply -3 859 902 undo--wrap-and-run-primitive-undo 859 902 ((859 . 862) 897))) nil (26714 18377 101344 247000) 0 nil])
([nil nil ((apply -3 819 862 undo--wrap-and-run-primitive-undo 819 862 ((819 . 822) 857))) nil (26714 18377 101344 46000) 0 nil])
([nil nil ((apply -3 779 822 undo--wrap-and-run-primitive-undo 779 822 ((779 . 782) 817))) nil (26714 18377 101343 746000) 0 nil])
([nil nil ((apply -3 599 642 undo--wrap-and-run-primitive-undo 599 642 ((599 . 602) 637))) nil (26714 18377 101343 435000) 0 nil])
([nil nil ((apply 3 1040 1130 undo--wrap-and-run-primitive-undo 1040 1130 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1040) 1078))) nil (26714 18377 101339 17000) 0 nil])
([nil nil ((apply 3 997 1036 undo--wrap-and-run-primitive-undo 997 1036 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -997) 1037 (t 26714 18377 102504 239000)))) nil (26714 18418 450177 153000) 0 nil])
([nil nil ((apply 3 954 993 undo--wrap-and-run-primitive-undo 954 993 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -954) 992))) nil (26714 18418 450176 532000) 0 nil])
([nil nil ((apply 3 911 950 undo--wrap-and-run-primitive-undo 911 950 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -911) 949))) nil (26714 18418 450176 121000) 0 nil])
([nil nil ((apply 3 868 907 undo--wrap-and-run-primitive-undo 868 907 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -868) 906))) nil (26714 18418 450175 550000) 0 nil])
([nil nil ((apply -3 1028 1122 undo--wrap-and-run-primitive-undo 1028 1122 ((1028 . 1031) 1066))) nil (26714 18418 450175 59000) 0 nil])
([nil nil ((apply 3 825 864 undo--wrap-and-run-primitive-undo 825 864 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -825) 863))) nil (26714 18418 450174 478000) 0 nil])
([nil nil ((apply 3 782 821 undo--wrap-and-run-primitive-undo 782 821 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -782) 820))) nil (26714 18418 450173 486000) 0 nil])
([nil nil ((apply 3 599 638 undo--wrap-and-run-primitive-undo 599 638 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -599) 637))) nil (26714 18418 450168 807000) 0 nil])
([nil nil ((apply -3 979 1022 undo--wrap-and-run-primitive-undo 979 1022 ((979 . 982) (t 26714 39241 210174 98000)))) nil (26714 39981 539369 172000) 0 nil])
([nil nil ((apply -3 939 982 undo--wrap-and-run-primitive-undo 939 982 ((939 . 942)))) nil (26714 39981 539368 931000) 0 nil])
([nil nil ((apply -3 899 942 undo--wrap-and-run-primitive-undo 899 942 ((899 . 902)))) nil (26714 39981 539368 681000) 0 nil])
([nil nil ((apply -3 859 902 undo--wrap-and-run-primitive-undo 859 902 ((859 . 862)))) nil (26714 39981 539368 451000) 0 nil])
([nil nil ((apply -3 819 862 undo--wrap-and-run-primitive-undo 819 862 ((819 . 822)))) nil (26714 39981 539367 950000) 0 nil])
([nil nil ((apply -3 779 822 undo--wrap-and-run-primitive-undo 779 822 ((779 . 782)))) nil (26714 39981 539366 607000) 0 nil])
([nil nil ((apply -3 599 642 undo--wrap-and-run-primitive-undo 599 642 ((599 . 602)))) nil (26714 39981 539356 318000) 0 nil])
([nil nil ((599 . 781) (t 26714 39981 541114 900000)) nil (26714 40200 158743 706000) 0 nil])
([nil nil ((apply -21 599 845 undo--wrap-and-run-primitive-undo 599 845 ((773 . 776) (744 . 747) (715 . 718) (686 . 689) (657 . 660) (628 . 631) (599 . 602) (t 26714 40136 282414 794000)))) nil (26714 40200 158743 376000) 0 nil])
([nil nil ((801 . 802) 773) nil (26714 40200 158742 995000) 0 nil])
([nil nil ((#("%% \\input{src/chem2/003.tex}
%% \\input{src/chem2/004.tex}
%% \\input{src/chem2/005.tex}
%% \\input{src/chem2/006.tex}
%% \\input{src/chem2/007.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 27 (face font-lock-comment-face fontified t) 27 29 (face font-lock-comment-face fontified t) 29 32 (face font-lock-comment-delimiter-face fontified t) 32 38 (face font-lock-comment-face fontified t) 38 39 (face font-lock-comment-face fontified t) 39 48 (face font-lock-comment-face fontified t) 48 56 (face font-lock-comment-face fontified t) 56 58 (face font-lock-comment-face fontified t) 58 61 (face font-lock-comment-delimiter-face fontified t) 61 67 (face font-lock-comment-face fontified t) 67 68 (face font-lock-comment-face fontified t) 68 85 (face font-lock-comment-face fontified t) 85 87 (face font-lock-comment-face fontified t) 87 90 (face font-lock-comment-delimiter-face fontified t) 90 96 (face font-lock-comment-face fontified t) 96 97 (face font-lock-comment-face fontified t) 97 114 (face font-lock-comment-face fontified t) 114 116 (face font-lock-comment-face fontified t) 116 119 (face font-lock-comment-delimiter-face fontified t) 119 125 (face font-lock-comment-face fontified t) 125 126 (face font-lock-comment-face fontified t) 126 143 (face font-lock-comment-face fontified t) 143 144 (face font-lock-comment-face fontified t) 144 145 (face font-lock-comment-face fontified t)) . 657) (undo-tree-id0 . -116) (undo-tree-id1 . -116) (undo-tree-id2 . -144)) nil (26714 40201 52394 607000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2531 . 2532) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -2676) (2531 . 2677) 2457) nil (26714 40204 920515 537000) 0 nil] [nil nil ((nil rear-nonsticky nil 2532 . 2533) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -2677) (2532 . 2678)) ((#("
%% \\input{src/chem2/003.tex}
%% \\input{src/chem2/004.tex}
%% \\input{src/chem2/005.tex}
%% \\input{src/chem2/006.tex}
%% \\input{src/chem2/007.tex}
" 0 1 (rear-nonsticky nil fontified nil) 1 4 (face font-lock-comment-delimiter-face fontified nil) 4 10 (face font-lock-comment-face fontified nil) 10 11 (face font-lock-comment-face fontified nil) 11 28 (face font-lock-comment-face fontified nil) 28 30 (face font-lock-comment-face fontified nil) 30 33 (face font-lock-comment-delimiter-face fontified t) 33 39 (face font-lock-comment-face fontified t) 39 40 (face font-lock-comment-face fontified t) 40 49 (face font-lock-comment-face fontified t) 49 57 (face font-lock-comment-face fontified t) 57 59 (face font-lock-comment-face fontified t) 59 62 (face font-lock-comment-delimiter-face fontified t) 62 68 (face font-lock-comment-face fontified t) 68 69 (face font-lock-comment-face fontified t) 69 86 (face font-lock-comment-face fontified t) 86 88 (face font-lock-comment-face fontified t) 88 91 (face font-lock-comment-delimiter-face fontified t) 91 97 (face font-lock-comment-face fontified t) 97 98 (face font-lock-comment-face fontified t) 98 115 (face font-lock-comment-face fontified t) 115 117 (face font-lock-comment-face fontified t) 117 120 (face font-lock-comment-delimiter-face fontified nil) 120 126 (face font-lock-comment-face fontified nil) 126 127 (face font-lock-comment-face fontified nil) 127 144 (face font-lock-comment-face fontified nil) 144 145 (face font-lock-comment-face fontified nil) 145 146 (fontified nil face font-lock-comment-face)) . 2532) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -145) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (2677 . 2678) (nil rear-nonsticky t 2532 . 2533)) (26714 40201 52240 539000) 0 nil] [nil nil ((nil rear-nonsticky nil 2532 . 2533) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -2677) (2532 . 2678)) ((#("
%% \\input{src/chem2/003.tex}
%% \\input{src/chem2/004.tex}
%% \\input{src/chem2/005.tex}
%% \\input{src/chem2/006.tex}
%% \\input{src/chem2/007.tex}
" 0 1 (fontified nil rear-nonsticky nil) 1 4 (face font-lock-comment-delimiter-face fontified nil) 4 10 (face font-lock-comment-face fontified nil) 10 11 (face font-lock-comment-face fontified nil) 11 28 (face font-lock-comment-face fontified nil) 28 30 (face font-lock-comment-face fontified nil) 30 33 (face font-lock-comment-delimiter-face fontified t) 33 39 (face font-lock-comment-face fontified t) 39 40 (face font-lock-comment-face fontified t) 40 49 (face font-lock-comment-face fontified t) 49 57 (face font-lock-comment-face fontified t) 57 59 (face font-lock-comment-face fontified t) 59 62 (face font-lock-comment-delimiter-face fontified t) 62 68 (face font-lock-comment-face fontified t) 68 69 (face font-lock-comment-face fontified t) 69 86 (face font-lock-comment-face fontified t) 86 88 (face font-lock-comment-face fontified t) 88 91 (face font-lock-comment-delimiter-face fontified t) 91 97 (face font-lock-comment-face fontified t) 97 98 (face font-lock-comment-face fontified t) 98 115 (face font-lock-comment-face fontified t) 115 117 (face font-lock-comment-face fontified t) 117 120 (face font-lock-comment-delimiter-face fontified nil) 120 126 (face font-lock-comment-face fontified nil) 126 127 (face font-lock-comment-face fontified nil) 127 144 (face font-lock-comment-face fontified nil) 144 145 (face font-lock-comment-face fontified nil) 145 146 (fontified nil face font-lock-comment-face)) . 2532) (undo-tree-id3 . -1) (undo-tree-id4 . -145) (2677 . 2678) (nil rear-nonsticky t 2532 . 2533)) (26714 40200 158721 404000) 0 nil])
([nil nil ((#("%% \\input{src/chem2/001.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 27 (face font-lock-comment-face fontified t) 27 29 (face font-lock-comment-face fontified t)) . 599) (undo-tree-id23 . -28) (undo-tree-id24 . -29) (undo-tree-id25 . -29) (undo-tree-id26 . -29) (undo-tree-id27 . -29) (undo-tree-id28 . -29) (undo-tree-id29 . -29) (undo-tree-id30 . -29) (undo-tree-id31 . -29) (undo-tree-id32 . -29) (undo-tree-id33 . -29) (undo-tree-id34 . -29) (undo-tree-id35 . -29) (undo-tree-id36 . -29) (undo-tree-id37 . -29) (undo-tree-id38 . -29) (undo-tree-id39 . -29)) nil (26714 40204 920514 936000) 0 nil])
nil
nil
([nil nil ((#("%% \\input{src/chem2/002.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t)) . 599) (undo-tree-id14 . -29) (undo-tree-id15 . -29) (undo-tree-id16 . -29) (undo-tree-id17 . -28) (undo-tree-id18 . -29) (undo-tree-id19 . -29) (undo-tree-id20 . -29) (undo-tree-id21 . -28) (undo-tree-id22 . -29)) nil (26714 40204 920487 955000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 599) (undo-tree-id11 . 1) (undo-tree-id12 . 1) (undo-tree-id13 . -1)) nil (26714 40204 920481 173000) 0 nil])
([nil nil ((599 . 1093) (t 26714 40204 922092 721000)) nil (26714 40965 535199 616000) 0 nil])
([nil nil ((#("\\input{src/gorn3/001.tex}
\\input{src/gorn3/002.tex}
\\input{src/gorn3/003.tex}
\\input{src/gorn3/004.tex}
\\input{src/gorn3/005.tex}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 24 (face font-lock-builtin-face fontified t) 24 26 (fontified t) 26 32 (face font-lock-keyword-face fontified t) 32 33 (fontified t) 33 50 (face font-lock-builtin-face fontified t) 50 52 (fontified t) 52 58 (face font-lock-keyword-face fontified t) 58 59 (fontified t) 59 76 (face font-lock-builtin-face fontified t) 76 78 (fontified t) 78 84 (face font-lock-keyword-face fontified t) 84 85 (fontified t) 85 102 (face font-lock-builtin-face fontified t) 102 104 (fontified t) 104 110 (face font-lock-keyword-face fontified t) 110 111 (fontified t) 111 128 (face font-lock-builtin-face fontified t) 128 130 (fontified t)) . 599) (undo-tree-id0 . -104) (undo-tree-id1 . -104) (undo-tree-id2 . -129) (undo-tree-id3 . -104) 703 (t 26714 40911 581864 978000)) nil (26714 40965 535199 125000) 0 nil])
([nil nil ((apply -42 599 1048 undo--wrap-and-run-primitive-undo 599 1048 ((976 . 979) (947 . 950) (918 . 921) (889 . 892) (860 . 863) (831 . 834) (802 . 805) (773 . 776) (744 . 747) (715 . 718) (686 . 689) (657 . 660) (628 . 631) (599 . 602) 963))) nil (26714 40965 535179 699000) 0 nil])
([nil nil ((1004 . 1005) 976) nil (26714 40965 535175 891000) 0 nil])
([nil nil ((599 . 1015) (t 26714 40965 537602 133000)) nil (26714 41287 636920 917000) 0 nil])
([nil nil ((#("\\input{src/pish2/001.tex}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 24 (face font-lock-builtin-face fontified t) 24 26 (fontified t)) . 599) (undo-tree-id88 . -25) (undo-tree-id89 . -26) (undo-tree-id90 . -26) (undo-tree-id91 . -26) (undo-tree-id92 . -26) (t 26714 41038 189246 531000)) nil (26714 41287 636920 517000) 0 nil])
([nil nil ((#("\\input{src/pish2/002.tex}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 24 (face font-lock-builtin-face fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 599) (undo-tree-id85 . -25) (undo-tree-id86 . -25) (undo-tree-id87 . -26)) nil (26714 41287 636918 894000) 0 nil])
([nil nil ((#("\\input{src/pish2/003.tex}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 24 (face font-lock-builtin-face fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 599) (undo-tree-id82 . -25) (undo-tree-id83 . -25) (undo-tree-id84 . -26)) nil (26714 41287 636917 711000) 0 nil])
([nil nil ((#("\\input{src/pish2/004.tex}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 24 (face font-lock-builtin-face fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 599) (undo-tree-id79 . -25) (undo-tree-id80 . -25) (undo-tree-id81 . -26)) nil (26714 41287 636916 339000) 0 nil])
([nil nil ((#("\\input{src/pish2/005.tex}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 24 (face font-lock-builtin-face fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 599) (undo-tree-id76 . -25) (undo-tree-id77 . -25) (undo-tree-id78 . -26)) nil (26714 41287 636915 297000) 0 nil])
([nil nil ((#("\\input{src/pish2/006.tex}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 24 (face font-lock-builtin-face fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 599) (undo-tree-id73 . -25) (undo-tree-id74 . -25) (undo-tree-id75 . -26)) nil (26714 41287 636914 305000) 0 nil])
([nil nil ((#("\\input{src/pish2/007.tex}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 24 (face font-lock-builtin-face fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 599) (undo-tree-id70 . -25) (undo-tree-id71 . -25) (undo-tree-id72 . -26)) nil (26714 41287 636905 599000) 0 nil])
([nil nil ((#("\\input{src/pish2/008.tex}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 24 (face font-lock-builtin-face fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 599) (undo-tree-id67 . -25) (undo-tree-id68 . -25) (undo-tree-id69 . -26)) nil (26714 41287 636904 577000) 0 nil])
([nil nil ((#("\\input{src/pish2/009.tex}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 24 (face font-lock-builtin-face fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 599) (undo-tree-id64 . -25) (undo-tree-id65 . -25) (undo-tree-id66 . -26)) nil (26714 41287 636903 625000) 0 nil])
([nil nil ((#("\\input{src/pish2/010.tex}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 24 (face font-lock-builtin-face fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 599) (undo-tree-id61 . -25) (undo-tree-id62 . -25) (undo-tree-id63 . -26)) nil (26714 41287 636902 613000) 0 nil])
([nil nil ((#("\\input{src/pish2/011.tex}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 24 (face font-lock-builtin-face fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 599) (undo-tree-id58 . -25) (undo-tree-id59 . -25) (undo-tree-id60 . -26)) nil (26714 41287 636901 230000) 0 nil])
([nil nil ((#("\\input{src/pish2/012.tex}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 24 (face font-lock-builtin-face fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 599) (undo-tree-id55 . -25) (undo-tree-id56 . -25) (undo-tree-id57 . -26)) nil (26714 41287 636900 219000) 0 nil])
([nil nil ((#("\\input{src/pish2/013.tex}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 24 (face font-lock-builtin-face fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 599) (undo-tree-id52 . -25) (undo-tree-id53 . -25) (undo-tree-id54 . -26)) nil (26714 41287 636899 287000) 0 nil])
([nil nil ((#("\\input{src/pish2/014.tex}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 24 (face font-lock-builtin-face fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 599) (undo-tree-id49 . -25) (undo-tree-id50 . -25) (undo-tree-id51 . -26)) nil (26714 41287 636898 345000) 0 nil])
([nil nil ((#("\\input{src/pish2/015.tex}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 24 (face font-lock-builtin-face fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 599) (undo-tree-id46 . -25) (undo-tree-id47 . -25) (undo-tree-id48 . -26)) nil (26714 41287 636897 3000) 0 nil])
([nil nil ((#("\\input{src/pish2/016.tex}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 24 (face font-lock-builtin-face fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 599) (undo-tree-id45 . -25)) nil (26714 41287 636896 31000) 0 nil])
([nil nil ((#("%% \\input{src/ekon2/001.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t)) . 599) (undo-tree-id43 . -28) (undo-tree-id44 . -29)) nil (26714 41287 636895 550000) 0 nil])
([nil nil ((#("%% \\input{src/ekon2/002.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t)) . 599) (undo-tree-id40 . -28) (undo-tree-id41 . -28) (undo-tree-id42 . -29)) nil (26714 41287 636894 688000) 0 nil])
([nil nil ((#("%% \\input{src/ekon2/003.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t)) . 599) (undo-tree-id37 . -28) (undo-tree-id38 . -28) (undo-tree-id39 . -29)) nil (26714 41287 636893 376000) 0 nil])
([nil nil ((#("%% \\input{src/ekon2/004.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t)) . 599) (undo-tree-id34 . -28) (undo-tree-id35 . -28) (undo-tree-id36 . -29)) nil (26714 41287 636892 284000) 0 nil])
([nil nil ((#("%% \\input{src/ekon2/005.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t)) . 599) (undo-tree-id31 . -28) (undo-tree-id32 . -28) (undo-tree-id33 . -29)) nil (26714 41287 636891 302000) 0 nil])
([nil nil ((#("%% \\input{src/ekon2/006.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t)) . 599) (undo-tree-id28 . -28) (undo-tree-id29 . -28) (undo-tree-id30 . -29)) nil (26714 41287 636889 869000) 0 nil])
([nil nil ((#("%% \\input{src/ekon2/007.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t)) . 599) (undo-tree-id25 . -28) (undo-tree-id26 . -28) (undo-tree-id27 . -29)) nil (26714 41287 636888 827000) 0 nil])
([nil nil ((#("%% \\input{src/ekon2/008.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t)) . 599) (undo-tree-id22 . -28) (undo-tree-id23 . -28) (undo-tree-id24 . -29)) nil (26714 41287 636887 855000) 0 nil])
([nil nil ((#("%% \\input{src/ekon2/009.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t)) . 599) (undo-tree-id19 . -28) (undo-tree-id20 . -28) (undo-tree-id21 . -29)) nil (26714 41287 636886 633000) 0 nil])
([nil nil ((#("%% \\input{src/ekon2/010.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t)) . 599) (undo-tree-id16 . -28) (undo-tree-id17 . -28) (undo-tree-id18 . -29)) nil (26714 41287 636884 409000) 0 nil])
([nil nil ((#("%% \\input{src/ekon2/011.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t)) . 599) (undo-tree-id13 . -28) (undo-tree-id14 . -28) (undo-tree-id15 . -29)) nil (26714 41287 636883 297000) 0 nil])
([nil nil ((#("%% \\input{src/ekon2/012.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t)) . 599) (undo-tree-id10 . -28) (undo-tree-id11 . -28) (undo-tree-id12 . -29)) nil (26714 41287 636882 265000) 0 nil])
([nil nil ((#("%% \\input{src/ekon2/013.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t)) . 599) (undo-tree-id5 . -29) (undo-tree-id6 . -28) (undo-tree-id7 . -29) (undo-tree-id8 . -28) (undo-tree-id9 . -29)) nil (26714 41287 636880 912000) 0 nil])
([nil nil ((#("%% \\input{src/ekon2/014.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t)) . 599) (undo-tree-id2 . -28) (undo-tree-id3 . -28) (undo-tree-id4 . -29)) nil (26714 41287 636879 79000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 599) (undo-tree-id0 . -1) (undo-tree-id1 . 1)) nil (26714 41290 330816 933000) 0 nil])
([nil nil ((nil fontified t 712 . 713) (nil face font-lock-comment-face 712 . 713) (#("003" 0 3 (face font-lock-comment-face fontified t)) . 712) (715 . 716) 714) nil (26714 41299 208788 388000) 0 nil] [nil nil ((#("011" 0 3 (face font-lock-comment-face fontified t)) . 1048) (1051 . 1053) (#("010" 0 3 (face font-lock-comment-face fontified t)) . 1006) (1009 . 1011) (#("009" 0 3 (face font-lock-comment-face fontified t)) . 964) (967 . 969) (#("008" 0 3 (face font-lock-comment-face fontified t)) . 922) (925 . 927) (#("007" 0 3 (face font-lock-comment-face fontified t)) . 880) (883 . 885) (#("006" 0 3 (face font-lock-comment-face fontified t)) . 838) (841 . 843) (#("005" 0 3 (face font-lock-comment-face fontified t)) . 797) (800 . 801) (#("004" 0 3 (face font-lock-comment-face fontified t)) . 748) (751 . 752) (#("003" 0 3 (face font-lock-comment-face fontified t)) . 712) (715 . 716) 1059) ((#("4" 0 1 (face font-lock-comment-face fontified nil)) . 715) (712 . 715) (#("6" 0 1 (face font-lock-comment-face fontified nil)) . 751) (748 . 751) (#("8" 0 1 (face font-lock-comment-face fontified nil)) . 800) (797 . 800) (#("10" 0 2 (face font-lock-comment-face fontified nil)) . 841) (838 . 841) (#("12" 0 2 (face font-lock-comment-face fontified nil)) . 883) (880 . 883) (#("14" 0 2 (face font-lock-comment-face fontified nil)) . 925) (922 . 925) (#("16" 0 2 (face font-lock-comment-face fontified nil)) . 967) (964 . 967) (#("18" 0 2 (face font-lock-comment-face fontified nil)) . 1009) (1006 . 1009) (#("20" 0 2 (face font-lock-comment-face fontified nil)) . 1051) (undo-tree-id95 . 2) (1048 . 1051)) (26714 41288 775122 451000) 0 nil])
([nil nil ((nil fontified t 748 . 749) (nil face font-lock-comment-face 748 . 749) (#("004" 0 3 (face font-lock-comment-face fontified t)) . 748) (751 . 752) 748) nil (26714 41299 208787 857000) 0 nil])
([nil nil ((712 . 714)) ((#("00" 0 2 (face font-lock-comment-face fontified t)) . 712)) (26714 41288 629183 11000) 0 nil])
([nil nil ((nil fontified t 797 . 798) (nil face font-lock-comment-face 797 . 798) (#("005" 0 3 (face font-lock-comment-face fontified t)) . 797) (800 . 801) 797) nil (26714 41299 208787 426000) 0 nil])
([nil nil ((750 . 752)) ((#("00" 0 2 (face font-lock-comment-face fontified t)) . 750)) (26714 41288 505471 42000) 0 nil])
([nil nil ((nil fontified t 838 . 839) (nil face font-lock-comment-face 838 . 839) (#("006" 0 3 (face font-lock-comment-face fontified t)) . 838) (841 . 842) 838) nil (26714 41299 208786 815000) 0 nil])
([nil nil ((801 . 803)) ((#("00" 0 2 (face font-lock-comment-face fontified t)) . 801)) (26714 41288 358427 847000) 0 nil])
([nil nil ((nil fontified t 879 . 880) (nil face font-lock-comment-face 879 . 880) (#("007" 0 3 (face font-lock-comment-face fontified t)) . 879) (882 . 883) 879) nil (26714 41299 208786 194000) 0 nil])
([nil nil ((844 . 845)) ((#("0" 0 1 (face font-lock-comment-face fontified t)) . 844) (undo-tree-id93 . -1) (undo-tree-id94 . -1)) (26714 41288 188284 744000) 0 nil])
([nil nil ((nil fontified t 920 . 921) (nil face font-lock-comment-face 920 . 921) (#("008" 0 3 (face font-lock-comment-face fontified t)) . 920) (923 . 924) 920) nil (26714 41299 208785 663000) 0 nil])
([nil nil ((887 . 888)) ((#("0" 0 1 (face font-lock-comment-face fontified t)) . 887)) (26714 41288 65586 29000) 0 nil])
([nil nil ((nil fontified t 961 . 963) (nil face font-lock-comment-face 961 . 963) (#("009" 0 3 (face font-lock-comment-face fontified t)) . 961) (964 . 966) 961) nil (26714 41299 208785 252000) 0 nil])
([nil nil ((930 . 931)) ((#("0" 0 1 (face font-lock-comment-face fontified t)) . 930)) (26714 41287 895477 469000) 0 nil])
([nil nil ((nil fontified t 1003 . 1005) (nil face font-lock-comment-face 1003 . 1005) (#("010" 0 3 (face font-lock-comment-face fontified t)) . 1003) (1006 . 1008) 1004) nil (26714 41299 208784 841000) 0 nil])
([nil nil ((973 . 974)) ((#("0" 0 1 (face font-lock-comment-face fontified t)) . 973)) (26714 41287 725614 28000) 0 nil])
([nil nil ((nil fontified t 1045 . 1047) (nil face font-lock-comment-face 1045 . 1047) (#("011" 0 3 (face font-lock-comment-face fontified t)) . 1045) (1048 . 1050) 1046) nil (26714 41299 208783 589000) 0 nil])
([nil nil ((1016 . 1017)) ((#("0" 0 1 (face font-lock-comment-face fontified t)) . 1016)) (26714 41287 636987 191000) 0 nil])
([nil nil ((1045 . 1046)) nil (26714 41299 208783 208000) 0 nil])
([nil nil ((1059 . 1060)) ((#("0" 0 1 (face font-lock-comment-face fontified t)) . 1059)) (26714 41287 636850 415000) 0 nil])
([nil nil ((1003 . 1004)) nil (26714 41299 208782 907000) 0 nil])
nil
([nil nil ((961 . 962)) nil (26714 41299 208870 982000) 0 nil])
([nil nil ((920 . 921)) nil (26714 41311 598052 625000) 0 nil] [nil nil ((920 . 921)) ((#("0" 0 1 (face font-lock-comment-face fontified t)) . 920)) (26714 41299 208779 551000) 0 nil])
([nil nil ((879 . 880)) nil (26714 41311 598052 464000) 0 nil])
nil
([nil nil ((838 . 839)) nil (26714 41311 598052 234000) 0 nil])
([nil nil ((797 . 798)) nil (26714 41311 598052 24000) 0 nil])
([nil nil ((748 . 749)) nil (26714 41311 598051 863000) 0 nil])
([nil nil ((712 . 713)) nil (26714 41311 598051 643000) 0 nil])
([nil nil ((749 . 750)) nil (26714 41311 598051 392000) 0 nil])
([nil nil ((800 . 801)) nil (26714 41311 598051 172000) 0 nil])
([nil nil ((843 . 844)) nil (26714 41311 598050 421000) 0 nil])
([nil nil ((886 . 887)) nil (26714 41311 598050 240000) 0 nil])
([nil nil ((929 . 930)) nil (26714 41311 598049 749000) 0 nil])
([nil nil ((712 . 713)) nil (26714 41311 598049 248000) 0 nil])
([nil nil ((nil rear-nonsticky nil 692 . 693) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -743) (692 . 744) 661) nil (26714 41311 598048 667000) 0 nil])
([nil nil ((714 . 715) (#("2" 0 1 (face font-lock-comment-face fontified t)) . 714) (undo-tree-id96 . -1)) nil (26714 41311 598045 692000) 0 nil])
([nil nil ((apply 3 744 778 undo--wrap-and-run-primitive-undo 744 778 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -744) 765 (t 26714 41311 599893 374000)))) nil (26714 41454 985425 814000) 0 nil])
([nil nil ((apply -3 744 782 undo--wrap-and-run-primitive-undo 744 782 ((744 . 747) 765))) nil (26714 41454 985425 163000) 0 nil])
([nil nil ((#(" %% almost done, graphs" 0 23 (face font-lock-comment-face fontified t)) . 720) (undo-tree-id97 . -22) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -23) (undo-tree-id119 . -23)) nil (26714 41454 985424 161000) 0 nil])
([nil nil ((apply 3 693 717 undo--wrap-and-run-primitive-undo 693 717 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -693) 719))) nil (26714 41454 985404 334000) 0 nil])
([nil nil ((apply -3 693 721 undo--wrap-and-run-primitive-undo 693 721 ((693 . 696) 716 (t 26714 41454 988175 585000)))) nil (26714 42223 732229 762000) 0 nil])
([nil nil ((nil rear-nonsticky nil 742 . 743) (nil fontified nil 720 . 743) (720 . 743) 719) nil (26714 42224 695062 658000) 0 nil] [nil nil ((#(" %% almost done, graphs" 0 23 (face font-lock-comment-face fontified t)) . 669) (undo-tree-id120 . -22) (undo-tree-id121 . -23) (undo-tree-id122 . -23)) ((669 . 692)) (26714 42223 732144 302000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1184 . 1185) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -1278) (1184 . 1279) 1140 (t 26714 42224 696968 82000)) nil (26714 42281 529446 934000) 0 nil])
nil
([nil nil ((1206 . 1207) (#("2" 0 1 (face font-lock-comment-face fontified t)) . 1206)) nil (26714 42281 529445 922000) 0 nil])
([nil nil ((#(" %% almost done, but stupid images at the end I'm so tired of this" 0 66 (face font-lock-comment-face fontified t)) . 1212) (undo-tree-id188 . -65)) nil (26714 42281 529445 522000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1212 . 1213) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -1240) (1212 . 1241) 1211) nil (26714 42281 529445 51000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1240 . 1241) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -1268) (1240 . 1269) 1213) nil (26714 42281 529444 670000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1268 . 1269) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -1296) (1268 . 1297) 1241) nil (26714 42281 529444 269000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1296 . 1297) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -1324) (1296 . 1325) 1269) nil (26714 42281 529443 889000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1324 . 1325) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -1352) (1324 . 1353) 1297) nil (26714 42281 529443 588000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1352 . 1353) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -1380) (1352 . 1381) 1325) nil (26714 42281 529443 157000) 0 nil])
([nil nil ((nil fontified t 1374 . 1375) (nil face font-lock-comment-face 1374 . 1375) (#("3" 0 1 (face font-lock-comment-face fontified t)) . 1374) (1375 . 1376) (nil fontified t 1346 . 1347) (nil face font-lock-comment-face 1346 . 1347) (#("3" 0 1 (face font-lock-comment-face fontified t)) . 1346) (1347 . 1348) (nil fontified t 1318 . 1319) (nil face font-lock-comment-face 1318 . 1319) (#("3" 0 1 (face font-lock-comment-face fontified t)) . 1318) (1319 . 1320) (nil fontified t 1290 . 1291) (nil face font-lock-comment-face 1290 . 1291) (#("3" 0 1 (face font-lock-comment-face fontified t)) . 1290) (1291 . 1292) (nil fontified t 1262 . 1263) (nil face font-lock-comment-face 1262 . 1263) (#("3" 0 1 (face font-lock-comment-face fontified t)) . 1262) (1263 . 1264) (nil fontified t 1234 . 1235) (nil face font-lock-comment-face 1234 . 1235) (#("3" 0 1 (face font-lock-comment-face fontified t)) . 1234) (1235 . 1236) 1374) nil (26714 42281 529442 276000) 0 nil])
([nil nil ((#("%% \\input{src/pish/017.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 20 (face font-lock-comment-face fontified t) 20 21 (face font-lock-comment-face fontified t) 21 22 (face font-lock-comment-face fontified t) 22 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face rear-nonsticky t fontified t)) . 1297) (undo-tree-id157 . -27) (undo-tree-id158 . -21) (undo-tree-id159 . -21) (undo-tree-id160 . -21) (undo-tree-id161 . -21) (undo-tree-id162 . -21) (undo-tree-id163 . -21) (undo-tree-id164 . -21) (undo-tree-id165 . -21) (undo-tree-id166 . -21) (undo-tree-id167 . -21) (undo-tree-id168 . -21) (undo-tree-id169 . -21) (undo-tree-id170 . -21) (undo-tree-id171 . -21) (undo-tree-id172 . -21) (undo-tree-id173 . -21) (undo-tree-id174 . -21) (undo-tree-id175 . -21) (undo-tree-id176 . -21) (undo-tree-id177 . -21) (undo-tree-id178 . -21) (undo-tree-id179 . -21) (undo-tree-id180 . -21) (undo-tree-id181 . -21) (undo-tree-id182 . -21) (undo-tree-id183 . -21) (undo-tree-id184 . -21) (undo-tree-id185 . -21) (undo-tree-id186 . -21) (undo-tree-id187 . -28) 1318) nil (26714 42281 529440 873000) 0 nil])
([nil nil ((#("%% \\input{src/pish/018.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 20 (face font-lock-comment-face fontified t) 20 21 (face font-lock-comment-face fontified t) 21 22 (face font-lock-comment-face fontified t) 22 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face rear-nonsticky t fontified t)) . 1297) (undo-tree-id145 . -27) (undo-tree-id146 . -27) (undo-tree-id147 . -21) (undo-tree-id148 . -21) (undo-tree-id149 . -21) (undo-tree-id150 . -21) (undo-tree-id151 . -21) (undo-tree-id152 . -21) (undo-tree-id153 . -21) (undo-tree-id154 . -21) (undo-tree-id155 . -21) (undo-tree-id156 . -28) 1318) nil (26714 42281 529431 355000) 0 nil])
([nil nil ((#("%% \\input{src/pish/019.tex}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 20 (face font-lock-comment-face fontified t) 20 21 (face font-lock-comment-face fontified t) 21 22 (face font-lock-comment-face fontified t) 22 27 (face font-lock-comment-face fontified t) 27 28 (face font-lock-comment-face fontified t)) . 1297) (undo-tree-id123 . -21) (undo-tree-id124 . 6) (undo-tree-id125 . -21) (undo-tree-id126 . -27) (undo-tree-id127 . -21) (undo-tree-id128 . -27) (undo-tree-id129 . -21) (undo-tree-id130 . -21) (undo-tree-id131 . -21) (undo-tree-id132 . -21) (undo-tree-id133 . -21) (undo-tree-id134 . -21) (undo-tree-id135 . -21) (undo-tree-id136 . -21) (undo-tree-id137 . -21) (undo-tree-id138 . -21) (undo-tree-id139 . -21) (undo-tree-id140 . -21) (undo-tree-id141 . -21) (undo-tree-id142 . -21) (undo-tree-id143 . -21) (undo-tree-id144 . -28) 1318) nil (26714 42281 529426 847000) 0 nil])
([nil nil ((apply 3 1185 1209 undo--wrap-and-run-primitive-undo 1185 1209 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1185)))) nil (26714 42281 529408 342000) 0 nil])
([nil nil ((apply -3 1185 1213 undo--wrap-and-run-primitive-undo 1185 1213 ((1185 . 1188) (t 26714 42281 532659 717000)))) nil (26714 42930 702799 154000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1234 . 1235) (nil fontified nil 1212 . 1235) (1212 . 1235) 1211) nil (26714 42932 925012 792000) 0 nil] [nil nil ((#(" %% almost done, graphs" 0 23 (face font-lock-comment-face fontified t)) . 809) (undo-tree-id189 . -22) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -23) (undo-tree-id206 . -23)) ((809 . 832)) (26714 42930 702685 532000) 0 nil])
([nil nil ((apply 3 1236 1260 undo--wrap-and-run-primitive-undo 1236 1260 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1236) 1262))) nil (26714 42932 925008 654000) 0 nil])
nil
([nil nil ((apply -3 1236 1264 undo--wrap-and-run-primitive-undo 1236 1264 ((1236 . 1239) (t 26715 31280 397158 444000)))) nil (26715 34414 825752 77000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1285 . 1286) (nil fontified nil 1263 . 1286) (1263 . 1286) 1262) nil (26715 34417 343935 397000) 0 nil] [nil nil ((#(" %% almost done, graphs" 0 23 (face font-lock-comment-face fontified t)) . 1212) (undo-tree-id0 . -23) (undo-tree-id1 . -23) (undo-tree-id2 . -22)) ((1212 . 1235)) (26715 34414 825669 351000) 0 nil])
([nil nil ((apply 3 1236 1283 undo--wrap-and-run-primitive-undo 1236 1283 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1236) 1285))) nil (26715 34417 343934 816000) 0 nil])
nil
([nil nil ((apply -3 1236 1287 undo--wrap-and-run-primitive-undo 1236 1287 ((1236 . 1239) 1282))) nil (26715 34417 343934 285000) 0 nil])
([nil nil ((apply 3 1287 1311 undo--wrap-and-run-primitive-undo 1287 1311 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1287) 1313))) nil (26715 35957 189401 648000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1333 . 1334) (nil fontified nil 1311 . 1334) (1311 . 1334) 1310 (t 26715 34417 346100 403000)) nil (26715 35958 894549 374000) 0 nil] [nil nil ((#(" %% almost done, graphs" 0 1 (face font-lock-comment-face fontified t) 1 4 (face font-lock-comment-face fontified t) 4 22 (face font-lock-comment-face fontified t) 22 23 (face font-lock-comment-face rear-nonsticky t fontified t)) . 1263) (undo-tree-id3 . -22) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -23) (undo-tree-id20 . -23) (t 26715 34417 346100 403000)) ((1263 . 1286)) (26715 35957 189139 746000) 0 nil])
([nil nil ((apply -3 1287 1338 undo--wrap-and-run-primitive-undo 1287 1338 ((1287 . 1290) 1333))) nil (26715 35958 894548 653000) 0 nil])
nil
([nil nil ((apply 3 1338 1362 undo--wrap-and-run-primitive-undo 1338 1362 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1338) 1364))) nil (26715 41302 273155 856000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1376 . 1377) (nil fontified nil 1362 . 1377) (1362 . 1377) 1361 (t 26715 35958 895956 371000)) nil (26715 41303 967423 368000) 0 nil] [nil nil ((#(" %% almost done" 0 15 (face font-lock-comment-face fontified t)) . 1075) (undo-tree-id21 . -14) (undo-tree-id22 . -15) (undo-tree-id23 . -15) (t 26715 35958 895956 371000)) ((1075 . 1090)) (26715 41302 272911 15000) 0 nil])
([nil nil ((apply -3 1338 1381 undo--wrap-and-run-primitive-undo 1338 1381 ((1338 . 1341) 1376))) nil (26715 41303 967418 369000) 0 nil])
nil
([nil nil ((apply 3 2720 2745 undo--wrap-and-run-primitive-undo 2720 2745 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2720) 2747 (t 26715 41303 969355 670000)))) nil (26715 41311 889661 95000) 0 nil])
([nil nil ((apply -3 2720 2749 undo--wrap-and-run-primitive-undo 2720 2749 ((2720 . 2723) 2744 (t 26715 41311 892375 448000)))) nil (26715 41322 3803 397000) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . 2850) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("2" 0 1 (face font-lock-comment-face fontified t)) . 2822) (#("2" 0 1 (face font-lock-comment-face fontified t)) . 2794) (#("2" 0 1 (face font-lock-comment-face fontified t)) . 2766) (#("2" 0 1 (face font-lock-comment-face fontified t)) . 2738) 2854 (t 26715 41322 6400 663000)) nil (26715 41382 34293 740000) 0 nil])
([nil nil ((apply 3 2720 2744 undo--wrap-and-run-primitive-undo 2720 2744 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2720) 2738 (t 26715 41382 36549 658000)))) nil (26715 41384 604895 891000) 0 nil])
([nil nil ((apply -3 2720 2748 undo--wrap-and-run-primitive-undo 2720 2748 ((2720 . 2723) (t 26715 48619 430412 686000)))) nil (26715 49731 935003 878000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2761 . 2762) (nil fontified nil 2747 . 2762) (2747 . 2762) 2746) nil (26715 49738 714103 187000) 0 nil] [nil nil ((#(" %% almost done" 0 15 (face font-lock-comment-face fontified t)) . 2629) (undo-tree-id0 . -15) (undo-tree-id1 . -15) (undo-tree-id2 . -14)) ((2629 . 2644)) (26715 49731 934928 327000) 0 nil])
([nil nil ((2762 . 2770)) nil (26715 49738 714102 887000) 0 nil])
nil
([nil nil ((2764 . 2766)) nil (26715 49738 714102 496000) 0 nil])
([nil nil ((apply 3 2773 2797 undo--wrap-and-run-primitive-undo 2773 2797 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2773) 2799))) nil (26715 49738 714098 138000) 0 nil])
([nil nil ((apply -3 2773 2801 undo--wrap-and-run-primitive-undo 2773 2801 ((2773 . 2776) 2796 (t 26715 49738 715478 682000)))) nil (26715 54492 142045 90000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2824 . 2825) (nil fontified nil 2800 . 2825) (2800 . 2825) 2799) nil (26715 54494 768372 794000) 0 nil] [nil nil ((#(" %% almost done, 2 graphs" 0 14 (face font-lock-comment-face fontified t) 14 15 (face font-lock-comment-face fontified t rear-nonsticky t) 15 25 (face font-lock-comment-face fontified t)) . 2747) (undo-tree-id3 . -24) (undo-tree-id4 . 6) (undo-tree-id5 . -25) (undo-tree-id6 . -25)) ((2747 . 2772)) (26715 54492 141960 111000) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-comment-face fontified t)) . 2817) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1)) nil (26715 54494 768372 343000) 0 nil])
nil
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 2817) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1)) nil (26715 54494 768369 728000) 0 nil])
([nil nil ((apply 3 2824 2848 undo--wrap-and-run-primitive-undo 2824 2848 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2824) 2850))) nil (26715 54494 768356 233000) 0 nil])
([nil nil ((apply -3 2824 2852 undo--wrap-and-run-primitive-undo 2824 2852 ((2824 . 2827) 2847 (t 26715 54494 770263 62000)))) nil (26715 57947 330545 834000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2873 . 2874) (nil fontified nil 2851 . 2874) (2851 . 2874) 2850) nil (26715 57948 222323 607000) 0 nil] [nil nil ((#(" %% almost done, graphs" 0 22 (face font-lock-comment-face fontified t) 22 23 (face font-lock-comment-face rear-nonsticky t fontified t)) . 2800) (undo-tree-id21 . -22) (undo-tree-id22 . -23) (undo-tree-id23 . -23)) ((2800 . 2823)) (26715 57947 330460 946000) 0 nil])
([nil nil ((apply 3 2875 2899 undo--wrap-and-run-primitive-undo 2875 2899 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2875) 2901 (t 26715 57948 224953 799000)))) nil (26715 57948 994318 41000) 0 nil])
nil
([nil nil ((apply -3 2875 2903 undo--wrap-and-run-primitive-undo 2875 2903 ((2875 . 2878) 2898 (t 26715 57948 996949 710000)))) nil (26715 60650 606184 637000) 0 nil])
([nil nil ((2924 . 2930) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -2924) (undo-tree-id24 . -1) (2903 . 2925) (#("$" 0 1 (face font-lock-comment-face fontified t)) . -2903) (undo-tree-id25 . -1) (#("$" 0 1 (face font-lock-comment-face fontified t)) . -2904) (undo-tree-id26 . -1) 2905 (2902 . 2905)) nil (26715 60650 606183 505000) 0 nil])
([nil nil ((apply 3 2931 2955 undo--wrap-and-run-primitive-undo 2931 2955 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2931) 2957))) nil (26715 60650 606164 58000) 0 nil])
([nil nil ((2926 . 2930) (#("g" 0 1 (face font-lock-comment-face fontified t)) . -2926) (undo-tree-id27 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -2927) (undo-tree-id28 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -2928) (undo-tree-id29 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -2929) (undo-tree-id30 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -2930) (undo-tree-id31 . -1) 2931 (2930 . 2931) (t 26715 60650 608626 580000)) nil (26715 60655 187976 359000) 0 nil])
([nil nil ((#("big boy" 0 7 (face font-lock-comment-face fontified t)) . 2923) (undo-tree-id35 . -6) (undo-tree-id36 . -6) (undo-tree-id37 . -6) (t 26715 60655 190602 289000)) nil (26716 3485 884724 113000) 0 nil])
([nil nil ((2924 . 2928) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -2924) (undo-tree-id34 . -1) (2923 . 2925)) nil (26716 3485 884722 440000) 0 nil])
([nil nil ((apply -3 2929 2957 undo--wrap-and-run-primitive-undo 2929 2957 ((2929 . 2932) 2952))) nil (26716 3485 884721 148000) 0 nil])
([nil nil ((2957 . 2971) (#("$" 0 1 (face font-lock-comment-face fontified t)) . -2957) (undo-tree-id32 . -1) (#("$" 0 1 (face font-lock-comment-face fontified t)) . -2958) (undo-tree-id33 . -1) 2959 (2956 . 2959)) nil (26716 3485 884718 72000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2600 . 2601) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -2643) (2600 . 2644) 2558 (t 26716 3485 887735 894000)) nil (26716 7159 56416 932000) 0 nil])
([nil nil ((#("004" 0 3 (face font-lock-comment-face fontified t)) . 2620) (2623 . 2624) 2622) nil (26716 7159 56416 341000) 0 nil])
([nil nil ((#(" %% almost done" 0 15 (face font-lock-comment-face fontified t)) . 2626) (undo-tree-id0 . -14)) nil (26716 7159 56415 920000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2626 . 2627) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -2652) (2626 . 2653) 2625) nil (26716 7159 56398 948000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2652 . 2653) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -2678) (2652 . 2679) 2627) nil (26716 7159 56398 167000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2678 . 2679) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -2704) (2678 . 2705) 2653) nil (26716 7159 56397 786000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2704 . 2705) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -2730) (2704 . 2731) 2679) nil (26716 7159 56397 406000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2730 . 2731) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -2756) (2730 . 2757) 2705) nil (26716 7159 56397 35000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2756 . 2757) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -2782) (2756 . 2783) 2731) nil (26716 7159 56396 614000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2782 . 2783) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -2808) (2782 . 2809) 2757) nil (26716 7159 56396 253000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2808 . 2809) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -2834) (2808 . 2835) 2783) nil (26716 7159 56395 682000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2834 . 2835) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -2860) (2834 . 2861) 2809) nil (26716 7159 56499 206000) 0 nil])
([nil nil ((nil fontified t 2859 . 2860) (nil face font-lock-comment-face 2859 . 2860) (#("5" 0 1 (face font-lock-comment-face fontified t)) . 2858) (2859 . 2861) (nil fontified t 2832 . 2833) (nil face font-lock-comment-face 2832 . 2833) (#("5" 0 1 (face font-lock-comment-face fontified t)) . 2831) (2832 . 2834) (nil fontified t 2805 . 2806) (nil face font-lock-comment-face 2805 . 2806) (#("5" 0 1 (face font-lock-comment-face fontified t)) . 2804) (2805 . 2807) (nil fontified t 2778 . 2779) (nil face font-lock-comment-face 2778 . 2779) (#("5" 0 1 (face font-lock-comment-face fontified t)) . 2777) (2778 . 2780) (nil fontified t 2751 . 2752) (nil face font-lock-comment-face 2751 . 2752) (#("5" 0 1 (face font-lock-comment-face fontified t)) . 2750) (2751 . 2753) (nil fontified t 2724 . 2725) (nil face font-lock-comment-face 2724 . 2725) (#("5" 0 1 (face font-lock-comment-face fontified t)) . 2724) (2725 . 2726) (nil fontified t 2698 . 2699) (nil face font-lock-comment-face 2698 . 2699) (#("5" 0 1 (face font-lock-comment-face fontified t)) . 2698) (2699 . 2700) (nil fontified t 2672 . 2673) (nil face font-lock-comment-face 2672 . 2673) (#("5" 0 1 (face font-lock-comment-face fontified t)) . 2672) (2673 . 2674) (nil fontified t 2646 . 2647) (nil face font-lock-comment-face 2646 . 2647) (#("5" 0 1 (face font-lock-comment-face fontified t)) . 2646) (2647 . 2648) 2854) nil (26716 7175 105021 319000) 0 nil] [nil nil ((nil fontified t 2646 . 2647) (nil face font-lock-comment-face 2646 . 2647) (#("5" 0 1 (face font-lock-comment-face fontified t)) . 2646) (2647 . 2648) 2646) ((#("6" 0 1 (face font-lock-comment-face fontified nil)) . 2647) (2646 . 2647)) (26716 7159 56390 984000) 0 nil])
([nil nil ((2620 . 2622)) nil (26716 7175 105019 916000) 0 nil])
nil
([nil nil ((2648 . 2650)) nil (26716 7175 105019 736000) 0 nil])
([nil nil ((2676 . 2678)) nil (26716 7175 105019 546000) 0 nil])
([nil nil ((2704 . 2706)) nil (26716 7175 105019 345000) 0 nil])
([nil nil ((2732 . 2734)) nil (26716 7175 105019 105000) 0 nil])
([nil nil ((2760 . 2761)) nil (26716 7175 105018 814000) 0 nil])
([nil nil ((2788 . 2789)) nil (26716 7175 105018 344000) 0 nil])
([nil nil ((2816 . 2817)) nil (26716 7175 105018 143000) 0 nil])
([nil nil ((2844 . 2845)) nil (26716 7175 105017 943000) 0 nil])
([nil nil ((2872 . 2873)) nil (26716 7175 105017 532000) 0 nil])
([nil nil ((apply 3 2601 2625 undo--wrap-and-run-primitive-undo 2601 2625 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2601) 2620))) nil (26716 7974 498338 96000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2639 . 2640) (nil fontified nil 2625 . 2640) (2625 . 2640) 2624 (t 26716 7175 107707 619000)) nil (26716 7975 744326 744000) 0 nil] [nil nil ((#(" %% almost done" 0 15 (face font-lock-comment-face fontified t)) . 2585) (undo-tree-id1 . -14) (undo-tree-id2 . -15) (undo-tree-id3 . -15) (t 26716 7175 107707 619000)) ((2585 . 2600)) (26716 7974 498107 314000) 0 nil])
([nil nil ((apply -3 2601 2644 undo--wrap-and-run-primitive-undo 2601 2644 ((2601 . 2604) 2639))) nil (26716 7975 744322 726000) 0 nil])
nil
([nil nil ((apply 3 2644 2668 undo--wrap-and-run-primitive-undo 2644 2668 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2644) (t 26716 7975 746327 37000)))) nil (26716 8000 581872 369000) 0 nil])
([nil nil ((2600 . 2608) (t 26716 8000 584178 946000)) nil (26716 8653 477026 842000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2690 . 2691) (nil fontified nil 2676 . 2691) (2676 . 2691) 2675 (t 26716 8611 487448 737000)) nil (26716 8656 793986 17000) 0 nil] [nil nil ((#(" %% almost done" 0 1 (face font-lock-comment-face fontified t) 1 4 (face font-lock-comment-face fontified t) 4 14 (face font-lock-comment-face fontified t) 14 15 (face font-lock-comment-face fontified t rear-nonsticky t)) . 2636) (undo-tree-id4 . -14) (undo-tree-id5 . -13) (undo-tree-id6 . -13) (undo-tree-id7 . -13) (undo-tree-id8 . -13) (undo-tree-id9 . -13) (undo-tree-id10 . -12) (undo-tree-id11 . -12) (undo-tree-id12 . -12) (undo-tree-id13 . -12) (undo-tree-id14 . -12) (undo-tree-id15 . -11) (undo-tree-id16 . -11) (undo-tree-id17 . -11) (undo-tree-id18 . -11) (undo-tree-id19 . -11) (undo-tree-id20 . -10) (undo-tree-id21 . -10) (undo-tree-id22 . -10) (undo-tree-id23 . -10) (undo-tree-id24 . -10) (undo-tree-id25 . -9) (undo-tree-id26 . -9) (undo-tree-id27 . -9) (undo-tree-id28 . -9) (undo-tree-id29 . -9) (undo-tree-id30 . -8) (undo-tree-id31 . -8) (undo-tree-id32 . -8) (undo-tree-id33 . -8) (undo-tree-id34 . -8) (undo-tree-id35 . -7) (undo-tree-id36 . -7) (undo-tree-id37 . -7) (undo-tree-id38 . -7) (undo-tree-id39 . -7) (undo-tree-id40 . -6) (undo-tree-id41 . -6) (undo-tree-id42 . -6) (undo-tree-id43 . -6) (undo-tree-id44 . -6) (undo-tree-id45 . -5) (undo-tree-id46 . -5) (undo-tree-id47 . -5) (undo-tree-id48 . -5) (undo-tree-id49 . -5) (undo-tree-id50 . -4) (undo-tree-id51 . -4) (undo-tree-id52 . -4) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -15) (undo-tree-id71 . -15) (t 26716 8611 487448 737000)) ((2636 . 2651)) (26716 8653 476775 101000) 0 nil])
([nil nil ((apply -3 2652 2695 undo--wrap-and-run-primitive-undo 2652 2695 ((2652 . 2655) 2690))) nil (26716 8656 793985 596000) 0 nil])
nil
([nil nil ((2694 . 2702)) nil (26716 8656 793985 196000) 0 nil])
([nil nil ((apply 3 2703 2727 undo--wrap-and-run-primitive-undo 2703 2727 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2703) 2729))) nil (26716 9212 716589 76000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2749 . 2750) (nil fontified nil 2727 . 2750) (2727 . 2750) 2726 (t 26716 8656 797162 973000)) nil (26716 9213 962416 142000) 0 nil] [nil nil ((#(" %% almost done, graphs" 0 1 (face font-lock-comment-face fontified t) 1 4 (face font-lock-comment-face fontified t) 4 14 (face font-lock-comment-face fontified t) 14 15 (face font-lock-comment-face rear-nonsticky t fontified t) 15 23 (face font-lock-comment-face fontified t)) . 2679) (undo-tree-id72 . -22) (undo-tree-id73 . -23) (undo-tree-id74 . -23) (t 26716 8656 797162 973000)) ((2679 . 2702)) (26716 9212 716376 208000) 0 nil])
([nil nil ((apply -3 2703 2754 undo--wrap-and-run-primitive-undo 2703 2754 ((2703 . 2706) 2749))) nil (26716 9213 962411 283000) 0 nil])
nil
([nil nil ((apply 3 2754 2778 undo--wrap-and-run-primitive-undo 2754 2778 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2754) 2780 (t 26716 9213 964564 970000)))) nil (26716 9249 47973 611000) 0 nil])
([nil nil ((apply -3 2754 2782 undo--wrap-and-run-primitive-undo 2754 2782 ((2754 . 2757) 2777 (t 26716 9249 50333 691000)))) nil (26716 9741 512532 738000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2795 . 2796) (nil fontified nil 2781 . 2796) (2781 . 2796) 2780) nil (26716 9742 974959 887000) 0 nil] [nil nil ((#(" %% almost done" 0 1 (face font-lock-comment-face fontified t) 1 4 (face font-lock-comment-face fontified t) 4 14 (face font-lock-comment-face fontified t) 14 15 (face font-lock-comment-face fontified t rear-nonsticky t)) . 2636) (undo-tree-id75 . -14) (undo-tree-id76 . -15) (undo-tree-id77 . -15)) ((2636 . 2651)) (26716 9741 512444 313000) 0 nil])
([nil nil ((apply 3 2797 2821 undo--wrap-and-run-primitive-undo 2797 2821 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2797) 2823))) nil (26716 9742 974956 240000) 0 nil])
nil
([nil nil ((apply -3 2797 2825 undo--wrap-and-run-primitive-undo 2797 2825 ((2797 . 2800) 2820 (t 26716 9742 978055 816000)))) nil (26716 11351 382555 469000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2838 . 2839) (nil fontified nil 2824 . 2839) (2824 . 2839) 2823) nil (26716 11351 996409 319000) 0 nil] [nil nil ((#(" %% almost done" 0 14 (face font-lock-comment-face fontified t) 14 15 (face font-lock-comment-face fontified t rear-nonsticky t)) . 2781) (undo-tree-id78 . -14) (undo-tree-id79 . -15) (undo-tree-id80 . -15)) ((2781 . 2796)) (26716 11351 382469 999000) 0 nil])
([nil nil ((apply 3 2840 2864 undo--wrap-and-run-primitive-undo 2840 2864 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2840) 2866 (t 26716 11351 998224 438000)))) nil (26716 11352 907617 354000) 0 nil])
nil
([nil nil ((apply -3 2840 2868 undo--wrap-and-run-primitive-undo 2840 2868 ((2840 . 2843) 2863 (t 26716 11352 909218 194000)))) nil (26716 13022 944101 535000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2881 . 2882) (nil fontified nil 2867 . 2882) (2867 . 2882) 2866) nil (26716 13024 983982 204000) 0 nil] [nil nil ((#(" %% almost done" 0 14 (face font-lock-comment-face fontified t) 14 15 (face font-lock-comment-face rear-nonsticky t fontified t)) . 2824) (undo-tree-id81 . -14) (undo-tree-id82 . -15) (undo-tree-id83 . -15)) ((2824 . 2839)) (26716 13022 944013 630000) 0 nil])
([nil nil ((apply 3 2840 2879 undo--wrap-and-run-primitive-undo 2840 2879 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2840) 2881))) nil (26716 13024 983981 703000) 0 nil])
nil
([nil nil ((apply -3 2840 2883 undo--wrap-and-run-primitive-undo 2840 2883 ((2840 . 2843) 2878))) nil (26716 13024 983977 686000) 0 nil])
([nil nil ((apply 3 2883 2907 undo--wrap-and-run-primitive-undo 2883 2907 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2883) 2909 (t 26716 13024 987149 654000)))) nil (26716 13025 781546 755000) 0 nil])
([nil nil ((apply -3 2883 2911 undo--wrap-and-run-primitive-undo 2883 2911 ((2883 . 2886) 2906 (t 26716 13025 785144 978000)))) nil (26716 14322 919112 931000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2932 . 2933) (nil fontified nil 2910 . 2933) (2910 . 2933) 2909) nil (26716 14324 450660 356000) 0 nil] [nil nil ((#(" %% almost done, graphs" 0 1 (face font-lock-comment-face fontified t) 1 4 (face font-lock-comment-face fontified t) 4 22 (face font-lock-comment-face fontified t) 22 23 (face font-lock-comment-face fontified t rear-nonsticky t)) . 2730) (undo-tree-id84 . -22) (undo-tree-id85 . -23) (undo-tree-id86 . -23)) ((2730 . 2753)) (26716 14322 919024 436000) 0 nil])
([nil nil ((apply 3 2934 2958 undo--wrap-and-run-primitive-undo 2934 2958 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2934) 2960))) nil (26716 14324 450656 37000) 0 nil])
nil
([nil nil ((apply 3 1382 1420 undo--wrap-and-run-primitive-undo 1382 1420 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1382) (t 26716 14324 453703 217000)))) nil (26716 22021 667087 819000) 0 nil])
([nil nil ((630 . 2613) (#("almost done
%% \\input{src/pish/002.tex} %% almost done, graphs
%% \\input{src/pish/003.tex} %% almost done, graphs
%% \\input{src/pish/004.tex} %% graphs
%% \\input{src/pish/005.tex} %% almost done, graphs
%% \\input{src/pish/006.tex} %% almost done
%% \\input{src/pish/007.tex} %% almost done
%% \\input{src/pish/008.tex} %% almost done
%% \\input{src/pish/009.tex} %% almost done
%% \\input{src/pish/010.tex} %% almost done
%% \\input{src/pish/011.tex} %% almost done
%% \\input{src/pish/012.tex} %% almost done, but stupid images at the end I'm so tired of this
%% \\input{src/pish/013.tex} %% almost done, graphs
%% \\input{src/pish/014.tex} %% almost done, graphs
%% \\input{src/pish/015.tex} %% almost done, graphs
%% \\input{src/pish/016.tex} %% almost done

\\input{src/ict/001.tex} %% almost done
%% \\input{src/ict/002.tex} %% almost done
%% \\input{src/ict/003.tex} %% almost done
%% \\input{src/ict/004.tex} %% almost done
%% \\input{src/ict/005.tex} %% almost done, graphs
%% \\input{src/ict/006.tex} %% almost done
%% \\input{src/ict/007.tex} %% almost done, strange symbols in some formulas, reconstructed from zero
%% \\input{src/ict/008.tex} %% done
%% \\input{src/ict/009.tex} %% almost done
%% \\input{src/ict/010.tex} %% almost done, images, graphs
%% \\input{src/ict/011.tex} %% almost done, images, graphs
%% \\input{src/ict/012.tex} %% almost done
%% \\input{src/ict/013.tex} %% almost done
%% \\input{src/ict/014.tex} %% almost done
%% \\input{src/ict/015.tex} %% almost done

%% \\input{src/gorn/001.tex} %% recheck, one author 'changed'(marked red) didn't notice anything, almost done
%% \\input{src/gorn/002.tex} %% same thing, almost done
%% \\input{src/gorn/003.tex} %% graph and wordart, almost done
%% \\input{src/gorn/004.tex} %% almost done
%% \\input{src/gorn/005.tex} %% almost done, graph, wordart

%% \\input{src/ekon/001.tex} %% almost done
%% \\input{src/ekon/002.tex} %% almost done
%% \\input{src/ekon/003.tex} %% graphs
%% \\input{src/ekon/004.tex} %% almost done, graphs
%% \\input{src/ekon/005.tex} %% almost done
%% \\input{src/ekon/006.tex} %% almost done, graphs
%% \\input{src/ekon/007.tex} %% almost done, graphs
%% \\input{src/ekon/008.tex} %% almost done
%% \\input{src/ekon/009.tex} %% almost done
%% \\input{src/ekon/010.tex} %% almost done
%% \\input{src/ekon/011.tex} %% almost done, graphs
" 0 12 (face font-lock-comment-face fontified t) 12 15 (face font-lock-comment-delimiter-face fontified t) 15 63 (face font-lock-comment-face fontified t) 63 66 (face font-lock-comment-delimiter-face fontified t) 66 114 (face font-lock-comment-face fontified t) 114 117 (face font-lock-comment-delimiter-face fontified t) 117 152 (face font-lock-comment-face fontified t) 152 155 (face font-lock-comment-delimiter-face fontified t) 155 203 (face font-lock-comment-face fontified t) 203 206 (face font-lock-comment-delimiter-face fontified t) 206 246 (face font-lock-comment-face fontified t) 246 249 (face font-lock-comment-delimiter-face fontified t) 249 289 (face font-lock-comment-face fontified t) 289 292 (face font-lock-comment-delimiter-face fontified t) 292 332 (face font-lock-comment-face fontified t) 332 335 (face font-lock-comment-delimiter-face fontified t) 335 375 (face font-lock-comment-face fontified t) 375 378 (face font-lock-comment-delimiter-face fontified t) 378 418 (face font-lock-comment-face fontified t) 418 421 (face font-lock-comment-delimiter-face fontified t) 421 461 (face font-lock-comment-face fontified t) 461 464 (face font-lock-comment-delimiter-face fontified t) 464 555 (face font-lock-comment-face fontified t) 555 558 (face font-lock-comment-delimiter-face fontified t) 558 606 (face font-lock-comment-face fontified t) 606 609 (face font-lock-comment-delimiter-face fontified t) 609 657 (face font-lock-comment-face fontified t) 657 660 (face font-lock-comment-delimiter-face fontified t) 660 708 (face font-lock-comment-face fontified t) 708 711 (face font-lock-comment-delimiter-face fontified t) 711 751 (face font-lock-comment-face fontified t) 751 752 (fontified t) 752 758 (face font-lock-keyword-face fontified t) 758 759 (fontified t) 759 774 (face font-lock-builtin-face fontified t) 774 776 (fontified t) 776 779 (face font-lock-comment-delimiter-face fontified t) 779 791 (face font-lock-comment-face fontified t) 791 794 (face font-lock-comment-delimiter-face fontified t) 794 833 (face font-lock-comment-face fontified t) 833 836 (face font-lock-comment-delimiter-face fontified t) 836 871 (face font-lock-comment-face fontified t) 871 875 (face font-lock-comment-face fontified t) 875 878 (face font-lock-comment-delimiter-face fontified t) 878 917 (face font-lock-comment-face fontified t) 917 920 (face font-lock-comment-delimiter-face fontified t) 920 967 (face font-lock-comment-face fontified t) 967 970 (face font-lock-comment-delimiter-face fontified t) 970 1009 (face font-lock-comment-face fontified t) 1009 1012 (face font-lock-comment-delimiter-face fontified t) 1012 1110 (face font-lock-comment-face fontified t) 1110 1113 (face font-lock-comment-delimiter-face fontified t) 1113 1145 (face font-lock-comment-face fontified t) 1145 1148 (face font-lock-comment-delimiter-face fontified t) 1148 1187 (face font-lock-comment-face fontified t) 1187 1190 (face font-lock-comment-delimiter-face fontified t) 1190 1245 (face font-lock-comment-face fontified t) 1245 1248 (face font-lock-comment-delimiter-face fontified t) 1248 1303 (face font-lock-comment-face fontified t) 1303 1306 (face font-lock-comment-delimiter-face fontified t) 1306 1345 (face font-lock-comment-face fontified t) 1345 1348 (face font-lock-comment-delimiter-face fontified t) 1348 1387 (face font-lock-comment-face fontified t) 1387 1390 (face font-lock-comment-delimiter-face fontified t) 1390 1429 (face font-lock-comment-face fontified t) 1429 1432 (face font-lock-comment-delimiter-face fontified t) 1432 1471 (face font-lock-comment-face fontified t) 1471 1472 (fontified t) 1472 1475 (face font-lock-comment-delimiter-face fontified t) 1475 1581 (face font-lock-comment-face fontified t) 1581 1584 (face font-lock-comment-delimiter-face fontified t) 1584 1636 (face font-lock-comment-face fontified t) 1636 1639 (face font-lock-comment-delimiter-face fontified t) 1639 1698 (face font-lock-comment-face fontified t) 1698 1701 (face font-lock-comment-delimiter-face fontified t) 1701 1741 (face font-lock-comment-face fontified t) 1741 1744 (face font-lock-comment-delimiter-face fontified t) 1744 1800 (face font-lock-comment-face fontified t) 1800 1801 (fontified t) 1801 1804 (face font-lock-comment-delimiter-face fontified t) 1804 1844 (face font-lock-comment-face fontified t) 1844 1847 (face font-lock-comment-delimiter-face fontified t) 1847 1887 (face font-lock-comment-face fontified t) 1887 1890 (face font-lock-comment-delimiter-face fontified t) 1890 1925 (face font-lock-comment-face fontified t) 1925 1928 (face font-lock-comment-delimiter-face fontified t) 1928 1976 (face font-lock-comment-face fontified t) 1976 1979 (face font-lock-comment-delimiter-face fontified t) 1979 2019 (face font-lock-comment-face fontified t) 2019 2022 (face font-lock-comment-delimiter-face fontified t) 2022 2070 (face font-lock-comment-face fontified t) 2070 2073 (face font-lock-comment-delimiter-face fontified t) 2073 2121 (face font-lock-comment-face fontified t) 2121 2124 (face font-lock-comment-delimiter-face fontified t) 2124 2164 (face font-lock-comment-face fontified t) 2164 2167 (face font-lock-comment-delimiter-face fontified t) 2167 2207 (face font-lock-comment-face fontified t) 2207 2210 (face font-lock-comment-delimiter-face fontified t) 2210 2250 (face font-lock-comment-face fontified t) 2250 2253 (face font-lock-comment-delimiter-face fontified t) 2253 2301 (face font-lock-comment-face fontified t)) . 630) (t 26716 22021 669318 113000)) nil (26717 11483 866519 436000) 0 nil])
([nil nil ((apply 3 1389 1474 undo--wrap-and-run-primitive-undo 1389 1474 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1389) (t 26717 10309 615956 333000)))) nil (26717 11483 866513 635000) 0 nil])
([nil nil ((apply -3 1389 1478 undo--wrap-and-run-primitive-undo 1389 1478 ((1389 . 1392) (t 26717 11483 870689 871000)))) nil (26717 11704 113348 415000) 0 nil])
([nil nil ((#(", strange symbols in some formulas, may cause problems" 0 54 (face font-lock-comment-face fontified t)) . 1423) (undo-tree-id0 . -53)) nil (26717 11704 113347 483000) 0 nil])
([nil nil ((apply 3 1494 1528 undo--wrap-and-run-primitive-undo 1494 1528 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1494) 1527))) nil (26717 11704 113327 276000) 0 nil])
([nil nil ((apply -3 1494 1532 undo--wrap-and-run-primitive-undo 1494 1532 ((1494 . 1497) 1527 (t 26717 11704 115514 438000)))) nil (26717 12414 232288 198000) 0 nil])
([nil nil ((1524 . 1528) (#("wordart" 0 7 (face font-lock-comment-face fontified t)) . 1524) (undo-tree-id1 . -6) (undo-tree-id2 . -6) (undo-tree-id3 . -6)) nil (26717 12414 232285 62000) 0 nil])
([nil nil ((apply 3 743 778 undo--wrap-and-run-primitive-undo 743 778 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -743) 774 (t 26717 12414 234724 734000)))) nil (26717 12418 566522 941000) 0 nil])
([nil nil ((apply -3 743 782 undo--wrap-and-run-primitive-undo 743 782 ((743 . 746) 774 (t 26717 12418 568701 607000)))) nil (26717 12879 860947 806000) 0 nil])
([nil nil ((774 . 778) (#("wordart" 0 7 (face font-lock-comment-face fontified t)) . 774) (undo-tree-id4 . -3) (undo-tree-id5 . -6) (undo-tree-id6 . -3) (undo-tree-id7 . -3) (undo-tree-id8 . -3) (undo-tree-id9 . -3) (undo-tree-id10 . -3) (undo-tree-id11 . -3) (undo-tree-id12 . -7) (undo-tree-id13 . -7)) nil (26717 12879 860944 771000) 0 nil])
([nil nil ((apply 3 1721 1826 undo--wrap-and-run-primitive-undo 1721 1826 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1721) 1755 (t 26717 12879 864239 750000)))) nil (26717 12893 225169 537000) 0 nil])
([nil nil ((apply -3 1721 1830 undo--wrap-and-run-primitive-undo 1721 1830 ((1721 . 1724) 1755 (t 26717 12893 228168 416000)))) nil (26717 13769 867051 81000) 0 nil])
([nil nil ((1752 . 1756) (#("recheck, one author 'changed'(marked red) didn't notice anything, almost done" 0 77 (face font-lock-comment-face fontified t)) . 1752) (undo-tree-id14 . -6) (undo-tree-id15 . -76) (undo-tree-id16 . -3) (undo-tree-id17 . -3) (undo-tree-id18 . -3) (undo-tree-id19 . -3) (undo-tree-id20 . -3) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -6) (undo-tree-id37 . -77) (undo-tree-id38 . -77) (undo-tree-id39 . -77) (undo-tree-id40 . -77)) nil (26717 13769 867049 909000) 0 nil])
([nil nil ((apply 3 1757 1808 undo--wrap-and-run-primitive-undo 1757 1808 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1757) 1791))) nil (26717 13769 866997 180000) 0 nil])
([nil nil ((1785 . 1789) (#("same thing, almost done" 0 23 (face font-lock-comment-face fontified t)) . 1785) (undo-tree-id41 . -1) (undo-tree-id42 . -22) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -23) (undo-tree-id67 . -23) (undo-tree-id68 . -23) (undo-tree-id69 . -23) (t 26717 13769 869489 700000)) nil (26717 14106 336289 563000) 0 nil])
([nil nil ((apply -3 1757 1793 undo--wrap-and-run-primitive-undo 1757 1793 ((1757 . 1760) 1788))) nil (26717 14106 336270 558000) 0 nil])
([nil nil ((apply 3 1793 1851 undo--wrap-and-run-primitive-undo 1793 1851 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1793) 1824))) nil (26717 14106 336266 300000) 0 nil])
([nil nil ((apply -3 1793 1855 undo--wrap-and-run-primitive-undo 1793 1855 ((1793 . 1796) 1824 (t 26717 14106 338693 996000)))) nil (26717 15041 165159 12000) 0 nil])
([nil nil ((1824 . 1828) (#("graph and wordart, almost done" 0 30 (face font-lock-comment-face fontified t)) . 1824) (undo-tree-id70 . -29)) nil (26717 15041 165158 391000) 0 nil])
([nil nil ((apply 3 1829 1868 undo--wrap-and-run-primitive-undo 1829 1868 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1829) 1863))) nil (26717 15041 165144 956000) 0 nil])
([nil nil ((apply -3 1829 1872 undo--wrap-and-run-primitive-undo 1829 1872 ((1829 . 1832) (t 26717 15041 167704 978000)))) nil (26717 15301 452603 164000) 0 nil])
([nil nil ((1860 . 1864) (#("almost done" 0 11 (face font-lock-comment-face fontified t)) . 1860) (undo-tree-id71 . -10) (undo-tree-id72 . -11) (undo-tree-id73 . -11) (undo-tree-id74 . -11) (undo-tree-id75 . -11)) nil (26717 15301 452601 842000) 0 nil])
([nil nil ((apply 3 1865 1920 undo--wrap-and-run-primitive-undo 1865 1920 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1865) 1899))) nil (26717 15301 452587 795000) 0 nil])
([nil nil ((1893 . 1897) (#("almost done, graph, wordart" 0 27 (face font-lock-comment-face fontified t)) . 1893) (undo-tree-id76 . -6) (undo-tree-id77 . -26) (undo-tree-id78 . -5) (undo-tree-id79 . -5) (undo-tree-id80 . -5) (undo-tree-id81 . -5) (undo-tree-id82 . -5) (undo-tree-id83 . -5) (undo-tree-id84 . -5) (undo-tree-id85 . -5) (undo-tree-id86 . -5) (undo-tree-id87 . -5) (undo-tree-id88 . -4) (undo-tree-id89 . -4) (undo-tree-id90 . -4) (undo-tree-id91 . -4) (undo-tree-id92 . -4) (undo-tree-id93 . -3) (undo-tree-id94 . -3) (undo-tree-id95 . -3) (undo-tree-id96 . -3) (undo-tree-id97 . -3) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -6) (undo-tree-id109 . -27) (undo-tree-id110 . -27) (undo-tree-id111 . -27) (undo-tree-id112 . -27) (t 26717 15301 456315 889000)) nil (26717 15851 729041 561000) 0 nil])
([nil nil ((apply -3 1865 1901 undo--wrap-and-run-primitive-undo 1865 1901 ((1865 . 1868) 1896))) nil (26717 15851 729015 172000) 0 nil])
([nil nil ((apply 3 2487 2526 undo--wrap-and-run-primitive-undo 2487 2526 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2487) 2524 (t 26717 15851 732379 197000)))) nil (26717 15880 387148 461000) 0 nil])
([nil nil ((apply -3 2487 2530 undo--wrap-and-run-primitive-undo 2487 2530 ((2487 . 2490) 2524 (t 26717 15880 390226 250000)))) nil (26717 16734 892610 672000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face fontified nil)) . -2522) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (2518 . 2523) (#("almost done" 0 11 (face font-lock-comment-face fontified t)) . 2518) (undo-tree-id119 . -9) (undo-tree-id120 . -10) (undo-tree-id121 . -6) (undo-tree-id122 . -9) (undo-tree-id123 . -9) (undo-tree-id124 . -9) (undo-tree-id125 . -9) (undo-tree-id126 . -9) (undo-tree-id127 . -9) (undo-tree-id128 . -9) (undo-tree-id129 . -9) (undo-tree-id130 . -9) (undo-tree-id131 . -9) (undo-tree-id132 . -9) (undo-tree-id133 . -9) (undo-tree-id134 . -9) (undo-tree-id135 . -9) (undo-tree-id136 . -9) (undo-tree-id137 . -9) (undo-tree-id138 . -9) (undo-tree-id139 . -9) (undo-tree-id140 . -9) (undo-tree-id141 . -9) (undo-tree-id142 . -9) (undo-tree-id143 . -9) (undo-tree-id144 . -9) (undo-tree-id145 . -9) (undo-tree-id146 . -9) (undo-tree-id147 . -9) (undo-tree-id148 . -9) (undo-tree-id149 . -9) (undo-tree-id150 . -9) (undo-tree-id151 . -9) (undo-tree-id152 . -9) (undo-tree-id153 . -9) (undo-tree-id154 . -9) (undo-tree-id155 . -6) (undo-tree-id156 . -6) (undo-tree-id157 . -6) (undo-tree-id158 . -6) (undo-tree-id159 . -6) (undo-tree-id160 . -6) (undo-tree-id161 . -6) (undo-tree-id162 . -6) (undo-tree-id163 . -6) (undo-tree-id164 . -6) (undo-tree-id165 . -6) (undo-tree-id166 . -6) (undo-tree-id167 . -6) (undo-tree-id168 . -6) (undo-tree-id169 . -6) (undo-tree-id170 . -6) (undo-tree-id171 . -6) (undo-tree-id172 . -6) (undo-tree-id173 . -6) (undo-tree-id174 . -6) (undo-tree-id175 . -6) (undo-tree-id176 . -6) (undo-tree-id177 . -6) (undo-tree-id178 . -6) (undo-tree-id179 . -6) (undo-tree-id180 . -6) (undo-tree-id181 . -6) (undo-tree-id182 . -6) (undo-tree-id183 . -6) (undo-tree-id184 . -5) (undo-tree-id185 . -5) (undo-tree-id186 . -5) (undo-tree-id187 . -5) (undo-tree-id188 . -5) (undo-tree-id189 . -5) (undo-tree-id190 . -5) (undo-tree-id191 . -5) (undo-tree-id192 . -5) (undo-tree-id193 . -5) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) (undo-tree-id199 . -3) (undo-tree-id200 . -3) (undo-tree-id201 . -3) (undo-tree-id202 . -3) (undo-tree-id203 . -3) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -9) (undo-tree-id215 . -11) (undo-tree-id216 . -11) (undo-tree-id217 . -11) (undo-tree-id218 . -11)) nil (26717 16734 892608 288000) 0 nil])
([nil nil ((apply 3 2523 2594 undo--wrap-and-run-primitive-undo 2523 2594 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2523) 2557))) nil (26717 16734 892502 870000) 0 nil])
([nil nil ((apply -3 2523 2598 undo--wrap-and-run-primitive-undo 2523 2598 ((2523 . 2526) (t 26717 16734 895665 886000)))) nil (26717 27059 686748 302000) 0 nil])
([nil nil ((apply 3 2523 2594 undo--wrap-and-run-primitive-undo 2523 2594 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2523)))) nil (26717 27059 686847 277000) 0 nil])
([nil nil ((apply -3 2523 2598 undo--wrap-and-run-primitive-undo 2523 2598 ((2523 . 2526)))) nil (26717 27068 63560 65000) 0 nil] [nil nil ((apply -3 2523 2598 undo--wrap-and-run-primitive-undo 2523 2598 ((2523 . 2526)))) ((apply 3 2523 2595 undo--wrap-and-run-primitive-undo 2523 2595 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 2523) 1293))) (26717 27059 686743 954000) 0 nil])
([nil nil ((2554 . 2558) (#("needs rewrite possibly, unfinished sentence" 0 43 (face font-lock-comment-face fontified t)) . 2554) (undo-tree-id219 . -42) (undo-tree-id220 . -43) (undo-tree-id221 . -43) (undo-tree-id222 . -43) (undo-tree-id223 . -43)) nil (26717 27068 63556 709000) 0 nil])
nil
([nil nil ((apply 3 2559 2608 undo--wrap-and-run-primitive-undo 2559 2608 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2559) 2593 (t 26717 27068 65855 911000)))) nil (26717 27076 925017 302000) 0 nil])
([nil nil ((apply -3 2559 2612 undo--wrap-and-run-primitive-undo 2559 2612 ((2559 . 2562) 2593 (t 26717 27076 927806 972000)))) nil (26717 27413 500005 636000) 0 nil])
([nil nil ((2590 . 2594) (#("almost done, 2 graphs" 0 21 (face font-lock-comment-face fontified t)) . 2590) (undo-tree-id224 . -6) (undo-tree-id225 . -20) (undo-tree-id226 . -6) (undo-tree-id227 . -6) (undo-tree-id228 . -6) (undo-tree-id229 . -6) (undo-tree-id230 . -6) (undo-tree-id231 . -6) (undo-tree-id232 . -6) (undo-tree-id233 . -6) (undo-tree-id234 . -6) (undo-tree-id235 . -6) (undo-tree-id236 . -6) (undo-tree-id237 . -6) (undo-tree-id238 . -6) (undo-tree-id239 . -6) (undo-tree-id240 . -6) (undo-tree-id241 . -6) (undo-tree-id242 . -6) (undo-tree-id243 . -6) (undo-tree-id244 . -6) (undo-tree-id245 . -6) (undo-tree-id246 . -6) (undo-tree-id247 . -6) (undo-tree-id248 . -6) (undo-tree-id249 . -6) (undo-tree-id250 . -6) (undo-tree-id251 . -6) (undo-tree-id252 . -6) (undo-tree-id253 . -6) (undo-tree-id254 . -6) (undo-tree-id255 . -6) (undo-tree-id256 . -6) (undo-tree-id257 . -6) (undo-tree-id258 . -6) (undo-tree-id259 . -3) (undo-tree-id260 . -3) (undo-tree-id261 . -3) (undo-tree-id262 . -3) (undo-tree-id263 . -3) (undo-tree-id264 . -3) (undo-tree-id265 . -3) (undo-tree-id266 . -3) (undo-tree-id267 . -3) (undo-tree-id268 . -3) (undo-tree-id269 . -3) (undo-tree-id270 . -3) (undo-tree-id271 . -3) (undo-tree-id272 . -3) (undo-tree-id273 . -3) (undo-tree-id274 . -3) (undo-tree-id275 . -3) (undo-tree-id276 . -3) (undo-tree-id277 . -3) (undo-tree-id278 . -3) (undo-tree-id279 . -3) (undo-tree-id280 . -3) (undo-tree-id281 . -3) (undo-tree-id282 . -3) (undo-tree-id283 . -3) (undo-tree-id284 . -3) (undo-tree-id285 . -3) (undo-tree-id286 . -3) (undo-tree-id287 . -3) (undo-tree-id288 . -2) (undo-tree-id289 . -2) (undo-tree-id290 . -2) (undo-tree-id291 . -2) (undo-tree-id292 . -2) (undo-tree-id293 . -2) (undo-tree-id294 . -2) (undo-tree-id295 . -2) (undo-tree-id296 . -2) (undo-tree-id297 . -2) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -6) (undo-tree-id304 . -21) (undo-tree-id305 . -21) (undo-tree-id306 . -21) (undo-tree-id307 . -21)) nil (26717 27413 500003 683000) 0 nil])
([nil nil ((apply 3 2595 2642 undo--wrap-and-run-primitive-undo 2595 2642 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2595) 2629))) nil (26717 27413 499943 720000) 0 nil])
([nil nil ((2604 . 2607) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -2604) (undo-tree-id308 . -1) (2599 . 2605) (#("l" 0 1 (face font-lock-comment-face fontified t)) . -2599) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -2600) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -2601) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (#("k" 0 1 (face font-lock-comment-face fontified t)) . -2602) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) 2603 (2600 . 2603) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -2600) (undo-tree-id321 . -1) (2594 . 2601) (t 26717 27413 502838 966000)) nil (26717 27430 321307 283000) 0 nil])
([nil nil ((2636 . 2640) (#("almost done, graphs" 0 19 (face font-lock-comment-face fontified t)) . 2636) (undo-tree-id448 . -18) (undo-tree-id449 . -18) (undo-tree-id450 . -18) (t 26717 27430 323735 338000)) nil (26717 28298 746301 15000) 0 nil])
([nil nil ((apply -3 2608 2644 undo--wrap-and-run-primitive-undo 2608 2644 ((2608 . 2611) 2639))) nil (26717 28298 746299 833000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-comment-face fontified t)) . 2599)) nil (26717 28298 746299 572000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-comment-face fontified t)) . 2599)) nil (26717 28298 746298 781000) 0 nil])
([nil nil ((2599 . 2600) (#("e" 0 1 (face font-lock-comment-face fontified t)) . 2599)) nil (26717 28298 746298 380000) 0 nil])
([nil nil ((2601 . 2602) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -2601) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -2602) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -2603) (undo-tree-id447 . -1) 2604 (2601 . 2604)) nil (26717 28298 746426 690000) 0 nil])
([nil nil ((apply 3 2643 2690 undo--wrap-and-run-primitive-undo 2643 2690 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2643) 2678))) nil (26717 28302 203694 101000) 0 nil] [nil nil ((#(", no 1 alink" 0 5 (face font-lock-comment-face fontified t) 5 6 (face font-lock-comment-face fontified t) 6 12 (face font-lock-comment-face fontified t)) . 2594) (undo-tree-id322 . -8) (undo-tree-id323 . -11) (undo-tree-id324 . 4) (undo-tree-id325 . -8) (undo-tree-id326 . -8) (undo-tree-id327 . -8) (undo-tree-id328 . -8) (undo-tree-id329 . -8) (undo-tree-id330 . -8) (undo-tree-id331 . -8) (undo-tree-id332 . -8) (undo-tree-id333 . -8) (undo-tree-id334 . -8) (undo-tree-id335 . -8) (undo-tree-id336 . -8) (undo-tree-id337 . -8) (undo-tree-id338 . -8) (undo-tree-id339 . -8) (undo-tree-id340 . -8) (undo-tree-id341 . -8) (undo-tree-id342 . -8) (undo-tree-id343 . -8) (undo-tree-id344 . -8) (undo-tree-id345 . -8) (undo-tree-id346 . -8) (undo-tree-id347 . -8) (undo-tree-id348 . -8) (undo-tree-id349 . -8) (undo-tree-id350 . -8) (undo-tree-id351 . -8) (undo-tree-id352 . -8) (undo-tree-id353 . -8) (undo-tree-id354 . -8) (undo-tree-id355 . -8) (undo-tree-id356 . -8) (undo-tree-id357 . -7) (undo-tree-id358 . -7) (undo-tree-id359 . -7) (undo-tree-id360 . -7) (undo-tree-id361 . -7) (undo-tree-id362 . -7) (undo-tree-id363 . -7) (undo-tree-id364 . -7) (undo-tree-id365 . -7) (undo-tree-id366 . -7) (undo-tree-id367 . -7) (undo-tree-id368 . -7) (undo-tree-id369 . -7) (undo-tree-id370 . -7) (undo-tree-id371 . -7) (undo-tree-id372 . -7) (undo-tree-id373 . -7) (undo-tree-id374 . -7) (undo-tree-id375 . -7) (undo-tree-id376 . -7) (undo-tree-id377 . -7) (undo-tree-id378 . -7) (undo-tree-id379 . -7) (undo-tree-id380 . -7) (undo-tree-id381 . -7) (undo-tree-id382 . -7) (undo-tree-id383 . -7) (undo-tree-id384 . -7) (undo-tree-id385 . -7) (undo-tree-id386 . -7) (undo-tree-id387 . -7) (undo-tree-id388 . -7) (undo-tree-id389 . -7) (undo-tree-id390 . -7) (undo-tree-id391 . -7) (undo-tree-id392 . -7) (undo-tree-id393 . -6) (undo-tree-id394 . -6) (undo-tree-id395 . -6) (undo-tree-id396 . -6) (undo-tree-id397 . -6) (undo-tree-id398 . -6) (undo-tree-id399 . -6) (undo-tree-id400 . -6) (undo-tree-id401 . -6) (undo-tree-id402 . -6) (undo-tree-id403 . -5) (undo-tree-id404 . -5) (undo-tree-id405 . -5) (undo-tree-id406 . -5) (undo-tree-id407 . -5) (undo-tree-id408 . -4) (undo-tree-id409 . -4) (undo-tree-id410 . -4) (undo-tree-id411 . -4) (undo-tree-id412 . -4) (undo-tree-id413 . -3) (undo-tree-id414 . -3) (undo-tree-id415 . -3) (undo-tree-id416 . -3) (undo-tree-id417 . -3) (undo-tree-id418 . -2) (undo-tree-id419 . -2) (undo-tree-id420 . -2) (undo-tree-id421 . -2) (undo-tree-id422 . -2) (undo-tree-id423 . -2) (undo-tree-id424 . -2) (undo-tree-id425 . -2) (undo-tree-id426 . -2) (undo-tree-id427 . -2) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -8) (undo-tree-id439 . -12) (undo-tree-id440 . -12)) ((2594 . 2606)) (26717 28298 746291 728000) 0 nil])
([nil nil ((apply -3 2643 2694 undo--wrap-and-run-primitive-undo 2643 2694 ((2643 . 2646) 2678 (t 26717 28302 208049 691000)))) nil (26717 28614 24047 767000) 0 nil])
nil
([nil nil ((2674 . 2678) (#("almost done, graphs" 0 19 (face font-lock-comment-face fontified t)) . 2674) (undo-tree-id451 . -7) (undo-tree-id452 . -18) (undo-tree-id453 . -7) (undo-tree-id454 . -7) (undo-tree-id455 . -7) (undo-tree-id456 . -7) (undo-tree-id457 . -7) (undo-tree-id458 . -7) (undo-tree-id459 . -7) (undo-tree-id460 . -7) (undo-tree-id461 . -7) (undo-tree-id462 . -7) (undo-tree-id463 . -7) (undo-tree-id464 . -7) (undo-tree-id465 . -7) (undo-tree-id466 . -7) (undo-tree-id467 . -7) (undo-tree-id468 . -7) (undo-tree-id469 . -7) (undo-tree-id470 . -7) (undo-tree-id471 . -7) (undo-tree-id472 . -7) (undo-tree-id473 . -7) (undo-tree-id474 . -7) (undo-tree-id475 . -7) (undo-tree-id476 . -7) (undo-tree-id477 . -7) (undo-tree-id478 . -7) (undo-tree-id479 . -7) (undo-tree-id480 . -7) (undo-tree-id481 . -7) (undo-tree-id482 . -7) (undo-tree-id483 . -7) (undo-tree-id484 . -7) (undo-tree-id485 . -7) (undo-tree-id486 . -7) (undo-tree-id487 . -7) (undo-tree-id488 . -7) (undo-tree-id489 . -7) (undo-tree-id490 . -7) (undo-tree-id491 . -7) (undo-tree-id492 . -7) (undo-tree-id493 . -7) (undo-tree-id494 . -7) (undo-tree-id495 . -7) (undo-tree-id496 . -7) (undo-tree-id497 . -7) (undo-tree-id498 . -7) (undo-tree-id499 . -7) (undo-tree-id500 . -7) (undo-tree-id501 . -7) (undo-tree-id502 . -7) (undo-tree-id503 . -7) (undo-tree-id504 . -7) (undo-tree-id505 . -7) (undo-tree-id506 . -7) (undo-tree-id507 . -7) (undo-tree-id508 . -7) (undo-tree-id509 . -7) (undo-tree-id510 . -7) (undo-tree-id511 . -7) (undo-tree-id512 . -7) (undo-tree-id513 . -7) (undo-tree-id514 . -7) (undo-tree-id515 . -7) (undo-tree-id516 . -7) (undo-tree-id517 . -7) (undo-tree-id518 . -7) (undo-tree-id519 . -7) (undo-tree-id520 . -7) (undo-tree-id521 . -7) (undo-tree-id522 . -7) (undo-tree-id523 . -7) (undo-tree-id524 . -7) (undo-tree-id525 . -7) (undo-tree-id526 . -7) (undo-tree-id527 . -7) (undo-tree-id528 . -7) (undo-tree-id529 . -7) (undo-tree-id530 . -7) (undo-tree-id531 . -7) (undo-tree-id532 . -7) (undo-tree-id533 . -7) (undo-tree-id534 . -7) (undo-tree-id535 . -7) (undo-tree-id536 . -7) (undo-tree-id537 . -4) (undo-tree-id538 . -4) (undo-tree-id539 . -4) (undo-tree-id540 . -4) (undo-tree-id541 . -4) (undo-tree-id542 . -4) (undo-tree-id543 . -4) (undo-tree-id544 . -4) (undo-tree-id545 . -4) (undo-tree-id546 . -4) (undo-tree-id547 . -4) (undo-tree-id548 . -4) (undo-tree-id549 . -4) (undo-tree-id550 . -4) (undo-tree-id551 . -4) (undo-tree-id552 . -4) (undo-tree-id553 . -4) (undo-tree-id554 . -4) (undo-tree-id555 . -4) (undo-tree-id556 . -4) (undo-tree-id557 . -4) (undo-tree-id558 . -4) (undo-tree-id559 . -4) (undo-tree-id560 . -4) (undo-tree-id561 . -4) (undo-tree-id562 . -4) (undo-tree-id563 . -4) (undo-tree-id564 . -4) (undo-tree-id565 . -4) (undo-tree-id566 . -3) (undo-tree-id567 . -3) (undo-tree-id568 . -3) (undo-tree-id569 . -3) (undo-tree-id570 . -3) (undo-tree-id571 . -3) (undo-tree-id572 . -3) (undo-tree-id573 . -3) (undo-tree-id574 . -3) (undo-tree-id575 . -3) (undo-tree-id576 . -2) (undo-tree-id577 . -2) (undo-tree-id578 . -2) (undo-tree-id579 . -2) (undo-tree-id580 . -2) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -7) (undo-tree-id587 . -19) (undo-tree-id588 . -19) (undo-tree-id589 . -19) (undo-tree-id590 . -19)) nil (26717 28614 24045 393000) 0 nil])
([nil nil ((apply 3 2679 2729 undo--wrap-and-run-primitive-undo 2679 2729 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2679) 2713))) nil (26717 28614 23855 578000) 0 nil])
([nil nil ((apply -3 2679 2733 undo--wrap-and-run-primitive-undo 2679 2733 ((2679 . 2682) (t 26717 28614 26441 952000)))) nil (26717 34357 927621 737000) 0 nil])
([nil nil ((2710 . 2714) (#("not nearly done, giant" 0 14 (face font-lock-comment-face fontified t) 14 22 (face font-lock-comment-face fontified t)) . 2710) (undo-tree-id591 . -21) (undo-tree-id592 . -22) (undo-tree-id593 . -22) (undo-tree-id594 . -22) (undo-tree-id595 . -22)) nil (26717 34357 927620 945000) 0 nil])
([nil nil ((apply 3 2715 2754 undo--wrap-and-run-primitive-undo 2715 2754 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2715) 2749))) nil (26717 34357 927605 366000) 0 nil])
([nil nil ((2743 . 2747) (#("almost done" 0 11 (face font-lock-comment-face fontified t)) . 2743) (undo-tree-id596 . -6) (undo-tree-id597 . -10) (undo-tree-id598 . -6) (undo-tree-id599 . -6) (undo-tree-id600 . -6) (undo-tree-id601 . -6) (undo-tree-id602 . -6) (undo-tree-id603 . -6) (undo-tree-id604 . -6) (undo-tree-id605 . -6) (undo-tree-id606 . -6) (undo-tree-id607 . -6) (undo-tree-id608 . -6) (undo-tree-id609 . -6) (undo-tree-id610 . -6) (undo-tree-id611 . -6) (undo-tree-id612 . -6) (undo-tree-id613 . -6) (undo-tree-id614 . -6) (undo-tree-id615 . -6) (undo-tree-id616 . -6) (undo-tree-id617 . -6) (undo-tree-id618 . -6) (undo-tree-id619 . -6) (undo-tree-id620 . -6) (undo-tree-id621 . -5) (undo-tree-id622 . -5) (undo-tree-id623 . -5) (undo-tree-id624 . -5) (undo-tree-id625 . -5) (undo-tree-id626 . -5) (undo-tree-id627 . -5) (undo-tree-id628 . -5) (undo-tree-id629 . -5) (undo-tree-id630 . -5) (undo-tree-id631 . -4) (undo-tree-id632 . -4) (undo-tree-id633 . -4) (undo-tree-id634 . -4) (undo-tree-id635 . -4) (undo-tree-id636 . -3) (undo-tree-id637 . -3) (undo-tree-id638 . -3) (undo-tree-id639 . -3) (undo-tree-id640 . -3) (undo-tree-id641 . -2) (undo-tree-id642 . -2) (undo-tree-id643 . -2) (undo-tree-id644 . -2) (undo-tree-id645 . -2) (undo-tree-id646 . -2) (undo-tree-id647 . -2) (undo-tree-id648 . -2) (undo-tree-id649 . -2) (undo-tree-id650 . -2) (undo-tree-id651 . -2) (undo-tree-id652 . -2) (undo-tree-id653 . -2) (undo-tree-id654 . -2) (undo-tree-id655 . -2) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -6) (undo-tree-id667 . -11) (undo-tree-id668 . -11) (undo-tree-id669 . -11) (undo-tree-id670 . -11) (t 26717 34357 930438 621000)) nil (26717 34961 858513 45000) 0 nil])
([nil nil ((apply -3 2715 2751 undo--wrap-and-run-primitive-undo 2715 2751 ((2715 . 2718) 2746))) nil (26717 34961 858473 471000) 0 nil])
([nil nil ((apply 3 1902 1941 undo--wrap-and-run-primitive-undo 1902 1941 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1902) 1933 (t 26717 34961 861411 59000)))) nil (26717 34982 402479 613000) 0 nil])
([nil nil ((apply -3 1902 1945 undo--wrap-and-run-primitive-undo 1902 1945 ((1902 . 1905) 1933 (t 26717 34982 406334 134000)))) nil (26717 35375 147209 427000) 0 nil])
([nil nil ((1933 . 1937) (#("almost done" 0 11 (face font-lock-comment-face fontified t)) . 1933) (undo-tree-id671 . -10) (undo-tree-id672 . -3) (undo-tree-id673 . -3) (undo-tree-id674 . -3) (undo-tree-id675 . -3) (undo-tree-id676 . -3) (undo-tree-id677 . -3) (undo-tree-id678 . -3) (undo-tree-id679 . -3) (undo-tree-id680 . -3) (undo-tree-id681 . -3) (undo-tree-id682 . -3) (undo-tree-id683 . -3) (undo-tree-id684 . -3) (undo-tree-id685 . -3) (undo-tree-id686 . -3) (undo-tree-id687 . -11) (undo-tree-id688 . -11) (undo-tree-id689 . -11) (undo-tree-id690 . -11)) nil (26717 35375 147208 575000) 0 nil])
([nil nil ((apply 3 1938 1977 undo--wrap-and-run-primitive-undo 1938 1977 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1938) 1972))) nil (26717 35375 147186 394000) 0 nil])
([nil nil ((1966 . 1970) (#("W" 0 1 (face font-lock-comment-face fontified t)) . -1966) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (#("D" 0 1 (face font-lock-comment-face fontified t)) . -1967) (undo-tree-id694 . -1) (#("O" 0 1 (face font-lock-comment-face fontified t)) . -1968) (undo-tree-id695 . -1) (#("N" 0 1 (face font-lock-comment-face fontified t)) . -1969) (undo-tree-id696 . -1) 1970 (1966 . 1970) (#("almost done" 0 11 (face font-lock-comment-face fontified t)) . 1966) (undo-tree-id697 . -10) (undo-tree-id698 . -11) (undo-tree-id699 . -11) (undo-tree-id700 . -11) (undo-tree-id701 . -11) (t 26717 35375 149587 757000)) nil (26717 35495 35615 94000) 0 nil])
([nil nil ((apply -3 1938 1974 undo--wrap-and-run-primitive-undo 1938 1974 ((1938 . 1941) 1969))) nil (26717 35495 35600 997000) 0 nil])
([nil nil ((apply 3 1974 2008 undo--wrap-and-run-primitive-undo 1974 2008 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1974) 2005))) nil (26717 35495 35597 611000) 0 nil])
([nil nil ((apply -3 1974 2012 undo--wrap-and-run-primitive-undo 1974 2012 ((1974 . 1977) 2005 (t 26717 35495 38980 447000)))) nil (26717 36347 489799 919000) 0 nil])
([nil nil ((apply 45 1176 1675 undo--wrap-and-run-primitive-undo 1176 1675 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1643) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1592) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1560) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1528) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1496) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1464) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1432) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1400) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1368) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1336) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1304) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1272) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1240) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1208) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1176) 1720))) nil (26717 36347 489796 562000) 0 nil])
([nil nil ((apply -45 1176 1721 undo--wrap-and-run-primitive-undo 1176 1721 ((1685 . 1688) (1631 . 1634) (1596 . 1599) (1561 . 1564) (1526 . 1529) (1491 . 1494) (1456 . 1459) (1421 . 1424) (1386 . 1389) (1351 . 1354) (1316 . 1319) (1281 . 1284) (1246 . 1249) (1211 . 1214) (1176 . 1179) (t 26717 36347 492393 399000)))) nil (26717 36559 79386 734000) 0 nil])
([nil nil ((apply 21 2473 2716 undo--wrap-and-run-primitive-undo 2473 2716 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2683) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2650) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2617) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2584) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2539) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2506) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2473) 2737))) nil (26717 36581 419437 539000) 0 nil] [nil nil ((apply 15 1721 1886 undo--wrap-and-run-primitive-undo 1721 1886 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1853) (#<marker at 2470 in main.tex> . -3) (#<marker at 1868 in main.tex> . -3) (#<marker at 1868 in main.tex> . -3) (#<marker at 1868 in main.tex> . -3) (#<marker at 1868 in main.tex> . -3) (#<marker at 1868 in main.tex> . -3) (#<marker at 1868 in main.tex> . -3) (#<marker at 1868 in main.tex> . -3) (#<marker at 1868 in main.tex> . -3) (#<marker at 1868 in main.tex> . -3) (#<marker at 1868 in main.tex> . -3) (#<marker at 1868 in main.tex> . -3) (#<marker at 1868 in main.tex> . -3) (#<marker at 1868 in main.tex> . -3) (#<marker at 1868 in main.tex> . -3) (#<marker at 1868 in main.tex> . -3) (#<marker at 1868 in main.tex> . -3) (#<marker at 1868 in main.tex> . -3) (#<marker at 1868 in main.tex> . -3) (#<marker at 1868 in main.tex> . -3) (#<marker at 1974 in main.tex> . -3) (#<marker at 1868 in main.tex> . -3) (#<marker at 1868 in main.tex> . -3) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1820) (#<marker at 1832 in main.tex> . -3) (#<marker at 1832 in main.tex> . -3) (#<marker at 1832 in main.tex> . -3) (#<marker at 1832 in main.tex> . -3) (#<marker at 1832 in main.tex> . -3) (#<marker at 1832 in main.tex> . -3) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1787) (#<marker at 1796 in main.tex> . -3) (#<marker at 1796 in main.tex> . -3) (#<marker at 1796 in main.tex> . -3) (#<marker at 1796 in main.tex> . -3) (#<marker at 1796 in main.tex> . -3) (#<marker at 1796 in main.tex> . -3) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1754) (#<marker at 1760 in main.tex> . -3) (#<marker at 1760 in main.tex> . -3) (#<marker at 1760 in main.tex> . -3) (#<marker at 1760 in main.tex> . -3) (#<marker at 1760 in main.tex> . -3) (#<marker at 1760 in main.tex> . -3) (#<marker at 1760 in main.tex> . -3) (#<marker at 1760 in main.tex> . -3) (#<marker at 1760 in main.tex> . -3) (#<marker at 1760 in main.tex> . -3) (#<marker at 1760 in main.tex> . -3) (#<marker at 1760 in main.tex> . -3) (#<marker at 1760 in main.tex> . -3) (#<marker at 1760 in main.tex> . -3) (#<marker at 1760 in main.tex> . -3) (#<marker at 1760 in main.tex> . -3) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1721) (#<marker at 2698 in main.tex> . -3) 1901))) ((apply -15 1721 1901 undo--wrap-and-run-primitive-undo 1721 1901 ((1721 . 1724) (1754 . 1757) (1787 . 1790) (1820 . 1823) (1853 . 1856) (t 26717 36554 346920 722000)))) (26717 36554 343833 628000) 0 nil] [nil nil ((apply 48 599 1127 undo--wrap-and-run-primitive-undo 599 1127 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1094) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1061) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1028) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -995) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -962) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -929) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -896) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -863) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -830) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -797) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -764) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -731) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -698) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -665) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -632) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -599)))) ((apply -48 599 1175 undo--wrap-and-run-primitive-undo 599 1175 ((599 . 602) (632 . 635) (665 . 668) (698 . 701) (731 . 734) (764 . 767) (797 . 800) (830 . 833) (863 . 866) (896 . 899) (929 . 932) (962 . 965) (995 . 998) (1028 . 1031) (1061 . 1064) (1094 . 1097) 1478 (t 26717 36466 503537 354000)))) (26717 36466 497832 860000) 0 nil])
([nil nil ((apply -21 2473 2738 undo--wrap-and-run-primitive-undo 2473 2738 ((2701 . 2704) (2665 . 2668) (2629 . 2632) (2593 . 2596) (2545 . 2548) (2509 . 2512) (2473 . 2476) (t 26717 36581 422732 896000)))) nil (26717 37080 280729 444000) 0 nil])
nil
nil
([nil current ((apply 3 1974 2008 undo--wrap-and-run-primitive-undo 1974 2008 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1974)))) nil (26717 37080 280726 178000) 0 nil])
nil
